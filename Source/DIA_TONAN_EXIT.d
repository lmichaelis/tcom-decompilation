instance DIA_TONAN_EXIT(C_INFO) {
    NPC = 58323;
    NR = 999;
    CONDITION = DIA_TONAN_EXIT_CONDITION;
    INFORMATION = DIA_TONAN_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_TONAN_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_TONAN_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_TONAN_HELLO(C_INFO) {
    NPC = 58323;
    NR = 1;
    CONDITION = DIA_TONAN_HELLO_CONDITION;
    INFORMATION = DIA_TONAN_HELLO_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_TONAN_HELLO_CONDITION() {
    if (NPC_ISINSTATE(SELF, 61599)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_TONAN_HELLO_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_HELLO_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_HELLO_03_02");
}

instance DIA_TONAN_WHO(C_INFO) {
    NPC = 58323;
    NR = 1;
    CONDITION = DIA_TONAN_WHO_CONDITION;
    INFORMATION = DIA_TONAN_WHO_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Who are you guarding them from?";
}

func int DIA_TONAN_WHO_CONDITION() {
    return TRUE;
}

func void DIA_TONAN_WHO_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_Who_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_Who_03_02");
    AI_STARTFACEANI(OTHER, S_SMUG, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_Who_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_Who_03_04");
    AI_RESETFACEANI(OTHER);
}

instance DIA_TONAN_SQ414_START(C_INFO) {
    NPC = 58323;
    NR = 1;
    CONDITION = DIA_TONAN_SQ414_START_CONDITION;
    INFORMATION = DIA_TONAN_SQ414_START_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Boring, huh?";
}

func int DIA_TONAN_SQ414_START_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 85523)) && ((KAPITEL) == (4))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_TONAN_SQ414_START_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_Start_15_01");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_Start_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_Start_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_Start_03_04");
    AI_RESETFACEANI(SELF);
}

instance DIA_TONAN_SQ414_TREASURES(C_INFO) {
    NPC = 58323;
    NR = 1;
    CONDITION = DIA_TONAN_SQ414_TREASURES_CONDITION;
    INFORMATION = DIA_TONAN_SQ414_TREASURES_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "The mages hid their treasures?";
}

func int DIA_TONAN_SQ414_TREASURES_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 85526)) && ((KAPITEL) == (4))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_TONAN_SQ414_TREASURES_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_Treasures_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_Treasures_03_02");
    AI_RESETFACEANI(OTHER);
    INFO_CLEARCHOICES(85529);
    INFO_ADDCHOICE(85529, "This is very interesting, but I have to go now.", 85534);
    INFO_ADDCHOICE(85529, "You intrigued me.", 85533);
}

var int TONAN_SQ414_TAKEQUEST;
func void DIA_TONAN_SQ414_TREASURES_GOON() {
    TONAN_SQ414_TAKEQUEST = FALSE;
    AI_STARTFACEANI(OTHER, S_SMUG, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_Treasures_GoOn_15_01");
    AI_RESETFACEANI(OTHER);
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_Treasures_GoOn_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_Treasures_GoOn_03_03");
    INFO_CLEARCHOICES(85529);
}

func void DIA_TONAN_SQ414_TREASURES_BYE() {
    TONAN_SQ414_TAKEQUEST = TRUE;
    AI_STARTFACEANI(OTHER, S_DISGUST, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_Treasures_Bye_15_01");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_Treasures_Bye_03_02");
    AI_RESETFACEANI(OTHER);
    AI_RESETFACEANI(SELF);
    INFO_CLEARCHOICES(85529);
}

instance DIA_TONAN_SQ414_TAKEQUEST(C_INFO) {
    NPC = 58323;
    NR = 1;
    CONDITION = DIA_TONAN_SQ414_TAKEQUEST_CONDITION;
    INFORMATION = DIA_TONAN_SQ414_TAKEQUEST_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "You mentioned something earlier about a tower and treasures.";
}

func int DIA_TONAN_SQ414_TAKEQUEST_CONDITION() {
    if (((NPC_KNOWSINFO(OTHER, 85529)) && ((KAPITEL) == (4))) && ((TONAN_SQ414_TAKEQUEST) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_TONAN_SQ414_TAKEQUEST_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_TakeQuest_15_01");
    DIA_TONAN_SQ414_TREASURES_GOON();
}

instance DIA_TONAN_SQ414_TOWER(C_INFO) {
    NPC = 58323;
    NR = 1;
    CONDITION = DIA_TONAN_SQ414_TOWER_CONDITION;
    INFORMATION = DIA_TONAN_SQ414_TOWER_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Where's the tower?";
}

func int DIA_TONAN_SQ414_TOWER_CONDITION() {
    if (((NPC_KNOWSINFO(OTHER, 85529)) && ((KAPITEL) == (4))) && ((TONAN_SQ414_TAKEQUEST) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_TONAN_SQ414_TOWER_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_Tower_15_01");
    AI_RESETFACEANI(OTHER);
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_Tower_03_02");
}

instance DIA_TONAN_SQ414_GUIDEME(C_INFO) {
    NPC = 58323;
    NR = 1;
    CONDITION = DIA_TONAN_SQ414_GUIDEME_CONDITION;
    INFORMATION = DIA_TONAN_SQ414_GUIDEME_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Take me there.";
}

func int DIA_TONAN_SQ414_GUIDEME_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 85538)) && ((SQ414_GOTOTOWER) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void TONAN_SQ414_GOTOFARM() {
    if ((SQ414_GOTOTOWER) == (0)) {
        SQ414_GOTOTOWER = 1;
    };
    B_STANDUP();
    NPC_EXCHANGEROUTINE(SELF, "SQ414_FARM");
    AI_STOPPROCESSINFOS(SELF);
}

func void DIA_TONAN_SQ414_NOTYET() {
    SQ414_NOTNOW = TRUE;
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_GuideMe_03_06");
    if ((LOG_GETSTATUS(MIS_SQ414)) == (LOG_RUNNING)) {
        AI_LOGENTRY(TOPIC_SQ414, LOG_SQ414_NOTYET);
    };
}

func void DIA_TONAN_SQ414_GUIDEME_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_GuideMe_15_01");
    if (((KAPITEL) == (5)) && ((KQ407_ORCLEADER_PART6_DEAD) == (FALSE))) {
        DIA_TONAN_SQ414_NOTYET();
    };
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_GuideMe_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_GuideMe_15_03");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_GuideMe_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_GuideMe_03_05");
    AI_RESETFACEANI(SELF);
    TONAN_SQ414_GOTOFARM();
    LOG_CREATETOPIC(TOPIC_SQ414, LOG_MISSION);
    LOG_SETSTATUS(_@(MIS_SQ414), TOPIC_SQ414, LOG_RUNNING);
    AI_LOGENTRY(TOPIC_SQ414, LOG_SQ414_START);
}

instance DIA_TONAN_SQ414_WHAT(C_INFO) {
    NPC = 58323;
    NR = 1;
    CONDITION = DIA_TONAN_SQ414_WHAT_CONDITION;
    INFORMATION = DIA_TONAN_SQ414_WHAT_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "What are you doing here?";
}

func int DIA_TONAN_SQ414_WHAT_CONDITION() {
    if (((SQ414_TELEPORTTONAN) == (2)) && ((LOG_GETSTATUS(MIS_SQ414)) == (LOG_RUNNING))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_TONAN_SQ414_WHAT_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Fred_TrueHello_15_01");
    DIA_TONAN_SQ414_NOTYET();
}

instance DIA_TONAN_SQ414_NOMOREORCS(C_INFO) {
    NPC = 58323;
    NR = 1;
    CONDITION = DIA_TONAN_SQ414_NOMOREORCS_CONDITION;
    INFORMATION = DIA_TONAN_SQ414_NOMOREORCS_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "(Head to the tower with Tonan.)";
}

func int DIA_TONAN_SQ414_NOMOREORCS_CONDITION() {
    if ((SQ414_NOTNOW) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

var int SQ414_TONANAGREED;
func void DIA_TONAN_SQ414_ORCSWOAH() {
    B_STANDUP();
    AI_STARTFACEANI(SELF, S_SURPRISE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_NoMoreOrcs_03_02");
}

func void DIA_TONAN_SQ414_NOMOREORCS_LETSGO() {
    DIA_TONAN_SQ414_ORCSWOAH();
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_NoMoreOrcs_03_03");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    if (NPC_KNOWSINFO(OTHER, 85566)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_NoMoreOrcs_03_04");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_NoMoreOrcs_03_05");
    if ((LOG_GETSTATUS(MIS_SQ414)) != (LOG_RUNNING)) {
        LOG_CREATETOPIC(TOPIC_SQ414, LOG_MISSION);
        LOG_SETSTATUS(_@(MIS_SQ414), TOPIC_SQ414, LOG_RUNNING);
        AI_LOGENTRY(TOPIC_SQ414, LOG_SQ414_START);
    };
    if (NPC_KNOWSINFO(OTHER, 85566)) {
        AI_LOGENTRY(TOPIC_SQ414, LOG_SQ414_NOMOREORCS_V1);
    };
    AI_LOGENTRY(TOPIC_SQ414, LOG_SQ414_NOMOREORCS_V2);
    AI_RESETFACEANI(SELF);
    TONAN_SQ414_GOTOFARM();
}

func void DIA_TONAN_SQ414_ABOUTGHOST() {
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_NoProblem_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_NoProblem_15_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_NoProblem_15_04");
}

func void DIA_TONAN_SQ414_CONVINCEHIM() {
    SQ414_TONANAGREED = TRUE;
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_NoProblem_03_05");
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_NoProblem_15_06");
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_NoProblem_15_07");
    AI_FUNCTION(OTHER, 85576);
    AI_WAIT(OTHER, 1066192077);
    AI_FUNCTION(OTHER, 85577);
    AI_WAIT(OTHER, 1066192077);
    AI_WAITTILLEND(SELF, OTHER);
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_NoProblem_03_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_NoProblem_03_09");
    INFO_CLEARCHOICES(85573);
    INFO_ADDCHOICE(85573, "You wanted to prove yourself? Now's your chance!", 85580);
    INFO_ADDCHOICE(85573, "This spirit has suffered for centuries!", 85579);
    INFO_ADDCHOICE(85573, "What if I pay?", 85578);
    INFO_CLEARCHOICES(85549);
    INFO_ADDCHOICE(85549, "You wanted to prove yourself? Now's your chance!", 85580);
    INFO_ADDCHOICE(85549, "This spirit has suffered for centuries!", 85579);
    INFO_ADDCHOICE(85549, "What if I pay?", 85578);
}

func void DIA_TONAN_SQ414_NOMOREORCS_INFO() {
    if ((KQ407_ORCLEADER_PART6_DEAD) == (FALSE)) {
        AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_Ready_Yes_15_01");
        AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_GuideMe_03_06");
    };
    SQ414_NOTNOW = 2;
    if ((LOG_GETSTATUS(MIS_SQ414)) == (LOG_RUNNING)) {
        AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_NoMoreOrcs_15_01");
        if (((SQ414_TONANAGREED) == (TRUE)) || ((NPC_KNOWSINFO(OTHER, 85566)) == (FALSE))) {
            AI_OUTPUT(OTHER, SELF, "DIA_Ivy_AfterExecution_No_15_01");
            DIA_TONAN_SQ414_NOMOREORCS_LETSGO();
        } else {
            DIA_TONAN_SQ414_ORCSWOAH();
            AI_RESETFACEANI(SELF);
            DIA_TONAN_SQ414_ABOUTGHOST();
            DIA_TONAN_SQ414_CONVINCEHIM();
        };
    };
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_GuideMe_15_01");
    DIA_TONAN_SQ414_NOMOREORCS_LETSGO();
}

instance DIA_TONAN_SQ414_READY(C_INFO) {
    NPC = 58323;
    NR = 1;
    CONDITION = DIA_TONAN_SQ414_READY_CONDITION;
    INFORMATION = DIA_TONAN_SQ414_READY_INFO;
    PERMANENT = TRUE;
    IMPORTANT = TRUE;
}

var int TONAN_SQ414_GUIDE;
func int DIA_TONAN_SQ414_READY_CONDITION() {
    if (((((LOG_GETSTATUS(MIS_SQ414)) == (LOG_RUNNING)) && (NPC_ISINSTATE(SELF, 61599))) && ((NPC_GETDISTTOWP(SELF, "PART6_SQ414_TONAN")) <= (750))) && ((TONAN_SQ414_GUIDE) == (0))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_TONAN_SQ414_READY_INFO() {
    if ((SQ414_NOTNOW) == (2)) {
        SQ414_NOTNOW = 3;
        AI_STARTFACEANI(SELF, S_SURPRISE, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_OrcReaction_03_01");
        AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_OrcReaction_03_02");
        AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_OrcReaction_03_03");
        AI_STARTFACEANI(SELF, S_THINK, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_OrcReaction_03_04");
        AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
        if (NPC_KNOWSINFO(OTHER, 85566)) {
            AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_OrcReaction_03_05");
        };
        AI_RESETFACEANI(SELF);
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_Ready_03_01");
    INFO_CLEARCHOICES(85557);
    INFO_ADDCHOICE(85557, "Let's go!", 85561);
    INFO_ADDCHOICE(85557, "I need a moment.", 85562);
}

func void DIA_TONAN_SQ414_READY_YES() {
    TONAN_SQ414_GUIDE = 1;
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_Ready_Yes_15_01");
    INFO_CLEARCHOICES(85557);
    AI_WAITTILLEND(SELF, OTHER);
    AI_STOPPROCESSINFOS(SELF);
    SELF.AIVAR[15] = TRUE;
    if ((SQ414_GOTALLDOCS) == (2)) {
        NPC_EXCHANGEROUTINE(SELF, "SQ414_GUIDE_V2");
    };
    NPC_EXCHANGEROUTINE(SELF, "SQ414_GUIDE_V1");
}

func void DIA_TONAN_SQ414_READY_NO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_Ready_No_15_01");
    INFO_CLEARCHOICES(85557);
    AI_WAITTILLEND(SELF, OTHER);
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_TONAN_SQ414_NEARTOWER(C_INFO) {
    NPC = 58323;
    NR = 1;
    CONDITION = DIA_TONAN_SQ414_NEARTOWER_CONDITION;
    INFORMATION = DIA_TONAN_SQ414_NEARTOWER_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_TONAN_SQ414_NEARTOWER_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_SQ414)) == (LOG_RUNNING)) && ((NPC_GETDISTTOWP(SELF, "PART6_FOREST_33")) <= (700))) && ((TONAN_SQ414_GUIDE) == (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_TONAN_SQ414_NEARTOWER_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_NearTower_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_NearTower_03_02");
    AI_STOPPROCESSINFOS(SELF);
    NPC_EXCHANGEROUTINE(SELF, "SQ414_TOWER");
    WLD_INSERTITEM(37386, "FP_PART6_SQ414_SKULL");
}

instance DIA_TONAN_SQ414_ATTACKGHOST(C_INFO) {
    NPC = 58323;
    NR = 1;
    CONDITION = DIA_TONAN_SQ414_ATTACKGHOST_CONDITION;
    INFORMATION = DIA_TONAN_SQ414_ATTACKGHOST_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_TONAN_SQ414_ATTACKGHOST_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 78348)) && ((LOG_GETSTATUS(MIS_SQ414)) == (LOG_RUNNING))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_TONAN_SQ414_ATTACKGHOST_INFO() {
    AI_DRAWWEAPON(SELF);
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_AttackGhost_03_01");
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_AttackGhost_15_02");
    AI_RESETFACEANI(OTHER);
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_AttackGhost_03_03");
    AI_REMOVEWEAPON(SELF);
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_AttackGhost_15_04");
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_AttackGhost_15_05");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_AttackGhost_03_06");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_AttackGhost_03_07");
    INFO_CLEARCHOICES(85566);
    INFO_ADDCHOICE(85566, "What do you need it for?", 85569);
}

func void DIA_TONAN_SQ414_ATTACKGHOST_WHY() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_AttackGhost_Why_15_01");
    AI_RESETFACEANI(OTHER);
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_AttackGhost_Why_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_AttackGhost_Why_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_AttackGhost_Why_03_04");
    AI_STARTFACEANI(OTHER, S_ANGRY, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_AttackGhost_Why_15_05");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_AttackGhost_Why_03_06");
    AI_RESETFACEANI(OTHER);
    AI_RESETFACEANI(SELF);
    CREATEINVITEMS(SELF, 37389, 1);
    B_GIVEINVITEMS(OTHER, SELF, 37386, 1);
    INFO_CLEARCHOICES(85566);
    B_GIVEINVITEMS(SELF, OTHER, 37389, 1);
    AI_STOPPROCESSINFOS(SELF);
    SELF.AIVAR[15] = FALSE;
    NPC_EXCHANGEROUTINE(SELF, START);
    AI_LOGENTRY(TOPIC_SQ414, LOG_SQ414_TONAN_LEAVE);
    AI_FUNCTION(SELF, 85584);
}

instance DIA_TONAN_SQ414_SORRY(C_INFO) {
    NPC = 58323;
    NR = 1;
    CONDITION = DIA_TONAN_SQ414_SORRY_CONDITION;
    INFORMATION = DIA_TONAN_SQ414_SORRY_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_TONAN_SQ414_SORRY_CONDITION() {
    if (((SQ414_GOTALLDOCS) == (2)) && (NPC_ISINSTATE(SELF, 61599))) {
        if (((LOG_GETSTATUS(MIS_SQ414)) == (LOG_RUNNING)) || ((LOG_GETSTATUS(MIS_SQ414)) == (LOG_SUCCESS))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_TONAN_SQ414_SORRY_INFO() {
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_Sorry_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_Sorry_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_Sorry_03_03");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_Sorry_03_04");
    CREATEINVITEMS(SELF, 38213, 1);
    B_GIVEINVITEMS(SELF, OTHER, 38213, 1);
}

instance DIA_TONAN_SQ414_NOPROBLEM(C_INFO) {
    NPC = 58323;
    NR = 1;
    CONDITION = DIA_TONAN_SQ414_NOPROBLEM_CONDITION;
    INFORMATION = DIA_TONAN_SQ414_NOPROBLEM_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Apology accepted.";
}

func int DIA_TONAN_SQ414_NOPROBLEM_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 85570)) {
        if (((LOG_GETSTATUS(MIS_SQ414)) == (LOG_RUNNING)) || ((LOG_GETSTATUS(MIS_SQ414)) == (LOG_SUCCESS))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_TONAN_SQ414_NOPROBLEM_INFO() {
    AI_STARTFACEANI(OTHER, S_SMILE, 1, -(1));
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_NoProblem_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_NoProblem_03_02");
    if ((SQ414_FINISHWAY) == (1)) {
        AI_RESETFACEANI(OTHER);
        AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_NoProblem_15_03");
        AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_NoProblem_15_04");
        if (((KAPITEL) == (5)) && ((KQ407_ORCLEADER_PART6_DEAD) == (FALSE))) {
            DIA_TONAN_SQ414_NOTYET();
        } else {
            DIA_TONAN_SQ414_CONVINCEHIM();
        };
    };
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_NoProblem_15_10");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_NoProblem_03_11");
    AI_STARTFACEANI(OTHER, S_SMUG, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_NoProblem_15_12");
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_NoProblem_03_13");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

func void TONAN_SQ414_NOPROBLEM_FADESCREEN_IN() {
    FADESCREENTOBLACK(1);
}

func void TONAN_SQ414_NOPROBLEM_FADESCREEN_OUT() {
    FADESCREENFROMBLACK(1);
}

func void DIA_TONAN_SQ414_NOPROBLEM_GOLD() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_NoProblem_Gold_15_01");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_NoProblem_Gold_03_02");
    AI_RESETFACEANI(OTHER);
}

func void DIA_TONAN_SQ414_NOPROBLEM_PAIN() {
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_NoProblem_Pain_15_01");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_NoProblem_Pain_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_NoProblem_Pain_03_03");
}

func void DIA_TONAN_SQ414_NOPROBLEM_CHANCE() {
    SQ414_TRIALOGENABLE = 1;
    TONAN_SQ414_GUIDE = 0;
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_NoProblem_Chance_15_01");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_NoProblem_Chance_03_02");
    AI_STARTFACEANI(OTHER, S_ANGRY, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_NoProblem_Chance_15_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_NoProblem_Chance_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_NoProblem_Chance_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_NoProblem_Chance_03_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_GuideMe_03_05");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    TONAN_SQ414_GOTOFARM();
    INFO_CLEARCHOICES(85573);
    AI_LOGENTRY(TOPIC_SQ414, LOG_SQ414_TONAN_HELP);
}

instance DIA_TONAN_SQ414_FINISH(C_INFO) {
    NPC = 58323;
    NR = 1;
    CONDITION = DIA_TONAN_SQ414_FINISH_CONDITION;
    INFORMATION = DIA_TONAN_SQ414_FINISH_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_TONAN_SQ414_FINISH_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ414)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 78361))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_TONAN_SQ414_FINISH_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_Finish_15_01");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_Finish_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Tonan_SQ414_Finish_15_03");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_Finish_03_04");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Tonan_SQ414_Finish_03_05");
    AI_STOPPROCESSINFOS(SELF);
    AI_LOGENTRY(TOPIC_SQ414, LOG_SQ414_FINISH);
    SQ414_FINISHQUEST();
    SELF.AIVAR[15] = FALSE;
    NPC_EXCHANGEROUTINE(SELF, START);
    AI_FUNCTION(SELF, 85584);
}

func void TONAN_TELEPORTOUTOFTOWER() {
    FADESCREENTOBLACKF(1, 85585, 1000);
}

func void TONAN_TELEPORTOUTOFTOWER_FADESCREEN() {
    TELEPORTNPCTOWP(58323, DJG_13329_TONAN.WP);
    FADESCREENFROMBLACK(1);
    HERO.AIVAR[4] = FALSE;
}

instance DIA_TONAN_PICKPOCKET(C_INFO) {
    NPC = 58323;
    NR = 900;
    CONDITION = DIA_TONAN_PICKPOCKET_CONDITION;
    INFORMATION = DIA_TONAN_PICKPOCKET_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = PICKPOCKET_40;
}

func int DIA_TONAN_PICKPOCKET_CONDITION() {
    if (((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) && ((SELF.AIVAR[6]) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_TONAN_PICKPOCKET_INFO() {
    INFO_CLEARCHOICES(85586);
    INFO_ADDCHOICE(85586, DIALOG_BACK, 85590);
    INFO_ADDCHOICE(85586, DIALOG_PICKPOCKET, 85589);
}

func void DIA_TONAN_PICKPOCKET_DOIT() {
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (2)) {
        B_PICKPOCKET_AMBIENT_TIER_2();
        SELF.AIVAR[6] = TRUE;
        INFO_CLEARCHOICES(85586);
    };
    AI_PLAYANI(HERO, T_CANNOTTAKE);
    PRINTSCREEN(PRINT_CANTPICKPOCKETTHISPERSON, -(1), -(1), FONT_SCREEN, 4);
    INFO_CLEARCHOICES(85586);
}

func void DIA_TONAN_PICKPOCKET_BACK() {
    INFO_CLEARCHOICES(85586);
}

