var int POTIONALCHEMYMODE;
const int POTIONALCHEMY_REGENERATE = 1;
const int POTIONALCHEMY_REGENERATEHP = 2;
const int POTIONALCHEMY_REGENERATEMP = 3;
const int POTIONALCHEMY_PERMAMENT = 4;
const int POTIONALCHEMY_TIMED = 5;
const int POTIONALCHEMY_SEED = 6;
const int POTIONALCHEMY_SEEDHP = 7;
const int POTIONALCHEMY_SEEDMP = 8;
const int POTIONALCHEMY_OTHER = 9;
const int POTIONALCHEMY_POISON = 10;
const int POTIONALCHEMY_BOOZE = 11;
const int POTIONALCHEMY_TABAK = 12;
const int POTIONALCHEMY_ORE = 13;
const int POTIONALCHEMY_INFO = -1;
const int POTIONALCHEMY_INSTANCE = -1;
func void PC_POTIONALCHEMY_AMOUNTCHOICES() {
    var string ALL_STRING;
    var int MAX;
    INFO_CLEARCHOICES(POTIONALCHEMY_INFO);
    MAX = PC_CRAFTRECIPEITEM_MAX(POTIONALCHEMY_INSTANCE);
    if ((MAX) > (0)) {
        ALL_STRING = CS4(DIALOG_ALL, " (", I2S(MAX), ")");
        INFO_ADDCHOICE(POTIONALCHEMY_INFO, ALL_STRING, 47500);
        if ((MAX) > (9)) {
            INFO_ADDCHOICE(POTIONALCHEMY_INFO, CHOICE_NUMBER_10, 47502);
        };
        if ((MAX) > (4)) {
            INFO_ADDCHOICE(POTIONALCHEMY_INFO, CHOICE_NUMBER_5, 47503);
        };
        INFO_ADDCHOICE(POTIONALCHEMY_INFO, CHOICE_NUMBER_1, 47504);
        INFO_ADDCHOICE(POTIONALCHEMY_INFO, DIALOG_BACK, 47499);
    };
    POTIONALCHEMY_INSTANCE = -(1);
}

func void PC_POTIONALCHEMY_CHECKAMOUNTCHOICES() {
    if ((PC_CRAFTRECIPEITEM_MAX(POTIONALCHEMY_INSTANCE)) > (0)) {
        PC_POTIONALCHEMY_AMOUNTCHOICES();
    };
    POTIONALCHEMY_INSTANCE = -(1);
    PRINTS_EXT(PRINT_PRODITEMSMISSING, RGBA(255, 50, 50, 255));
}

func void PC_POTIONALCHEMY_AMOUNTBACK() {
    INFO_CLEARCHOICES(POTIONALCHEMY_INFO);
    POTIONALCHEMY_INSTANCE = -(1);
}

func void PC_POTIONALCHEMY_AMOUNTALL() {
    var int MAX;
    MAX = PC_CRAFTRECIPEITEM_MAX(POTIONALCHEMY_INSTANCE);
    PC_CRAFTRECIPEITEMS(POTIONALCHEMY_INSTANCE, MAX);
    PC_POTIONALCHEMY_AMOUNTCHOICES();
}

func void PC_POTIONALCHEMY_AMOUNT10() {
    PC_CRAFTRECIPEITEMS(POTIONALCHEMY_INSTANCE, 10);
    PC_POTIONALCHEMY_AMOUNTCHOICES();
}

func void PC_POTIONALCHEMY_AMOUNT5() {
    PC_CRAFTRECIPEITEMS(POTIONALCHEMY_INSTANCE, 5);
    PC_POTIONALCHEMY_AMOUNTCHOICES();
}

func void PC_POTIONALCHEMY_AMOUNT1() {
    PC_CRAFTRECIPEITEMS(POTIONALCHEMY_INSTANCE, 1);
    PC_POTIONALCHEMY_AMOUNTCHOICES();
}

instance PC_POTIONALCHEMY_END(C_INFO) {
    NPC = 50091;
    NR = 999;
    CONDITION = PC_POTIONALCHEMY_END_CONDITION;
    INFORMATION = PC_POTIONALCHEMY_END_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int PC_POTIONALCHEMY_END_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((POTIONALCHEMYMODE) == (0))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_POTIONALCHEMY_END_INFO() {
    B_ENDPRODUCTIONDIALOG();
}

instance PC_POTIONALCHEMY_REGENERATE(C_INFO) {
    NPC = 50091;
    NR = 1;
    CONDITION = PC_POTIONALCHEMY_REGENERATE_CONDITION;
    INFORMATION = PC_POTIONALCHEMY_REGENERATE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Restoration potions.";
}

func int PC_POTIONALCHEMY_REGENERATE_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((POTIONALCHEMYMODE) == (0))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_POTIONALCHEMY_REGENERATE_INFO() {
    POTIONALCHEMYMODE = POTIONALCHEMY_REGENERATE;
}

instance PC_POTIONALCHEMY_REGENERATE_STOP(C_INFO) {
    NPC = 50091;
    NR = 99;
    CONDITION = PC_POTIONALCHEMY_REGENERATE_STOP_CONDITION;
    INFORMATION = PC_POTIONALCHEMY_REGENERATE_STOP_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_BACK;
}

func int PC_POTIONALCHEMY_REGENERATE_STOP_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_REGENERATE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_POTIONALCHEMY_REGENERATE_STOP_INFO() {
    POTIONALCHEMYMODE = 0;
}

instance PC_MANA_START(C_INFO) {
    NPC = 50091;
    NR = 6;
    CONDITION = PC_MANA_START_CONDITION;
    INFORMATION = PC_MANA_START_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Brew mana potions.";
}

func int PC_MANA_START_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_REGENERATE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_MANA_START_INFO() {
    POTIONALCHEMYMODE = POTIONALCHEMY_REGENERATEMP;
}

instance PC_MANA_STOP(C_INFO) {
    NPC = 50091;
    NR = 99;
    CONDITION = PC_MANA_STOP_CONDITION;
    INFORMATION = PC_MANA_STOP_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_BACK;
}

func int PC_MANA_STOP_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_REGENERATEMP))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_MANA_STOP_INFO() {
    POTIONALCHEMYMODE = POTIONALCHEMY_REGENERATE;
}

instance PC_ITPO_MANA_01(C_INFO) {
    NR = 10114;
    NPC = 50091;
    CONDITION = PC_ITPO_MANA_01_CONDITION;
    INFORMATION = PC_ITPO_MANA_01_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Esencja many. (2 ogniste pokrzywy, 1 rdest polny)";
}

func int PC_ITPO_MANA_01_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[3]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_REGENERATEMP))) && ((BETTERALCHEMY_HEALER) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_MANA_01_INFO() {
    POTIONALCHEMY_INSTANCE = 34991;
    POTIONALCHEMY_INFO = 47520;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_MANA_01_VOL2(C_INFO) {
    NR = 10141;
    NPC = 50091;
    CONDITION = PC_ITPO_MANA_01_VOL2_CONDITION;
    INFORMATION = PC_ITPO_MANA_01_VOL2_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Esencja many. (2 ogniste pokrzywy, 1 rdest polny)";
}

func int PC_ITPO_MANA_01_VOL2_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[3]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_REGENERATEMP))) && ((BETTERALCHEMY_HEALER) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_MANA_01_VOL2_INFO() {
    POTIONALCHEMY_INSTANCE = 34992;
    POTIONALCHEMY_INFO = 47523;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_MANA_02(C_INFO) {
    NR = 10116;
    NPC = 50091;
    CONDITION = PC_ITPO_MANA_02_CONDITION;
    INFORMATION = PC_ITPO_MANA_02_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Ekstrakt many. (2 ogniste ziela, 1 rdest polny)";
}

func int PC_ITPO_MANA_02_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[4]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_REGENERATEMP))) && ((BETTERALCHEMY_HEALER) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_MANA_02_INFO() {
    POTIONALCHEMY_INSTANCE = 34995;
    POTIONALCHEMY_INFO = 47526;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_MANA_02_VOL2(C_INFO) {
    NR = 10142;
    NPC = 50091;
    CONDITION = PC_ITPO_MANA_02_VOL2_CONDITION;
    INFORMATION = PC_ITPO_MANA_02_VOL2_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Ekstrakt many. (2 ogniste ziela, 1 rdest polny)";
}

func int PC_ITPO_MANA_02_VOL2_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[4]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_REGENERATEMP))) && ((BETTERALCHEMY_HEALER) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_MANA_02_VOL2_INFO() {
    POTIONALCHEMY_INSTANCE = 34996;
    POTIONALCHEMY_INFO = 47529;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_MANA_03(C_INFO) {
    NR = 10118;
    NPC = 50091;
    CONDITION = PC_ITPO_MANA_03_CONDITION;
    INFORMATION = PC_ITPO_MANA_03_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Eliksir many. (2 ogniste korzenie, 1 rdest polny)";
}

func int PC_ITPO_MANA_03_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[5]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_REGENERATEMP))) && ((BETTERALCHEMY_HEALER) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_MANA_03_INFO() {
    POTIONALCHEMY_INSTANCE = 34999;
    POTIONALCHEMY_INFO = 47532;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_MANA_03_VOL2(C_INFO) {
    NR = 10143;
    NPC = 50091;
    CONDITION = PC_ITPO_MANA_03_VOL2_CONDITION;
    INFORMATION = PC_ITPO_MANA_03_VOL2_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Eliksir many. (2 ogniste korzenie, 1 rdest polny)";
}

func int PC_ITPO_MANA_03_VOL2_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[5]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_REGENERATEMP))) && ((BETTERALCHEMY_HEALER) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_MANA_03_VOL2_INFO() {
    POTIONALCHEMY_INSTANCE = 35000;
    POTIONALCHEMY_INFO = 47535;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_MANA_04(C_INFO) {
    NR = 10120;
    NPC = 50091;
    CONDITION = PC_ITPO_MANA_04_CONDITION;
    INFORMATION = PC_ITPO_MANA_04_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Pe³nia many. (3 esencje many, 1 rdest polny)";
}

func int PC_ITPO_MANA_04_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[13]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_REGENERATEMP))) && ((BETTERALCHEMY_HEALER) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_MANA_04_INFO() {
    POTIONALCHEMY_INSTANCE = 35003;
    POTIONALCHEMY_INFO = 47538;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_MANA_04_VOL2(C_INFO) {
    NR = 10144;
    NPC = 50091;
    CONDITION = PC_ITPO_MANA_04_VOL2_CONDITION;
    INFORMATION = PC_ITPO_MANA_04_VOL2_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Pe³nia many. (3 esencje many, 1 rdest polny)";
}

func int PC_ITPO_MANA_04_VOL2_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[13]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_REGENERATEMP))) && ((BETTERALCHEMY_HEALER) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_MANA_04_VOL2_INFO() {
    POTIONALCHEMY_INSTANCE = 35004;
    POTIONALCHEMY_INFO = 47541;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_MANA_BLUEPLANT(C_INFO) {
    NR = 10101;
    NPC = 50091;
    CONDITION = PC_ITPO_MANA_BLUEPLANT_CONDITION;
    INFORMATION = PC_ITPO_MANA_BLUEPLANT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Wywar z niebieskiego bzu.";
}

func int PC_ITPO_MANA_BLUEPLANT_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[17]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_REGENERATEMP))) && ((BETTERALCHEMY_HEALER) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_MANA_BLUEPLANT_INFO() {
    POTIONALCHEMY_INSTANCE = 34970;
    POTIONALCHEMY_INFO = 47544;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_MANA_BLUEPLANT_VOL2(C_INFO) {
    NR = 10100;
    NPC = 50091;
    CONDITION = PC_ITPO_MANA_BLUEPLANT_VOL2_CONDITION;
    INFORMATION = PC_ITPO_MANA_BLUEPLANT_VOL2_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Wywar z niebieskiego bzu.";
}

func int PC_ITPO_MANA_BLUEPLANT_VOL2_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[17]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_REGENERATEMP))) && ((BETTERALCHEMY_HEALER) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_MANA_BLUEPLANT_VOL2_INFO() {
    POTIONALCHEMY_INSTANCE = 34971;
    POTIONALCHEMY_INFO = 47547;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_HEALTH_START(C_INFO) {
    NPC = 50091;
    NR = 7;
    CONDITION = PC_HEALTH_START_CONDITION;
    INFORMATION = PC_HEALTH_START_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Brew healing potions.";
}

func int PC_HEALTH_START_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_REGENERATE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_HEALTH_START_INFO() {
    POTIONALCHEMYMODE = POTIONALCHEMY_REGENERATEHP;
}

instance PC_HEALTH_STOP(C_INFO) {
    NPC = 50091;
    NR = 99;
    CONDITION = PC_HEALTH_STOP_CONDITION;
    INFORMATION = PC_HEALTH_STOP_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_BACK;
}

func int PC_HEALTH_STOP_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_REGENERATEHP))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_HEALTH_STOP_INFO() {
    POTIONALCHEMYMODE = POTIONALCHEMY_REGENERATE;
}

instance PC_ITPO_HEALTH_01(C_INFO) {
    NR = 10104;
    NPC = 50091;
    CONDITION = PC_ITPO_HEALTH_01_CONDITION;
    INFORMATION = PC_ITPO_HEALTH_01_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Esencja lecznicza. (2 roliny lecznicze, 1 rdest polny)";
}

func int PC_ITPO_HEALTH_01_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[0]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_REGENERATEHP))) && ((BETTERALCHEMY_HEALER) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_HEALTH_01_INFO() {
    POTIONALCHEMY_INSTANCE = 34975;
    POTIONALCHEMY_INFO = 47556;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_HEALTH_01_VOL2(C_INFO) {
    NR = 10137;
    NPC = 50091;
    CONDITION = PC_ITPO_HEALTH_01_VOL2_CONDITION;
    INFORMATION = PC_ITPO_HEALTH_01_VOL2_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Esencja lecznicza. (2 roliny lecznicze, 1 rdest polny)";
}

func int PC_ITPO_HEALTH_01_VOL2_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[0]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_REGENERATEHP))) && ((BETTERALCHEMY_HEALER) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_HEALTH_01_VOL2_INFO() {
    POTIONALCHEMY_INSTANCE = 34976;
    POTIONALCHEMY_INFO = 47559;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_HEALTH_02(C_INFO) {
    NR = 10106;
    NPC = 50091;
    CONDITION = PC_ITPO_HEALTH_02_CONDITION;
    INFORMATION = PC_ITPO_HEALTH_02_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Ekstrakt leczniczy. (2 ziela lecznicze, 1 rdest polny)";
}

func int PC_ITPO_HEALTH_02_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[1]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_REGENERATEHP))) && ((BETTERALCHEMY_HEALER) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_HEALTH_02_INFO() {
    POTIONALCHEMY_INSTANCE = 34979;
    POTIONALCHEMY_INFO = 47562;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_HEALTH_02_VOL2(C_INFO) {
    NR = 10138;
    NPC = 50091;
    CONDITION = PC_ITPO_HEALTH_02_VOL2_CONDITION;
    INFORMATION = PC_ITPO_HEALTH_02_VOL2_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Ekstrakt leczniczy. (2 ziela lecznicze, 1 rdest polny)";
}

func int PC_ITPO_HEALTH_02_VOL2_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[1]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_REGENERATEHP))) && ((BETTERALCHEMY_HEALER) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_HEALTH_02_VOL2_INFO() {
    POTIONALCHEMY_INSTANCE = 34980;
    POTIONALCHEMY_INFO = 47565;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_HEALTH_03(C_INFO) {
    NR = 10108;
    NPC = 50091;
    CONDITION = PC_ITPO_HEALTH_03_CONDITION;
    INFORMATION = PC_ITPO_HEALTH_03_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Eliksir leczniczy. (2 korzenie lecznicze, 1 rdest polny)";
}

func int PC_ITPO_HEALTH_03_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[2]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_REGENERATEHP))) && ((BETTERALCHEMY_HEALER) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_HEALTH_03_INFO() {
    POTIONALCHEMY_INSTANCE = 34983;
    POTIONALCHEMY_INFO = 47568;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_HEALTH_03_VOL2(C_INFO) {
    NR = 10139;
    NPC = 50091;
    CONDITION = PC_ITPO_HEALTH_03_VOL2_CONDITION;
    INFORMATION = PC_ITPO_HEALTH_03_VOL2_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Ulepszony eliksir leczniczy. (2 korzenie lecznicze, 1 rdest polny)";
}

func int PC_ITPO_HEALTH_03_VOL2_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[2]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_REGENERATEHP))) && ((BETTERALCHEMY_HEALER) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_HEALTH_03_VOL2_INFO() {
    POTIONALCHEMY_INSTANCE = 34984;
    POTIONALCHEMY_INFO = 47571;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_HEALTH_04(C_INFO) {
    NR = 10111;
    NPC = 50091;
    CONDITION = PC_ITPO_HEALTH_04_CONDITION;
    INFORMATION = PC_ITPO_HEALTH_04_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Pe³nia ¿ycia. (3 esencje lecznicze, 1 rdest polny)";
}

func int PC_ITPO_HEALTH_04_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[14]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_REGENERATEHP))) && ((BETTERALCHEMY_HEALER) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_HEALTH_04_INFO() {
    POTIONALCHEMY_INSTANCE = 34987;
    POTIONALCHEMY_INFO = 47574;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_HEALTH_04_VOL2(C_INFO) {
    NR = 10140;
    NPC = 50091;
    CONDITION = PC_ITPO_HEALTH_04_VOL2_CONDITION;
    INFORMATION = PC_ITPO_HEALTH_04_VOL2_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Ulepszona pe³nia ¿ycia. (3 esencje lecznicze, 1 rdest polny)";
}

func int PC_ITPO_HEALTH_04_VOL2_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[14]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_REGENERATEHP))) && ((BETTERALCHEMY_HEALER) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_HEALTH_04_VOL2_INFO() {
    POTIONALCHEMY_INSTANCE = 34990;
    POTIONALCHEMY_INFO = 47577;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_SPECIAL_START(C_INFO) {
    NPC = 50091;
    NR = 2;
    CONDITION = PC_SPECIAL_START_CONDITION;
    INFORMATION = PC_SPECIAL_START_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Permanent potions.";
}

func int PC_SPECIAL_START_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((POTIONALCHEMYMODE) == (0))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_SPECIAL_START_INFO() {
    POTIONALCHEMYMODE = POTIONALCHEMY_PERMAMENT;
}

instance PC_SPECIAL_STOP(C_INFO) {
    NPC = 50091;
    NR = 99;
    CONDITION = PC_SPECIAL_STOP_CONDITION;
    INFORMATION = PC_SPECIAL_STOP_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_BACK;
}

func int PC_SPECIAL_STOP_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_PERMAMENT))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_SPECIAL_STOP_INFO() {
    POTIONALCHEMYMODE = 0;
}

instance PC_ITPO_PERM_HEALTH(C_INFO) {
    NR = 10122;
    NPC = 50091;
    CONDITION = PC_ITPO_PERM_HEALTH_CONDITION;
    INFORMATION = PC_ITPO_PERM_HEALTH_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Eliksir ¿ycia. (1 korzeñ leczniczy, 1 szczaw królewski)";
}

func int PC_ITPO_PERM_HEALTH_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[10]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_PERMAMENT))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_PERM_HEALTH_INFO() {
    POTIONALCHEMY_INSTANCE = 35007;
    POTIONALCHEMY_INFO = 47586;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_PERM_MANA(C_INFO) {
    NR = 10123;
    NPC = 50091;
    CONDITION = PC_ITPO_PERM_MANA_CONDITION;
    INFORMATION = PC_ITPO_PERM_MANA_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Eliksir ducha. (1 ognisty korzeñ, 1 szczaw królewski)";
}

func int PC_ITPO_PERM_MANA_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[9]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_PERMAMENT))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_PERM_MANA_INFO() {
    POTIONALCHEMY_INSTANCE = 35009;
    POTIONALCHEMY_INFO = 47589;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_PERM_DEX(C_INFO) {
    NR = 10125;
    NPC = 50091;
    CONDITION = PC_ITPO_DEX_CONDITION;
    INFORMATION = PC_ITPO_DEX_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Mikstura zrêcznoci. (1 porcja goblinich jagód, 1 szczaw królewski)";
}

func int PC_ITPO_DEX_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[8]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_PERMAMENT))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_DEX_INFO() {
    POTIONALCHEMY_INSTANCE = 35013;
    POTIONALCHEMY_INFO = 47592;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_PERM_STRG(C_INFO) {
    NR = 10124;
    NPC = 50091;
    CONDITION = PC_ITPO_STRG_CONDITION;
    INFORMATION = PC_ITPO_STRG_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Mikstura si³y. (1 smoczy korzeñ, 1 szczaw królewski)";
}

func int PC_ITPO_STRG_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[7]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_PERMAMENT))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_STRG_INFO() {
    POTIONALCHEMY_INSTANCE = 35011;
    POTIONALCHEMY_INFO = 47595;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_STONESKIN(C_INFO) {
    NR = 10131;
    NPC = 50091;
    CONDITION = PC_ITPO_STONESKIN_CONDITION;
    INFORMATION = PC_ITPO_STONESKIN_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "StoneSkin";
}

func int PC_ITPO_STONESKIN_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[25]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_PERMAMENT))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_STONESKIN_INFO() {
    POTIONALCHEMY_INSTANCE = 35039;
    POTIONALCHEMY_INFO = 47598;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_POTIONALCHEMY_TIMED(C_INFO) {
    NPC = 50091;
    NR = 4;
    CONDITION = PC_POTIONALCHEMY_TIMED_CONDITION;
    INFORMATION = PC_POTIONALCHEMY_TIMED_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Timed potions.";
}

func int PC_POTIONALCHEMY_TIMED_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((POTIONALCHEMYMODE) == (0))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_POTIONALCHEMY_TIMED_INFO() {
    POTIONALCHEMYMODE = POTIONALCHEMY_TIMED;
}

instance PC_POTIONALCHEMY_TIMED_STOP(C_INFO) {
    NPC = 50091;
    NR = 99;
    CONDITION = PC_POTIONALCHEMY_TIMED_STOP_CONDITION;
    INFORMATION = PC_POTIONALCHEMY_TIMED_STOP_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_BACK;
}

func int PC_POTIONALCHEMY_TIMED_STOP_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_TIMED))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_POTIONALCHEMY_TIMED_STOP_INFO() {
    POTIONALCHEMYMODE = 0;
}

instance PC_ITPO_SPEED(C_INFO) {
    NR = 10110;
    NPC = 50091;
    CONDITION = PC_ITPO_SPEED_CONDITION;
    INFORMATION = PC_ITPO_SPEED_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Mikstura szybkoci (1 zêbate ziele, 1 rdest polny)";
}

func int PC_ITPO_SPEED_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[6]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_TIMED))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_SPEED_INFO() {
    POTIONALCHEMY_INSTANCE = 35015;
    POTIONALCHEMY_INFO = 47607;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_SPEED2(C_INFO) {
    NR = 10113;
    NPC = 50091;
    CONDITION = PC_ITPO_SPEED2_CONDITION;
    INFORMATION = PC_ITPO_SPEED2_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Silna mikstura szybkoci";
}

func int PC_ITPO_SPEED2_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[16]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_TIMED))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_SPEED2_INFO() {
    POTIONALCHEMY_INSTANCE = 35017;
    POTIONALCHEMY_INFO = 47610;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_TIMED_HEALTH(C_INFO) {
    NR = 10126;
    NPC = 50091;
    CONDITION = PC_ITPO_TIMED_HEALTH_CONDITION;
    INFORMATION = PC_ITPO_TIMED_HEALTH_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "temp ¿ycie";
}

func int PC_ITPO_TIMED_HEALTH_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[20]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_TIMED))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_TIMED_HEALTH_INFO() {
    POTIONALCHEMY_INSTANCE = 35019;
    POTIONALCHEMY_INFO = 47613;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_TIMED_HEALTH2(C_INFO) {
    NR = 10155;
    NPC = 50091;
    CONDITION = PC_ITPO_TIMED_HEALTH2_CONDITION;
    INFORMATION = PC_ITPO_TIMED_HEALTH2_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "temp ¿ycie";
}

func int PC_ITPO_TIMED_HEALTH2_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[29]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_TIMED))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_TIMED_HEALTH2_INFO() {
    POTIONALCHEMY_INSTANCE = 35029;
    POTIONALCHEMY_INFO = 47616;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_TIMED_MANA(C_INFO) {
    NR = 10127;
    NPC = 50091;
    CONDITION = PC_ITPO_TIMED_MANA_CONDITION;
    INFORMATION = PC_ITPO_TIMED_MANA_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "temp Mana";
}

func int PC_ITPO_TIMED_MANA_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[21]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_TIMED))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_TIMED_MANA_INFO() {
    POTIONALCHEMY_INSTANCE = 35021;
    POTIONALCHEMY_INFO = 47619;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_TIMED_MANA2(C_INFO) {
    NR = 10156;
    NPC = 50091;
    CONDITION = PC_ITPO_TIMED_MANA2_CONDITION;
    INFORMATION = PC_ITPO_TIMED_MANA2_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "temp Mana";
}

func int PC_ITPO_TIMED_MANA2_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[30]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_TIMED))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_TIMED_MANA2_INFO() {
    POTIONALCHEMY_INSTANCE = 35031;
    POTIONALCHEMY_INFO = 47622;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_TIMED_STR(C_INFO) {
    NR = 10128;
    NPC = 50091;
    CONDITION = PC_ITPO_TIMED_STR_CONDITION;
    INFORMATION = PC_ITPO_TIMED_STR_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "temp Str";
}

func int PC_ITPO_TIMED_STR_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[22]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_TIMED))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_TIMED_STR_INFO() {
    POTIONALCHEMY_INSTANCE = 35023;
    POTIONALCHEMY_INFO = 47625;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_TIMED_STR2(C_INFO) {
    NR = 10157;
    NPC = 50091;
    CONDITION = PC_ITPO_TIMED_STR2_CONDITION;
    INFORMATION = PC_ITPO_TIMED_STR2_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "temp Str";
}

func int PC_ITPO_TIMED_STR2_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[31]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_TIMED))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_TIMED_STR2_INFO() {
    POTIONALCHEMY_INSTANCE = 35033;
    POTIONALCHEMY_INFO = 47628;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_TIMED_DEX(C_INFO) {
    NR = 10129;
    NPC = 50091;
    CONDITION = PC_ITPO_TIMED_DEX_CONDITION;
    INFORMATION = PC_ITPO_TIMED_DEX_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "temp Dex";
}

func int PC_ITPO_TIMED_DEX_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[23]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_TIMED))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_TIMED_DEX_INFO() {
    POTIONALCHEMY_INSTANCE = 35025;
    POTIONALCHEMY_INFO = 47631;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_TIMED_DEX2(C_INFO) {
    NR = 10159;
    NPC = 50091;
    CONDITION = PC_ITPO_TIMED_DEX2_CONDITION;
    INFORMATION = PC_ITPO_TIMED_DEX2_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "temp Dex";
}

func int PC_ITPO_TIMED_DEX2_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[32]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_TIMED))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_TIMED_DEX2_INFO() {
    POTIONALCHEMY_INSTANCE = 35035;
    POTIONALCHEMY_INFO = 47634;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_TIMED_DEF(C_INFO) {
    NR = 10130;
    NPC = 50091;
    CONDITION = PC_ITPO_TIMED_DEF_CONDITION;
    INFORMATION = PC_ITPO_TIMED_DEF_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "temp Def";
}

func int PC_ITPO_TIMED_DEF_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[24]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_TIMED))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_TIMED_DEF_INFO() {
    POTIONALCHEMY_INSTANCE = 35027;
    POTIONALCHEMY_INFO = 47637;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_TIMED_DEF2(C_INFO) {
    NR = 10159;
    NPC = 50091;
    CONDITION = PC_ITPO_TIMED_DEF2_CONDITION;
    INFORMATION = PC_ITPO_TIMED_DEF2_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "temp Def";
}

func int PC_ITPO_TIMED_DEF2_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[33]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_TIMED))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_TIMED_DEF2_INFO() {
    POTIONALCHEMY_INSTANCE = 35037;
    POTIONALCHEMY_INFO = 47640;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_HPREGEN(C_INFO) {
    NR = 10134;
    NPC = 50091;
    CONDITION = PC_ITPO_HPREGEN_CONDITION;
    INFORMATION = PC_ITPO_HPREGEN_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "HpRegen";
}

func int PC_ITPO_HPREGEN_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[18]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_TIMED))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_HPREGEN_INFO() {
    POTIONALCHEMY_INSTANCE = 35045;
    POTIONALCHEMY_INFO = 47643;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_HPREGEN2(C_INFO) {
    NR = 10160;
    NPC = 50091;
    CONDITION = PC_ITPO_HPREGEN2_CONDITION;
    INFORMATION = PC_ITPO_HPREGEN2_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "HpRegen";
}

func int PC_ITPO_HPREGEN2_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[27]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_TIMED))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_HPREGEN2_INFO() {
    POTIONALCHEMY_INSTANCE = 35049;
    POTIONALCHEMY_INFO = 47646;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_MANAREGEN(C_INFO) {
    NR = 10135;
    NPC = 50091;
    CONDITION = PC_ITPO_MANAREGEN_CONDITION;
    INFORMATION = PC_ITPO_MANAREGEN_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "ManaRegen";
}

func int PC_ITPO_MANAREGEN_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[19]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_TIMED))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_MANAREGEN_INFO() {
    POTIONALCHEMY_INSTANCE = 35047;
    POTIONALCHEMY_INFO = 47649;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_MANAREGEN2(C_INFO) {
    NR = 10161;
    NPC = 50091;
    CONDITION = PC_ITPO_MANAREGEN2_CONDITION;
    INFORMATION = PC_ITPO_MANAREGEN2_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "ManaRegen";
}

func int PC_ITPO_MANAREGEN2_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[28]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_TIMED))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_MANAREGEN2_INFO() {
    POTIONALCHEMY_INSTANCE = 35051;
    POTIONALCHEMY_INFO = 47652;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_POTIONALCHEMY_POTION_FALL(C_INFO) {
    NR = 10132;
    NPC = 50091;
    CONDITION = PC_POTIONALCHEMY_POTION_FALL_CONDITION;
    INFORMATION = PC_POTIONALCHEMY_POTION_FALL_INFO;
    PERMANENT = TRUE;
}

func int PC_POTIONALCHEMY_POTION_FALL_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[15]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_TIMED))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_POTIONALCHEMY_POTION_FALL_INFO() {
    POTIONALCHEMY_INSTANCE = 35041;
    POTIONALCHEMY_INFO = 47655;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_POTIONALCHEMY_POTION_DIVE(C_INFO) {
    NR = 10133;
    NPC = 50091;
    CONDITION = PC_POTIONALCHEMY_POTION_DIVE_CONDITION;
    INFORMATION = PC_POTIONALCHEMY_POTION_DIVE_INFO;
    PERMANENT = TRUE;
}

func int PC_POTIONALCHEMY_POTION_DIVE_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[26]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_TIMED))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_POTIONALCHEMY_POTION_DIVE_INFO() {
    POTIONALCHEMY_INSTANCE = 35043;
    POTIONALCHEMY_INFO = 47658;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_POTIONALCHEMY_SEED(C_INFO) {
    NPC = 50091;
    NR = 5;
    CONDITION = PC_POTIONALCHEMY_SEED_CONDITION;
    INFORMATION = PC_POTIONALCHEMY_SEED_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Potions from seeds.";
}

func int PC_POTIONALCHEMY_SEED_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((POTIONALCHEMYMODE) == (0))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_POTIONALCHEMY_SEED_INFO() {
    POTIONALCHEMYMODE = POTIONALCHEMY_SEED;
}

instance PC_POTIONALCHEMY_SEED_STOP(C_INFO) {
    NPC = 50091;
    NR = 99;
    CONDITION = PC_POTIONALCHEMY_SEED_STOP_CONDITION;
    INFORMATION = PC_POTIONALCHEMY_SEED_STOP_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_BACK;
}

func int PC_POTIONALCHEMY_SEED_STOP_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_SEED))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_POTIONALCHEMY_SEED_STOP_INFO() {
    POTIONALCHEMYMODE = 0;
}

instance PC_MANA_SEED_START(C_INFO) {
    NPC = 50091;
    NR = 6;
    CONDITION = PC_MANA_SEED_START_CONDITION;
    INFORMATION = PC_MANA_SEED_START_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Brew mana potions.";
}

func int PC_MANA_SEED_START_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_SEED))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_MANA_SEED_START_INFO() {
    POTIONALCHEMYMODE = POTIONALCHEMY_SEEDMP;
}

instance PC_MANA_SEED_STOP(C_INFO) {
    NPC = 50091;
    NR = 99;
    CONDITION = PC_MANA_SEED_STOP_CONDITION;
    INFORMATION = PC_MANA_SEED_STOP_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_BACK;
}

func int PC_MANA_SEED_STOP_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_SEEDMP))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_MANA_SEED_STOP_INFO() {
    POTIONALCHEMYMODE = POTIONALCHEMY_SEED;
}

instance PC_ITPO_MANA_01_SEED(C_INFO) {
    NR = 10115;
    NPC = 50091;
    CONDITION = PC_ITPO_MANA_01_SEED_CONDITION;
    INFORMATION = PC_ITPO_MANA_01_SEED_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Esencja many (2 ogniste pokrzywy, 1 rdest polny)";
}

func int PC_ITPO_MANA_01_SEED_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[3]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_SEEDMP))) && ((BETTERALCHEMY_HEALER) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_MANA_01_SEED_INFO() {
    POTIONALCHEMY_INSTANCE = 34993;
    POTIONALCHEMY_INFO = 47673;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_MANA_01_SEED_VOL2(C_INFO) {
    NR = 10150;
    NPC = 50091;
    CONDITION = PC_ITPO_MANA_01_SEED_VOL2_CONDITION;
    INFORMATION = PC_ITPO_MANA_01_SEED_VOL2_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Esencja many (2 ogniste pokrzywy, 1 rdest polny)";
}

func int PC_ITPO_MANA_01_SEED_VOL2_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[3]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_SEEDMP))) && ((BETTERALCHEMY_HEALER) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_MANA_01_SEED_VOL2_INFO() {
    POTIONALCHEMY_INSTANCE = 34994;
    POTIONALCHEMY_INFO = 47676;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_MANA_02_SEED(C_INFO) {
    NR = 10117;
    NPC = 50091;
    CONDITION = PC_ITPO_MANA_02_SEED_CONDITION;
    INFORMATION = PC_ITPO_MANA_02_SEED_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Ekstrakt many (2 ogniste ziela, 1 rdest polny)";
}

func int PC_ITPO_MANA_02_SEED_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[4]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_SEEDMP))) && ((BETTERALCHEMY_HEALER) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_MANA_02_SEED_INFO() {
    POTIONALCHEMY_INSTANCE = 34997;
    POTIONALCHEMY_INFO = 47679;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_MANA_02_SEED_VOL2(C_INFO) {
    NR = 10151;
    NPC = 50091;
    CONDITION = PC_ITPO_MANA_02_SEED_VOL2_CONDITION;
    INFORMATION = PC_ITPO_MANA_02_SEED_VOL2_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Ekstrakt many (2 ogniste ziela, 1 rdest polny)";
}

func int PC_ITPO_MANA_02_SEED_VOL2_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[4]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_SEEDMP))) && ((BETTERALCHEMY_HEALER) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_MANA_02_SEED_VOL2_INFO() {
    POTIONALCHEMY_INSTANCE = 34998;
    POTIONALCHEMY_INFO = 47682;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_MANA_03_SEED(C_INFO) {
    NR = 10119;
    NPC = 50091;
    CONDITION = PC_ITPO_MANA_03_SEED_CONDITION;
    INFORMATION = PC_ITPO_MANA_03_SEED_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Eliksir many (2 ogniste korzenie, 1 rdest polny)";
}

func int PC_ITPO_MANA_03_SEED_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[5]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_SEEDMP))) && ((BETTERALCHEMY_HEALER) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_MANA_03_SEED_INFO() {
    POTIONALCHEMY_INSTANCE = 35001;
    POTIONALCHEMY_INFO = 47685;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_MANA_03_SEED_VOL2(C_INFO) {
    NR = 10152;
    NPC = 50091;
    CONDITION = PC_ITPO_MANA_03_SEED_VOL2_CONDITION;
    INFORMATION = PC_ITPO_MANA_03_SEED_VOL2_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Eliksir many (2 ogniste korzenie, 1 rdest polny)";
}

func int PC_ITPO_MANA_03_SEED_VOL2_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[5]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_SEEDMP))) && ((BETTERALCHEMY_HEALER) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_MANA_03_SEED_VOL2_INFO() {
    POTIONALCHEMY_INSTANCE = 35002;
    POTIONALCHEMY_INFO = 47688;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_MANA_04_SEED(C_INFO) {
    NR = 10121;
    NPC = 50091;
    CONDITION = PC_ITPO_MANA_04_SEED_CONDITION;
    INFORMATION = PC_ITPO_MANA_04_SEED_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Pe³nia many (3 esencje many, 1 rdest polny)";
}

func int PC_ITPO_MANA_04_SEED_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[13]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_SEEDMP))) && ((BETTERALCHEMY_HEALER) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_MANA_04_SEED_INFO() {
    POTIONALCHEMY_INSTANCE = 35005;
    POTIONALCHEMY_INFO = 47691;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_MANA_04_SEED_VOL2(C_INFO) {
    NR = 10153;
    NPC = 50091;
    CONDITION = PC_ITPO_MANA_04_SEED_VOL2_CONDITION;
    INFORMATION = PC_ITPO_MANA_04_SEED_VOL2_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Pe³nia many (3 esencje many, 1 rdest polny)";
}

func int PC_ITPO_MANA_04_SEED_VOL2_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[13]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_SEEDMP))) && ((BETTERALCHEMY_HEALER) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_MANA_04_SEED_VOL2_INFO() {
    POTIONALCHEMY_INSTANCE = 35006;
    POTIONALCHEMY_INFO = 47694;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_MANA_BLUEPLANT_SEED(C_INFO) {
    NR = 10102;
    NPC = 50091;
    CONDITION = PC_ITPO_MANA_BLUEPLANT_SEED_CONDITION;
    INFORMATION = PC_ITPO_MANA_BLUEPLANT_SEED_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Blue Elder Decoction";
}

func int PC_ITPO_MANA_BLUEPLANT_SEED_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[17]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_SEEDMP))) && ((BETTERALCHEMY_HEALER) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_MANA_BLUEPLANT_SEED_INFO() {
    POTIONALCHEMY_INSTANCE = 34972;
    POTIONALCHEMY_INFO = 47697;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_MANA_BLUEPLANT_SEED_VOL2(C_INFO) {
    NR = 10103;
    NPC = 50091;
    CONDITION = PC_ITPO_MANA_BLUEPLANT_SEED_VOL2_CONDITION;
    INFORMATION = PC_ITPO_MANA_BLUEPLANT_SEED_VOL2_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Blue Elder Decoction";
}

func int PC_ITPO_MANA_BLUEPLANT_SEED_VOL2_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[17]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_SEEDMP))) && ((BETTERALCHEMY_HEALER) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_MANA_BLUEPLANT_SEED_VOL2_INFO() {
    POTIONALCHEMY_INSTANCE = 34973;
    POTIONALCHEMY_INFO = 47700;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_HEALTH_SEED_START(C_INFO) {
    NPC = 50091;
    NR = 7;
    CONDITION = PC_HEALTH_SEED_START_CONDITION;
    INFORMATION = PC_HEALTH_SEED_START_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Brew healing potions.";
}

func int PC_HEALTH_SEED_START_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_SEED))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_HEALTH_SEED_START_INFO() {
    POTIONALCHEMYMODE = POTIONALCHEMY_SEEDHP;
}

instance PC_HEALTH_SEED_STOP(C_INFO) {
    NPC = 50091;
    NR = 99;
    CONDITION = PC_HEALTH_SEED_STOP_CONDITION;
    INFORMATION = PC_HEALTH_SEED_STOP_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_BACK;
}

func int PC_HEALTH_SEED_STOP_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_SEEDHP))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_HEALTH_SEED_STOP_INFO() {
    POTIONALCHEMYMODE = POTIONALCHEMY_SEED;
}

instance PC_ITPO_HEALTH_01_SEED(C_INFO) {
    NR = 10105;
    NPC = 50091;
    CONDITION = PC_ITPO_HEALTH_01_SEED_CONDITION;
    INFORMATION = PC_ITPO_HEALTH_01_SEED_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Esencja lecznicza (2 roliny lecznicze, 1 rdest polny)";
}

func int PC_ITPO_HEALTH_01_SEED_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[0]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_SEEDHP))) && ((BETTERALCHEMY_HEALER) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_HEALTH_01_SEED_INFO() {
    POTIONALCHEMY_INSTANCE = 34977;
    POTIONALCHEMY_INFO = 47709;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_HEALTH_01_SEED_VOL2(C_INFO) {
    NR = 10146;
    NPC = 50091;
    CONDITION = PC_ITPO_HEALTH_01_SEED_VOL2_CONDITION;
    INFORMATION = PC_ITPO_HEALTH_01_SEED_VOL2_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Esencja lecznicza (2 roliny lecznicze, 1 rdest polny)";
}

func int PC_ITPO_HEALTH_01_SEED_VOL2_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[0]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_SEEDHP))) && ((BETTERALCHEMY_HEALER) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_HEALTH_01_SEED_VOL2_INFO() {
    POTIONALCHEMY_INSTANCE = 34978;
    POTIONALCHEMY_INFO = 47712;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_HEALTH_02_SEED(C_INFO) {
    NR = 10107;
    NPC = 50091;
    CONDITION = PC_ITPO_HEALTH_02_SEED_CONDITION;
    INFORMATION = PC_ITPO_HEALTH_02_SEED_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Ekstrakt leczniczy (2 ziela lecznicze, 1 rdest polny)";
}

func int PC_ITPO_HEALTH_02_SEED_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[1]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_SEEDHP))) && ((BETTERALCHEMY_HEALER) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_HEALTH_02_SEED_INFO() {
    POTIONALCHEMY_INSTANCE = 34981;
    POTIONALCHEMY_INFO = 47715;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_HEALTH_02_SEED_VOL2(C_INFO) {
    NR = 10147;
    NPC = 50091;
    CONDITION = PC_ITPO_HEALTH_02_SEED_VOL2_CONDITION;
    INFORMATION = PC_ITPO_HEALTH_02_SEED_VOL2_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Ekstrakt leczniczy (2 ziela lecznicze, 1 rdest polny)";
}

func int PC_ITPO_HEALTH_02_SEED_VOL2_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[1]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_SEEDHP))) && ((BETTERALCHEMY_HEALER) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_HEALTH_02_SEED_VOL2_INFO() {
    POTIONALCHEMY_INSTANCE = 34982;
    POTIONALCHEMY_INFO = 47718;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_HEALTH_03_SEED(C_INFO) {
    NR = 10109;
    NPC = 50091;
    CONDITION = PC_ITPO_HEALTH_03_SEED_CONDITION;
    INFORMATION = PC_ITPO_HEALTH_03_SEED_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Eliksir leczniczy (2 korzenie lecznicze, 1 rdest polny)";
}

func int PC_ITPO_HEALTH_03_SEED_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[2]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_SEEDHP))) && ((BETTERALCHEMY_HEALER) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_HEALTH_03_SEED_INFO() {
    POTIONALCHEMY_INSTANCE = 34985;
    POTIONALCHEMY_INFO = 47721;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_HEALTH_03_SEED_VOL2(C_INFO) {
    NR = 10148;
    NPC = 50091;
    CONDITION = PC_ITPO_HEALTH_03_SEED_VOL2_CONDITION;
    INFORMATION = PC_ITPO_HEALTH_03_SEED_VOL2_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Eliksir leczniczy (2 korzenie lecznicze, 1 rdest polny)";
}

func int PC_ITPO_HEALTH_03_SEED_VOL2_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[2]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_SEEDHP))) && ((BETTERALCHEMY_HEALER) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_HEALTH_03_SEED_VOL2_INFO() {
    POTIONALCHEMY_INSTANCE = 34986;
    POTIONALCHEMY_INFO = 47724;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_HEALTH_04_SEED(C_INFO) {
    NR = 10112;
    NPC = 50091;
    CONDITION = PC_ITPO_HEALTH_04_SEED_CONDITION;
    INFORMATION = PC_ITPO_HEALTH_04_SEED_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Pe³nia ¿ycia (3 esencje lecznicze, 1 rdest polny)";
}

func int PC_ITPO_HEALTH_04_SEED_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[14]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_SEEDHP))) && ((BETTERALCHEMY_HEALER) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_HEALTH_04_SEED_INFO() {
    POTIONALCHEMY_INSTANCE = 34988;
    POTIONALCHEMY_INFO = 47727;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_ITPO_HEALTH_04_SEED_VOL2(C_INFO) {
    NR = 10149;
    NPC = 50091;
    CONDITION = PC_ITPO_HEALTH_04_SEED_VOL2_CONDITION;
    INFORMATION = PC_ITPO_HEALTH_04_SEED_VOL2_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Pe³nia ¿ycia (3 esencje lecznicze, 1 rdest polny)";
}

func int PC_ITPO_HEALTH_04_SEED_VOL2_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((PLAYER_TALENT_ALCHEMY[14]) == (TRUE))) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_SEEDHP))) && ((BETTERALCHEMY_HEALER) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ITPO_HEALTH_04_SEED_VOL2_INFO() {
    POTIONALCHEMY_INSTANCE = 34989;
    POTIONALCHEMY_INFO = 47730;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_POTIONALCHEMY_OTHER(C_INFO) {
    NPC = 50091;
    NR = 6;
    CONDITION = PC_POTIONALCHEMY_OTHER_CONDITION;
    INFORMATION = PC_POTIONALCHEMY_OTHER_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Other.";
}

func int PC_POTIONALCHEMY_OTHER_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((POTIONALCHEMYMODE) == (0))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_POTIONALCHEMY_OTHER_INFO() {
    POTIONALCHEMYMODE = POTIONALCHEMY_OTHER;
}

instance PC_POTIONALCHEMY_OTHER_STOP(C_INFO) {
    NPC = 50091;
    NR = 1;
    CONDITION = PC_POTIONALCHEMY_OTHER_STOP_CONDITION;
    INFORMATION = PC_POTIONALCHEMY_OTHER_STOP_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_BACK;
}

func int PC_POTIONALCHEMY_OTHER_STOP_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_OTHER))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_POTIONALCHEMY_OTHER_STOP_INFO() {
    POTIONALCHEMYMODE = 0;
}

instance PC_POTIONALCHEMY_OTHER_ORE(C_INFO) {
    NPC = 50091;
    NR = 150;
    CONDITION = PC_POTIONALCHEMY_OTHER_ORE_CONDITION;
    INFORMATION = PC_POTIONALCHEMY_OTHER_ORE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Crush magic ore nuggets.";
}

func int PC_POTIONALCHEMY_OTHER_ORE_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_OTHER))) && ((NPC_HASITEMS(SELF, 34202)) >= (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_POTIONALCHEMY_OTHER_ORE_INFO() {
    POTIONALCHEMYMODE = POTIONALCHEMY_ORE;
}

instance PC_POTIONALCHEMY_OTHER_ORE_STOP(C_INFO) {
    NPC = 50091;
    NR = 1;
    CONDITION = PC_POTIONALCHEMY_OTHER_ORE_STOP_CONDITION;
    INFORMATION = PC_POTIONALCHEMY_OTHER_ORE_STOP_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_BACK;
}

func int PC_POTIONALCHEMY_OTHER_ORE_STOP_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_ORE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

var string POWDEREDORE_PRINTHOWMANYCREATED;
var string POWDEREDORE_COUNTHOWMANYCREATED;
var int POWDEREDORE_HOWMUCHAMMO;
func void PC_POTIONALCHEMY_OTHER_ORE_STOP_INFO() {
    POWDEREDORE_HOWMUCHAMMO = 0;
    POTIONALCHEMYMODE = POTIONALCHEMY_OTHER;
}

func void PC_POTIONALCHEMY_OTHER_HOWMANY() {
    if ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_ALCHEMY)) == (0)) {
        POWDEREDORE_HOWMUCHAMMO = 15;
    };
    if ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_ALCHEMY)) == (1)) {
        POWDEREDORE_HOWMUCHAMMO = 18;
    };
    if ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_ALCHEMY)) == (2)) {
        POWDEREDORE_HOWMUCHAMMO = 22;
    };
    if ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_ALCHEMY)) == (3)) {
        POWDEREDORE_HOWMUCHAMMO = 25;
    };
}

instance PC_POTIONALCHEMY_OTHER_ORE_ONE(C_INFO) {
    NPC = 50091;
    NR = 150;
    CONDITION = PC_POTIONALCHEMY_OTHER_ORE_ONE_CONDITION;
    INFORMATION = PC_POTIONALCHEMY_OTHER_ORE_ONE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Crush 1 nugget.";
}

func int PC_POTIONALCHEMY_OTHER_ORE_ONE_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_ORE))) && ((NPC_HASITEMS(SELF, 34202)) >= (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_POTIONALCHEMY_OTHER_ORE_ONE_INFO() {
    NPC_REMOVEINVITEMS(SELF, 34202, 1);
    PC_POTIONALCHEMY_OTHER_HOWMANY();
    CREATEINVITEMS(SELF, 35989, POWDEREDORE_HOWMUCHAMMO);
    POWDEREDORE_PRINTHOWMANYCREATED = INTTOSTRING((1) * (POWDEREDORE_HOWMUCHAMMO));
    POWDEREDORE_COUNTHOWMANYCREATED = CONCATSTRINGS(POWDEREDORE_PRINTHOWMANYCREATED, BOWMAKING_PRINT_HOWMANYISDONE);
    PRINT(PRINT_ORESUCCESS);
    PRINT(POWDEREDORE_COUNTHOWMANYCREATED);
}

instance PC_POTIONALCHEMY_OTHER_ORE_FIVE(C_INFO) {
    NPC = 50091;
    NR = 151;
    CONDITION = PC_POTIONALCHEMY_OTHER_ORE_FIVE_CONDITION;
    INFORMATION = PC_POTIONALCHEMY_OTHER_ORE_FIVE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Crush 5 nuggets.";
}

func int PC_POTIONALCHEMY_OTHER_ORE_FIVE_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_ORE))) && ((NPC_HASITEMS(SELF, 34202)) >= (5))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_POTIONALCHEMY_OTHER_ORE_FIVE_INFO() {
    NPC_REMOVEINVITEMS(SELF, 34202, 5);
    PC_POTIONALCHEMY_OTHER_HOWMANY();
    CREATEINVITEMS(SELF, 35989, (5) * (POWDEREDORE_HOWMUCHAMMO));
    POWDEREDORE_PRINTHOWMANYCREATED = INTTOSTRING((5) * (POWDEREDORE_HOWMUCHAMMO));
    POWDEREDORE_COUNTHOWMANYCREATED = CONCATSTRINGS(POWDEREDORE_PRINTHOWMANYCREATED, BOWMAKING_PRINT_HOWMANYISDONE);
    PRINT(PRINT_ORESUCCESS);
    PRINT(POWDEREDORE_COUNTHOWMANYCREATED);
}

instance PC_POTIONALCHEMY_OTHER_ORE_TEN(C_INFO) {
    NPC = 50091;
    NR = 152;
    CONDITION = PC_POTIONALCHEMY_OTHER_ORE_TEN_CONDITION;
    INFORMATION = PC_POTIONALCHEMY_OTHER_ORE_TEN_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Crush 10 nuggets.";
}

func int PC_POTIONALCHEMY_OTHER_ORE_TEN_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_ORE))) && ((NPC_HASITEMS(SELF, 34202)) >= (10))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_POTIONALCHEMY_OTHER_ORE_TEN_INFO() {
    NPC_REMOVEINVITEMS(SELF, 34202, 10);
    PC_POTIONALCHEMY_OTHER_HOWMANY();
    CREATEINVITEMS(SELF, 35989, (10) * (POWDEREDORE_HOWMUCHAMMO));
    POWDEREDORE_PRINTHOWMANYCREATED = INTTOSTRING((10) * (POWDEREDORE_HOWMUCHAMMO));
    POWDEREDORE_COUNTHOWMANYCREATED = CONCATSTRINGS(POWDEREDORE_PRINTHOWMANYCREATED, BOWMAKING_PRINT_HOWMANYISDONE);
    PRINT(PRINT_ORESUCCESS);
    PRINT(POWDEREDORE_COUNTHOWMANYCREATED);
}

instance PC_POTIONALCHEMY_OTHER_ORE_ALL(C_INFO) {
    NPC = 50091;
    NR = 153;
    CONDITION = PC_POTIONALCHEMY_OTHER_ORE_ALL_CONDITION;
    INFORMATION = PC_POTIONALCHEMY_OTHER_ORE_ALL_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Crush all nuggets.";
}

func int PC_POTIONALCHEMY_OTHER_ORE_ALL_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_ORE))) && ((NPC_HASITEMS(SELF, 34202)) >= (10))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_POTIONALCHEMY_OTHER_ORE_ALL_INFO() {
    var int NUMBER_NUGGET;
    NUMBER_NUGGET = NPC_HASITEMS(HERO, 34202);
    NPC_REMOVEINVITEMS(SELF, 34202, NUMBER_NUGGET);
    PC_POTIONALCHEMY_OTHER_HOWMANY();
    CREATEINVITEMS(SELF, 35989, (NUMBER_NUGGET) * (POWDEREDORE_HOWMUCHAMMO));
    POWDEREDORE_PRINTHOWMANYCREATED = INTTOSTRING((NUMBER_NUGGET) * (POWDEREDORE_HOWMUCHAMMO));
    POWDEREDORE_COUNTHOWMANYCREATED = CONCATSTRINGS(POWDEREDORE_PRINTHOWMANYCREATED, BOWMAKING_PRINT_HOWMANYISDONE);
    PRINT(PRINT_ORESUCCESS);
    PRINT(POWDEREDORE_COUNTHOWMANYCREATED);
}

instance PC_POISON_START(C_INFO) {
    NPC = 50091;
    NR = 2;
    CONDITION = PC_POISON_START_CONDITION;
    INFORMATION = PC_POISON_START_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Prepare poison.";
}

func int PC_POISON_START_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_OTHER))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_POISON_START_INFO() {
    POTIONALCHEMYMODE = POTIONALCHEMY_POISON;
}

instance PC_POISON_STOP(C_INFO) {
    NPC = 50091;
    NR = 1;
    CONDITION = PC_POISON_STOP_CONDITION;
    INFORMATION = PC_POISON_STOP_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_BACK;
}

func int PC_POISON_STOP_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_POISON))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_POISON_STOP_INFO() {
    POTIONALCHEMYMODE = POTIONALCHEMY_OTHER;
}

instance PC_Q501POTION_START(C_INFO) {
    NPC = 50091;
    NR = 100;
    CONDITION = PC_Q501POTION_START_CONDITION;
    INFORMATION = PC_Q501POTION_START_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Brew Dagobert's potion.";
}

func int PC_Q501POTION_START_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_OTHER))) && ((ALCHEMY_Q501_DALBERTPOTION) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_Q501POTION_START_INFO() {
    Q501_NEEDHELPWITHPOTION = TRUE;
    AI_OUTPUT(HERO, HERO, "DIA_MARVIN_Q501Potion_15_01");
    B_LOGENTRY(TOPIC_Q501, LOG_Q501_CANTDOIT);
    PC_POTIONALCHEMY_END_INFO();
}

instance PC_Q307POTION_START(C_INFO) {
    NPC = 50091;
    NR = 10136;
    CONDITION = PC_Q307POTION_START_CONDITION;
    INFORMATION = PC_Q307POTION_START_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Brew poison and antidote for Ben.";
}

func int PC_Q307POTION_START_CONDITION() {
    if (((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_POISON))) && ((ALCHEMY_Q307_BENPOTION) == (TRUE))) && ((NPC_HASITEMS(HERO, 36950)) == (0))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_Q307POTION_START_INFO() {
    POTIONALCHEMY_INSTANCE = 34968;
    POTIONALCHEMY_INFO = 47771;
    PC_CRAFTRECIPEITEMS(34968, 1);
}

instance PC_POISON_SQ228(C_INFO) {
    NPC = 50091;
    NR = 10145;
    CONDITION = PC_POISON_SQ228_CONDITION;
    INFORMATION = PC_POISON_SQ228_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Rat poison.";
}

func int PC_POISON_SQ228_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_POISON))) && ((ALCHEMY_SQ228_POISONRAT) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_POISON_SQ228_INFO() {
    POTIONALCHEMY_INSTANCE = 34969;
    POTIONALCHEMY_INFO = 47774;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

instance PC_TABAK_START(C_INFO) {
    NPC = 50091;
    NR = 10154;
    CONDITION = PC_TABAK_START_CONDITION;
    INFORMATION = PC_TABAK_START_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Blend tobacco and roll reefers.";
}

func int PC_TABAK_START_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_POTIONALCHEMY)) && ((POTIONALCHEMYMODE) == (POTIONALCHEMY_OTHER))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_TABAK_START_INFO() {
    POTIONALCHEMY_INSTANCE = 35053;
    POTIONALCHEMY_INFO = 47777;
    PC_POTIONALCHEMY_CHECKAMOUNTCHOICES();
}

func void POTIONALCHEMY_REFRESHDIALOGS() {
    PC_ITPO_MANA_01.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(34991);
    PC_ITPO_MANA_01_VOL2.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(34992);
    PC_ITPO_MANA_02.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(34995);
    PC_ITPO_MANA_02_VOL2.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(34996);
    PC_ITPO_MANA_03.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(34999);
    PC_ITPO_MANA_03_VOL2.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(35000);
    PC_ITPO_MANA_04.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(35003);
    PC_ITPO_MANA_04_VOL2.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(35004);
    PC_ITPO_MANA_BLUEPLANT.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(34970);
    PC_ITPO_MANA_BLUEPLANT_VOL2.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(34971);
    PC_ITPO_HEALTH_01.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(34975);
    PC_ITPO_HEALTH_01_VOL2.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(34976);
    PC_ITPO_HEALTH_02.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(34979);
    PC_ITPO_HEALTH_02_VOL2.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(34980);
    PC_ITPO_HEALTH_03.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(34983);
    PC_ITPO_HEALTH_03_VOL2.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(34984);
    PC_ITPO_HEALTH_04.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(34987);
    PC_ITPO_HEALTH_04_VOL2.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(34990);
    PC_ITPO_MANA_01_SEED.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(34993);
    PC_ITPO_MANA_02_SEED.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(34997);
    PC_ITPO_MANA_03_SEED.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(35001);
    PC_ITPO_MANA_04_SEED.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(35005);
    PC_ITPO_MANA_01_SEED_VOL2.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(34994);
    PC_ITPO_MANA_02_SEED_VOL2.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(34998);
    PC_ITPO_MANA_03_SEED_VOL2.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(35002);
    PC_ITPO_MANA_04_SEED_VOL2.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(35006);
    PC_ITPO_MANA_BLUEPLANT_SEED.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(34972);
    PC_ITPO_MANA_BLUEPLANT_SEED_VOL2.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(34973);
    PC_ITPO_HEALTH_01_SEED.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(34977);
    PC_ITPO_HEALTH_02_SEED.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(34981);
    PC_ITPO_HEALTH_03_SEED.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(34985);
    PC_ITPO_HEALTH_04_SEED.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(34988);
    PC_ITPO_HEALTH_01_SEED_VOL2.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(34978);
    PC_ITPO_HEALTH_02_SEED_VOL2.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(34982);
    PC_ITPO_HEALTH_03_SEED_VOL2.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(34986);
    PC_ITPO_HEALTH_04_SEED_VOL2.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(34989);
    PC_ITPO_PERM_HEALTH.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(35007);
    PC_ITPO_PERM_MANA.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(35009);
    PC_ITPO_PERM_STRG.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(35011);
    PC_ITPO_PERM_DEX.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(35013);
    PC_ITPO_STONESKIN.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(35039);
    PC_ITPO_TIMED_HEALTH.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(35019);
    PC_ITPO_TIMED_MANA.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(35021);
    PC_ITPO_TIMED_STR.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(35023);
    PC_ITPO_TIMED_DEX.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(35025);
    PC_ITPO_TIMED_DEF.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(35027);
    PC_ITPO_TIMED_HEALTH2.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(35029);
    PC_ITPO_TIMED_MANA2.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(35031);
    PC_ITPO_TIMED_STR2.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(35033);
    PC_ITPO_TIMED_DEX2.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(35035);
    PC_ITPO_TIMED_DEF2.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(35037);
    PC_ITPO_SPEED.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(35015);
    PC_ITPO_SPEED2.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(35017);
    PC_POTIONALCHEMY_POTION_FALL.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(35041);
    PC_POTIONALCHEMY_POTION_DIVE.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(35043);
    PC_ITPO_HPREGEN.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(35045);
    PC_ITPO_MANAREGEN.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(35047);
    PC_ITPO_HPREGEN2.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(35049);
    PC_ITPO_MANAREGEN2.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(35051);
}

func void POTIONALCHEMY_S1() {
    var C_NPC HER;
    CREATEINVITEMS(SELF, 34177, 1);
    POTIONALCHEMYMODE = 0;
    POTIONALCHEMY_REFRESHDIALOGS();
    HER = HLP_GETNPC(50091);
    if ((HLP_GETINSTANCEID(SELF)) == (HLP_GETINSTANCEID(HER))) {
        SELF.AIVAR[4] = TRUE;
        PLAYER_MOBSI_PRODUCTION = MOBSI_POTIONALCHEMY;
        AI_PROCESSINFOS(HER);
    };
}

