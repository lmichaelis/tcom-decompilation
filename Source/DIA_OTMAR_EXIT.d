instance DIA_OTMAR_EXIT(C_INFO) {
    NPC = 52092;
    NR = 999;
    CONDITION = DIA_OTMAR_EXIT_CONDITION;
    INFORMATION = DIA_OTMAR_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_OTMAR_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_OTMAR_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_OTMAR_FIRSTHELLO(C_INFO) {
    NPC = 52092;
    NR = 1;
    CONDITION = DIA_OTMAR_FIRSTHELLO_CONDITION;
    INFORMATION = DIA_OTMAR_FIRSTHELLO_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_OTMAR_FIRSTHELLO_CONDITION() {
    if (NPC_ISINSTATE(SELF, 61599)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_OTMAR_FIRSTHELLO_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_FirstHello_03_01");
}

instance DIA_OTMAR_MYBROTHER(C_INFO) {
    NPC = 52092;
    NR = 2;
    CONDITION = DIA_OTMAR_MYBROTHER_CONDITION;
    INFORMATION = DIA_OTMAR_MYBROTHER_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Actually, I'm looking for my brother.";
}

func int DIA_OTMAR_MYBROTHER_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 71753)) && ((LOG_GETSTATUS(MIS_Q405)) != (LOG_SUCCESS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_OTMAR_MYBROTHER_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Otmar_MyBrother_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_MyBrother_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_MyBrother_03_03");
}

instance DIA_OTMAR_YOURJOB(C_INFO) {
    NPC = 52092;
    NR = 3;
    CONDITION = DIA_OTMAR_YOURJOB_CONDITION;
    INFORMATION = DIA_OTMAR_YOURJOB_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "What do you do?";
}

func int DIA_OTMAR_YOURJOB_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 71753)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_OTMAR_YOURJOB_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Otmar_YourJob_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_YourJob_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_YourJob_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_YourJob_03_04");
}

instance DIA_OTMAR_SQ223_START(C_INFO) {
    NPC = 52092;
    NR = 4;
    CONDITION = DIA_OTMAR_SQ223_START_CONDITION;
    INFORMATION = DIA_OTMAR_SQ223_START_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Do you have a job for me?";
}

func int DIA_OTMAR_SQ223_START_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 71753)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_OTMAR_SQ223_START_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Otmar_SQ223_Start_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_SQ223_Start_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_SQ223_Start_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_SQ223_Start_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_SQ223_Start_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_SQ223_Start_03_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_SQ223_Start_03_07");
    LOG_CREATETOPIC(TOPIC_SQ223, LOG_MISSION);
    LOG_SETSTATUS(_@(MIS_SQ223), TOPIC_SQ223, LOG_RUNNING);
    B_LOGENTRY(TOPIC_SQ223, LOG_SQ223_START);
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_SQ223_Start_03_08");
    AI_OUTPUT(OTHER, SELF, "DIA_Otmar_SQ223_Start_15_09");
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_OTMAR_COPYPASTE(C_INFO) {
    NPC = 52092;
    NR = 5;
    CONDITION = DIA_OTMAR_COPYPASTE_CONDITION;
    INFORMATION = DIA_OTMAR_COPYPASTE_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Do all your people repeat the exact same points?";
}

func int DIA_OTMAR_COPYPASTE_CONDITION() {
    if (((NPC_KNOWSINFO(OTHER, 71753)) && (NPC_KNOWSINFO(OTHER, 70774))) && (NPC_KNOWSINFO(OTHER, 70746))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_OTMAR_COPYPASTE_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Otmar_CopyPaste_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_CopyPaste_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_CopyPaste_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_CopyPaste_03_04");
    B_GIVEPLAYERXP(XP_SQ223_GUIDES);
}

instance DIA_OTMAR_SQ223_FOUNDDRUNKASS(C_INFO) {
    NPC = 52092;
    NR = 1;
    CONDITION = DIA_OTMAR_SQ223_FOUNDDRUNKASS_CONDITION;
    INFORMATION = DIA_OTMAR_SQ223_FOUNDDRUNKASS_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I know which of your employees drinks on the job.";
}

func int DIA_OTMAR_SQ223_FOUNDDRUNKASS_CONDITION() {
    if ((SQ223_FOUNDDRUNKENGUIDE) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_OTMAR_SQ223_FOUNDDRUNKASS_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Otmar_SQ223_FoundDrunkass_15_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Otmar_SQ223_FoundDrunkass_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_SQ223_FoundDrunkass_03_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Otmar_SQ223_FoundDrunkass_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_SQ223_FoundDrunkass_03_05");
    B_USEFAKESCROLL_MARVIN();
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_SQ223_FoundDrunkass_03_06");
    LOG_SETSTATUS(_@(MIS_SQ223), TOPIC_SQ223, LOG_SUCCESS);
    B_LOGENTRY(TOPIC_SQ223, LOG_SQ223_END);
    B_GIVEPLAYERXP(XP_SQ223_FINISH);
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_SQ223_FoundDrunkass_03_07");
    CREATEINVITEMS(SELF, 38030, 1);
    if ((CITYGUIDE_ONRUN) == (0)) {
        CREATEINVITEMS(SELF, 34203, CITYGUID_SLD);
    };
    B_GIVEINVITEMS(SELF, OTHER, 38030, 1);
    CREATEINVITEMS(SELF, 34203, (2) * (CITYGUID_SLD));
    B_GIVEINVITEMS(SELF, OTHER, 34203, (2) * (CITYGUID_SLD));
    SQ223_RESETGUIDES();
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_SQ223_FoundDrunkass_03_08");
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_OTMAR_QA304_START(C_INFO) {
    NPC = 52092;
    NR = 1;
    CONDITION = DIA_OTMAR_QA304_START_CONDITION;
    INFORMATION = DIA_OTMAR_QA304_START_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_OTMAR_QA304_START_CONDITION() {
    if ((((KAPITEL) >= (2)) && ((HERO.GUILD) == (GIL_SLD))) && (NPC_KNOWSINFO(OTHER, 70118))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_OTMAR_QA304_START_INFO() {
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_Start_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_Start_03_02");
    INFO_CLEARCHOICES(71771);
    INFO_ADDCHOICE(71771, "I definitely prefer to work with my head.", 71775);
    INFO_ADDCHOICE(71771, "Physical work is going pretty well for me.", 71776);
}

func void DIA_OTMAR_QA304_START_NEXT() {
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_Start_Next_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_Start_Next_03_02");
    INFO_CLEARCHOICES(71771);
    INFO_ADDCHOICE(71771, "Lorenzo better find out I helped you.", 71777);
}

func void DIA_OTMAR_QA304_START_HEAD() {
    AI_OUTPUT(OTHER, SELF, "DIA_Otmar_QA304_Start_Head_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_Start_Head_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_Start_Head_03_03");
    DIA_OTMAR_QA304_START_NEXT();
}

func void DIA_OTMAR_QA304_START_MUSCULE() {
    AI_OUTPUT(OTHER, SELF, "DIA_Otmar_QA304_Start_Muscule_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_Start_Muscule_03_02");
    DIA_OTMAR_QA304_START_NEXT();
}

func void DIA_OTMAR_QA304_START_MUSCULE_YES() {
    AI_OUTPUT(OTHER, SELF, "DIA_Otmar_QA304_Start_Yes_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_Start_Yes_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_Start_Yes_03_03");
    LOG_CREATETOPIC(TOPIC_QA304, LOG_MISSION);
    LOG_SETSTATUS(_@(MIS_QA304), TOPIC_QA304, LOG_RUNNING);
    B_LOGENTRY(TOPIC_QA304, LOG_QA304_START);
    QA304_PREPARENPC();
}

instance DIA_OTMAR_QA304_QUESTIONS(C_INFO) {
    NPC = 52092;
    NR = 1;
    CONDITION = DIA_OTMAR_QA304_QUESTIONS_CONDITION;
    INFORMATION = DIA_OTMAR_QA304_QUESTIONS_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "(Ask about the assignment).";
}

var int OTMAR_QA304_QUESTIONS_DARK;
var int OTMAR_QA304_QUESTIONS_SUSPICIOUS;
var int OTMAR_QA304_QUESTIONS_ITEMS;
var int OTMAR_QA304_QUESTIONS_WHO;
func int DIA_OTMAR_QA304_QUESTIONS_CONDITION() {
    if ((LOG_GETSTATUS(MIS_QA304)) == (LOG_RUNNING)) {
        if (((((OTMAR_QA304_QUESTIONS_DARK) == (FALSE)) || ((OTMAR_QA304_QUESTIONS_SUSPICIOUS) == (FALSE))) || ((OTMAR_QA304_QUESTIONS_ITEMS) == (FALSE))) || ((OTMAR_QA304_QUESTIONS_WHO) == (FALSE))) {
            if ((NPC_KNOWSINFO(OTHER, 72884)) == (FALSE)) {
                return TRUE;
            };
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_OTMAR_QA304_QUESTIONS_INFO() {
    INFO_CLEARCHOICES(71778);
    INFO_ADDCHOICE(71778, DIALOG_BACK, 71785);
    if ((OTMAR_QA304_QUESTIONS_WHO) == (FALSE)) {
        INFO_ADDCHOICE(71778, "Who will be there besides me?", 71789);
    };
    if ((OTMAR_QA304_QUESTIONS_ITEMS) == (FALSE)) {
        INFO_ADDCHOICE(71778, "What is that stuff?", 71788);
    };
    if ((OTMAR_QA304_QUESTIONS_DARK) == (FALSE)) {
        INFO_ADDCHOICE(71778, "Why after dark?", 71786);
    };
    if ((OTMAR_QA304_QUESTIONS_SUSPICIOUS) == (FALSE)) {
        INFO_ADDCHOICE(71778, "Carrying goods after dark sounds pretty suspicious.", 71787);
    };
}

func void DIA_OTMAR_QA304_QUESTIONS_BACK() {
    INFO_CLEARCHOICES(71778);
}

func void DIA_OTMAR_QA304_QUESTIONS_DARK() {
    OTMAR_QA304_QUESTIONS_DARK = TRUE;
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Otmar_QA304_Questions_Dark_15_01");
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_Questions_Dark_03_02");
    AI_RESETFACEANI(OTHER);
    DIA_OTMAR_QA304_QUESTIONS_INFO();
}

func void DIA_OTMAR_QA304_QUESTIONS_SUSPICIOUS() {
    OTMAR_QA304_QUESTIONS_SUSPICIOUS = TRUE;
    AI_STARTFACEANI(OTHER, S_SERIOUS, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Otmar_QA304_Questions_Suspicious_15_01");
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_Questions_Suspicious_03_02");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_Questions_Suspicious_03_03");
    AI_RESETFACEANI(OTHER);
    DIA_OTMAR_QA304_QUESTIONS_INFO();
}

func void DIA_OTMAR_QA304_QUESTIONS_ITEMS() {
    OTMAR_QA304_QUESTIONS_ITEMS = TRUE;
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Otmar_QA304_Questions_Items_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_Questions_Items_03_02");
    AI_STARTFACEANI(OTHER, S_SERIOUS, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Otmar_QA304_Questions_Items_15_03");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_Questions_Items_03_04");
    AI_RESETFACEANI(OTHER);
    AI_RESETFACEANI(SELF);
    DIA_OTMAR_QA304_QUESTIONS_INFO();
}

func void DIA_OTMAR_QA304_QUESTIONS_WHO() {
    OTMAR_QA304_QUESTIONS_WHO = TRUE;
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Otmar_QA304_Questions_Who_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_Questions_Who_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_Questions_Who_03_03");
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Otmar_QA304_Questions_Who_15_04");
    AI_STARTFACEANI(SELF, S_NOPE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_Questions_Who_03_05");
    AI_RESETFACEANI(OTHER);
    AI_RESETFACEANI(SELF);
    DIA_OTMAR_QA304_QUESTIONS_INFO();
}

instance DIA_OTMAR_QA304_AFTERFIRSTROUND(C_INFO) {
    NPC = 52092;
    NR = 1;
    CONDITION = DIA_OTMAR_QA304_AFTERFIRSTROUND_CONDITION;
    INFORMATION = DIA_OTMAR_QA304_AFTERFIRSTROUND_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_OTMAR_QA304_AFTERFIRSTROUND_CONDITION() {
    if (((LOG_GETSTATUS(MIS_QA304)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 72892))) {
        if ((((NPC_GETDISTTOWP(VLK_10095_OTMAR, VLK_10095_OTMAR.WP)) <= (500)) && ((NPC_GETDISTTOWP(VLK_13504_FULKO, VLK_13504_FULKO.WP)) <= (500))) && ((NPC_GETDISTTOWP(VLK_13505_WORKER, VLK_13505_WORKER.WP)) <= (500))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_OTMAR_QA304_AFTERFIRSTROUND_INFO() {
    QA304_TELEPORTWORKERS2 = 0;
    TRIA_INVITE(VLK_13505_WORKER);
    TRIA_INVITE(VLK_13504_FULKO);
    TRIA_STARTEXT(FALSE);
    AI_TURNTONPC(VLK_13504_FULKO, VLK_10095_OTMAR);
    AI_TURNTONPC(VLK_13505_WORKER, VLK_10095_OTMAR);
    AI_TURNTONPC(HERO, VLK_10095_OTMAR);
    AI_LOOKATNPC(HERO, VLK_10095_OTMAR);
    TRIA_WAIT();
    TRIA_NEXT(VLK_10095_OTMAR);
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_AfterFirstRound_03_01");
    TRIA_WAIT();
    TRIA_NEXT(VLK_13504_FULKO);
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_AfterFirstRound_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_AfterFirstRound_03_03");
    TRIA_WAIT();
    TRIA_NEXT(VLK_10095_OTMAR);
    AI_TURNTONPC(VLK_10095_OTMAR, VLK_13504_FULKO);
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_AfterFirstRound_03_04");
    TRIA_WAIT();
    AI_TURNTONPC(VLK_10095_OTMAR, HERO);
    AI_TURNTONPC(VLK_13504_FULKO, HERO);
    AI_TURNTONPC(VLK_13505_WORKER, HERO);
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_AfterFirstRound_03_05");
    if ((QA304_SIGUNDTAKEDOWN) == (2)) {
        AI_OUTPUT(OTHER, SELF, "DIA_Otmar_QA304_AfterFirstRound_15_06");
        AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_AfterFirstRound_03_07");
    };
    if ((QA304_SIGUNDTAKEDOWN) == (1)) {
        AI_OUTPUT(OTHER, SELF, "DIA_Otmar_QA304_AfterFirstRound_15_08");
        AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_AfterFirstRound_03_09");
    };
    AI_OUTPUT(OTHER, SELF, "DIA_Otmar_QA304_AfterFirstRound_15_10");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_AfterFirstRound_03_11");
    TRIA_WAIT();
    TRIA_NEXT(VLK_10095_OTMAR);
    AI_TURNTONPC(VLK_10095_OTMAR, VLK_13504_FULKO);
    AI_TURNTONPC(VLK_13504_FULKO, VLK_10095_OTMAR);
    AI_TURNTONPC(VLK_13505_WORKER, VLK_10095_OTMAR);
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_AfterFirstRound_03_12");
    TRIA_WAIT();
    TRIA_NEXT(VLK_13504_FULKO);
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_AfterFirstRound_03_13");
    TRIA_WAIT();
    TRIA_NEXT(VLK_10095_OTMAR);
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_AfterFirstRound_03_14");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_AfterFirstRound_03_15");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_AfterFirstRound_03_16");
    TRIA_WAIT();
    TRIA_NEXT(VLK_13504_FULKO);
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_AfterFirstRound_03_17");
    TRIA_WAIT();
    TRIA_NEXT(VLK_10095_OTMAR);
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_AfterFirstRound_03_18");
    AI_TURNTONPC(VLK_10095_OTMAR, HERO);
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_AfterFirstRound_03_19");
    TRIA_FINISH();
    AI_STOPLOOKAT(SELF);
    AI_STOPLOOKAT(OTHER);
    AI_LOGENTRY(TOPIC_QA304, LOG_QA304_OTMAR_SECONDROUND_START);
    AI_STOPPROCESSINFOS(SELF);
    AI_FUNCTION(SELF, 63035);
    AI_FUNCTION(SELF, 63030);
}

instance DIA_OTMAR_QA304_AFTERSECONDROUND(C_INFO) {
    NPC = 52092;
    NR = 1;
    CONDITION = DIA_OTMAR_QA304_AFTERSECONDROUND_CONDITION;
    INFORMATION = DIA_OTMAR_QA304_AFTERSECONDROUND_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_OTMAR_QA304_AFTERSECONDROUND_CONDITION() {
    if (((LOG_GETSTATUS(MIS_QA304)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 72906))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_OTMAR_QA304_AFTERSECONDROUND_INFO() {
    QA304_TELEPORTWORKERS2 = 0;
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_AfterSecondRound_03_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Otmar_QA304_AfterSecondRound_15_02");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_AfterSecondRound_03_03");
    AI_STOPPROCESSINFOS(SELF);
    AI_FUNCTION(SELF, 63037);
    AI_FUNCTION(SELF, 63039);
    AI_LOGENTRY(TOPIC_QA304, LOG_QA304_OTMAR_SECONDROUND_FINISH);
}

instance DIA_OTMAR_QA304_THIRDROUND(C_INFO) {
    NPC = 52092;
    NR = 1;
    CONDITION = DIA_OTMAR_QA304_THIRDROUND_CONDITION;
    INFORMATION = DIA_OTMAR_QA304_THIRDROUND_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_OTMAR_QA304_THIRDROUND_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_QA304)) == (LOG_RUNNING)) && ((QA304_WOODCHESTSTATUS) >= (2))) && ((NPC_GETDISTTOWP(SELF, "SLUMS_QA304_SPOT_02")) <= (500))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

var int OTMAR_QA304_THIRDROUND_NOONE;
var int OTMAR_QA304_THIRDROUND_TRACE;
var int OTMAR_QA304_THIRDROUND_CHESTS;
func void DIA_OTMAR_QA304_THIRDROUND_NEXT() {
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_ThirdRound_Next_03_01");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_ThirdRound_Next_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_ThirdRound_Next_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_ThirdRound_Next_03_04");
    AI_LOGENTRY(TOPIC_QA304, LOG_QA304_OTMAR_THIRDROUND_FINISH);
    INFO_CLEARCHOICES(71796);
    AI_STOPPROCESSINFOS(SELF);
    AI_FUNCTION(SELF, 63038);
}

func void DIA_OTMAR_QA304_THIRDROUND_CHOICES() {
    INFO_CLEARCHOICES(71796);
    if ((((OTMAR_QA304_THIRDROUND_CHESTS) == (FALSE)) || ((OTMAR_QA304_THIRDROUND_TRACE) == (FALSE))) || ((OTMAR_QA304_THIRDROUND_NOONE) == (FALSE))) {
        if ((OTMAR_QA304_THIRDROUND_CHESTS) == (FALSE)) {
            INFO_ADDCHOICE(71796, "We were hired to move the crates, so we did.", 71806);
        };
        if ((OTMAR_QA304_THIRDROUND_TRACE) == (FALSE)) {
            INFO_ADDCHOICE(71796, "Are there no tracks anywhere?", 71805);
        };
        if ((OTMAR_QA304_THIRDROUND_NOONE) == (FALSE)) {
            INFO_ADDCHOICE(71796, "You haven't seen anyone?", 71804);
        };
    };
    DIA_OTMAR_QA304_THIRDROUND_NEXT();
}

func void DIA_OTMAR_QA304_THIRDROUND_INFO() {
    QA304_STOPTIME = 0;
    NPC_REMOVEINVITEMS(VLK_13504_FULKO, 36084, NPC_HASITEMS(VLK_13504_FULKO, 36084));
    SETHOLDTIME(FALSE);
    NPC_REMOVEINVITEMS(VLK_13505_WORKER, 36084, NPC_HASITEMS(VLK_13505_WORKER, 36084));
    QA304_FULKOINSEWERS = 1;
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_ThirdRound_03_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Otmar_QA304_ThirdRound_15_02");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_ThirdRound_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_ThirdRound_03_04");
    AI_STARTFACEANI(OTHER, S_ANGRY, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Otmar_QA304_ThirdRound_15_05");
    AI_RESETFACEANI(OTHER);
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_ThirdRound_03_06");
    DIA_OTMAR_QA304_THIRDROUND_CHOICES();
}

func void DIA_OTMAR_QA304_THIRDROUND_NOONE() {
    OTMAR_QA304_THIRDROUND_NOONE = TRUE;
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Otmar_QA304_ThirdRound_NoOne_15_01");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_ThirdRound_NoOne_03_02");
    DIA_OTMAR_QA304_THIRDROUND_CHOICES();
}

func void DIA_OTMAR_QA304_THIRDROUND_TRACE() {
    OTMAR_QA304_THIRDROUND_TRACE = TRUE;
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Otmar_QA304_ThirdRound_Trace_15_01");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_ThirdRound_Trace_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_ThirdRound_Trace_03_03");
    DIA_OTMAR_QA304_THIRDROUND_CHOICES();
}

func void DIA_OTMAR_QA304_THIRDROUND_CHESTS() {
    OTMAR_QA304_THIRDROUND_CHESTS = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Otmar_QA304_ThirdRound_Chests_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_ThirdRound_Chests_03_02");
    DIA_OTMAR_QA304_THIRDROUND_CHOICES();
}

instance DIA_OTMAR_QA304_FAILED(C_INFO) {
    NPC = 52092;
    NR = 1;
    CONDITION = DIA_OTMAR_QA304_FAILED_CONDITION;
    INFORMATION = DIA_OTMAR_QA304_FAILED_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_OTMAR_QA304_FAILED_CONDITION() {
    if (((((KAPITEL) >= (4)) && ((LOG_GETSTATUS(MIS_QA304)) == (LOG_RUNNING))) && ((LOG_GETSTATUS(MIS_Q401)) == (LOG_SUCCESS))) && ((LOG_GETSTATUS(MIS_QA401)) != (LOG_SUCCESS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_OTMAR_QA304_FAILED_INFO() {
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_Failed_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA304_Failed_03_02");
    AI_RESETFACEANI(SELF);
    AI_LOGENTRY(TOPIC_QA304, LOG_QA304_FAILED);
    AI_FUNCTION(SELF, 63076);
    LOG_SETSTATUS(_@(MIS_QA304), TOPIC_QA304, LOG_FAILED);
}

instance DIA_OTMAR_QA401_THANKYOU(C_INFO) {
    NPC = 52092;
    NR = 1;
    CONDITION = DIA_OTMAR_QA401_THANKYOU_CONDITION;
    INFORMATION = DIA_OTMAR_QA401_THANKYOU_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_OTMAR_QA401_THANKYOU_CONDITION() {
    if (((LOG_GETSTATUS(MIS_QA401)) == (LOG_SUCCESS)) && ((QA401_OTMARRESULT) == (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_OTMAR_QA401_THANKYOU_INFO() {
    var int QA401_OTMARTHANKYOU;
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Otmar_QA401_ThankYou_03_01");
    AI_STOPPROCESSINFOS(SELF);
    if ((QA401_OTMARTHANKYOU) == (FALSE)) {
        QA401_OTMARTHANKYOU = TRUE;
        B_GIVEPLAYERXP(XP_QA401_OTMARTHANKYOU);
    };
}

instance DIA_OTMAR_AMBIENT(C_INFO) {
    NPC = 52092;
    NR = 998;
    CONDITION = DIA_OTMAR_AMBIENT_CONDITION;
    INFORMATION = DIA_OTMAR_AMBIENT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "What's up?";
}

func int DIA_OTMAR_AMBIENT_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 71753)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_OTMAR_AMBIENT_INFO() {
    B_SAY(OTHER, SELF, "$MARVIN_HowAreYou2");
    if ((HERO.GUILD) != (GIL_SLD)) {
        if (!(NPC_KNOWSINFO(OTHER, 71768))) {
            AI_OUTPUT(SELF, OTHER, "DIA_Otmar_Ambient_03_01");
        } else if (NPC_KNOWSINFO(OTHER, 71768)) {
            AI_OUTPUT(SELF, OTHER, "DIA_Otmar_Ambient_03_02");
        };
    };
    if ((HERO.GUILD) == (GIL_SLD)) {
        if ((LOG_GETSTATUS(MIS_QA304)) == (LOG_RUNNING)) {
            AI_OUTPUT(SELF, OTHER, "DIA_Otmar_Ambient_03_03");
            AI_STOPPROCESSINFOS(SELF);
        } else if ((LOG_GETSTATUS(MIS_QA304)) == (LOG_SUCCESS)) {
            AI_OUTPUT(SELF, OTHER, "DIA_Otmar_Ambient_03_04");
        } else {
            AI_OUTPUT(SELF, OTHER, "DIA_Otmar_Ambient_03_05");
        };
    };
}

instance DIA_OTMAR_PICKPOCKET(C_INFO) {
    NPC = 52092;
    NR = 900;
    CONDITION = DIA_OTMAR_PICKPOCKET_CONDITION;
    INFORMATION = DIA_OTMAR_PICKPOCKET_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = PICKPOCKET_40;
}

func int DIA_OTMAR_PICKPOCKET_CONDITION() {
    if (((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) && ((SELF.AIVAR[6]) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_OTMAR_PICKPOCKET_INFO() {
    INFO_CLEARCHOICES(71817);
    INFO_ADDCHOICE(71817, DIALOG_BACK, 71821);
    INFO_ADDCHOICE(71817, DIALOG_PICKPOCKET, 71820);
}

func void DIA_OTMAR_PICKPOCKET_DOIT() {
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) {
        B_PICKPOCKET_AMBIENT_TIER_1();
        SELF.AIVAR[6] = TRUE;
        INFO_CLEARCHOICES(71817);
    };
    AI_PLAYANI(HERO, T_CANNOTTAKE);
    PRINTSCREEN(PRINT_CANTPICKPOCKETTHISPERSON, -(1), -(1), FONT_SCREEN, 4);
    INFO_CLEARCHOICES(71817);
}

func void DIA_OTMAR_PICKPOCKET_BACK() {
    INFO_CLEARCHOICES(71817);
}

