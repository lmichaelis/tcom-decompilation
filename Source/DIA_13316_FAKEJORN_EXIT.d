instance DIA_13316_FAKEJORN_EXIT(C_INFO) {
    NPC = 53089;
    NR = 999;
    CONDITION = DIA_13316_FAKEJORN_EXIT_CONDITION;
    INFORMATION = DIA_13316_FAKEJORN_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_13316_FAKEJORN_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_13316_FAKEJORN_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_13316_FAKEJORN_AFTERQ205(C_INFO) {
    NPC = 53089;
    NR = 1;
    CONDITION = DIA_13316_FAKEJORN_AFTERQ205_CONDITION;
    INFORMATION = DIA_13316_FAKEJORN_AFTERQ205_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_13316_FAKEJORN_AFTERQ205_CONDITION() {
    if ((((NPC_GETDISTTOWP(NONE_13316_FAKEJORN, RNG_NS12_FAKEJORN01_WAYPOINT)) <= (500)) && ((NPC_GETDISTTOWP(MIL_13314_MILITIA, "PARTM3_PATH_175")) <= (500))) && ((NPC_GETDISTTOWP(MIL_13315_MILITIA, "PARTM3_PATH_173")) <= (500))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_13316_FAKEJORN_AFTERQ205_INFO() {
    TRIA_INVITE(MIL_13314_MILITIA);
    TRIA_INVITE(MIL_13315_MILITIA);
    TRIA_START();
    AI_OUTPUT(SELF, OTHER, "DIA_13316_FakeJorn_AfterQ205_03_01");
    AI_OUTPUT(OTHER, SELF, "DIA_13316_FakeJorn_AfterQ205_15_02");
    TRIA_WAIT();
    TRIA_NEXT(MIL_13314_MILITIA);
    B_LOOKATNPC(OTHER, SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_13316_FakeJorn_AfterQ205_03_03");
    TRIA_WAIT();
    TRIA_NEXT(MIL_13314_MILITIA);
    B_LOOKATNPC(OTHER, SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_13316_FakeJorn_AfterQ205_03_04");
    TRIA_WAIT();
    TRIA_NEXT(NONE_13316_FAKEJORN);
    B_LOOKATNPC(OTHER, SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_13316_FakeJorn_AfterQ205_03_05");
    INFO_CLEARCHOICES(68120);
    INFO_ADDCHOICE(68120, "It's not Jorn!", 68123);
}

func void DIA_13316_FAKEJORN_HEISIMPOSTOR() {
    AI_STARTFACEANI(OTHER, S_ANGRY, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_13316_FakeJorn_HeIsImpostor_15_01");
    TRIA_WAIT();
    TRIA_NEXT(MIL_13314_MILITIA);
    B_LOOKATNPC(OTHER, SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_13316_FakeJorn_HeIsImpostor_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_13316_FakeJorn_HeIsImpostor_15_03");
    AI_OUTPUT(OTHER, SELF, "DIA_13316_FakeJorn_HeIsImpostor_15_04");
    TRIA_WAIT();
    TRIA_NEXT(MIL_13314_MILITIA);
    B_LOOKATNPC(OTHER, SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_13316_FakeJorn_HeIsImpostor_03_05");
    AI_TURNTONPC(MIL_13314_MILITIA, NONE_13316_FAKEJORN);
    AI_TURNTONPC(MIL_13315_MILITIA, NONE_13316_FAKEJORN);
    AI_OUTPUT(SELF, OTHER, "DIA_13316_FakeJorn_HeIsImpostor_03_06");
    TRIA_WAIT();
    TRIA_NEXT(NONE_13316_FAKEJORN);
    B_LOOKATNPC(OTHER, SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_13316_FakeJorn_HeIsImpostor_03_07");
    AI_OUTPUT(SELF, OTHER, "DIA_13316_FakeJorn_HeIsImpostor_03_08");
    AI_OUTPUT(OTHER, SELF, "DIA_13316_FakeJorn_HeIsImpostor_15_09");
    AI_OUTPUT(OTHER, SELF, "DIA_13316_FakeJorn_HeIsImpostor_15_10");
    TRIA_WAIT();
    TRIA_NEXT(MIL_13314_MILITIA);
    AI_TURNTONPC(MIL_13314_MILITIA, OTHER);
    B_LOOKATNPC(OTHER, SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_13316_FakeJorn_HeIsImpostor_03_12");
    TRIA_WAIT();
    TRIA_NEXT(MIL_13314_MILITIA);
    AI_TURNTONPC(MIL_13315_MILITIA, OTHER);
    B_LOOKATNPC(OTHER, SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_13316_FakeJorn_HeIsImpostor_03_13");
    TRIA_FINISH();
    NPC_EXCHANGEROUTINE(NONE_13316_FAKEJORN, TOT);
    NPC_EXCHANGEROUTINE(MIL_13315_MILITIA, TOT);
    NPC_EXCHANGEROUTINE(MIL_13314_MILITIA, TOT);
    AI_STOPLOOKAT(SELF);
    AI_STOPLOOKAT(OTHER);
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_13316_FAKEJORN_IAMSORRY(C_INFO) {
    NPC = 53089;
    NR = 3;
    CONDITION = DIA_13316_FAKEJORN_IAMSORRY_CONDITION;
    INFORMATION = DIA_13316_FAKEJORN_IAMSORRY_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_13316_FAKEJORN_IAMSORRY_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 68120)) && (NPC_ISINSTATE(SELF, 61599))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_13316_FAKEJORN_IAMSORRY_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_13316_FakeJorn_IAmSorry_03_01");
    AI_STOPPROCESSINFOS(SELF);
}

