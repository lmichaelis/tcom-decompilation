instance DIA_TILL_EXIT(C_INFO) {
    NPC = 56295;
    NR = 999;
    CONDITION = DIA_TILL_EXIT_CONDITION;
    INFORMATION = DIA_TILL_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_TILL_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_TILL_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_TILL_Q205_STOP(C_INFO) {
    NPC = 56295;
    NR = 1;
    CONDITION = DIA_TILL_Q205_STOP_CONDITION;
    INFORMATION = DIA_TILL_Q205_STOP_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_TILL_Q205_STOP_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q205)) == (LOG_RUNNING)) && ((Q205_ATTACKVINEYARD_READ) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_TILL_Q205_STOP_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Till_Q205_STOP_03_01");
    INFO_CLEARCHOICES(78691);
    INFO_ADDCHOICE(78691, "I'm going for a walk.", 78695);
    INFO_ADDCHOICE(78691, "Where does this road lead to?", 78696);
}

func void DIA_TILL_Q205_STOP_WALK_WHY() {
    AI_OUTPUT(OTHER, SELF, "DIA_Till_Q205_STOP_Why_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Till_Q205_STOP_Why_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Till_Q205_STOP_Why_03_03");
    INFO_CLEARCHOICES(78691);
}

func void DIA_TILL_Q205_STOP_WALK() {
    AI_OUTPUT(OTHER, SELF, "DIA_Till_Q205_STOP_Walk_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Till_Q205_STOP_Walk_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Till_Q205_STOP_Walk_03_03");
    DIA_TILL_Q205_STOP_WALK_WHY();
}

func void DIA_TILL_Q205_STOP_WHERE() {
    AI_OUTPUT(OTHER, SELF, "DIA_Till_Q205_STOP_Where_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Till_Q205_STOP_Where_03_02");
    DIA_TILL_Q205_STOP_WALK_WHY();
}

instance DIA_TILL_Q205_REASON(C_INFO) {
    NPC = 56295;
    NR = 1;
    CONDITION = DIA_TILL_Q205_REASON_CONDITION;
    INFORMATION = DIA_TILL_Q205_REASON_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Why are you guarding this passage?";
}

func int DIA_TILL_Q205_REASON_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q205)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 78691))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_TILL_Q205_REASON_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Till_Q205_Reason_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Till_Q205_Reason_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Till_Q205_Reason_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Till_Q205_Reason_03_04");
    AI_TURNTONPC(SELF, KM_TURTLE_RENEGADE_01);
    AI_OUTPUT(SELF, OTHER, "DIA_Till_Q205_Reason_03_05");
    AI_TURNTONPC(SELF, OTHER);
}

instance DIA_TILL_Q205_TURTLE(C_INFO) {
    NPC = 56295;
    NR = 1;
    CONDITION = DIA_TILL_Q205_TURTLE_CONDITION;
    INFORMATION = DIA_TILL_Q205_TURTLE_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "(Ask about the missing crossbow from the letter).";
}

func int DIA_TILL_Q205_TURTLE_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q205)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 78697))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_TILL_Q205_TURTLE_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Till_Q205_Turtle_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Till_Q205_Turtle_03_02");
    INFO_CLEARCHOICES(78700);
    INFO_ADDCHOICE(78700, "How did you lose it?", 78703);
    INFO_ADDCHOICE(78700, "I can help you find it.", 78704);
}

func void DIA_TILL_Q205_TURTLE_HOW() {
    AI_OUTPUT(OTHER, SELF, "DIA_Till_Q205_Turtle_How_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Till_Q205_Turtle_How_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Till_Q205_Turtle_How_03_03");
}

func void DIA_TILL_Q205_TURTLE_HELP() {
    AI_OUTPUT(OTHER, SELF, "DIA_Till_Q205_Turtle_Help_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Till_Q205_Turtle_Help_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Till_Q205_Turtle_Help_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Till_Q205_Turtle_Help_03_04");
    INFO_CLEARCHOICES(78700);
    INFO_ADDCHOICE(78700, "I thought you were anxious to get your crossbow back.", 78705);
    INFO_ADDCHOICE(78700, "I just want to help a new colleague.", 78706);
}

func void DIA_TILL_Q205_TURTLE_CROSSBOW() {
    AI_OUTPUT(OTHER, SELF, "DIA_Till_Q205_Turtle_Crossbow_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Till_Q205_Turtle_Crossbow_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Till_Q205_Turtle_Crossbow_03_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Till_Q205_Turtle_Crossbow_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Till_Q205_Turtle_Crossbow_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Till_Q205_Turtle_Crossbow_03_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Till_Q205_Turtle_Crossbow_03_07");
    INFO_CLEARCHOICES(78700);
    INFO_ADDCHOICE(78700, "I get it.", 78707);
}

func void DIA_TILL_Q205_TURTLE_FRIEND() {
    AI_OUTPUT(OTHER, SELF, "DIA_Till_Q205_Turtle_Friend_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Till_Q205_Turtle_Friend_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Till_Q205_Turtle_Friend_03_03");
}

func void DIA_TILL_Q205_TURTLE_YESSIR() {
    Q205_TILLKILLSMARVIN = 1;
    SELF.AIVAR[15] = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Till_Q205_Turtle_YesSir_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Till_Q205_Turtle_YesSir_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Till_Q205_Turtle_YesSir_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Till_Q205_Turtle_YesSir_03_04");
    AI_OUTPUT(OTHER, SELF, "DIA_Till_Q205_Turtle_YesSir_15_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Till_Q205_Turtle_YesSir_03_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Till_Q205_Turtle_YesSir_03_07");
    NPC_EXCHANGEROUTINE(SELF, "TURTLE");
    INFO_CLEARCHOICES(78700);
    AI_STOPPROCESSINFOS(SELF);
    AI_LOGENTRY(TOPIC_Q205, LOG_Q205_TILLCROSSBOW2);
}

instance DIA_TILL_EMMA(C_INFO) {
    NPC = 56295;
    NR = 1;
    CONDITION = DIA_TILL_EMMA_CONDITION;
    INFORMATION = DIA_TILL_EMMA_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_TILL_EMMA_CONDITION() {
    if (((NPC_GETDISTTOWP(SELF, "PART7_PATH_99")) <= (500)) && ((LOG_GETSTATUS(MIS_Q205)) == (LOG_RUNNING))) {
        if ((NPC_ISDEAD(KM_TURTLE_RENEGADE_01)) && (NPC_ISDEAD(KM_TURTLE_RENEGADE_02))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_TILL_EMMA_INFO() {
    SELF.AIVAR[15] = FALSE;
    AI_OUTPUT(SELF, OTHER, "DIA_Till_Emma_03_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Till_Emma_15_02");
    AI_STARTFACEANI(SELF, S_ANGRY, 0, 3);
    AI_OUTPUT(SELF, OTHER, "DIA_Till_Emma_03_03");
    AI_RESETFACEANI(SELF);
    AI_LOGENTRY(TOPIC_Q205, LOG_Q205_CROSSBOW);
    AI_STOPPROCESSINFOS(SELF);
    WLD_INSERTITEM(39714, "FP_EMMA_CROSSBOW");
    Q205_SPAWNEDEMMACROSSBOW = TRUE;
}

instance DIA_TILL_NOWAY(C_INFO) {
    NPC = 56295;
    NR = 1;
    CONDITION = DIA_TILL_NOWAY_CONDITION;
    INFORMATION = DIA_TILL_NOWAY_INFO;
    PERMANENT = TRUE;
    IMPORTANT = TRUE;
}

func int DIA_TILL_NOWAY_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_Q205)) == (LOG_RUNNING)) && ((Q205_ATTACKVINEYARD_READ) == (FALSE))) && (NPC_ISINSTATE(SELF, 61599))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_TILL_NOWAY_INFO() {
    DIA_IMBUSY_ANGRY();
}

instance DIA_TILL_PICKPOCKET(C_INFO) {
    NPC = 56295;
    NR = 900;
    CONDITION = DIA_TILL_PICKPOCKET_CONDITION;
    INFORMATION = DIA_TILL_PICKPOCKET_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = PICKPOCKET_80;
}

func int DIA_TILL_PICKPOCKET_CONDITION() {
    if (((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) && ((SELF.AIVAR[6]) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_TILL_PICKPOCKET_INFO() {
    INFO_CLEARCHOICES(78714);
    INFO_ADDCHOICE(78714, DIALOG_BACK, 78718);
    INFO_ADDCHOICE(78714, DIALOG_PICKPOCKET, 78717);
}

func void DIA_TILL_PICKPOCKET_DOIT() {
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (2)) {
        B_PICKPOCKET_AMBIENT_TIER_2();
        SELF.AIVAR[6] = TRUE;
        INFO_CLEARCHOICES(78714);
    };
    AI_PLAYANI(HERO, T_CANNOTTAKE);
    PRINTSCREEN(PRINT_CANTPICKPOCKETTHISPERSON, -(1), -(1), FONT_SCREEN, 4);
    INFO_CLEARCHOICES(78714);
}

func void DIA_TILL_PICKPOCKET_BACK() {
    INFO_CLEARCHOICES(78714);
}

