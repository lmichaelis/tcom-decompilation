instance DIA_ADELARD_EXIT(C_INFO) {
    NPC = 0xcb0a;
    NR = 999;
    CONDITION = DIA_ADELARD_EXIT_CONDITION;
    INFORMATION = DIA_ADELARD_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_ADELARD_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_ADELARD_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

func void Q204_ARAXOSJOINTEST_COLLISION() {
    CALL_INTPARAM(FALSE);
    CALL__THISCALL(MEM_INSTTOPTR(0x71b), 0x688a70);
}

instance DIA_ADELARD_JOINARAXOS(C_INFO) {
    NPC = 0xcb0a;
    NR = 1;
    CONDITION = DIA_ADELARD_JOINARAXOS_CONDITION;
    INFORMATION = DIA_ADELARD_JOINARAXOS_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_ADELARD_JOINARAXOS_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x1156e)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ADELARD_JOINARAXOS_INFO() {
    AI_FUNCTION(SELF, 0xfa18);
    AI_FUNCTION(SELF, 0xfa25);
    AI_TURNTONPC(SLD_1000_ADELARD, HERO);
    AI_TURNTONPC(HERO, SLD_1013_ARAXOS);
    WLD_SENDTRIGGER("KM_ARAXOSJOIN_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_JOINARAXOS_03_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_JOINARAXOS_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_JOINARAXOS_03_03");
    INFO_CLEARCHOICES(0x111ca);
    INFO_ADDCHOICE(0x111ca, "What do you mean?", 0x111d0);
    INFO_ADDCHOICE(0x111ca, "I don't believe it.", 0x111d1);
}

func void DIA_ADELARD_JOINARAXOS_DRINK() {
    AI_FUNCTION(HERO, 0x111e4);
    AI_FUNCTION(HERO, 0xfa23);
    AI_PLAYANI(HERO, "R_VOMIT_SUNDER");
}

func void DIA_Q204_JOINARAXOS_THROW_DIALOGUE() {
    AI_OUTPUT(SLD_1000_ADELARD, HERO, "DIA_Adelard_JOINARAXOS_Water_03_02");
    AI_OUTPUT(HERO, SLD_1000_ADELARD, "DIA_Adelard_JOINARAXOS_Water_15_03");
    AI_OUTPUT(SLD_1000_ADELARD, HERO, "DIA_Adelard_JOINARAXOS_Water_03_04");
    AI_OUTPUT(HERO, SLD_1000_ADELARD, "DIA_Adelard_JOINARAXOS_Water_15_05");
    AI_OUTPUT(SLD_1000_ADELARD, HERO, "DIA_Adelard_JOINARAXOS_Water_03_06");
    AI_OUTPUT(SLD_1000_ADELARD, HERO, "DIA_Adelard_JOINARAXOS_Water_03_07");
    AI_FUNCTION(SLD_1000_ADELARD, 0xfa1e);
    AI_WAIT(HERO, 0x400ccccd);
    AI_FUNCTION(HERO, 0xfa1b);
    AI_OUTPUT(HERO, SLD_1000_ADELARD, "DIA_Adelard_JOINARAXOS_Water_15_08");
    AI_FUNCTION(HERO, 0xfa1f);
    CREATEINVITEMS(HERO, 0x8cb7, 2);
    B_USEITEM(HERO, 0x8cb7);
    AI_OUTPUT(HERO, SLD_1000_ADELARD, "DIA_Adelard_JOINARAXOS_Water_15_09");
    AI_WAITTILLEND(SLD_1000_ADELARD, HERO);
    AI_FUNCTION(SLD_1000_ADELARD, 0xfa1c);
    AI_OUTPUT(SLD_1000_ADELARD, HERO, "DIA_Adelard_JOINARAXOS_Water_03_10");
    B_USEITEM(HERO, 0x8cb7);
    AI_OUTPUT(HERO, SLD_1000_ADELARD, "DIA_Adelard_JOINARAXOS_Water_15_11");
    AI_OUTPUT(SLD_1000_ADELARD, HERO, "DIA_Adelard_JOINARAXOS_Water_03_12");
    AI_FUNCTION(SLD_1000_ADELARD, 0xfa1d);
    AI_STOPLOOKAT(SLD_1000_ADELARD);
    AI_USEITEM(SLD_1000_ADELARD, 0x8cb7);
    AI_LOOKATNPC(SLD_1000_ADELARD, HERO);
    AI_OUTPUT(SLD_1000_ADELARD, HERO, "DIA_Adelard_JOINARAXOS_Water_03_13");
    AI_OUTPUT(HERO, SLD_1000_ADELARD, "DIA_Adelard_JOINARAXOS_Water_15_14");
    AI_OUTPUT(SLD_1000_ADELARD, HERO, "DIA_Adelard_JOINARAXOS_Water_03_15");
    AI_OUTPUT(SLD_1000_ADELARD, HERO, "DIA_Adelard_JOINARAXOS_Water_03_16");
    DIA_ADELARD_JOINARAXOS_DRINK();
}

func void DIA_ADELARD_JOINARAXOS_NOWAY_WATER() {
    AI_STARTFACEANI(SLD_1011_ARAXOS, S_SMUG, 1, -(1));
    AI_STARTFACEANI(SLD_1012_ARAXOS, S_SMUG, 1, -(1));
    AI_STARTFACEANI(SLD_1013_ARAXOS, S_SMUG, 1, -(1));
    AI_STARTFACEANI(SLD_1014_ARAXOS, S_SMUG, 1, -(1));
    AI_STARTFACEANI(SLD_1015_ARAXOS, S_SMUG, 1, -(1));
    WLD_SENDTRIGGER("KM_ARAXOSJOIN_03");
    WLD_SENDUNTRIGGER("KM_ARAXOSJOIN_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_JOINARAXOS_Water_03_01");
    AI_FUNCTION(SELF, 0xfa19);
    AI_TURNTONPC(OTHER, SLD_5001_DIMA);
    AI_WAITTILLEND(SELF, OTHER);
    AI_FUNCTION(SELF, 0xfa16);
}

func void DIA_ADELARD_JOINARAXOS_HOW() {
    INFO_CLEARCHOICES(0x111ca);
    INFO_ADDCHOICE(0x111ca, "No, not at all.", 0x111d3);
    INFO_ADDCHOICE(0x111ca, "As a matter of fact...", 0x111d4);
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_JOINARAXOS_How_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_JOINARAXOS_How_03_02");
    DIA_ADELARD_JOINARAXOS_NOWAY_WATER();
}

func void DIA_ADELARD_JOINARAXOS_NOWAY() {
    INFO_CLEARCHOICES(0x111ca);
    INFO_ADDCHOICE(0x111ca, "No, not at all.", 0x111d3);
    INFO_ADDCHOICE(0x111ca, "As a matter of fact...", 0x111d4);
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_JOINARAXOS_NoWay_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_JOINARAXOS_NoWay_03_02");
    DIA_ADELARD_JOINARAXOS_NOWAY_WATER();
}

func void DIA_ADELARD_JOINARAXOS_NOWAY_WATER_NEXT2() {
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_JOINARAXOS_Next2_03_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_JOINARAXOS_Next2_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_JOINARAXOS_Next2_03_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_JOINARAXOS_Next2_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_JOINARAXOS_Next2_03_05");
    CREATEINVITEMS(OTHER, 0x8cd5, 1);
    B_USEITEM(OTHER, 0x8cd5);
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_JOINARAXOS_Next2_03_06");
    AI_FUNCTION(SELF, 0xfa21);
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_JOINARAXOS_Next2_15_07");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_JOINARAXOS_Next2_03_08");
    INFO_CLEARCHOICES(0x111ca);
    INFO_ADDCHOICE(0x111ca, "What? I am!", 0x111d9);
    INFO_ADDCHOICE(0x111ca, "Why?", 0x111da);
}

func void DIA_ADELARD_JOINARAXOS_NOWAY_WATER_NO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_JOINARAXOS_No_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_JOINARAXOS_No_03_02");
    DIA_ADELARD_JOINARAXOS_NOWAY_WATER_NEXT2();
}

func void DIA_ADELARD_JOINARAXOS_NOWAY_WATER_YES() {
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_JOINARAXOS_Yes_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_JOINARAXOS_Yes_03_02");
    DIA_ADELARD_JOINARAXOS_NOWAY_WATER_NEXT2();
}

func void DIA_ADELARD_JOINARAXOS_VOW() {
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_JOINARAXOS_VOW_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_JOINARAXOS_VOW_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_JOINARAXOS_VOW_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_JOINARAXOS_VOW_03_04");
    AI_FUNCTION(SELF, 0xfa20);
    AI_PLAYANI(SELF, "T_STAND_2_MILJOIN");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_JOINARAXOS_VOW_03_01");
    INFO_CLEARCHOICES(0x111ca);
    INFO_ADDCHOICE(0x111ca, "Uh... what?", 0x111db);
    INFO_ADDCHOICE(0x111ca, "I, Marvin, who have come from some faraway shithole...", 0x111dc);
    INFO_ADDCHOICE(0x111ca, "I, Marvin, who have come from afar...", 0x111dd);
}

func void DIA_ADELARD_JOINARAXOS_VOW2() {
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_JOINARAXOS_VOW2_03_01");
    INFO_CLEARCHOICES(0x111ca);
    INFO_ADDCHOICE(0x111ca, "Drinking at work? That's unprofessional!", 0x111de);
    INFO_ADDCHOICE(0x111ca, "I vow to spend my pay on drinking with my comrades...", 0x111df);
    INFO_ADDCHOICE(0x111ca, "I vow to drink with my comrades...", 0x111e0);
}

func void DIA_ADELARD_JOINARAXOS_VOW3() {
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_JOINARAXOS_VOW3_03_01");
    INFO_CLEARCHOICES(0x111ca);
    INFO_ADDCHOICE(0x111ca, "Let's hope something like this doesn't happen.", 0x111e1);
    INFO_ADDCHOICE(0x111ca, "And I'll stand by them, no matter how many orcs chase me!", 0x111e2);
    INFO_ADDCHOICE(0x111ca, "And I'll stand behind them if orcs chase me!", 0x111e3);
}

func void DIA_ADELARD_JOINARAXOS_END() {
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_JOINARAXOS_VOW_03_07");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_JOINARAXOS_VOW_03_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_JOINARAXOS_VOW_03_09");
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_JOINARAXOS_VOW_15_10");
    AI_PLAYANI(OTHER, "R_VOMIT_SUNDER");
    AI_WAITTILLEND(SELF, OTHER);
    AI_FUNCTION(SELF, 0xfa22);
    INFO_CLEARCHOICES(0x111ca);
    NPC_EXCHANGEROUTINE(SELF, "Q204_JOINWAIT");
    Q204_ADELARD_RTNCHECK = 2;
    AI_STOPPROCESSINFOS(SELF);
    AI_LOGENTRY(TOPIC_Q204, LOG_Q204_ADELARD);
}

func void DIA_ADELARD_JOINARAXOS_NOWAY_WATER_YES_NEXT2_WHAT() {
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_JOINARAXOS_What_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_JOINARAXOS_What_03_02");
    DIA_ADELARD_JOINARAXOS_VOW();
}

func void DIA_ADELARD_JOINARAXOS_NOWAY_WATER_YES_NEXT2_WHY() {
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_JOINARAXOS_Why_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_JOINARAXOS_Why_03_02");
    DIA_ADELARD_JOINARAXOS_VOW();
}

func void DIA_ADELARD_JOINARAXOS_VOW1_WHAT() {
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_JOINARAXOS_VOW_What_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_JOINARAXOS_VOW_What_03_02");
}

func void DIA_ADELARD_JOINARAXOS_VOW1_V1() {
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_JOINARAXOS_VOW_V1_15_01");
    DIA_ADELARD_JOINARAXOS_VOW2();
}

func void DIA_ADELARD_JOINARAXOS_VOW1_V2() {
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_JOINARAXOS_VOW_V1_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_JOINARAXOS_VOW_V1_03_02");
    DIA_ADELARD_JOINARAXOS_VOW2();
}

func void DIA_ADELARD_JOINARAXOS_VOW2_WHAT() {
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_JOINARAXOS_VOW2_WHAT_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_JOINARAXOS_VOW2_WHAT_03_02");
}

func void DIA_ADELARD_JOINARAXOS_VOW2_V1() {
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_JOINARAXOS_VOW2_V1_15_01");
    DIA_ADELARD_JOINARAXOS_VOW3();
}

func void DIA_ADELARD_JOINARAXOS_VOW2_V2() {
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_JOINARAXOS_VOW2_V2_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_JOINARAXOS_VOW2_V2_03_02");
    DIA_ADELARD_JOINARAXOS_VOW3();
}

func void DIA_ADELARD_JOINARAXOS_VOW3_WHAT() {
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_JOINARAXOS_VOW3_WHAT_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_JOINARAXOS_VOW3_WHAT_03_02");
}

func void DIA_ADELARD_JOINARAXOS_VOW3_V1() {
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_JOINARAXOS_VOW3_V1_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_JOINARAXOS_VOW3_V1_03_02");
    DIA_ADELARD_JOINARAXOS_END();
}

func void DIA_ADELARD_JOINARAXOS_VOW3_V2() {
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_JOINARAXOS_VOW3_V2_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_JOINARAXOS_VOW3_V2_03_02");
    DIA_ADELARD_JOINARAXOS_END();
}

func void ADELARD_MARVINAPPLYDRUNKEN() {
    MDL_APPLYOVERLAYMDS(HERO, HUMANSDRUNKENMDS);
}

func void ADELARD_MARVINREMOVEDRUNKEN() {
    MDL_REMOVEOVERLAYMDS(HERO, HUMANSDRUNKENMDS);
}

instance DIA_ADELARD_WELCOMETOFAMILY(C_INFO) {
    NPC = 0xcb0a;
    NR = 1;
    CONDITION = DIA_ADELARD_WELCOMETOFAMILY_CONDITION;
    INFORMATION = DIA_ADELARD_WELCOMETOFAMILY_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_ADELARD_WELCOMETOFAMILY_CONDITION() {
    if (((Q204_ARAXOSTALKCOUNT) >= (3)) && ((LOG_GETSTATUS(MIS_Q204)) == (LOG_RUNNING))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ADELARD_WELCOMETOFAMILY_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_WelcomeToFamily_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_WelcomeToFamily_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_WelcomeToFamily_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_WelcomeToFamily_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_WelcomeToFamily_03_05");
    AI_TELEPORT(SLD_1009_CARAMON, "PARTM1_GUILDHOUSE_27");
    NPC_EXCHANGEROUTINE(SLD_1009_CARAMON, "CHATC");
    CARAMON_CHAT = TRUE;
    Q204_TALKWITHARAXOS = FALSE;
    AI_FUNCTION(SELF, 0xfa26);
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_ADELARD_QA203_START(C_INFO) {
    NPC = 0xcb0a;
    NR = 1;
    CONDITION = DIA_ADELARD_QA203_START_CONDITION;
    INFORMATION = DIA_ADELARD_QA203_START_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I hear you have an assignment.";
}

func int DIA_ADELARD_QA203_START_CONDITION() {
    if ((LOG_GETSTATUS(MIS_QA203)) == (LOG_RUNNING)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

var int ADELARD_QA203_START_NEED = 0;
var int ADELARD_QA203_START_TRY = 0;
var int ADELARD_QA203_START_GOLD = 0;
func void DIA_ADELARD_QA203_START_NEXT() {
    MOB_CREATEITEMS("DARTHECHEST", 0x90ee, 1);
    B_STARTOTHERROUTINE(NONE_6080_DARTHE, "QA203_CAMP");
    NPC_REFRESH(NONE_6080_DARTHE);
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA203_Start_Next_03_01");
    AI_LOGENTRY(TOPIC_QA203, LOG_QA203_ADELARD_START);
    INFO_CLEARCHOICES(0x111e9);
    AI_STOPPROCESSINFOS(SELF);
}

func void DIA_ADELARD_QA203_CHOICES() {
    if ((((ADELARD_QA203_START_NEED) == (TRUE)) && ((ADELARD_QA203_START_TRY) == (TRUE))) && ((ADELARD_QA203_START_GOLD) == (TRUE))) {
        DIA_ADELARD_QA203_START_NEXT();
    };
    INFO_CLEARCHOICES(0x111e9);
    if ((ADELARD_QA203_START_GOLD) == (FALSE)) {
        INFO_ADDCHOICE(0x111e9, "Should I offer to pay him to make the camp available?", 0x111f3);
    };
    if ((ADELARD_QA203_START_TRY) == (FALSE)) {
        INFO_ADDCHOICE(0x111e9, "Didn't you try to get rid of him somehow?", 0x111f2);
    };
    if ((ADELARD_QA203_START_NEED) == (FALSE)) {
        INFO_ADDCHOICE(0x111e9, "Does he have to join? Can't he just make the camp available?", 0x111f1);
    };
}

func void DIA_ADELARD_QA203_START_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA203_Start_15_01");
    if ((KAPITEL) == (2)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA203_Start_03_02");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA203_Start_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA203_Start_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA203_Start_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA203_Start_03_06");
    DIA_ADELARD_QA203_CHOICES();
}

func void DIA_ADELARD_QA203_START_NEED() {
    ADELARD_QA203_START_NEED = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA203_Start_Need_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA203_Start_Need_03_02");
    DIA_ADELARD_QA203_CHOICES();
}

func void DIA_ADELARD_QA203_START_TRY() {
    ADELARD_QA203_START_TRY = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA203_Start_Try_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA203_Start_Try_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA203_Start_Try_03_03");
    DIA_ADELARD_QA203_CHOICES();
}

func void DIA_ADELARD_QA203_START_GOLD() {
    ADELARD_QA203_START_GOLD = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA203_Start_Gold_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA203_Start_Gold_03_02");
    DIA_ADELARD_QA203_CHOICES();
}

instance DIA_ADELARD_QA203_REASON(C_INFO) {
    NPC = 0xcb0a;
    NR = 1;
    CONDITION = DIA_ADELARD_QA203_REASON_CONDITION;
    INFORMATION = DIA_ADELARD_QA203_REASON_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I already know why Darthe won't cooperate. (Give letter)";
}

func int DIA_ADELARD_QA203_REASON_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_QA203)) == (LOG_RUNNING)) && ((QA203_READDARTHELIST) == (TRUE))) && ((NPC_HASITEMS(OTHER, 0x90ee)) >= (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ADELARD_QA203_REASON_INFO() {
    B_GIVEINVITEMS(OTHER, SELF, 0x90ee, 1);
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA203_Reason_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA203_Reason_03_02");
    B_USEFAKESCROLL();
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA203_Reason_03_03");
    B_USEFAKESCROLL();
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA203_Reason_03_04");
    INFO_CLEARCHOICES(0x111f4);
    INFO_ADDCHOICE(0x111f4, "What if Darthe notices the theft?", 0x111f9);
    INFO_ADDCHOICE(0x111f4, "Did the guild really work that way?", 0x111fa);
}

func void DIA_ADELARD_QA203_REASON_NEXT() {
    ADELARD_QA203_REASON_COUNT = (ADELARD_QA203_REASON_COUNT) + (1);
    if ((ADELARD_QA203_REASON_COUNT) == (2)) {
        CREATEINVITEMS(SELF, 0x90f8, 1);
        B_GIVEINVITEMS(SELF, OTHER, 0x90ee, 1);
        AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA203_Reason_Next_03_01");
        B_GIVEINVITEMS(SELF, OTHER, 0x90f8, 1);
        AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA203_Reason_Next_03_02");
        B_USEFAKESCROLL();
        AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA203_Reason_Next_03_03");
        AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA203_Reason_Next_15_04");
        AI_LOGENTRY(TOPIC_QA203, LOG_QA203_ADELARD_INFO);
        INFO_CLEARCHOICES(0x111f4);
        AI_STOPPROCESSINFOS(SELF);
        AI_FUNCTION(SELF, 0xf71e);
    };
}

var int DIA_ADELARD_QA203_REASON_NEXT.ADELARD_QA203_REASON_COUNT = 0;
func void DIA_ADELARD_QA203_REASON_NOTICE() {
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA203_Reason_Notice_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA203_Reason_Notice_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA203_Reason_Notice_03_03");
    DIA_ADELARD_QA203_REASON_NEXT();
}

func void DIA_ADELARD_QA203_REASON_GUILD() {
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA203_Reason_Guild_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA203_Reason_Guild_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA203_Reason_Guild_03_03");
    DIA_ADELARD_QA203_REASON_NEXT();
}

instance DIA_ADELARD_QA203_DARTHEDEAD(C_INFO) {
    NPC = 0xcb0a;
    NR = 1;
    CONDITION = DIA_ADELARD_QA203_DARTHEDEAD_CONDITION;
    INFORMATION = DIA_ADELARD_QA203_DARTHEDEAD_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Darthe is dead.";
}

func int DIA_ADELARD_QA203_DARTHEDEAD_CONDITION() {
    if (((LOG_GETSTATUS(MIS_QA203)) == (LOG_RUNNING)) && ((QA203_ENDING) == (3))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ADELARD_QA203_FINISH() {
    LOG_SETSTATUS(_@(MIS_QA203), TOPIC_QA203, LOG_SUCCESS);
    if ((NPC_HASITEMS(OTHER, 0x90fb)) >= (1)) {
        QA203_TIRKEGLENWYRLIST = TRUE;
        QA203_TIRKEGLENWYRLIST_DAY = WLD_GETDAY();
    };
    B_QA203_DARTHECAMP();
}

func void DIA_ADELARD_QA203_DARTHEDEAD_INFO() {
    Q204_ARAXOSGUILDREPUTATION = (Q204_ARAXOSGUILDREPUTATION) + (1);
    PRINTD("+1 rep do Gildi Araxos");
    PRINTD(CS2("Aktualna reputacja w Gildii: ", INTTOSTRING(Q204_ARAXOSGUILDREPUTATION)));
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA203_DartheDead_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA203_DartheDead_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA203_DartheDead_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA203_DartheDead_03_04");
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA203_DartheDead_15_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA203_DartheDead_03_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA203_DartheDead_03_07");
    B_LOGENTRY(TOPIC_QA203, LOG_QA203_FINISH_V1);
    B_GIVEPLAYERXP(QA203_FINISH_V3);
    DIA_ADELARD_QA203_FINISH();
}

instance DIA_ADELARD_QA203_DARTHECAMP(C_INFO) {
    NPC = 0xcb0a;
    NR = 2;
    CONDITION = DIA_ADELARD_QA203_DARTHECAMP_CONDITION;
    INFORMATION = DIA_ADELARD_QA203_DARTHECAMP_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Darthe will make his camp available to the Guild.";
}

func int DIA_ADELARD_QA203_DARTHECAMP_CONDITION() {
    if (((LOG_GETSTATUS(MIS_QA203)) == (LOG_RUNNING)) && ((QA203_ENDING) == (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ADELARD_QA203_DARTHECAMP_INFO() {
    Q204_ARAXOSGUILDREPUTATION = (Q204_ARAXOSGUILDREPUTATION) + (2);
    PRINTD("+2 rep do Gildi Araxos");
    PRINTD(CS2("Aktualna reputacja w Gildii: ", INTTOSTRING(Q204_ARAXOSGUILDREPUTATION)));
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA203_DartheCamp_15_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA203_DartheCamp_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA203_DartheCamp_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA203_DartheCamp_03_04");
    AI_LOGENTRY(TOPIC_QA203, LOG_QA203_FINISH_V2);
    B_GIVEPLAYERXP(QA203_FINISH_V1);
    CREATEINVITEMS(SELF, 0x859b, QA203_REWARD_V1);
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, QA203_REWARD_V1);
    DIA_ADELARD_QA203_FINISH();
}

instance DIA_ADELARD_QA203_DARTHEJOIN(C_INFO) {
    NPC = 0xcb0a;
    NR = 1;
    CONDITION = DIA_ADELARD_QA203_DARTHEJOIN_CONDITION;
    INFORMATION = DIA_ADELARD_QA203_DARTHEJOIN_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Darthe agreed to join Araxos.";
}

func int DIA_ADELARD_QA203_DARTHEJOIN_CONDITION() {
    if (((LOG_GETSTATUS(MIS_QA203)) == (LOG_RUNNING)) && ((QA203_ENDING) == (2))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ADELARD_QA203_DARTHEJOIN_INFO() {
    Q204_ARAXOSGUILDREPUTATION = (Q204_ARAXOSGUILDREPUTATION) + (3);
    PRINTD("+3 rep do Gildi Araxos");
    PRINTD(CS2("Aktualna reputacja w Gildii: ", INTTOSTRING(Q204_ARAXOSGUILDREPUTATION)));
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA203_DartheJoin_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA203_DartheJoin_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA203_DartheJoin_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA203_DartheJoin_03_04");
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA203_DartheJoin_15_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA203_DartheJoin_03_06");
    B_LOGENTRY(TOPIC_QA203, LOG_QA203_FINISH_V3);
    B_GIVEPLAYERXP(QA203_FINISH_V2);
    CREATEINVITEMS(SELF, 0x859b, QA203_REWARD_V2);
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, QA203_REWARD_V2);
    DIA_ADELARD_QA203_FINISH();
}

instance DIA_ADELARD_QA301_START(C_INFO) {
    NPC = 0xcb0a;
    NR = 1;
    CONDITION = DIA_ADELARD_QA301_START_CONDITION;
    INFORMATION = DIA_ADELARD_QA301_START_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Is there any work to be done?";
}

func int DIA_ADELARD_QA301_START_CONDITION() {
    if (((KAPITEL) >= (3)) && ((MARVIN_ARAXOSSPECIALIZATION) == (ARAXOS_SPECIALIZATION_FIGHTER))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

var int ADELARD_QA301_START_WHO = 0;
var int ADELARD_QA301_START_BOSS = 0;
var int ADELARD_QA301_START_ITEMS = 0;
func void ADELARD_QA301_SPAWNNPC() {
    QA301_MOVERS();
    QA301_SPAWNNPC();
}

func void DIA_ADELARD_QA301_START_NEXT() {
    QA301_TIMELIMIT = TRUE;
    QA301_TIMELIMIT_DAY = WLD_GETDAY();
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA301_Start_Next_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA301_Start_Next_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA301_Start_Next_15_03");
    LOG_CREATETOPIC(TOPIC_QA301, LOG_MISSION);
    LOG_SETSTATUS(_@(MIS_QA301), TOPIC_QA301, LOG_RUNNING);
    AI_LOGENTRY(TOPIC_QA301, LOG_QA301_START);
    INFO_CLEARCHOICES(0x11205);
    AI_STOPPROCESSINFOS(SELF);
    AI_FUNCTION(SELF, 0x1120a);
}

func void DIA_ADELARD_QA301_CHOICES() {
    if ((((ADELARD_QA301_START_WHO) == (TRUE)) && ((ADELARD_QA301_START_BOSS) == (TRUE))) && ((ADELARD_QA301_START_ITEMS) == (TRUE))) {
        DIA_ADELARD_QA301_START_NEXT();
    };
    INFO_CLEARCHOICES(0x11205);
    if ((ADELARD_QA301_START_WHO) == (FALSE)) {
        INFO_ADDCHOICE(0x11205, "Who will be moving the goods?", 0x1120e);
    };
    if ((ADELARD_QA301_START_BOSS) == (FALSE)) {
        INFO_ADDCHOICE(0x11205, "Who among us is to oversee the action?", 0x1120f);
    };
    if ((ADELARD_QA301_START_ITEMS) == (FALSE)) {
        INFO_ADDCHOICE(0x11205, "What precious goods are we to protect?", 0x11210);
    };
}

func void DIA_ADELARD_QA301_START_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA301_Start_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA301_Start_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA301_Start_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA301_Start_03_04");
    DIA_ADELARD_QA301_CHOICES();
}

func void DIA_ADELARD_QA301_START_WHO() {
    ADELARD_QA301_START_WHO = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA301_Start_Who_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA301_Start_Who_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA301_Start_Who_03_03");
    DIA_ADELARD_QA301_CHOICES();
}

func void DIA_ADELARD_QA301_START_BOSS() {
    ADELARD_QA301_START_BOSS = TRUE;
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA301_Start_Boss_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA301_Start_Boss_03_02");
    DIA_ADELARD_QA301_CHOICES();
}

func void DIA_ADELARD_QA301_START_ITEMS() {
    ADELARD_QA301_START_ITEMS = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA301_Start_Items_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA301_Start_Items_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA301_Start_Items_03_03");
    DIA_ADELARD_QA301_CHOICES();
}

instance DIA_ADELARD_QA301_FINISH(C_INFO) {
    NPC = 0xcb0a;
    NR = 1;
    CONDITION = DIA_ADELARD_QA301_FINISH_CONDITION;
    INFORMATION = DIA_ADELARD_QA301_FINISH_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Goods delivered.";
}

func int DIA_ADELARD_QA301_FINISH_CONDITION() {
    if (((LOG_GETSTATUS(MIS_QA301)) == (LOG_RUNNING)) && ((QA301_FINISHJOB) >= (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ADELARD_QA301_FINISH_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA301_Finish_15_01");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA301_Finish_03_02");
    if (NPC_ISDEAD(SLD_11056_GRIZ)) {
        AI_STARTFACEANI(OTHER, S_SAD, 1, -(1));
        AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA301_Finish_15_05");
        AI_STARTFACEANI(SELF, S_SURPRISE, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA301_Finish_03_06");
        if ((QA301_KILLSHADOWBEAST) == (1)) {
            AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA301_Finish_15_07");
            AI_STARTFACEANI(SELF, S_SAD, 1, -(1));
            AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA301_Finish_03_08");
            AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA301_Finish_03_09");
        } else {
            AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA301_Finish_15_10");
            AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
            AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA301_Finish_03_11");
            AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA301_Finish_03_12");
        } else {
            /* set_instance(0) */;
        };
    };
    AI_STARTFACEANI(OTHER, S_SMILE, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA301_Finish_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA301_Finish_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA301_Finish_03_13");
    if ((QA301_FINISHJOB) == (1)) {
        B_GIVEPLAYERXP(XP_QA301_FINISH_V1);
        CREATEINVITEMS(SELF, 0x859b, QA301_REWARD_V1);
    };
    if ((QA301_FINISHJOB) == (2)) {
        B_GIVEPLAYERXP(XP_QA301_FINISH_V2);
        CREATEINVITEMS(SELF, 0x859b, QA301_REWARD_V2);
    };
    if ((QA301_FINISHJOB) == (3)) {
        B_GIVEPLAYERXP(XP_QA301_FINISH_V3);
        CREATEINVITEMS(SELF, 0x859b, QA301_REWARD_V3);
        B_GIVEINVITEMS(SELF, OTHER, 0x859b, QA301_REWARD_V3);
    };
    if ((QA301_TIMELIMIT_DAY) <= ((WLD_GETDAY()) - (3))) {
        AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA301_Finish_03_15");
        AI_LOGENTRY(TOPIC_QA301, LOG_QA301_FINISH_V2);
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA301_Finish_03_14");
    AI_LOGENTRY(TOPIC_QA301, LOG_QA301_FINISH_V1);
    CREATEINVITEMS(SELF, 0x859b, QA301_REWARD_BONUS);
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, QA301_REWARD_BONUS);
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA301_Finish_03_16");
    LOG_SETSTATUS(_@(MIS_QA301), TOPIC_QA301, LOG_SUCCESS);
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    QA301_HIDEEVENTS = 1;
    QA301_HIDEEVENTS_DAY = WLD_GETDAY();
    QA301_FINISH = TRUE;
    QA301_FINISH_DAY = WLD_GETDAY();
}

instance DIA_ADELARD_QA305_START(C_INFO) {
    NPC = 0xcb0a;
    NR = 1;
    CONDITION = DIA_ADELARD_QA305_START_CONDITION;
    INFORMATION = DIA_ADELARD_QA305_START_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_ADELARD_QA305_START_CONDITION() {
    if ((((KAPITEL) >= (3)) && ((HERO.GUILD) == (GIL_SLD))) && ((LOG_GETSTATUS(MIS_QA203)) == (LOG_SUCCESS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ADELARD_QA305_START_INFO() {
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA305_Start_03_01");
    AI_STARTFACEANI(OTHER, S_SMUG, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA305_Start_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA305_Start_03_03");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA305_Start_03_04");
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA305_Start_15_05");
    AI_RESETFACEANI(OTHER);
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA305_Start_03_06");
    LOG_CREATETOPIC(TOPIC_QA305, LOG_MISSION);
    LOG_SETSTATUS(_@(MIS_QA305), TOPIC_QA305, LOG_RUNNING);
    AI_LOGENTRY(TOPIC_QA305, LOG_QA305_START);
    QA305_PREPARENPC();
}

instance DIA_ADELARD_QA305_FINISH(C_INFO) {
    NPC = 0xcb0a;
    NR = 1;
    CONDITION = DIA_ADELARD_QA305_FINISH_CONDITION;
    INFORMATION = DIA_ADELARD_QA305_FINISH_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_ADELARD_QA305_FINISH_CONDITION() {
    if (((LOG_GETSTATUS(MIS_QA305)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x114c0))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ADELARD_QA305_FINISH_INFO() {
    QA305_FINISH = TRUE;
    QA305_FINISH_DAY = WLD_GETDAY();
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA305_Finish_03_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA305_Finish_15_02");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    if ((QA305_COUNTTAKENBARREL) == (5)) {
        AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA305_Finish_15_03");
        AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA305_Finish_03_04");
    };
    if (((QA305_COUNTTAKENBARREL) >= (6)) && ((QA305_COUNTTAKENBARREL) <= (9))) {
        AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA305_Finish_15_05");
        AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA305_Finish_03_06");
    };
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA305_Finish_15_07");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA305_Finish_03_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA305_Finish_03_09");
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA305_Finish_15_10");
    if ((QA305_COUNTTASTEBARREL) >= (1)) {
        if ((QA305_COUNTTASTEBARREL) == (10)) {
            AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA305_Finish_15_12");
        } else {
            AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA305_Finish_15_11");
        } else {
            AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA305_Finish_03_13");
        };
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA305_Finish_03_14");
    AI_STOPPROCESSINFOS(SELF);
    AI_LOGENTRY(TOPIC_QA305, LOG_QA305_FINISH);
    LOG_SETSTATUS(_@(MIS_QA305), TOPIC_QA305, LOG_SUCCESS);
    B_GIVEPLAYERXP(((XP_QA305_FINISH) + ((QA305_COUNTTAKENBARREL) * (XP_QA305_BONUSEXP))) + ((QA305_COUNTTASTEBARREL) * (XP_QA305_BONUSEXP)));
    CREATEINVITEMS(SELF, 0x859b, ((QA305_FINISHGOLD) + ((QA305_COUNTTAKENBARREL) * (QA305_BONUSGOLD))) + ((QA305_COUNTTASTEBARREL) * (QA305_BONUSGOLD)));
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((QA305_FINISHGOLD) + ((QA305_COUNTTAKENBARREL) * (QA305_BONUSGOLD))) + ((QA305_COUNTTASTEBARREL) * (QA305_BONUSGOLD)));
    AI_FUNCTION(SELF, 0xf6e1);
}

instance DIA_ADELARD_QA401_FINALLY(C_INFO) {
    NPC = 0xcb0a;
    NR = 1;
    CONDITION = DIA_ADELARD_QA401_FINALLY_CONDITION;
    INFORMATION = DIA_ADELARD_QA401_FINALLY_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_ADELARD_QA401_FINALLY_CONDITION() {
    if (((LOG_GETSTATUS(MIS_QA401)) == (LOG_RUNNING)) && ((NPC_GETDISTTOWP(SELF, "PART4_QA401_ADELARD")) <= (600))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ADELARD_QA401_FINALLY_INFO() {
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA401_Finally_03_01");
    INFO_CLEARCHOICES(0x1121a);
    INFO_ADDCHOICE(0x1121a, "Is that Otmar?", 0x1121d);
}

func void DIA_ADELARD_QA401_FINALLY_OTMAR() {
    AI_STARTFACEANI(OTHER, S_SURPRISE, 1, -(1));
    AI_FUNCTION(SELF, 0x1121e);
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA401_Finally_Otmar_15_01");
    AI_RESETFACEANI(OTHER);
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA401_Finally_Otmar_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA401_Finally_Otmar_03_03");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_FUNCTION(SELF, 0x1121f);
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA401_Finally_Otmar_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA401_Finally_Otmar_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA401_Finally_Otmar_03_06");
    INFO_CLEARCHOICES(0x1121a);
    INFO_ADDCHOICE(0x1121a, "I'll get to work.", 0x11221);
    INFO_ADDCHOICE(0x1121a, "Are such methods not too brutal?", 0x11220);
}

func void QA401_OTMARCAMERA_ENABLE() {
    DIACAM_DISABLE();
    WLD_SENDTRIGGER("QA401_OTMAR_CAMERA");
}

func void QA401_OTMARCAMERA_DISABLE() {
    WLD_SENDUNTRIGGER("QA401_OTMAR_CAMERA");
    DIACAM_ENABLE();
}

func void DIA_ADELARD_QA401_FINALLY_OTMAR_BRUTAL() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA401_Finally_Brutal_15_01");
    AI_RESETFACEANI(OTHER);
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA401_Finally_Brutal_03_02");
}

func void DIA_ADELARD_QA401_FINALLY_OTMAR_LETSGO() {
    AI_STARTFACEANI(OTHER, S_SMUG, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA401_Finally_LetsGo_15_01");
    AI_WAITTILLEND(SELF, OTHER);
    AI_RESETFACEANI(OTHER);
    AI_RESETFACEANI(SELF);
    INFO_CLEARCHOICES(0x1121a);
    AI_STOPPROCESSINFOS(SELF);
    AI_LOGENTRY(TOPIC_QA401, LOG_QA401_ADELARD_OTMAR);
}

instance DIA_ADELARD_QA401_AFTEROTMAR(C_INFO) {
    NPC = 0xcb0a;
    NR = 1;
    CONDITION = DIA_ADELARD_QA401_AFTEROTMAR_CONDITION;
    INFORMATION = DIA_ADELARD_QA401_AFTEROTMAR_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_ADELARD_QA401_AFTEROTMAR_CONDITION() {
    if (((LOG_GETSTATUS(MIS_QA401)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x13121))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ADELARD_QA401_AFTEROTMAR_INFO() {
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA401_AfterOtmar_03_01");
    INFO_CLEARCHOICES(0x11222);
    if ((QA401_OTMAR_GOTANYTHING) == (TRUE)) {
        INFO_ADDCHOICE(0x11222, "Otmar was indeed working with smugglers.", 0x11226);
    };
    INFO_ADDCHOICE(0x11222, "Otmar wasn't inclined to talk much.", 0x11227);
}

func void DIA_ADELARD_QA401_AFTEROTMAR_NO_NEXT() {
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA401_AfterOtmar_Next_03_01");
    AI_TURNTONPC(SELF, SLD_13548_ARAXOS);
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA401_AfterOtmar_Next_03_02");
    AI_TURNTONPC(SELF, OTHER);
    AI_RESETFACEANI(SELF);
    INFO_CLEARCHOICES(0x11222);
    INFO_ADDCHOICE(0x11222, DIALOG_DONOTTALK, 0x11229);
    if ((QA401_OTMAR_GOTANYTHING) == (FALSE)) {
        INFO_ADDCHOICE(0x11222, "The guy may be innocent.", 0x1122a);
    };
    if ((QA401_OTMAR_PROMISEDTOHELP) == (TRUE)) {
        INFO_ADDCHOICE(0x11222, "I promised we'd let him go if he told us everything.", 0x1122b);
    };
}

func void DIA_ADELARD_QA401_AFTEROTMAR_YES() {
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA401_AfterOtmar_Yes_15_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA401_AfterOtmar_Yes_15_02");
    DIA_ADELARD_QA401_AFTEROTMAR_NO_NEXT();
}

func void DIA_ADELARD_QA401_AFTEROTMAR_NO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA401_AfterOtmar_No_15_01");
    AI_STARTFACEANI(SELF, S_DOUBT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA401_AfterOtmar_No_03_02");
    DIA_ADELARD_QA401_AFTEROTMAR_NO_NEXT();
}

func void DIA_ADELARD_QA401_AFTEROTMAR_END() {
    AI_LOGENTRY(TOPIC_QA401, LOG_QA401_OTMAR_FINISH);
    INFO_CLEARCHOICES(0x11222);
    AI_STOPPROCESSINFOS(SELF);
    AI_FUNCTION(SELF, 0xf5b6);
}

func void DIA_ADELARD_QA401_AFTEROTMAR_NO_NEXT_SILENCE() {
    QA401_OTMARRESULT = 2;
    DIA_ADELARD_QA401_AFTEROTMAR_END();
}

func void DIA_ADELARD_QA401_AFTEROTMAR_NO_NEXT_INNOCENT() {
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA401_AfterOtmar_Innocent_15_01");
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA401_AfterOtmar_Innocent_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA401_AfterOtmar_Innocent_03_03");
    AI_RESETFACEANI(SELF);
}

func void DIA_ADELARD_QA401_AFTEROTMAR_NO_NEXT_PROMISE() {
    QA401_OTMARRESULT = 1;
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA401_AfterOtmar_Promise_15_01");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA401_AfterOtmar_Promise_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA401_AfterOtmar_Promise_03_03");
    AI_TURNTONPC(SELF, SLD_13548_ARAXOS);
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA401_AfterOtmar_Promise_03_04");
    AI_RESETFACEANI(SELF);
    DIA_ADELARD_QA401_AFTEROTMAR_END();
}

instance DIA_ADELARD_QA401_READY(C_INFO) {
    NPC = 0xcb0a;
    NR = 1;
    CONDITION = DIA_ADELARD_QA401_READY_CONDITION;
    INFORMATION = DIA_ADELARD_QA401_READY_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I'm ready.";
}

func int DIA_ADELARD_QA401_READY_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_QA401)) == (LOG_RUNNING)) && ((QA401_COUNTTASK) >= (4))) && ((NPC_GETDISTTOWP(SELF, "PART1_FISHER_BEACH_ADELARD")) < (500))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ADELARD_QA401_READY_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA401_Ready_15_01");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA401_Ready_03_02");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA401_Ready_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA401_Ready_03_04");
    AI_LOGENTRY(TOPIC_QA401, LOG_QA401_ADELARD_TALKTOSUNDER);
}

instance DIA_ADELARD_QA401_AFTERMEATBUG(C_INFO) {
    NPC = 0xcb0a;
    NR = 1;
    CONDITION = DIA_ADELARD_QA401_AFTERMEATBUG_CONDITION;
    INFORMATION = DIA_ADELARD_QA401_AFTERMEATBUG_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_ADELARD_QA401_AFTERMEATBUG_CONDITION() {
    if (((LOG_GETSTATUS(MIS_QA401)) == (LOG_RUNNING)) && ((QA401_MEATBUG_FINISH) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

var int ADELARD_QA401_AFTERMEATBUG_CAVE = 0;
var int ADELARD_QA401_AFTERMEATBUG_UP = 0;
var int ADELARD_QA401_AFTERMEATBUG_SMUGGLERS = 0;
func void DIA_ADELARD_QA401_AFTERMEATBUG_CHOICES() {
    INFO_CLEARCHOICES(0x1122f);
    if ((ADELARD_QA401_AFTERMEATBUG_SMUGGLERS) == (FALSE)) {
        INFO_ADDCHOICE(0x1122f, "There are a dozen smugglers inside...", 0x1123a);
    };
    if ((QA401_MEATBUG_UP) == (TRUE)) {
        if ((ADELARD_QA401_AFTERMEATBUG_UP) == (FALSE)) {
            INFO_ADDCHOICE(0x1122f, "I found the upper exit from the cave...", 0x11239);
        };
    };
    if ((ADELARD_QA401_AFTERMEATBUG_CAVE) == (FALSE)) {
        INFO_ADDCHOICE(0x1122f, "The cave is divided into several rooms...", 0x11238);
    };
}

func void DIA_ADELARD_QA401_AFTERMEATBUG_NEXT() {
    AI_STARTFACEANI(SELF, S_THINK, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA401_AfterMeatbug_Next_03_01");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA401_AfterMeatbug_Next_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA401_AfterMeatbug_Next_03_03");
    AI_RESETFACEANI(SELF);
    AI_LOGENTRY(TOPIC_QA401, LOG_QA401_ADELARD_READYTOFIGHT);
    INFO_CLEARCHOICES(0x1122f);
    AI_STOPPROCESSINFOS(SELF);
    AI_FUNCTION(SELF, 0xf5b7);
}

func void DIA_ADELARD_QA401_AFTERMEATBUG_CHECK() {
    if ((QA401_MEATBUG_UP) == (TRUE)) {
        if ((((ADELARD_QA401_AFTERMEATBUG_CAVE) == (TRUE)) && ((ADELARD_QA401_AFTERMEATBUG_UP) == (TRUE))) && ((ADELARD_QA401_AFTERMEATBUG_SMUGGLERS) == (TRUE))) {
            DIA_ADELARD_QA401_AFTERMEATBUG_NEXT();
        } else {
            DIA_ADELARD_QA401_AFTERMEATBUG_CHOICES();
        } else {
            /* set_instance(0) */;
        };
    };
    if (((ADELARD_QA401_AFTERMEATBUG_CAVE) == (TRUE)) && ((ADELARD_QA401_AFTERMEATBUG_SMUGGLERS) == (TRUE))) {
        DIA_ADELARD_QA401_AFTERMEATBUG_NEXT();
    };
    DIA_ADELARD_QA401_AFTERMEATBUG_CHOICES();
}

func void DIA_ADELARD_QA401_AFTERMEATBUG_INFO() {
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA401_AfterMeatbug_03_01");
    DIA_ADELARD_QA401_AFTERMEATBUG_CHOICES();
}

func void DIA_ADELARD_QA401_AFTERMEATBUG_CAVE() {
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA401_AfterMeatbug_Cave_15_01");
    INFO_CLEARCHOICES(0x1122f);
    INFO_ADDCHOICE(0x1122f, "One of the passages is blocked by a mechanism...", 0x1123b);
}

func void DIA_ADELARD_QA401_AFTERMEATBUG_UP() {
    ADELARD_QA401_AFTERMEATBUG_UP = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA401_AfterMeatbug_Up_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA401_AfterMeatbug_Up_03_02");
    DIA_ADELARD_QA401_AFTERMEATBUG_CHECK();
}

func void DIA_ADELARD_QA401_AFTERMEATBUG_SMUGGLERS() {
    ADELARD_QA401_AFTERMEATBUG_SMUGGLERS = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA401_AfterMeatbug_Smugglers_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA401_AfterMeatbug_Smugglers_03_02");
    DIA_ADELARD_QA401_AFTERMEATBUG_CHECK();
}

func void DIA_ADELARD_QA401_AFTERMEATBUG_CAVE_CRATES() {
    ADELARD_QA401_AFTERMEATBUG_CAVE = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA401_AfterMeatbug_Crates_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA401_AfterMeatbug_Crates_03_02");
    DIA_ADELARD_QA401_AFTERMEATBUG_CHECK();
}

instance DIA_ADELARD_QA401_AFTERCUTSCENE(C_INFO) {
    NPC = 0xcb0a;
    NR = 1;
    CONDITION = DIA_ADELARD_QA401_AFTERCUTSCENE_CONDITION;
    INFORMATION = DIA_ADELARD_QA401_AFTERCUTSCENE_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_ADELARD_QA401_AFTERCUTSCENE_CONDITION() {
    if (((LOG_GETSTATUS(MIS_QA401)) == (LOG_RUNNING)) && ((QA401_FINAL_CUTSCENEENABLE) == (4))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ADELARD_QA401_AFTERCUTSCENE_INFO() {
    SLD_1000_ADELARD.AIVAR[15] = FALSE;
    SLD_5002_SUNDER.AIVAR[15] = FALSE;
    SLD_1009_CARAMON.AIVAR[15] = FALSE;
    if ((NPC_ISDEAD(SLD_13548_ARAXOS)) == (FALSE)) {
        SLD_13548_ARAXOS.AIVAR[15] = FALSE;
    };
    if ((NPC_ISDEAD(SLD_13549_ARAXOS)) == (FALSE)) {
        SLD_13549_ARAXOS.AIVAR[15] = FALSE;
    };
    INFO_CLEARCHOICES(0x1123c);
    INFO_ADDCHOICE(0x1123c, "We got rid of them once and for all.", 0x11241);
    INFO_ADDCHOICE(0x1123c, "Was that necessary?", 0x11240);
}

func void DIA_ADELARD_QA401_AFTERCUTSCENE_NEXT() {
    AI_RESETFACEANI(OTHER);
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA401_AfterCutscene_Next_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA401_AfterCutscene_Next_03_02");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA401_AfterCutscene_Next_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA401_AfterCutscene_Next_03_04");
    INFO_CLEARCHOICES(0x1123c);
    AI_LOGENTRY(TOPIC_QA401, LOG_QA401_ADELARD_FINALLY);
}

func void DIA_ADELARD_QA401_AFTERCUTSCENE_REALLY() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA401_AfterCutscene_Really_15_01");
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_QA401_AfterCutscene_Really_03_02");
    DIA_ADELARD_QA401_AFTERCUTSCENE_NEXT();
}

func void DIA_ADELARD_QA401_AFTERCUTSCENE_FINALLY() {
    AI_STARTFACEANI(OTHER, S_SMUG, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_QA401_AfterCutscene_Finally_15_01");
    DIA_ADELARD_QA401_AFTERCUTSCENE_NEXT();
}

instance DIA_ADELARD_KQ407_READY(C_INFO) {
    NPC = 0xcb0a;
    NR = 1;
    CONDITION = DIA_ADELARD_KQ407_READY_CONDITION;
    INFORMATION = DIA_ADELARD_KQ407_READY_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "What's the situation?";
}

func int DIA_ADELARD_KQ407_READY_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_KQ407)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x113bd))) && ((NPC_GETDISTTOWP(SELF, "PART17_KQ407_ADELARD_STAND_01")) <= (700))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ADELARD_KQ407_READY_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_KQ407_Ready_15_01");
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_KQ407_Ready_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_KQ407_Ready_03_03");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_KQ407_Ready_03_04");
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_KQ407_Ready_15_05");
    AI_RESETFACEANI(SELF);
    AI_STOPPROCESSINFOS(SELF);
    AI_FUNCTION(SELF, 0xf173);
}

instance DIA_ADELARD_KQ407_AFTERFIGHT(C_INFO) {
    NPC = 0xcb0a;
    NR = 1;
    CONDITION = DIA_ADELARD_KQ407_AFTERFIGHT_CONDITION;
    INFORMATION = DIA_ADELARD_KQ407_AFTERFIGHT_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_ADELARD_KQ407_AFTERFIGHT_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_KQ407)) == (LOG_RUNNING)) && ((NPC_GETDISTTOWP(SELF, "PART17_PATH_106")) <= (700))) && (NPC_KNOWSINFO(OTHER, 0x11242))) {
        if (NPC_ISDEAD(ORCLEADER_PART17)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_ADELARD_KQ407_AFTERFIGHT_INFO() {
    KQ407_ORCLEADER_PART17_DEAD = TRUE;
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_KQ407_AfterFight_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_KQ407_AfterFight_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_KQ407_AfterFight_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_KQ407_AfterFight_03_04");
    AI_STOPPROCESSINFOS(SELF);
    AI_FUNCTION(SELF, 0xf174);
    AI_LOGENTRY(TOPIC_KQ407, LOG_KQ407_ADELARD_PART17CLEAR);
}

instance DIA_ADELARD_PROMOTION_TIER1_QUESTION(C_INFO) {
    NPC = 0xcb0a;
    NR = 1;
    CONDITION = DIA_ADELARD_PROMOTION_TIER1_QUESTION_CONDITION;
    INFORMATION = DIA_ADELARD_PROMOTION_TIER1_QUESTION_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I hear you want me in your unit.";
}

func int DIA_ADELARD_PROMOTION_TIER1_QUESTION_CONDITION() {
    if ((HERO.GUILD) == (GIL_SLD)) {
        if (((MARVIN_ARAXOSSPECIALIZATION) == (ARAXOS_SPECIALIZATION_NONE)) && ((MARVIN_ARAXOSSPECIALIZATION_CANJOIN_FIGHTER) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_ADELARD_PROMOTION_TIER1_QUESTION_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_Promotion_Tier1_Question_15_01");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_Promotion_Tier1_Question_03_02");
    AI_RESETFACEANI(SELF);
}

instance DIA_ADELARD_PROMOTION_TIER1_READY(C_INFO) {
    NPC = 0xcb0a;
    NR = 1;
    CONDITION = DIA_ADELARD_PROMOTION_TIER1_READY_CONDITION;
    INFORMATION = DIA_ADELARD_PROMOTION_TIER1_READY_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "I'm ready to join your unit.";
}

func int DIA_ADELARD_PROMOTION_TIER1_READY_CONDITION() {
    if ((HERO.GUILD) == (GIL_SLD)) {
        if (NPC_KNOWSINFO(OTHER, 0x11248)) {
            if (((MARVIN_ARAXOSSPECIALIZATION) == (ARAXOS_SPECIALIZATION_NONE)) && ((MARVIN_ARAXOSSPECIALIZATION_CANJOIN_FIGHTER) == (TRUE))) {
                return TRUE;
            };
        };
    };
    return 0 /* !broken stack! */;
}

func void ADELARD_CARAMONSPECIALIZATION_TIER1() {
    if ((CARAMON_TIERARMOR) == (1)) {
        CARAMON_TIERARMOR = 2;
        NPC_CHANGEARMOR(SLD_1009_CARAMON, 0x8a83);
        NPC_REMOVEINVITEMS(SLD_1009_CARAMON, 0x8a7e, 1);
        CREATEINVITEMS(SLD_1009_CARAMON, 0x9a9a, 1);
        B_SETATTRIBUTESTOLEVEL(SLD_1009_CARAMON, 50);
    };
    CARAMON_TIERARMOR = 1;
    NPC_CHANGEARMOR(SLD_1009_CARAMON, 0x8a7e);
    NPC_REMOVEINVITEMS(SLD_1009_CARAMON, 0x8a89, 1);
    CREATEINVITEMS(SLD_1009_CARAMON, 0x9a97, 1);
    B_SETATTRIBUTESTOLEVEL(SLD_1009_CARAMON, 40);
}

func void DIA_ADELARD_PROMOTION_TIER1_READY_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_Promotion_Tier1_Ready_15_01");
    if (((OTHER.HITCHANCE[1]) >= (40)) || ((OTHER.HITCHANCE[2]) >= (40))) {
        MARVIN_ARAXOS_WHEREJOINED = 1;
        MARVIN_ARAXOSSPECIALIZATION = ARAXOS_SPECIALIZATION_FIGHTER;
        SND_PLAY("LEVELUP");
        B_GIVEPLAYERXP(XP_ARAXOS_PROMOTION_TIER2);
        AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Adelard_Promotion_Tier1_Ready_03_02");
        B_STANDUP();
        B_USEFAKESCROLL();
        AI_OUTPUT(SELF, OTHER, "DIA_Adelard_Promotion_Tier1_Ready_03_03");
        AI_OUTPUT(SELF, OTHER, "DIA_Adelard_Promotion_Tier1_Ready_03_04");
        AI_OUTPUT(SELF, OTHER, "DIA_Adelard_Promotion_Tier1_Ready_03_05");
        AI_STARTFACEANI(OTHER, S_SMILE, 1, -(1));
        AI_OUTPUT(OTHER, SELF, "DIA_Adelard_Promotion_Tier1_Ready_15_06");
        AI_OUTPUT(SELF, OTHER, "DIA_Adelard_Promotion_Tier1_Ready_03_07");
        AI_FUNCTION(SELF, 0x1124d);
    };
    if ((OTHER.HITCHANCE[1]) > (OTHER.HITCHANCE[2])) {
        MARVIN_CURRENT1HLEVEL_ADELARD = INTTOSTRING((40) - (HERO.HITCHANCE[1]));
        ADELARD_CHECKSMARVIN1HLEVEL = CONCATSTRINGS(MARVIN_CURRENT1HLEVEL_ADELARD, PRINT_NEEDED1HLEVEL);
    };
    MARVIN_CURRENT2HLEVEL_ADELARD = INTTOSTRING((40) - (HERO.HITCHANCE[2]));
    ADELARD_CHECKSMARVIN2HLEVEL = CONCATSTRINGS(MARVIN_CURRENT2HLEVEL_ADELARD, PRINT_NEEDED2HLEVEL);
    AI_PRINTSCREEN(ADELARD_CHECKSMARVIN2HLEVEL, -(1), -(1), FONT_SCREEN, 3);
    AI_STARTFACEANI(SELF, S_DOUBT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_Promotion_Tier1_Ready_03_08");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_Promotion_Tier1_Ready_03_09");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

var string DIA_ADELARD_PROMOTION_TIER1_READY_INFO.ADELARD_CHECKSMARVIN1HLEVEL = "";
var string DIA_ADELARD_PROMOTION_TIER1_READY_INFO.ADELARD_CHECKSMARVIN2HLEVEL = "";
var string DIA_ADELARD_PROMOTION_TIER1_READY_INFO.MARVIN_CURRENT1HLEVEL_ADELARD = "";
var string DIA_ADELARD_PROMOTION_TIER1_READY_INFO.MARVIN_CURRENT2HLEVEL_ADELARD = "";
instance DIA_ADELARD_CANYOUTEACH(C_INFO) {
    NPC = 0xcb0a;
    NR = 3;
    CONDITION = DIA_ADELARD_CANYOUTEACH_CONDITION;
    INFORMATION = DIA_ADELARD_CANYOUTEACH_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Could you train me?";
}

func int DIA_ADELARD_CANYOUTEACH_CONDITION() {
    if ((OTHER.GUILD) == (GIL_SLD)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ADELARD_CANYOUTEACH_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_CanYouTeach_15_00");
    if ((MARVIN_ARAXOSSPECIALIZATION) == (ARAXOS_SPECIALIZATION_NONE)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Adelard_CanYouTeach_03_01");
        AI_OUTPUT(SELF, OTHER, "DIA_Adelard_CanYouTeach_03_02");
    };
    if (((MARVIN_ARAXOSSPECIALIZATION) == (ARAXOS_SPECIALIZATION_FIGHTER)) || ((MARVIN_ARAXOSSPECIALIZATION) == (ARAXOS_SPECIALIZATION_ARCHER))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Adelard_CanYouTeach_03_03");
        AI_OUTPUT(SELF, OTHER, "DIA_Adelard_CanYouTeach_03_04");
    };
    if (((MARVIN_ARAXOSSPECIALIZATION) == (ARAXOS_SPECIALIZATION_MASTERFIGHTER)) || ((MARVIN_ARAXOSSPECIALIZATION) == (ARAXOS_SPECIALIZATION_MASTERARCHER))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Adelard_CanYouTeach_03_05");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_CanYouTeach_03_06");
    LOG_CREATETOPIC(TOPIC_ARAXOSTEACHER, LOG_NOTE);
    AI_LOGENTRY(TOPIC_ARAXOSTEACHER, LOG_ARAXOSTEACHER_ADELARD);
}

var int ADELARD_NOMORE = 0;
var int ADELARD_CURRENT1HLEVEL = 0;
var int ADELARD_CURRENT2HLEVEL = 0;
var int ADELARD_CURRENTSTRLEVEL = 0;
var string ADELARD_PRINTS = "";
const int ADELARD_RLEVEL = 80;
const int ADELARD_RLEVEL_FIGHT = 60;
instance DIA_ADELARD_TEACH(C_INFO) {
    NPC = 0xcb0a;
    NR = 1;
    CONDITION = DIA_ADELARD_TEACH_CONDITION;
    INFORMATION = DIA_ADELARD_TEACH_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "I want to train.";
}

func int DIA_ADELARD_TEACH_CONDITION() {
    if (((NPC_KNOWSINFO(HERO, 0x11253)) && ((ADELARD_NOMORE) == (FALSE))) && ((HERO.GUILD) == (GIL_SLD))) {
        if ((MARVIN_ARAXOSSPECIALIZATION) >= (1)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_ADELARD_TEACH_CHOICES() {
    ADELARD_CURRENT1HLEVEL = OTHER.AIVAR[84];
    ADELARD_CURRENT2HLEVEL = OTHER.AIVAR[85];
    ADELARD_CURRENTSTRLEVEL = OTHER.AIVAR[81];
    ADELARD_GOLDCOST = 0;
    INFO_CLEARCHOICES(0x1125d);
    INFO_ADDCHOICE(0x1125d, DIALOG_BACK, 0x11262);
    INFO_ADDCHOICE(0x1125d, B_BUILDLEARNSTRING2(PRINT_LEARNSTR1, B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 1), ADELARD_GOLDCOST), 0x11267);
    INFO_ADDCHOICE(0x1125d, B_BUILDLEARNSTRING2(PRINT_LEARNSTR5, B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 5), (ADELARD_GOLDCOST) * (5)), 0x11268);
    if (((MARVIN_ARAXOSSPECIALIZATION) == (ARAXOS_SPECIALIZATION_MASTERFIGHTER)) || ((MARVIN_ARAXOSSPECIALIZATION) == (ARAXOS_SPECIALIZATION_MASTERARCHER))) {
        INFO_ADDCHOICE(0x1125d, B_BUILDLEARNSTRING2(PRINT_LEARN2H1, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 1), ADELARD_GOLDCOST), 0x11265);
        INFO_ADDCHOICE(0x1125d, B_BUILDLEARNSTRING2(PRINT_LEARN2H5, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 5), (ADELARD_GOLDCOST) * (5)), 0x11266);
        INFO_ADDCHOICE(0x1125d, B_BUILDLEARNSTRING2(PRINT_LEARN1H1, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 1), ADELARD_GOLDCOST), 0x11263);
        INFO_ADDCHOICE(0x1125d, B_BUILDLEARNSTRING2(PRINT_LEARN1H5, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 5), (ADELARD_GOLDCOST) * (5)), 0x11264);
    };
}

var int DIA_ADELARD_TEACH_CHOICES.ADELARD_GOLDCOST = 0;
func void DIA_ADELARD_TEACH_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_Teach_15_00");
    if ((((OTHER.AIVAR[84]) >= (100)) && ((OTHER.AIVAR[85]) >= (100))) && ((OTHER.AIVAR[81]) >= (120))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Adelard_NoMore_03_01");
        ADELARD_NOMORE = TRUE;
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_Teach_03_01");
    DIA_ADELARD_TEACH_CHOICES();
}

func void DIA_ADELARD_TEACH_BACK() {
    INFO_CLEARCHOICES(0x1125d);
}

func void DIA_ADELARD_TEACH_1H1() {
    if ((OTHER.AIVAR[84]) < (ADELARD_RLEVEL_FIGHT)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Adelard_Teach_1H1_03_00");
        ADELARD_PRINTS = CONCATSTRINGS(PRINT_MINSKILL, INTTOSTRING(ADELARD_RLEVEL_FIGHT));
    };
    if ((ADELARD_CURRENT1HLEVEL) < (OTHER.AIVAR[84])) {
        AI_OUTPUT(SELF, OTHER, "DIA_Adelard_Teach_1H1_03_01");
    };
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_1H, 1, 90);
    DIA_ADELARD_TEACH_CHOICES();
}

func void DIA_ADELARD_TEACH_1H5() {
    if ((OTHER.AIVAR[84]) < (ADELARD_RLEVEL_FIGHT)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Adelard_Teach_1H5_03_00");
        ADELARD_PRINTS = CONCATSTRINGS(PRINT_MINSKILL, INTTOSTRING(ADELARD_RLEVEL_FIGHT));
    };
    if ((ADELARD_CURRENT1HLEVEL) < (OTHER.AIVAR[84])) {
        AI_OUTPUT(SELF, OTHER, "DIA_Adelard_Teach_1H5_03_01");
    };
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_1H, 5, 90);
    DIA_ADELARD_TEACH_CHOICES();
}

func void DIA_ADELARD_TEACH_2H1() {
    if ((OTHER.AIVAR[85]) < (ADELARD_RLEVEL_FIGHT)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Adelard_Teach_2H1_03_00");
        ADELARD_PRINTS = CONCATSTRINGS(PRINT_MINSKILL, INTTOSTRING(ADELARD_RLEVEL_FIGHT));
    };
    if ((ADELARD_CURRENT2HLEVEL) < (OTHER.AIVAR[85])) {
        AI_OUTPUT(SELF, OTHER, "DIA_Adelard_Teach_2H1_03_01");
    };
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_2H, 1, 90);
    DIA_ADELARD_TEACH_CHOICES();
}

func void DIA_ADELARD_TEACH_2H5() {
    if ((OTHER.AIVAR[85]) < (ADELARD_RLEVEL_FIGHT)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Adelard_Teach_2H5_03_02");
        ADELARD_PRINTS = CONCATSTRINGS(PRINT_MINSKILL, INTTOSTRING(ADELARD_RLEVEL_FIGHT));
    };
    if ((ADELARD_CURRENT2HLEVEL) < (OTHER.AIVAR[85])) {
        AI_OUTPUT(SELF, OTHER, "DIA_Adelard_Teach_2H5_03_03");
    };
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_2H, 5, 90);
    DIA_ADELARD_TEACH_CHOICES();
}

func void DIA_ADELARD_TEACHSTR1() {
    if ((OTHER.AIVAR[81]) < (ADELARD_RLEVEL)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Adelard_TeachSTR1_03_00");
        ADELARD_PRINTS = CONCATSTRINGS(PRINT_MINATR, INTTOSTRING(ADELARD_RLEVEL));
    };
    if ((ADELARD_CURRENTSTRLEVEL) < (OTHER.AIVAR[81])) {
        AI_OUTPUT(SELF, OTHER, "DIA_Adelard_TeachSTR1_03_01");
    };
    B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_STRENGTH, 1, 120);
    DIA_ADELARD_TEACH_CHOICES();
}

func void DIA_ADELARD_TEACHSTR5() {
    if ((OTHER.AIVAR[81]) < (ADELARD_RLEVEL)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Adelard_TeachSTR5_03_00");
        ADELARD_PRINTS = CONCATSTRINGS(PRINT_MINATR, INTTOSTRING(ADELARD_RLEVEL));
    };
    if ((ADELARD_CURRENTSTRLEVEL) < (OTHER.AIVAR[81])) {
        AI_OUTPUT(SELF, OTHER, "DIA_Adelard_TeachSTR5_03_01");
    };
    B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_STRENGTH, 5, 120);
    DIA_ADELARD_TEACH_CHOICES();
}

instance DIA_ADELARD_PROMOTION_TIER2(C_INFO) {
    NPC = 0xcb0a;
    NR = 1;
    CONDITION = DIA_ADELARD_PROMOTION_TIER2_CONDITION;
    INFORMATION = DIA_ADELARD_PROMOTION_TIER2_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_ADELARD_PROMOTION_TIER2_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 0x11677)) && ((MARVIN_ARAXOSSPECIALIZATION) == (ARAXOS_SPECIALIZATION_MASTERFIGHTER))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ADELARD_PROMOTION_TIER2_INFO() {
    CREATEINVITEMS(SELF, 0x8a83, 1);
    B_GIVEINVITEMS(SELF, OTHER, 0x8a83, 1);
    AI_EQUIPARMOR(SELF, 0x8a83);
    PROMOTION_ADELARD_RTNCHECK = 0;
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_Promotion_Tier2_03_01");
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_Promotion_Tier2_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_Promotion_Tier2_03_03");
    AI_WAITTILLEND(OTHER, SELF);
    AI_EQUIPARMOR(OTHER, 0x8a83);
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_Promotion_Tier2_03_04");
    AI_STARTFACEANI(OTHER, S_SMILE, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Adelard_Promotion_Tier2_15_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Adelard_Promotion_Tier2_03_06");
    RESTOREROUTINE_ADELARD();
    AI_STOPPROCESSINFOS(SELF);
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

instance DIA_ADELARD_AMBIENT(C_INFO) {
    NPC = 0xcb0a;
    NR = 950;
    CONDITION = DIA_ADELARD_AMBIENT_CONDITION;
    INFORMATION = DIA_ADELARD_AMBIENT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "How are you doing?";
}

func int DIA_ADELARD_AMBIENT_CONDITION() {
    if (((((LOG_GETSTATUS(MIS_Q204)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x1156e))) || ((LOG_GETSTATUS(MIS_QA401)) == (LOG_RUNNING))) || (((LOG_GETSTATUS(MIS_KQ407)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x10937)))) {
        return FALSE;
    };
    return TRUE;
}

func void DIA_ADELARD_AMBIENT_INFO() {
    AI_STARTFACEANI(OTHER, S_SMILE, 1, -(1));
    B_SAY(OTHER, SELF, "$MARVIN_WhatNew2");
    if ((HERO.GUILD) != (GIL_SLD)) {
        AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
        if ((HERO.GUILD) == (GIL_MIL)) {
            AI_OUTPUT(SELF, OTHER, "DIA_Adelard_Ambient_03_02");
            AI_OUTPUT(SELF, OTHER, "DIA_Adelard_Ambient_03_03");
        } else {
            AI_OUTPUT(SELF, OTHER, "DIA_Adelard_Ambient_03_01");
        } else {
            /* set_instance(0) */;
        };
    };
    if (((MARVIN_ARAXOSSPECIALIZATION) == (ARAXOS_SPECIALIZATION_FIGHTER)) || ((MARVIN_ARAXOSSPECIALIZATION) == (ARAXOS_SPECIALIZATION_MASTERFIGHTER))) {
        NPC_INITAMBIENTS(SELF, 2);
    };
    NPC_INITAMBIENTS(SELF, 1);
    if ((NPC_GETLASTAMBIENT(SELF)) == (1)) {
        if ((LOG_GETSTATUS(MIS_QA401)) == (LOG_SUCCESS)) {
            AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
            AI_OUTPUT(SELF, OTHER, "DIA_Adelard_Ambient_03_09");
            AI_OUTPUT(SELF, OTHER, "DIA_Adelard_Ambient_03_10");
        } else if ((LOG_GETSTATUS(MIS_Q206)) == (LOG_SUCCESS)) {
            AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
            AI_OUTPUT(SELF, OTHER, "DIA_Adelard_Ambient_03_07");
            AI_OUTPUT(SELF, OTHER, "DIA_Adelard_Ambient_03_08");
        } else {
            AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
            AI_OUTPUT(SELF, OTHER, "DIA_Adelard_Ambient_03_04");
        } else {
            /* set_instance(0) */;
        };
    };
    if ((NPC_GETLASTAMBIENT(SELF)) == (2)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Adelard_Ambient_03_05");
        AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Adelard_Ambient_03_06");
    };
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

instance DIA_ADELARD_PICKPOCKET(C_INFO) {
    NPC = 0xcb0a;
    NR = 900;
    CONDITION = DIA_ADELARD_PICKPOCKET_CONDITION;
    INFORMATION = DIA_ADELARD_PICKPOCKET_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = PICKPOCKET_120;
}

func int DIA_ADELARD_PICKPOCKET_CONDITION() {
    if (((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) && ((SELF.AIVAR[6]) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ADELARD_PICKPOCKET_INFO() {
    INFO_CLEARCHOICES(0x1126f);
    INFO_ADDCHOICE(0x1126f, DIALOG_BACK, 0x11273);
    INFO_ADDCHOICE(0x1126f, DIALOG_PICKPOCKET, 0x11272);
}

func void DIA_ADELARD_PICKPOCKET_DOIT() {
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (3)) {
        B_PICKPOCKET_AMBIENT_TIER_3();
        SELF.AIVAR[6] = TRUE;
        INFO_CLEARCHOICES(0x1126f);
    };
    AI_PLAYANI(HERO, T_CANNOTTAKE);
    PRINTSCREEN(PRINT_CANTPICKPOCKETTHISPERSON, -(1), -(1), FONT_SCREEN, 4);
    INFO_CLEARCHOICES(0x1126f);
}

func void DIA_ADELARD_PICKPOCKET_BACK() {
    INFO_CLEARCHOICES(0x1126f);
}

