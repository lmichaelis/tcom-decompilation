instance DIA_VOLKERGUARD04_EXIT(C_INFO) {
    NPC = 0xcfb9;
    NR = 999;
    CONDITION = DIA_VOLKERGUARD04_EXIT_CONDITION;
    INFORMATION = DIA_VOLKERGUARD04_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_VOLKERGUARD04_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_VOLKERGUARD04_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_VOLKERGUARD04_SQ225_FOLLOWME(C_INFO) {
    NPC = 0xcfb9;
    NR = 1;
    CONDITION = DIA_VOLKERGUARD04_SQ225_FOLLOWME_CONDITION;
    INFORMATION = DIA_VOLKERGUARD04_SQ225_FOLLOWME_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_VOLKERGUARD04_SQ225_FOLLOWME_CONDITION() {
    if (((SQ225_FOLLOWVOLKERGUARD) == (1)) && ((LOG_GETSTATUS(MIS_SQ225)) == (LOG_RUNNING))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_VOLKERGUARD04_SQ225_FOLLOWME_INFO() {
    SQ225_FOLLOWVOLKERGUARD = 2;
    AI_OUTPUT(SELF, OTHER, "DIA_VolkerGuard04_SQ225_FollowMe_03_01");
    AI_LOGENTRY(TOPIC_SQ225, LOG_SQ225_VOLKERGUARD_GUIDE);
    AI_STOPPROCESSINFOS(SELF);
    NPC_EXCHANGEROUTINE(SELF, "SQ225_GUIDE");
    B_STARTOTHERROUTINE(MIL_11180_CITYGUARD, "SQ225_WAIT");
    TELEPORTNPCTOWP(0xd111, MIL_11180_CITYGUARD.WP);
}

instance DIA_VOLKERGUARD_M4_BUSY(C_INFO) {
    NPC = 0xcfb9;
    NR = 1;
    CONDITION = DIA_VOLKERGUARD_M4_BUSY_CONDITION;
    INFORMATION = DIA_VOLKERGUARD_M4_BUSY_INFO;
    PERMANENT = TRUE;
    IMPORTANT = TRUE;
}

func int DIA_VOLKERGUARD_M4_BUSY_CONDITION() {
    if (((SQ225_FOLLOWVOLKERGUARD) == (1)) && ((LOG_GETSTATUS(MIS_SQ225)) == (LOG_RUNNING))) {
        return FALSE;
    };
    if (NPC_ISINSTATE(SELF, 0xf09f)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_VOLKERGUARD_M4_BUSY_INFO() {
    DIA_IMBUSY_ANGRY();
}

