instance DIA_MALEN_EXIT(C_INFO) {
    NPC = 0xdf7d;
    NR = 999;
    CONDITION = DIA_MALEN_EXIT_CONDITION;
    INFORMATION = DIA_MALEN_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_MALEN_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_MALEN_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_MALEN_HELLO(C_INFO) {
    NPC = 0xdf7d;
    NR = 1;
    CONDITION = DIA_MALEN_HELLO_CONDITION;
    INFORMATION = DIA_MALEN_HELLO_INFO;
    PERMANENT = TRUE;
    IMPORTANT = TRUE;
}

func int DIA_MALEN_HELLO_CONDITION() {
    if ((NPC_ISINSTATE(SELF, 0xf09f)) && ((LOG_GETSTATUS(MIS_SQ311)) != (LOG_RUNNING))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_MALEN_HELLO_INFO() {
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_HELLO_03_01");
}

instance DIA_MALEN_SQ311_HELLO(C_INFO) {
    NPC = 0xdf7d;
    NR = 1;
    CONDITION = DIA_MALEN_SQ311_HELLO_CONDITION;
    INFORMATION = DIA_MALEN_SQ311_HELLO_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Why are you all so upset?";
}

func int DIA_MALEN_SQ311_HELLO_CONDITION() {
    if ((KAPITEL) >= (3)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_MALEN_SQ311_HELLO_INFO() {
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_Hello_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_Hello_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_Hello_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_Hello_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_Hello_03_05");
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_Hello_15_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_Hello_03_07");
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_Hello_15_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_Hello_03_09");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_Hello_03_10");
}

instance DIA_MALEN_SQ311_WHY(C_INFO) {
    NPC = 0xdf7d;
    NR = 1;
    CONDITION = DIA_MALEN_SQ311_WHY_CONDITION;
    INFORMATION = DIA_MALEN_SQ311_WHY_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "In that case, why are you talking to me?";
}

func int DIA_MALEN_SQ311_WHY_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x13bed)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_MALEN_SQ311_WHY_INFO() {
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_Why_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_Why_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_Why_03_03");
    if (NPC_HASGUILDARMOREQUIPPED(OTHER, GIL_MIL)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_Why_03_04");
    };
    if (NPC_HASGUILDARMOREQUIPPED(OTHER, GIL_SLD)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_Why_03_05");
    };
}

instance DIA_MALEN_SQ311_GUARDS(C_INFO) {
    NPC = 0xdf7d;
    NR = 1;
    CONDITION = DIA_MALEN_SQ311_GUARDS_CONDITION;
    INFORMATION = DIA_MALEN_SQ311_GUARDS_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "What are the guards not good at?";
}

func int DIA_MALEN_SQ311_GUARDS_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x13bf0)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_MALEN_SQ311_GUARDS_INFO() {
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_Guards_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_Guards_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_Guards_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_Guards_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_Guards_03_05");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_Guards_03_06");
}

instance DIA_MALEN_SQ311_START(C_INFO) {
    NPC = 0xdf7d;
    NR = 1;
    CONDITION = DIA_MALEN_SQ311_START_CONDITION;
    INFORMATION = DIA_MALEN_SQ311_START_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I can talk to Lewko.";
}

func int DIA_MALEN_SQ311_START_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x13bf3)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_MALEN_SQ311_START_INFO() {
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_Start_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_Start_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_Start_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_Start_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_Start_03_05");
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_Start_15_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_Start_03_07");
    AI_STOPPROCESSINFOS(SELF);
    LOG_CREATETOPIC(TOPIC_SQ311, LOG_MISSION);
    LOG_SETSTATUS(_@(MIS_SQ311), TOPIC_SQ311, LOG_RUNNING);
    AI_LOGENTRY(TOPIC_SQ311, LOG_SQ311_START);
}

instance DIA_MALEN_SQ311_NOTSEARCH(C_INFO) {
    NPC = 0xdf7d;
    NR = 1;
    CONDITION = DIA_MALEN_SQ311_NOTSEARCH_CONDITION;
    INFORMATION = DIA_MALEN_SQ311_NOTSEARCH_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Lewko's people are no longer looking for the missing.";
}

func int DIA_MALEN_SQ311_NOTSEARCH_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ311)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x13b87))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_MALEN_SQ311_NOTSEARCH_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_NotSearch_15_01");
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_NotSearch_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_NotSearch_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_NotSearch_03_04");
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_NotSearch_15_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_NotSearch_03_06");
    AI_LOGENTRY(TOPIC_SQ311, LOG_SQ311_MALEN_NEWS);
}

instance DIA_MALEN_SQ311_MAYBEME(C_INFO) {
    NPC = 0xdf7d;
    NR = 1;
    CONDITION = DIA_MALEN_SQ311_MAYBEME_CONDITION;
    INFORMATION = DIA_MALEN_SQ311_MAYBEME_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "What if I would investigate this matter?";
}

func int DIA_MALEN_SQ311_MAYBEME_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ311)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x13bf9))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_MALEN_SQ311_MAYBEME_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_MaybeMe_15_01");
    AI_STARTFACEANI(SELF, S_SURPRISE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_MaybeMe_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_MaybeMe_15_03");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_MaybeMe_03_04");
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_MaybeMe_15_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_MaybeMe_03_06");
    INFO_CLEARCHOICES(0x13bfc);
    INFO_ADDCHOICE(0x13bfc, "Who did Reez often talk to?", 0x13c00);
    INFO_ADDCHOICE(0x13bfc, "Who was sticking with Ogis?", 0x13bff);
}

func void DIA_MALEN_SQ311_MAYBEME_OGIS() {
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_MaybeMe_Ogis_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_MaybeMe_Ogis_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_MaybeMe_Ogis_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_MaybeMe_Ogis_03_04");
}

func void DIA_MALEN_SQ311_MAYBEME_REEZ() {
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_MaybeMe_Reez_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_MaybeMe_Reez_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_MaybeMe_Reez_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_MaybeMe_Reez_03_04");
}

instance DIA_MALEN_SQ311_TALK(C_INFO) {
    NPC = 0xdf7d;
    NR = 1;
    CONDITION = DIA_MALEN_SQ311_TALK_CONDITION;
    INFORMATION = DIA_MALEN_SQ311_TALK_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I'll talk to them.";
}

func int DIA_MALEN_SQ311_TALK_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ311)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x13bfc))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_MALEN_SQ311_TALK_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_Talk_15_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_Talk_15_02");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_Talk_03_03");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_Talk_03_04");
    AI_LOGENTRY(TOPIC_SQ311, LOG_SQ311_MALEN_STARTSEARCH);
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_MALEN_SQ311_GOTKEY(C_INFO) {
    NPC = 0xdf7d;
    NR = 1;
    CONDITION = DIA_MALEN_SQ311_GOTKEY_CONDITION;
    INFORMATION = DIA_MALEN_SQ311_GOTKEY_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I found two fragments of some kind of key.";
}

func int DIA_MALEN_SQ311_GOTKEY_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_SQ311)) == (LOG_RUNNING)) && ((NPC_HASITEMS(OTHER, 0x9174)) >= (1))) && ((NPC_HASITEMS(OTHER, 0x9175)) >= (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_MALEN_SQ311_GOTKEY_INFO() {
    AI_STARTFACEANI(SELF, S_SURPRISE, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_GotKey_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_GotKey_03_02");
    B_GIVEINVITEMS(OTHER, SELF, 0x9175, 1);
    AI_STARTFACEANI(SELF, S_THINK, 1, -(1));
    B_GIVEINVITEMS(OTHER, SELF, 0x9174, 1);
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_GotKey_03_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_GotKey_15_04");
    AI_STARTFACEANI(SELF, S_SURPRISE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_GotKey_03_05");
    AI_STARTFACEANI(OTHER, S_TIRED, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_GotKey_15_06");
    AI_STARTFACEANI(SELF, S_SAD, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_GotKey_03_07");
    AI_RESETFACEANI(OTHER);
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_GotKey_15_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_GotKey_03_09");
}

instance DIA_MALEN_SQ311_WHATNEXT(C_INFO) {
    NPC = 0xdf7d;
    NR = 1;
    CONDITION = DIA_MALEN_SQ311_WHATNEXT_CONDITION;
    INFORMATION = DIA_MALEN_SQ311_WHATNEXT_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "What about these fragments?";
}

func int DIA_MALEN_SQ311_WHATNEXT_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ311)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x13c04))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

var int MALEN_SQ311_WHATNEXT_WHERE = 0;
var int MALEN_SQ311_WHATNEXT_WHO = 0;
var int MALEN_SQ311_WHATNEXT_IDEA = 0;
var int MALEN_SQ311_WHATNEXT_COUNT = 0;
func void DIA_MALEN_SQ311_WHATNEXT_CHOICES() {
    INFO_CLEARCHOICES(0x13c07);
    AI_RESETFACEANI(OTHER);
    if ((MALEN_SQ311_WHATNEXT_IDEA) == (FALSE)) {
        INFO_ADDCHOICE(0x13c07, "Any idea what might be in it?", 0x13c12);
    };
    if ((MALEN_SQ311_WHATNEXT_WHO) == (FALSE)) {
        INFO_ADDCHOICE(0x13c07, "Is someone watching it?", 0x13c11);
    };
    if ((MALEN_SQ311_WHATNEXT_WHERE) == (FALSE)) {
        INFO_ADDCHOICE(0x13c07, "Where is it?", 0x13c10);
    };
}

func void DIA_MALEN_SQ311_WHATNEXT_COUNT() {
    MALEN_SQ311_WHATNEXT_COUNT = (MALEN_SQ311_WHATNEXT_COUNT) + (1);
    if ((MALEN_SQ311_WHATNEXT_COUNT) == (3)) {
        AI_RESETFACEANI(OTHER);
        INFO_CLEARCHOICES(0x13c07);
        INFO_ADDCHOICE(0x13c07, "Keep your fingers crossed for me.", 0x13c13);
    };
    DIA_MALEN_SQ311_WHATNEXT_CHOICES();
}

func void DIA_MALEN_SQ311_WHATNEXT_INFO() {
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_WhatNext_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_WhatNext_03_02");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_WhatNext_03_03");
    CREATEINVITEMS(SELF, 0x9178, 1);
    B_GIVEINVITEMS(SELF, OTHER, 0x9178, 1);
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_WhatNext_15_04");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_WhatNext_03_05");
    DIA_MALEN_SQ311_WHATNEXT_CHOICES();
}

func void DIA_MALEN_SQ311_WHATNEXT_WHERE() {
    MALEN_SQ311_WHATNEXT_WHERE = TRUE;
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_WhatNext_Where_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_WhatNext_Where_03_02");
    DIA_MALEN_SQ311_WHATNEXT_COUNT();
}

func void DIA_MALEN_SQ311_WHATNEXT_WHO() {
    MALEN_SQ311_WHATNEXT_WHO = TRUE;
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_WhatNext_Who_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_WhatNext_Who_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_WhatNext_Who_03_03");
    AI_STARTFACEANI(OTHER, S_SMILE, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_WhatNext_Who_15_04");
    DIA_MALEN_SQ311_WHATNEXT_COUNT();
}

func void DIA_MALEN_SQ311_WHATNEXT_IDEA() {
    MALEN_SQ311_WHATNEXT_IDEA = TRUE;
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_WhatNext_Idea_15_01");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_WhatNext_Idea_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_WhatNext_Idea_03_03");
    if (NPC_HASGUILDARMOREQUIPPED(OTHER, GIL_MIL)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_WhatNext_Idea_03_04");
    };
    if (NPC_HASGUILDARMOREQUIPPED(OTHER, GIL_SLD)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_WhatNext_Idea_03_05");
    };
    AI_RESETFACEANI(SELF);
    DIA_MALEN_SQ311_WHATNEXT_COUNT();
}

func void DIA_MALEN_SQ311_WHATNEXT_LEAVE() {
    SQ311_FINDCHEST = 1;
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_WhatNext_Leave_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_WhatNext_Leave_03_02");
    AI_LOGENTRY(TOPIC_SQ311, LOG_SQ311_MALEN_GOTKEY);
    INFO_CLEARCHOICES(0x13c07);
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_MALEN_SQ311_FOUNDLETTER(C_INFO) {
    NPC = 0xdf7d;
    NR = 1;
    CONDITION = DIA_MALEN_SQ311_FOUNDLETTER_CONDITION;
    INFORMATION = DIA_MALEN_SQ311_FOUNDLETTER_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I found this letter in the chest.";
}

func int DIA_MALEN_SQ311_FOUNDLETTER_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ311)) == (LOG_RUNNING)) && ((NPC_HASITEMS(OTHER, 0x9179)) >= (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

var int MALEN_SQ311_FOUNDLETTER_SALT = 0;
var int MALEN_SQ311_FOUNDLETTER_MORE = 0;
var int MALEN_SQ311_FOUNDLETTER_WHAT = 0;
var int MALEN_SQ311_FOUNDLETTER_COUNT = 0;
func void DIA_MALEN_SQ311_FOUNDLETTER_CHOICES() {
    INFO_CLEARCHOICES(0x13c14);
    if ((MALEN_SQ311_FOUNDLETTER_SALT) == (FALSE)) {
        INFO_ADDCHOICE(0x13c14, "Is this salt worth killing for?", 0x13c1f);
    };
    if ((MALEN_SQ311_FOUNDLETTER_MORE) == (FALSE)) {
        INFO_ADDCHOICE(0x13c14, "Is there anything else in the letter?", 0x13c1e);
    };
    if ((MALEN_SQ311_FOUNDLETTER_WHAT) == (FALSE)) {
        INFO_ADDCHOICE(0x13c14, "What are you gonna do?", 0x13c1d);
    };
}

func void DIA_MALEN_SQ311_FOUNDLETTER_COUNT() {
    MALEN_SQ311_FOUNDLETTER_COUNT = (MALEN_SQ311_FOUNDLETTER_COUNT) + (1);
    if ((MALEN_SQ311_FOUNDLETTER_COUNT) == (3)) {
        INFO_CLEARCHOICES(0x13c14);
        INFO_ADDCHOICE(0x13c14, "Give me that letter.", 0x13c20);
    };
    DIA_MALEN_SQ311_FOUNDLETTER_CHOICES();
}

func void DIA_MALEN_SQ311_FOUNDLETTER_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_FoundLetter_15_01");
    B_STANDUP();
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_FoundLetter_03_02");
    B_USEFAKESCROLL();
    B_GIVEINVITEMS(OTHER, SELF, 0x9179, 1);
    AI_STARTFACEANI(SELF, S_FRIGHTENED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_FoundLetter_03_03");
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_FoundLetter_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_FoundLetter_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_FoundLetter_03_06");
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_FoundLetter_15_07");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_FoundLetter_03_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_FoundLetter_03_09");
    AI_RESETFACEANI(OTHER);
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_FoundLetter_15_10");
    AI_STARTFACEANI(SELF, S_SAD, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_FoundLetter_03_11");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_FoundLetter_03_12");
    DIA_MALEN_SQ311_FOUNDLETTER_CHOICES();
}

func void DIA_MALEN_SQ311_FOUNDLETTER_WHAT() {
    MALEN_SQ311_FOUNDLETTER_WHAT = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_FoundLetter_What_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_FoundLetter_What_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_FoundLetter_What_03_03");
    DIA_MALEN_SQ311_FOUNDLETTER_COUNT();
}

func void DIA_MALEN_SQ311_FOUNDLETTER_MORE() {
    MALEN_SQ311_FOUNDLETTER_MORE = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_FoundLetter_More_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_FoundLetter_More_03_02");
    AI_STARTFACEANI(OTHER, S_THINK, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_FoundLetter_More_15_03");
    AI_STARTFACEANI(SELF, S_DOUBT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_FoundLetter_More_03_04");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    DIA_MALEN_SQ311_FOUNDLETTER_COUNT();
}

func void DIA_MALEN_SQ311_FOUNDLETTER_SALT() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_FoundLetter_Salt_15_01");
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_FoundLetter_Salt_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_FoundLetter_Salt_03_03");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    DIA_MALEN_SQ311_FOUNDLETTER_COUNT();
}

func void DIA_MALEN_SQ311_FOUNDLETTER_LEAVE() {
    AI_OUTPUT(OTHER, SELF, "DIA_Malen_SQ311_FoundLetter_Leave_15_01");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_FoundLetter_Leave_03_02");
    B_GIVEINVITEMS(SELF, OTHER, 0x9179, 1);
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_FoundLetter_Leave_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Malen_SQ311_FoundLetter_Leave_03_04");
    INFO_CLEARCHOICES(0x13c14);
    AI_STOPPROCESSINFOS(SELF);
    AI_LOGENTRY(TOPIC_SQ311, LOG_SQ311_MALEN_RODERICH);
}

instance DIA_MALEN_PICKPOCKET(C_INFO) {
    NPC = 0xdf7d;
    NR = 900;
    CONDITION = DIA_MALEN_PICKPOCKET_CONDITION;
    INFORMATION = DIA_MALEN_PICKPOCKET_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = PICKPOCKET_40;
}

func int DIA_MALEN_PICKPOCKET_CONDITION() {
    if (((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) && ((SELF.AIVAR[6]) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_MALEN_PICKPOCKET_INFO() {
    INFO_CLEARCHOICES(0x13c21);
    INFO_ADDCHOICE(0x13c21, DIALOG_BACK, 0x13c25);
    INFO_ADDCHOICE(0x13c21, DIALOG_PICKPOCKET, 0x13c24);
}

func void DIA_MALEN_PICKPOCKET_DOIT() {
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) {
        CREATEINVITEMS(SELF, 0x904e, 1);
        B_GIVEINVITEMS(SELF, OTHER, 0x904e, 1);
        B_PICKPOCKET_AMBIENT_TIER_1();
        SELF.AIVAR[6] = TRUE;
        INFO_CLEARCHOICES(0x13c21);
    };
    AI_PLAYANI(HERO, T_CANNOTTAKE);
    PRINTSCREEN(PRINT_CANTPICKPOCKETTHISPERSON, -(1), -(1), FONT_SCREEN, 4);
    INFO_CLEARCHOICES(0x13c21);
}

func void DIA_MALEN_PICKPOCKET_BACK() {
    INFO_CLEARCHOICES(0x13c21);
}

