instance CH(NPC_DEFAULT) {
    NPC_DEFAULT();
    NAME[0] = "Character Helper";
    GUILD = GIL_NONE;
    ID = 0;
    VOICE = 15;
    FLAGS = 0;
    NPCTYPE = NPCTYPE_FRIEND;
    B_SETATTRIBUTESTOCHAPTER(CH, 1);
    B_GIVENPCTALENTS(CH);
    FIGHT_TACTIC = FAI_HUMAN_MASTER;
    B_CREATEAMBIENTINV(CH);
    B_SETNPCVISUAL(CH, MALE, HUMHEADPONY, FACE_N_CHARACTERHELPER, BODYTEX_PLAYER, -(1));
    MDL_SETMODELFATNESS(CH, 0);
    MDL_APPLYOVERLAYMDS(CH, HUMANSRELAXEDMDS);
    DAILY_ROUTINE = RTN_START_0;
}

func void RTN_START_0() {
    TA_STAND_ARMSCROSSED(8, 0, 23, 0, "XXX");
    TA_STAND_ARMSCROSSED(23, 0, 8, 0, "XXX");
}

func void B_SETHEROEXP() {
    HERO.EXP = ((250) * ((HERO.LEVEL) + (1))) * (HERO.LEVEL);
    HERO.EXP_NEXT = ((250) * ((HERO.LEVEL) + (2))) * ((HERO.LEVEL) + (1));
    HERO.LP = (HERO.LEVEL) * (LP_PER_LEVEL);
    HERO.ATTRIBUTE[1] = (40) + ((10) * (HERO.LEVEL));
    HERO.ATTRIBUTE[0] = HERO.ATTRIBUTE[1];
    ATTRIBUTES = "Nowy poziom!  Punkty nauki:";
    ATTRIBUTES = CONCATSTRINGS(ATTRIBUTES, INTTOSTRING(HERO.LP));
    ATTRIBUTES = CONCATSTRINGS(ATTRIBUTES, " Punkty trafieñ:");
    ATTRIBUTES = CONCATSTRINGS(ATTRIBUTES, INTTOSTRING(HERO.ATTRIBUTE[1]));
    PRINTSCREEN(ATTRIBUTES, -(1), -(1), FONT_SCREEN, 3);
    SND_PLAY("LEVELUP");
}

var string B_SETHEROEXP.ATTRIBUTES = "";
func void B_SETHEROWEAPON() {
    if ((HERO.LEVEL) <= (6)) {
        CREATEINVITEMS(HERO, 0x866b, 1);
    };
    if ((HERO.LEVEL) <= (12)) {
        CREATEINVITEMS(HERO, 0x865a, 1);
        CREATEINVITEMS(HERO, 0x866e, 1);
    };
    if ((HERO.LEVEL) <= (18)) {
        CREATEINVITEMS(HERO, 0x8673, 1);
    };
    if ((HERO.LEVEL) <= (24)) {
        CREATEINVITEMS(HERO, 0x8660, 1);
        CREATEINVITEMS(HERO, 0x8676, 1);
    };
    if ((HERO.LEVEL) <= (30)) {
        CREATEINVITEMS(HERO, 0x8665, 1);
        CREATEINVITEMS(HERO, 0x8678, 1);
    };
    if ((HERO.LEVEL) <= (36)) {
        CREATEINVITEMS(HERO, 0x8669, 1);
        CREATEINVITEMS(HERO, 0x865a, 1);
    };
    AI_EQUIPBESTRANGEDWEAPON(HERO);
}

func void B_SETHEROEQUIPMENT() {
    CREATEINVITEMS(HERO, 0x864f, 100);
    CREATEINVITEMS(HERO, 0x8650, 100);
    CREATEINVITEMS(HERO, 0x87b6, 30);
    CREATEINVITEMS(HERO, 0x859b, 500);
    CREATEINVITEMS(HERO, 0x8635, 5);
    CREATEINVITEMS(HERO, 0x8628, 5);
    CREATEINVITEMS(HERO, 0x84ca, 30);
}

func void B_SETKDFRUNES() {
    if ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_MAGE)) == (1)) {
        CREATEINVITEMS(HERO, 0x8723, 1);
        CREATEINVITEMS(HERO, 0x8724, 1);
        CREATEINVITEMS(HERO, 0x8726, 1);
        CREATEINVITEMS(HERO, 0x8727, 1);
        CREATEINVITEMS(HERO, 0x8725, 1);
    };
    if ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_MAGE)) == (2)) {
        CREATEINVITEMS(HERO, 0x8728, 1);
        CREATEINVITEMS(HERO, 0x8729, 1);
        CREATEINVITEMS(HERO, 0x872a, 1);
        CREATEINVITEMS(HERO, 0x872b, 1);
        CREATEINVITEMS(HERO, 0x872c, 1);
    };
    if ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_MAGE)) == (3)) {
        CREATEINVITEMS(HERO, 0x872d, 1);
        CREATEINVITEMS(HERO, 0x8737, 1);
        CREATEINVITEMS(HERO, 0x8733, 1);
        CREATEINVITEMS(HERO, 0x8730, 1);
        CREATEINVITEMS(HERO, 0x8731, 1);
        CREATEINVITEMS(HERO, 0x8732, 1);
    };
    if ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_MAGE)) == (4)) {
        CREATEINVITEMS(HERO, 0x8734, 1);
        CREATEINVITEMS(HERO, 0x8735, 1);
        CREATEINVITEMS(HERO, 0x872e, 1);
        CREATEINVITEMS(HERO, 0x872f, 1);
    };
    if ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_MAGE)) == (5)) {
        CREATEINVITEMS(HERO, 0x8736, 1);
        CREATEINVITEMS(HERO, 0x8738, 1);
        CREATEINVITEMS(HERO, 0x8739, 1);
        CREATEINVITEMS(HERO, 0x873a, 1);
    };
    if ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_MAGE)) == (6)) {
        CREATEINVITEMS(HERO, 0x873b, 1);
        CREATEINVITEMS(HERO, 0x873c, 1);
        CREATEINVITEMS(HERO, 0x873d, 1);
        CREATEINVITEMS(HERO, 0x873f, 1);
        CREATEINVITEMS(HERO, 0x8740, 1);
    };
}

func void B_SETPALADINEQUIPMENT() {
    CREATEINVITEMS(HERO, 0x871a, 1);
    CREATEINVITEMS(HERO, 0x871b, 1);
    CREATEINVITEMS(HERO, 0x871e, 1);
    CREATEINVITEMS(HERO, 0x871c, 1);
    CREATEINVITEMS(HERO, 0x871f, 1);
    CREATEINVITEMS(HERO, 0x871d, 1);
    CREATEINVITEMS(HERO, 0x8720, 1);
    CREATEINVITEMS(HERO, 0x8721, 1);
}

instance CH_KRIEGEN(C_INFO) {
    NPC = 0x16b64;
    NR = 999;
    CONDITION = CH_KRIEGEN_CONDITION;
    INFORMATION = CH_KRIEGEN_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "1 Erz geben";
}

func int CH_KRIEGEN_CONDITION() {
    if (((((((LEVELSTART) == (FALSE)) && ((MAGIESTART) == (FALSE))) && ((ATTRIBUTESTART) == (FALSE))) && ((KAMPFSTART) == (FALSE))) && ((DIEBSTART) == (FALSE))) && ((MISCSTART) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void CH_KRIEGEN_INFO() {
    B_GIVEINVITEMS(OTHER, SELF, 0x859a, 1);
}

instance CH_GEBEN(C_INFO) {
    NPC = 0x16b64;
    NR = 999;
    CONDITION = CH_GEBEN_CONDITION;
    INFORMATION = CH_GEBEN_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Poka¿ coœ";
}

func int CH_GEBEN_CONDITION() {
    if (((((((LEVELSTART) == (FALSE)) && ((MAGIESTART) == (FALSE))) && ((ATTRIBUTESTART) == (FALSE))) && ((KAMPFSTART) == (FALSE))) && ((DIEBSTART) == (FALSE))) && ((MISCSTART) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void CH_GEBEN_INFO() {
    AI_PRINTSCREEN("Daj kie³basê", -(1), 43, FONT_SCREENSMALL, 2);
}

instance CH_EXIT(C_INFO) {
    NPC = 0x16b64;
    NR = 999;
    CONDITION = CH_EXIT_CONDITION;
    INFORMATION = CH_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int CH_EXIT_CONDITION() {
    if (((((((LEVELSTART) == (FALSE)) && ((MAGIESTART) == (FALSE))) && ((ATTRIBUTESTART) == (FALSE))) && ((KAMPFSTART) == (FALSE))) && ((DIEBSTART) == (FALSE))) && ((MISCSTART) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void CH_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance CH_RESET(C_INFO) {
    NPC = 0x16b64;
    NR = 20;
    CONDITION = CH_RESET_CONDITION;
    INFORMATION = CH_RESET_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Totalny reset";
}

func int CH_RESET_CONDITION() {
    if ((LEVELSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void CH_RESET_INFO() {
    HERO.GUILD = GIL_NONE;
    NPC_SETTRUEGUILD(HERO, GIL_NONE);
    HERO.LP = 0;
    HERO.LEVEL = 0;
    HERO.EXP = 0;
    HERO.EXP_NEXT = 500;
    HERO.ATTRIBUTE[4] = 10;
    HERO.ATTRIBUTE[5] = 10;
    HERO.ATTRIBUTE[3] = 5;
    HERO.ATTRIBUTE[2] = 5;
    HERO.ATTRIBUTE[0] = 40;
    HERO.ATTRIBUTE[1] = 40;
    NPC_SETTALENTSKILL(HERO, NPC_TALENT_SMITH, 0);
    NPC_SETTALENTSKILL(HERO, NPC_TALENT_ALCHEMY, 0);
    NPC_SETTALENTSKILL(HERO, NPC_TALENT_RUNES, 0);
    NPC_SETTALENTSKILL(HERO, NPC_TALENT_MAGE, 0);
    NPC_SETTALENTSKILL(HERO, NPC_TALENT_BOW, 0);
    OTHER.HITCHANCE[3] = 0;
    NPC_SETTALENTSKILL(HERO, NPC_TALENT_CROSSBOW, 0);
    OTHER.HITCHANCE[4] = 0;
    NPC_SETTALENTSKILL(HERO, NPC_TALENT_1H, 0);
    OTHER.HITCHANCE[1] = 0;
    NPC_SETTALENTSKILL(HERO, NPC_TALENT_2H, 0);
    NPC_SETTALENTSKILL(HERO, NPC_TALENT_MAGE, 0);
    OTHER.HITCHANCE[2] = 0;
    AI_UNEQUIPARMOR(HERO);
    PRINTSCREEN("PC_Hero przywrócony do stanu pocz¹tkowego", -(1), -(1), FONT_SCREEN, 2);
}

instance CH_GUILD(C_INFO) {
    NPC = 0x16b64;
    NR = 7;
    CONDITION = CH_GUILD_CONDITION;
    INFORMATION = CH_GUILD_INFO;
    IMPORTANT = 0;
    PERMANENT = 1;
    DESCRIPTION = "Wybór gildii";
}

func int CH_GUILD_CONDITION() {
    if ((LEVELSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void CH_GUILD_INFO() {
    INFO_CLEARCHOICES(0x16b78);
    INFO_ADDCHOICE(0x16b78, DIALOG_BACK, 0x16b7b);
    INFO_ADDCHOICE(0x16b78, "Nowicjusz", 0x16b7d);
    INFO_ADDCHOICE(0x16b78, "Mag ognia", 0x16b7e);
    INFO_ADDCHOICE(0x16b78, "Najemnik", 0x16b7f);
    INFO_ADDCHOICE(0x16b78, "£owca smoków", 0x16b80);
    INFO_ADDCHOICE(0x16b78, "Stra¿nik", 0x16b81);
    INFO_ADDCHOICE(0x16b78, "Paladyn", 0x16b82);
    INFO_ADDCHOICE(0x16b78, "Brak", 0x16b83);
    INFO_ADDCHOICE(0x16b78, "Fa³szywy bandyta", 0x16b7c);
}

func void CH_GUILD_BACK() {
    INFO_CLEARCHOICES(0x16b78);
}

func void CH_FAKEBANDIT() {
    CREATEINVITEMS(HERO, 0x8482, 1);
    CREATEINVITEMS(HERO, 0x8483, 1);
    AI_EQUIPBESTARMOR(HERO);
}

func void CH_NOV() {
    INFO_CLEARCHOICES(0x16b78);
    OTHER.GUILD = GIL_NOV;
    NPC_SETTRUEGUILD(OTHER, GIL_NOV);
    CREATEINVITEM(HERO, 0x8479);
    AI_EQUIPARMOR(HERO, 0x8479);
}

func void CH_KDF() {
    INFO_CLEARCHOICES(0x16b78);
    OTHER.GUILD = GIL_KDF;
    NPC_SETTRUEGUILD(OTHER, GIL_KDF);
    CREATEINVITEM(HERO, 0x847c);
    AI_EQUIPARMOR(HERO, 0x847c);
}

func void CH_SLD() {
    INFO_CLEARCHOICES(0x16b78);
    OTHER.GUILD = GIL_SLD;
    NPC_SETTRUEGUILD(OTHER, GIL_SLD);
}

func void CH_DJG() {
    INFO_CLEARCHOICES(0x16b78);
    OTHER.GUILD = GIL_DJG;
    NPC_SETTRUEGUILD(OTHER, GIL_DJG);
}

func void CH_MIL() {
    INFO_CLEARCHOICES(0x16b78);
    OTHER.GUILD = GIL_MIL;
    NPC_SETTRUEGUILD(OTHER, GIL_MIL);
    CREATEINVITEM(HERO, 0x846f);
    AI_EQUIPARMOR(HERO, 0x846f);
}

func void CH_PAL() {
    INFO_CLEARCHOICES(0x16b78);
    OTHER.GUILD = GIL_PAL;
    NPC_SETTRUEGUILD(OTHER, GIL_PAL);
    CREATEINVITEM(HERO, 0x8b25);
    AI_EQUIPARMOR(HERO, 0x8b25);
    B_SETPALADINEQUIPMENT();
}

func void CH_NONE() {
    INFO_CLEARCHOICES(0x16b78);
    OTHER.GUILD = GIL_NONE;
    NPC_SETTRUEGUILD(OTHER, GIL_NONE);
    AI_UNEQUIPARMOR(HERO);
}

var int LEVELSTART = 0;
instance CH_LEVEL_START(C_INFO) {
    NPC = 0x16b64;
    CONDITION = CH_LEVEL_START_CONDITION;
    INFORMATION = CH_LEVEL_START_INFO;
    DESCRIPTION = "Poziom, punkty nauki i gildia";
    PERMANENT = TRUE;
}

func int CH_LEVEL_START_CONDITION() {
    if (((((((LEVELSTART) == (FALSE)) && ((MAGIESTART) == (FALSE))) && ((ATTRIBUTESTART) == (FALSE))) && ((KAMPFSTART) == (FALSE))) && ((DIEBSTART) == (FALSE))) && ((MISCSTART) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void CH_LEVEL_START_INFO() {
    LEVELSTART = TRUE;
}

instance CH_LEVEL_STOPPER(C_INFO) {
    NPC = 0x16b64;
    NR = 99;
    CONDITION = CH_LEVEL_STOPPER_CONDITION;
    INFORMATION = CH_LEVEL_STOPPER_INFO;
    DESCRIPTION = DIALOG_BACK;
    PERMANENT = TRUE;
}

func int CH_LEVEL_STOPPER_CONDITION() {
    if ((LEVELSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void CH_LEVEL_STOPPER_INFO() {
    INFO_CLEARCHOICES(0x16b88);
    LEVELSTART = FALSE;
}

instance CH_LERNPUNKTE(C_INFO) {
    NPC = 0x16b64;
    NR = 5;
    CONDITION = CH_LERNPUNKTE_CONDITION;
    INFORMATION = CH_LERNPUNKTE_INFO;
    DESCRIPTION = "Punkty Nauki";
    PERMANENT = TRUE;
}

func int CH_LERNPUNKTE_CONDITION() {
    if ((LEVELSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void CH_LERNPUNKTE_INFO() {
    INFO_CLEARCHOICES(0x16b8b);
    INFO_ADDCHOICE(0x16b8b, DIALOG_BACK, 0x16b8e);
    INFO_ADDCHOICE(0x16b8b, "Punkty Nauki + 50", 0x16b8f);
    INFO_ADDCHOICE(0x16b8b, "Punkty Nauki + 25", 0x16b90);
    INFO_ADDCHOICE(0x16b8b, "Punkty Nauki + 10", 0x16b91);
    INFO_ADDCHOICE(0x16b8b, "Punkty Nauki + 5", 0x16b92);
}

func void CH_LERNPUNKTE_BACK() {
    INFO_CLEARCHOICES(0x16b8b);
}

func void CH_LERNPUNKTE_50() {
    INFO_CLEARCHOICES(0x16b8b);
    HERO.LP = (HERO.LP) + (50);
    PRINTSCREEN("+ 50 Punktów Nauki", -(1), -(1), FONT_SCREEN, 3);
    SND_PLAY("LEVELUP");
}

func void CH_LERNPUNKTE_25() {
    INFO_CLEARCHOICES(0x16b8b);
    HERO.LP = (HERO.LP) + (25);
    PRINTSCREEN("+ 25 Punktów Nauki", -(1), -(1), FONT_SCREEN, 3);
    SND_PLAY("LEVELUP");
}

func void CH_LERNPUNKTE_10() {
    INFO_CLEARCHOICES(0x16b8b);
    HERO.LP = (HERO.LP) + (10);
    PRINTSCREEN("+ 10 Punktów Nauki", -(1), -(1), FONT_SCREEN, 3);
    SND_PLAY("LEVELUP");
}

func void CH_LERNPUNKTE_5() {
    INFO_CLEARCHOICES(0x16b8b);
    HERO.LP = (HERO.LP) + (5);
    PRINTSCREEN("+ 5 Punktów Nauki", -(1), -(1), FONT_SCREEN, 3);
    SND_PLAY("LEVELUP");
}

instance CH_LEVEL_NIEDRIG(C_INFO) {
    NPC = 0x16b64;
    NR = 2;
    CONDITION = CH_LEVEL_NIEDRIG_CONDITION;
    INFORMATION = CH_LEVEL_NIEDRIG_INFO;
    DESCRIPTION = "Poziom  1 - 25";
    PERMANENT = TRUE;
}

func int CH_LEVEL_NIEDRIG_CONDITION() {
    if ((LEVELSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void CH_LEVEL_NIEDRIG_INFO() {
    INFO_CLEARCHOICES(0x16b93);
    INFO_ADDCHOICE(0x16b93, DIALOG_BACK, 0x16ba3);
    INFO_ADDCHOICE(0x16b93, "Poziom 21 - 25", 0x16b9e);
    INFO_ADDCHOICE(0x16b93, "Poziom 16 - 20", 0x16b9f);
    INFO_ADDCHOICE(0x16b93, "Poziom 11 - 15", 0x16ba0);
    INFO_ADDCHOICE(0x16b93, "Poziom  6 - 10", 0x16ba1);
    INFO_ADDCHOICE(0x16b93, "Poziom  1 -  5", 0x16ba2);
}

instance CH_LEVEL_HOCH(C_INFO) {
    NPC = 0x16b64;
    NR = 3;
    CONDITION = CH_LEVEL_HOCH_CONDITION;
    INFORMATION = CH_LEVEL_HOCH_INFO;
    DESCRIPTION = "Poziom   26 - 50";
    PERMANENT = TRUE;
}

func int CH_LEVEL_HOCH_CONDITION() {
    if ((LEVELSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void CH_LEVEL_HOCH_INFO() {
    INFO_CLEARCHOICES(0x16b96);
    INFO_ADDCHOICE(0x16b96, DIALOG_BACK, 0x16ba4);
    INFO_ADDCHOICE(0x16b96, "Poziom 46 - 50", 0x16b99);
    INFO_ADDCHOICE(0x16b96, "Poziom 41 - 45", 0x16b9a);
    INFO_ADDCHOICE(0x16b96, "Poziom 36 - 40", 0x16b9b);
    INFO_ADDCHOICE(0x16b96, "Poziom 31 - 35", 0x16b9c);
    INFO_ADDCHOICE(0x16b96, "Poziom 26 - 30", 0x16b9d);
}

func void CH_LEVEL46() {
    INFO_CLEARCHOICES(0x16b96);
    INFO_ADDCHOICE(0x16b96, DIALOG_BACK, 0x16ba4);
    INFO_ADDCHOICE(0x16b96, "Poziom 50", 0x16bd6);
    INFO_ADDCHOICE(0x16b96, "Poziom 49", 0x16bd5);
    INFO_ADDCHOICE(0x16b96, "Poziom 48", 0x16bd4);
    INFO_ADDCHOICE(0x16b96, "Poziom 47", 0x16bd3);
    INFO_ADDCHOICE(0x16b96, "Poziom 46", 0x16bd2);
}

func void CH_LEVEL41() {
    INFO_CLEARCHOICES(0x16b96);
    INFO_ADDCHOICE(0x16b96, DIALOG_BACK, 0x16ba4);
    INFO_ADDCHOICE(0x16b96, "Poziom 45", 0x16bd1);
    INFO_ADDCHOICE(0x16b96, "Poziom 44", 0x16bd0);
    INFO_ADDCHOICE(0x16b96, "Poziom 43", 0x16bcf);
    INFO_ADDCHOICE(0x16b96, "Poziom 42", 0x16bce);
    INFO_ADDCHOICE(0x16b96, "Poziom 41", 0x16bcd);
}

func void CH_LEVEL36() {
    INFO_CLEARCHOICES(0x16b96);
    INFO_ADDCHOICE(0x16b96, DIALOG_BACK, 0x16ba4);
    INFO_ADDCHOICE(0x16b96, "Poziom 40", 0x16bcc);
    INFO_ADDCHOICE(0x16b96, "Poziom 39", 0x16bcb);
    INFO_ADDCHOICE(0x16b96, "Poziom 38", 0x16bca);
    INFO_ADDCHOICE(0x16b96, "Poziom 37", 0x16bc9);
    INFO_ADDCHOICE(0x16b96, "Poziom 36", 0x16bc8);
}

func void CH_LEVEL31() {
    INFO_CLEARCHOICES(0x16b96);
    INFO_ADDCHOICE(0x16b96, DIALOG_BACK, 0x16ba4);
    INFO_ADDCHOICE(0x16b96, "Poziom 35", 0x16bc7);
    INFO_ADDCHOICE(0x16b96, "Poziom 34", 0x16bc6);
    INFO_ADDCHOICE(0x16b96, "Poziom 33", 0x16bc5);
    INFO_ADDCHOICE(0x16b96, "Poziom 32", 0x16bc4);
    INFO_ADDCHOICE(0x16b96, "Poziom 31", 0x16bc3);
}

func void CH_LEVEL26() {
    INFO_CLEARCHOICES(0x16b96);
    INFO_ADDCHOICE(0x16b96, DIALOG_BACK, 0x16ba4);
    INFO_ADDCHOICE(0x16b96, "Poziom 30", 0x16bc2);
    INFO_ADDCHOICE(0x16b96, "Poziom 29", 0x16bc1);
    INFO_ADDCHOICE(0x16b96, "Poziom 28", 0x16bc0);
    INFO_ADDCHOICE(0x16b96, "Poziom 27", 0x16bbf);
    INFO_ADDCHOICE(0x16b96, "Poziom 26", 0x16bbe);
}

func void CH_LEVEL21() {
    INFO_CLEARCHOICES(0x16b93);
    INFO_ADDCHOICE(0x16b93, DIALOG_BACK, 0x16ba3);
    INFO_ADDCHOICE(0x16b93, "Poziom 25", 0x16bbd);
    INFO_ADDCHOICE(0x16b93, "Poziom 24", 0x16bbc);
    INFO_ADDCHOICE(0x16b93, "Poziom 23", 0x16bbb);
    INFO_ADDCHOICE(0x16b93, "Poziom 22", 0x16bba);
    INFO_ADDCHOICE(0x16b93, "Poziom 21", 0x16bb9);
}

func void CH_LEVEL16() {
    INFO_CLEARCHOICES(0x16b93);
    INFO_ADDCHOICE(0x16b93, DIALOG_BACK, 0x16ba3);
    INFO_ADDCHOICE(0x16b93, "Poziom 20", 0x16bb8);
    INFO_ADDCHOICE(0x16b93, "Poziom 19", 0x16bb7);
    INFO_ADDCHOICE(0x16b93, "Poziom 18", 0x16bb6);
    INFO_ADDCHOICE(0x16b93, "Poziom 17", 0x16bb5);
    INFO_ADDCHOICE(0x16b93, "Poziom 16", 0x16bb4);
}

func void CH_LEVEL11() {
    INFO_CLEARCHOICES(0x16b93);
    INFO_ADDCHOICE(0x16b93, DIALOG_BACK, 0x16ba3);
    INFO_ADDCHOICE(0x16b93, "Poziom 15", 0x16bb3);
    INFO_ADDCHOICE(0x16b93, "Poziom 14", 0x16bb2);
    INFO_ADDCHOICE(0x16b93, "Poziom 13", 0x16bb1);
    INFO_ADDCHOICE(0x16b93, "Poziom 12", 0x16bb0);
    INFO_ADDCHOICE(0x16b93, "Poziom 11", 0x16baf);
}

func void CH_LEVEL6() {
    INFO_CLEARCHOICES(0x16b93);
    INFO_ADDCHOICE(0x16b93, DIALOG_BACK, 0x16ba3);
    INFO_ADDCHOICE(0x16b93, "Poziom 10", 0x16bae);
    INFO_ADDCHOICE(0x16b93, "Poziom  9", 0x16bad);
    INFO_ADDCHOICE(0x16b93, "Poziom  8", 0x16bac);
    INFO_ADDCHOICE(0x16b93, "Poziom  7", 0x16bab);
    INFO_ADDCHOICE(0x16b93, "Poziom  6", 0x16baa);
}

func void CH_LEVEL1() {
    INFO_CLEARCHOICES(0x16b93);
    INFO_ADDCHOICE(0x16b93, DIALOG_BACK, 0x16ba3);
    INFO_ADDCHOICE(0x16b93, "Poziom 5", 0x16ba9);
    INFO_ADDCHOICE(0x16b93, "Poziom 4", 0x16ba8);
    INFO_ADDCHOICE(0x16b93, "Poziom 3", 0x16ba7);
    INFO_ADDCHOICE(0x16b93, "Poziom 2", 0x16ba6);
    INFO_ADDCHOICE(0x16b93, "Poziom 1", 0x16ba5);
}

func void CH_LEVEL_NIEDRIG_BACK() {
    INFO_CLEARCHOICES(0x16b93);
}

func void CH_LEVEL_HOCH_BACK() {
    INFO_CLEARCHOICES(0x16b96);
}

func void CH_LEVEL_1() {
    INFO_CLEARCHOICES(0x16b93);
    HERO.LEVEL = 1;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_2() {
    INFO_CLEARCHOICES(0x16b93);
    HERO.LEVEL = 2;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_3() {
    INFO_CLEARCHOICES(0x16b93);
    HERO.LEVEL = 3;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_4() {
    INFO_CLEARCHOICES(0x16b93);
    HERO.LEVEL = 4;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_5() {
    INFO_CLEARCHOICES(0x16b93);
    HERO.LEVEL = 5;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_6() {
    INFO_CLEARCHOICES(0x16b93);
    HERO.LEVEL = 6;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_7() {
    INFO_CLEARCHOICES(0x16b93);
    HERO.LEVEL = 7;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_8() {
    INFO_CLEARCHOICES(0x16b93);
    HERO.LEVEL = 8;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_9() {
    INFO_CLEARCHOICES(0x16b93);
    HERO.LEVEL = 9;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_10() {
    INFO_CLEARCHOICES(0x16b93);
    HERO.LEVEL = 10;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_11() {
    INFO_CLEARCHOICES(0x16b93);
    HERO.LEVEL = 11;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_12() {
    INFO_CLEARCHOICES(0x16b93);
    HERO.LEVEL = 12;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_13() {
    INFO_CLEARCHOICES(0x16b93);
    HERO.LEVEL = 13;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_14() {
    INFO_CLEARCHOICES(0x16b93);
    HERO.LEVEL = 14;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_15() {
    INFO_CLEARCHOICES(0x16b93);
    HERO.LEVEL = 15;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_16() {
    INFO_CLEARCHOICES(0x16b93);
    HERO.LEVEL = 16;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_17() {
    INFO_CLEARCHOICES(0x16b93);
    HERO.LEVEL = 17;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_18() {
    INFO_CLEARCHOICES(0x16b93);
    HERO.LEVEL = 18;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_19() {
    INFO_CLEARCHOICES(0x16b93);
    HERO.LEVEL = 19;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_20() {
    INFO_CLEARCHOICES(0x16b93);
    HERO.LEVEL = 20;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_21() {
    INFO_CLEARCHOICES(0x16b93);
    HERO.LEVEL = 21;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_22() {
    INFO_CLEARCHOICES(0x16b93);
    HERO.LEVEL = 22;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_23() {
    INFO_CLEARCHOICES(0x16b93);
    HERO.LEVEL = 23;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_24() {
    INFO_CLEARCHOICES(0x16b93);
    HERO.LEVEL = 24;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_25() {
    INFO_CLEARCHOICES(0x16b93);
    HERO.LEVEL = 25;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_26() {
    INFO_CLEARCHOICES(0x16b96);
    HERO.LEVEL = 26;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_27() {
    INFO_CLEARCHOICES(0x16b96);
    HERO.LEVEL = 27;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_28() {
    INFO_CLEARCHOICES(0x16b96);
    HERO.LEVEL = 28;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_29() {
    INFO_CLEARCHOICES(0x16b96);
    HERO.LEVEL = 29;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_30() {
    INFO_CLEARCHOICES(0x16b96);
    HERO.LEVEL = 30;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_31() {
    INFO_CLEARCHOICES(0x16b96);
    HERO.LEVEL = 31;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_32() {
    INFO_CLEARCHOICES(0x16b96);
    HERO.LEVEL = 32;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_33() {
    INFO_CLEARCHOICES(0x16b96);
    HERO.LEVEL = 33;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_34() {
    INFO_CLEARCHOICES(0x16b96);
    HERO.LEVEL = 34;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_35() {
    INFO_CLEARCHOICES(0x16b96);
    HERO.LEVEL = 35;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_36() {
    INFO_CLEARCHOICES(0x16b96);
    HERO.LEVEL = 36;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_37() {
    INFO_CLEARCHOICES(0x16b96);
    HERO.LEVEL = 37;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_38() {
    INFO_CLEARCHOICES(0x16b96);
    HERO.LEVEL = 38;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_39() {
    INFO_CLEARCHOICES(0x16b96);
    HERO.LEVEL = 39;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_40() {
    INFO_CLEARCHOICES(0x16b96);
    HERO.LEVEL = 40;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_41() {
    INFO_CLEARCHOICES(0x16b96);
    HERO.LEVEL = 41;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_42() {
    INFO_CLEARCHOICES(0x16b96);
    HERO.LEVEL = 42;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_43() {
    INFO_CLEARCHOICES(0x16b96);
    HERO.LEVEL = 43;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_44() {
    INFO_CLEARCHOICES(0x16b96);
    HERO.LEVEL = 44;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_45() {
    INFO_CLEARCHOICES(0x16b96);
    HERO.LEVEL = 45;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_46() {
    INFO_CLEARCHOICES(0x16b96);
    HERO.LEVEL = 46;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_47() {
    INFO_CLEARCHOICES(0x16b96);
    HERO.LEVEL = 47;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_48() {
    INFO_CLEARCHOICES(0x16b96);
    HERO.LEVEL = 48;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_49() {
    INFO_CLEARCHOICES(0x16b96);
    HERO.LEVEL = 49;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_50() {
    INFO_CLEARCHOICES(0x16b96);
    HERO.LEVEL = 50;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

var int ATTRIBUTESTART = 0;
instance DIA_CH_ATTRIBUTE_START(C_INFO) {
    NPC = 0x16b64;
    NR = 3;
    CONDITION = DIA_CH_ATTRIBUTE_START_CONDITION;
    INFORMATION = DIA_CH_ATTRIBUTE_START_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Stärke und Geschick";
}

func int DIA_CH_ATTRIBUTE_START_CONDITION() {
    if (((((((LEVELSTART) == (FALSE)) && ((MAGIESTART) == (FALSE))) && ((ATTRIBUTESTART) == (FALSE))) && ((KAMPFSTART) == (FALSE))) && ((DIEBSTART) == (FALSE))) && ((MISCSTART) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_ATTRIBUTE_START_INFO() {
    ATTRIBUTESTART = TRUE;
}

instance DIA_CH_ATTRIBUTE_STOPPER(C_INFO) {
    NPC = 0x16b64;
    NR = 99;
    CONDITION = DIA_CH_ATTRIBUTE_STOPPER_CONDITION;
    INFORMATION = DIA_CH_ATTRIBUTE_STOPPER_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_BACK;
}

func int DIA_CH_ATTRIBUTE_STOPPER_CONDITION() {
    if ((ATTRIBUTESTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_ATTRIBUTE_STOPPER_INFO() {
    ATTRIBUTESTART = FALSE;
}

instance DIA_CH_STRENGTH(C_INFO) {
    NPC = 0x16b64;
    NR = 2;
    CONDITION = DIA_CH_STRENGTH_CONDITION;
    INFORMATION = DIA_CH_STRENGTH_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Zwiêksz si³ê";
}

func int DIA_CH_STRENGTH_CONDITION() {
    if ((ATTRIBUTESTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_STRENGTH_INFO() {
    INFO_CLEARCHOICES(0x16bde);
    INFO_ADDCHOICE(0x16bde, DIALOG_BACK, 0x16be1);
    INFO_ADDCHOICE(0x16bde, B_BUILDLEARNSTRING("Si³a + 20", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 20)), 0x16be5);
    INFO_ADDCHOICE(0x16bde, B_BUILDLEARNSTRING("Si³a + 10", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 10)), 0x16be4);
    INFO_ADDCHOICE(0x16bde, B_BUILDLEARNSTRING("Si³a + 5", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 5)), 0x16be3);
    INFO_ADDCHOICE(0x16bde, B_BUILDLEARNSTRING("Si³a + 1", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 1)), 0x16be2);
}

func void DIA_CH_STRENGTH_BACK() {
    INFO_CLEARCHOICES(0x16bde);
}

func void DIA_CH_STRENGTH_1() {
    B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_STRENGTH, 1, T_MAX);
    INFO_CLEARCHOICES(0x16bde);
    INFO_ADDCHOICE(0x16bde, DIALOG_BACK, 0x16be1);
    INFO_ADDCHOICE(0x16bde, B_BUILDLEARNSTRING("Si³a + 20", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 20)), 0x16be5);
    INFO_ADDCHOICE(0x16bde, B_BUILDLEARNSTRING("Si³a + 10", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 10)), 0x16be4);
    INFO_ADDCHOICE(0x16bde, B_BUILDLEARNSTRING("Si³a + 5", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 5)), 0x16be3);
    INFO_ADDCHOICE(0x16bde, B_BUILDLEARNSTRING("Si³a + 1", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 1)), 0x16be2);
}

func void DIA_CH_STRENGTH_5() {
    B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_STRENGTH, 5, T_MAX);
    INFO_CLEARCHOICES(0x16bde);
    INFO_ADDCHOICE(0x16bde, DIALOG_BACK, 0x16be1);
    INFO_ADDCHOICE(0x16bde, B_BUILDLEARNSTRING("Si³a + 20", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 20)), 0x16be5);
    INFO_ADDCHOICE(0x16bde, B_BUILDLEARNSTRING("Si³a + 10", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 10)), 0x16be4);
    INFO_ADDCHOICE(0x16bde, B_BUILDLEARNSTRING("Si³a + 5", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 5)), 0x16be3);
    INFO_ADDCHOICE(0x16bde, B_BUILDLEARNSTRING("Si³a + 1", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 1)), 0x16be2);
}

func void DIA_CH_STRENGTH_10() {
    B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_STRENGTH, 10, T_MAX);
    INFO_CLEARCHOICES(0x16bde);
    INFO_ADDCHOICE(0x16bde, DIALOG_BACK, 0x16be1);
    INFO_ADDCHOICE(0x16bde, B_BUILDLEARNSTRING("Si³a + 20", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 20)), 0x16be5);
    INFO_ADDCHOICE(0x16bde, B_BUILDLEARNSTRING("Si³a + 10", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 10)), 0x16be4);
    INFO_ADDCHOICE(0x16bde, B_BUILDLEARNSTRING("Si³a + 5", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 5)), 0x16be3);
    INFO_ADDCHOICE(0x16bde, B_BUILDLEARNSTRING("Si³a + 1", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 1)), 0x16be2);
}

func void DIA_CH_STRENGTH_20() {
    B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_STRENGTH, 20, T_MAX);
    INFO_CLEARCHOICES(0x16bde);
    INFO_ADDCHOICE(0x16bde, DIALOG_BACK, 0x16be1);
    INFO_ADDCHOICE(0x16bde, B_BUILDLEARNSTRING("Si³a + 20", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 20)), 0x16be5);
    INFO_ADDCHOICE(0x16bde, B_BUILDLEARNSTRING("Si³a + 10", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 10)), 0x16be4);
    INFO_ADDCHOICE(0x16bde, B_BUILDLEARNSTRING("Si³a + 5", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 5)), 0x16be3);
    INFO_ADDCHOICE(0x16bde, B_BUILDLEARNSTRING("Si³a + 1", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 1)), 0x16be2);
}

instance DIA_CH_DEX(C_INFO) {
    NPC = 0x16b64;
    NR = 3;
    CONDITION = DIA_CH_DEX_CONDITION;
    INFORMATION = DIA_CH_DEX_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Zwiêksz zrêcznoœæ";
}

func int DIA_CH_DEX_CONDITION() {
    if ((ATTRIBUTESTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_DEX_INFO() {
    INFO_CLEARCHOICES(0x16be6);
    INFO_ADDCHOICE(0x16be6, DIALOG_BACK, 0x16be9);
    INFO_ADDCHOICE(0x16be6, B_BUILDLEARNSTRING("Zrêcznoœæ + 20", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 20)), 0x16bed);
    INFO_ADDCHOICE(0x16be6, B_BUILDLEARNSTRING("Zrêcznoœæ + 10", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 10)), 0x16bec);
    INFO_ADDCHOICE(0x16be6, B_BUILDLEARNSTRING("Zrêcznoœæ + 5", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 5)), 0x16beb);
    INFO_ADDCHOICE(0x16be6, B_BUILDLEARNSTRING("Zrêcznoœæ + 1", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 1)), 0x16bea);
}

func void DIA_CH_DEX_BACK() {
    INFO_CLEARCHOICES(0x16be6);
}

func void DIA_CH_DEX_1() {
    B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_DEXTERITY, 1, T_MAX);
    INFO_CLEARCHOICES(0x16be6);
    INFO_ADDCHOICE(0x16be6, DIALOG_BACK, 0x16be9);
    INFO_ADDCHOICE(0x16be6, B_BUILDLEARNSTRING("Zrêcznoœæ + 20", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 20)), 0x16bed);
    INFO_ADDCHOICE(0x16be6, B_BUILDLEARNSTRING("Zrêcznoœæ + 10", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 10)), 0x16bec);
    INFO_ADDCHOICE(0x16be6, B_BUILDLEARNSTRING("Zrêcznoœæ + 5", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 5)), 0x16beb);
    INFO_ADDCHOICE(0x16be6, B_BUILDLEARNSTRING("Zrêcznoœæ + 1", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 1)), 0x16bea);
}

func void DIA_CH_DEX_5() {
    B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_DEXTERITY, 5, T_MAX);
    INFO_CLEARCHOICES(0x16be6);
    INFO_ADDCHOICE(0x16be6, DIALOG_BACK, 0x16be9);
    INFO_ADDCHOICE(0x16be6, B_BUILDLEARNSTRING("Zrêcznoœæ + 20", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 20)), 0x16bed);
    INFO_ADDCHOICE(0x16be6, B_BUILDLEARNSTRING("Zrêcznoœæ + 10", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 10)), 0x16bec);
    INFO_ADDCHOICE(0x16be6, B_BUILDLEARNSTRING("Zrêcznoœæ + 5", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 5)), 0x16beb);
    INFO_ADDCHOICE(0x16be6, B_BUILDLEARNSTRING("Zrêcznoœæ + 1", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 1)), 0x16bea);
}

func void DIA_CH_DEX_10() {
    B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_DEXTERITY, 10, T_MAX);
    INFO_CLEARCHOICES(0x16be6);
    INFO_ADDCHOICE(0x16be6, DIALOG_BACK, 0x16be9);
    INFO_ADDCHOICE(0x16be6, B_BUILDLEARNSTRING("Zrêcznoœæ + 20", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 20)), 0x16bed);
    INFO_ADDCHOICE(0x16be6, B_BUILDLEARNSTRING("Zrêcznoœæ + 10", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 10)), 0x16bec);
    INFO_ADDCHOICE(0x16be6, B_BUILDLEARNSTRING("Zrêcznoœæ + 5", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 5)), 0x16beb);
    INFO_ADDCHOICE(0x16be6, B_BUILDLEARNSTRING("Zrêcznoœæ + 1", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 1)), 0x16bea);
}

func void DIA_CH_DEX_20() {
    B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_DEXTERITY, 20, T_MAX);
    INFO_CLEARCHOICES(0x16be6);
    INFO_ADDCHOICE(0x16be6, DIALOG_BACK, 0x16be9);
    INFO_ADDCHOICE(0x16be6, B_BUILDLEARNSTRING("Zrêcznoœæ + 20", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 20)), 0x16bed);
    INFO_ADDCHOICE(0x16be6, B_BUILDLEARNSTRING("Zrêcznoœæ + 10", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 10)), 0x16bec);
    INFO_ADDCHOICE(0x16be6, B_BUILDLEARNSTRING("Zrêcznoœæ + 5", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 5)), 0x16beb);
    INFO_ADDCHOICE(0x16be6, B_BUILDLEARNSTRING("Zrêcznoœæ + 1", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 1)), 0x16bea);
}

var int MAGIESTART = 0;
instance DIA_CH_MAGIE(C_INFO) {
    NPC = 0x16b64;
    NR = 3;
    CONDITION = DIA_CH_MAGIE_CONDITION;
    INFORMATION = DIA_CH_MAGIE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "MAGIA: Mana, runy, krêgi";
}

func int DIA_CH_MAGIE_CONDITION() {
    if (((((((LEVELSTART) == (FALSE)) && ((MAGIESTART) == (FALSE))) && ((ATTRIBUTESTART) == (FALSE))) && ((KAMPFSTART) == (FALSE))) && ((DIEBSTART) == (FALSE))) && ((MISCSTART) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MAGIE_INFO() {
    MAGIESTART = TRUE;
}

instance DIA_CH_MAGIE_STOPPER(C_INFO) {
    NPC = 0x16b64;
    NR = 99;
    CONDITION = DIA_CH_MAGIE_STOPPER_CONDITION;
    INFORMATION = DIA_CH_MAGIE_STOPPER_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_BACK;
}

func int DIA_CH_MAGIE_STOPPER_CONDITION() {
    if ((MAGIESTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MAGIE_STOPPER_INFO() {
    MAGIESTART = FALSE;
}

instance DIA_CH_MANA(C_INFO) {
    NPC = 0x16b64;
    NR = 3;
    CONDITION = DIA_CH_MANA_CONDITION;
    INFORMATION = DIA_CH_MANA_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Zwiêksz manê";
}

func int DIA_CH_MANA_CONDITION() {
    if ((MAGIESTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MANA_INFO() {
    INFO_CLEARCHOICES(0x16bf5);
    INFO_ADDCHOICE(0x16bf5, B_BUILDLEARNSTRING("Mana + 20", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 20)), 0x16bfc);
    INFO_ADDCHOICE(0x16bf5, B_BUILDLEARNSTRING("Mana + 10", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 10)), 0x16bfb);
    INFO_ADDCHOICE(0x16bf5, B_BUILDLEARNSTRING("Mana + 5", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 5)), 0x16bfa);
    INFO_ADDCHOICE(0x16bf5, B_BUILDLEARNSTRING("Mana + 1", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 1)), 0x16bf9);
}

func void DIA_CH_MANA_BACK() {
    INFO_CLEARCHOICES(0x16bf5);
}

func void DIA_CH_MANA_1() {
    B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_MANA_MAX, 1, T_MAX);
    INFO_CLEARCHOICES(0x16bf5);
    INFO_ADDCHOICE(0x16bf5, DIALOG_BACK, 0x16bf8);
    INFO_ADDCHOICE(0x16bf5, B_BUILDLEARNSTRING("Mana + 20", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 20)), 0x16bfc);
    INFO_ADDCHOICE(0x16bf5, B_BUILDLEARNSTRING("Mana + 10", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 10)), 0x16bfb);
    INFO_ADDCHOICE(0x16bf5, B_BUILDLEARNSTRING("Mana + 5", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 5)), 0x16bfa);
    INFO_ADDCHOICE(0x16bf5, B_BUILDLEARNSTRING("Mana + 1", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 1)), 0x16bf9);
}

func void DIA_CH_MANA_5() {
    B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_MANA_MAX, 5, T_MAX);
    INFO_CLEARCHOICES(0x16bf5);
    INFO_ADDCHOICE(0x16bf5, DIALOG_BACK, 0x16bf8);
    INFO_ADDCHOICE(0x16bf5, B_BUILDLEARNSTRING("Mana + 20", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 20)), 0x16bfc);
    INFO_ADDCHOICE(0x16bf5, B_BUILDLEARNSTRING("Mana + 10", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 10)), 0x16bfb);
    INFO_ADDCHOICE(0x16bf5, B_BUILDLEARNSTRING("Mana + 5", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 5)), 0x16bfa);
    INFO_ADDCHOICE(0x16bf5, B_BUILDLEARNSTRING("Mana + 1", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 1)), 0x16bf9);
}

func void DIA_CH_MANA_10() {
    B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_MANA_MAX, 10, T_MAX);
    INFO_CLEARCHOICES(0x16bf5);
    INFO_ADDCHOICE(0x16bf5, DIALOG_BACK, 0x16bf8);
    INFO_ADDCHOICE(0x16bf5, B_BUILDLEARNSTRING("Mana + 20", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 20)), 0x16bfc);
    INFO_ADDCHOICE(0x16bf5, B_BUILDLEARNSTRING("Mana + 10", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 10)), 0x16bfb);
    INFO_ADDCHOICE(0x16bf5, B_BUILDLEARNSTRING("Mana + 5", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 5)), 0x16bfa);
    INFO_ADDCHOICE(0x16bf5, B_BUILDLEARNSTRING("Mana + 1", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 1)), 0x16bf9);
}

func void DIA_CH_MANA_20() {
    B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_MANA_MAX, 20, T_MAX);
    INFO_CLEARCHOICES(0x16bf5);
    INFO_ADDCHOICE(0x16bf5, DIALOG_BACK, 0x16bf8);
    INFO_ADDCHOICE(0x16bf5, B_BUILDLEARNSTRING("Mana + 20", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 20)), 0x16bfc);
    INFO_ADDCHOICE(0x16bf5, B_BUILDLEARNSTRING("Mana + 10", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 10)), 0x16bfb);
    INFO_ADDCHOICE(0x16bf5, B_BUILDLEARNSTRING("Mana + 5", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 5)), 0x16bfa);
    INFO_ADDCHOICE(0x16bf5, B_BUILDLEARNSTRING("Mana + 1", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 1)), 0x16bf9);
}

instance DIA_CH_KREISE(C_INFO) {
    NPC = 0x16b64;
    NR = 4;
    CONDITION = DIA_CH_KREISE_CONDITION;
    INFORMATION = DIA_CH_KREISE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Magiczne Krêgi";
}

func int DIA_CH_KREISE_CONDITION() {
    if ((MAGIESTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_KREISE_INFO() {
    INFO_CLEARCHOICES(0x16bfd);
    INFO_ADDCHOICE(0x16bfd, DIALOG_BACK, 0x16c00);
    INFO_ADDCHOICE(0x16bfd, "Szósty Kr¹g", 0x16c06);
    INFO_ADDCHOICE(0x16bfd, "Pi¹ty Kr¹g", 0x16c05);
    INFO_ADDCHOICE(0x16bfd, "Czwarty Kr¹g", 0x16c04);
    INFO_ADDCHOICE(0x16bfd, "Trzeci Kr¹g", 0x16c03);
    INFO_ADDCHOICE(0x16bfd, "Drugi Kr¹g", 0x16c02);
    INFO_ADDCHOICE(0x16bfd, "Pierwszy Kr¹g", 0x16c01);
}

func void CH_KREISE_BACK() {
    INFO_CLEARCHOICES(0x16bfd);
}

func void CH_KREISE_1() {
    INFO_CLEARCHOICES(0x16bfd);
    B_TEACHMAGICCIRCLE(SELF, OTHER, 1);
    B_SETKDFRUNES();
}

func void CH_KREISE_2() {
    INFO_CLEARCHOICES(0x16bfd);
    B_TEACHMAGICCIRCLE(SELF, OTHER, 2);
    B_SETKDFRUNES();
}

func void CH_KREISE_3() {
    INFO_CLEARCHOICES(0x16bfd);
    B_TEACHMAGICCIRCLE(SELF, OTHER, 3);
    B_SETKDFRUNES();
}

func void CH_KREISE_4() {
    INFO_CLEARCHOICES(0x16bfd);
    B_TEACHMAGICCIRCLE(SELF, OTHER, 4);
    B_SETKDFRUNES();
}

func void CH_KREISE_5() {
    INFO_CLEARCHOICES(0x16bfd);
    B_TEACHMAGICCIRCLE(SELF, OTHER, 5);
    B_SETKDFRUNES();
}

func void CH_KREISE_6() {
    INFO_CLEARCHOICES(0x16bfd);
    B_TEACHMAGICCIRCLE(SELF, OTHER, 6);
    B_SETKDFRUNES();
}

var int KAMPFSTART = 0;
instance DIA_CH_KAMPF_START(C_INFO) {
    NPC = 0x16b64;
    NR = 6;
    CONDITION = DIA_CH_KAMPF_START_CONDITION;
    INFORMATION = DIA_CH_KAMPF_START_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Talenty bojowe (wrêcz i dystansowe)";
}

func int DIA_CH_KAMPF_START_CONDITION() {
    if (((((((KAMPFSTART) == (FALSE)) && ((MAGIESTART) == (FALSE))) && ((ATTRIBUTESTART) == (FALSE))) && ((LEVELSTART) == (FALSE))) && ((DIEBSTART) == (FALSE))) && ((MISCSTART) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_KAMPF_START_INFO() {
    KAMPFSTART = TRUE;
}

instance DIA_CH_KAMPF_STOPPER(C_INFO) {
    NPC = 0x16b64;
    NR = 99;
    CONDITION = DIA_CH_KAMPF_STOPPER_CONDITION;
    INFORMATION = DIA_CH_KAMPF_STOPPER_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_BACK;
}

func int DIA_CH_KAMPF_STOPPER_CONDITION() {
    if ((KAMPFSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_KAMPF_STOPPER_INFO() {
    KAMPFSTART = FALSE;
}

instance DIA_CH_KAMPF_EINHAND(C_INFO) {
    NPC = 0x16b64;
    NR = 6;
    CONDITION = DIA_CH_KAMPF_EINHAND_CONDITION;
    INFORMATION = DIA_CH_KAMPF_EINHAND_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Broñ jednorêczna";
}

func int DIA_CH_KAMPF_EINHAND_CONDITION() {
    if ((KAMPFSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_KAMPF_EINHAND_INFO() {
    INFO_CLEARCHOICES(0x16c0e);
    INFO_ADDCHOICE(0x16c0e, DIALOG_BACK, 0x16c11);
    INFO_ADDCHOICE(0x16c0e, B_BUILDLEARNSTRING("Broñ jednorêczna + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 20)), 0x16c15);
    INFO_ADDCHOICE(0x16c0e, B_BUILDLEARNSTRING("Broñ jednorêczna + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 10)), 0x16c14);
    INFO_ADDCHOICE(0x16c0e, B_BUILDLEARNSTRING("Broñ jednorêczna + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 5)), 0x16c13);
    INFO_ADDCHOICE(0x16c0e, B_BUILDLEARNSTRING("Broñ jednorêczna + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 1)), 0x16c12);
}

func void DIA_CH_KAMPF_EINHAND_BACK() {
    INFO_CLEARCHOICES(0x16c0e);
}

func void CH_TRAINING_COMBAT_1H_1() {
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_1H, 1, 100);
    INFO_CLEARCHOICES(0x16c0e);
    INFO_ADDCHOICE(0x16c0e, DIALOG_BACK, 0x16c11);
    INFO_ADDCHOICE(0x16c0e, B_BUILDLEARNSTRING("Broñ jednorêczna + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 20)), 0x16c15);
    INFO_ADDCHOICE(0x16c0e, B_BUILDLEARNSTRING("Broñ jednorêczna + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 10)), 0x16c14);
    INFO_ADDCHOICE(0x16c0e, B_BUILDLEARNSTRING("Broñ jednorêczna + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 5)), 0x16c13);
    INFO_ADDCHOICE(0x16c0e, B_BUILDLEARNSTRING("Broñ jednorêczna + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 1)), 0x16c12);
}

func void CH_TRAINING_COMBAT_1H_5() {
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_1H, 5, 100);
    INFO_CLEARCHOICES(0x16c0e);
    INFO_ADDCHOICE(0x16c0e, DIALOG_BACK, 0x16c11);
    INFO_ADDCHOICE(0x16c0e, B_BUILDLEARNSTRING("Broñ jednorêczna + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 20)), 0x16c15);
    INFO_ADDCHOICE(0x16c0e, B_BUILDLEARNSTRING("Broñ jednorêczna + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 10)), 0x16c14);
    INFO_ADDCHOICE(0x16c0e, B_BUILDLEARNSTRING("Broñ jednorêczna + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 5)), 0x16c13);
    INFO_ADDCHOICE(0x16c0e, B_BUILDLEARNSTRING("Broñ jednorêczna + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 1)), 0x16c12);
}

func void CH_TRAINING_COMBAT_1H_10() {
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_1H, 10, 100);
    INFO_CLEARCHOICES(0x16c0e);
    INFO_ADDCHOICE(0x16c0e, DIALOG_BACK, 0x16c11);
    INFO_ADDCHOICE(0x16c0e, B_BUILDLEARNSTRING("Broñ jednorêczna + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 20)), 0x16c15);
    INFO_ADDCHOICE(0x16c0e, B_BUILDLEARNSTRING("Broñ jednorêczna + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 10)), 0x16c14);
    INFO_ADDCHOICE(0x16c0e, B_BUILDLEARNSTRING("Broñ jednorêczna + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 5)), 0x16c13);
    INFO_ADDCHOICE(0x16c0e, B_BUILDLEARNSTRING("Broñ jednorêczna + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 1)), 0x16c12);
}

func void CH_TRAINING_COMBAT_1H_20() {
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_1H, 20, 100);
    INFO_CLEARCHOICES(0x16c0e);
    INFO_ADDCHOICE(0x16c0e, DIALOG_BACK, 0x16c11);
    INFO_ADDCHOICE(0x16c0e, B_BUILDLEARNSTRING("Broñ jednorêczna + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 20)), 0x16c15);
    INFO_ADDCHOICE(0x16c0e, B_BUILDLEARNSTRING("Broñ jednorêczna + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 10)), 0x16c14);
    INFO_ADDCHOICE(0x16c0e, B_BUILDLEARNSTRING("Broñ jednorêczna + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 5)), 0x16c13);
    INFO_ADDCHOICE(0x16c0e, B_BUILDLEARNSTRING("Broñ jednorêczna + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 1)), 0x16c12);
}

instance DIA_CH_KAMPF_ZWEIHAND(C_INFO) {
    NPC = 0x16b64;
    NR = 7;
    CONDITION = DIA_CH_KAMPF_ZWEIHAND_CONDITION;
    INFORMATION = DIA_CH_KAMPF_ZWEIHAND_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Broñ dwurêczna";
}

func int DIA_CH_KAMPF_ZWEIHAND_CONDITION() {
    if ((KAMPFSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_KAMPF_ZWEIHAND_INFO() {
    INFO_CLEARCHOICES(0x16c16);
    INFO_ADDCHOICE(0x16c16, DIALOG_BACK, 0x16c19);
    INFO_ADDCHOICE(0x16c16, B_BUILDLEARNSTRING("Broñ dwurêczna + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 20)), 0x16c1d);
    INFO_ADDCHOICE(0x16c16, B_BUILDLEARNSTRING("Broñ dwurêczna + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 10)), 0x16c1c);
    INFO_ADDCHOICE(0x16c16, B_BUILDLEARNSTRING("Broñ dwurêczna + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 5)), 0x16c1b);
    INFO_ADDCHOICE(0x16c16, B_BUILDLEARNSTRING("Broñ dwurêczna + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 1)), 0x16c1a);
}

func void DIA_CH_KAMPF_ZWEIHAND_BACK() {
    INFO_CLEARCHOICES(0x16c16);
}

func void CH_TRAINING_COMBAT_2H_1() {
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_2H, 1, 100);
    INFO_CLEARCHOICES(0x16c16);
    INFO_ADDCHOICE(0x16c16, DIALOG_BACK, 0x16c19);
    INFO_ADDCHOICE(0x16c16, B_BUILDLEARNSTRING("Broñ dwurêczna + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 20)), 0x16c1d);
    INFO_ADDCHOICE(0x16c16, B_BUILDLEARNSTRING("Broñ dwurêczna + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 10)), 0x16c1c);
    INFO_ADDCHOICE(0x16c16, B_BUILDLEARNSTRING("Broñ dwurêczna + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 5)), 0x16c1b);
    INFO_ADDCHOICE(0x16c16, B_BUILDLEARNSTRING("Broñ dwurêczna + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 1)), 0x16c1a);
}

func void CH_TRAINING_COMBAT_2H_5() {
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_2H, 5, 100);
    INFO_CLEARCHOICES(0x16c16);
    INFO_ADDCHOICE(0x16c16, DIALOG_BACK, 0x16c19);
    INFO_ADDCHOICE(0x16c16, B_BUILDLEARNSTRING("Broñ dwurêczna + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 20)), 0x16c1d);
    INFO_ADDCHOICE(0x16c16, B_BUILDLEARNSTRING("Broñ dwurêczna + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 10)), 0x16c1c);
    INFO_ADDCHOICE(0x16c16, B_BUILDLEARNSTRING("Broñ dwurêczna + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 5)), 0x16c1b);
    INFO_ADDCHOICE(0x16c16, B_BUILDLEARNSTRING("Broñ dwurêczna + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 1)), 0x16c1a);
}

func void CH_TRAINING_COMBAT_2H_10() {
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_2H, 10, 100);
    INFO_CLEARCHOICES(0x16c16);
    INFO_ADDCHOICE(0x16c16, DIALOG_BACK, 0x16c19);
    INFO_ADDCHOICE(0x16c16, B_BUILDLEARNSTRING("Broñ dwurêczna + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 20)), 0x16c1d);
    INFO_ADDCHOICE(0x16c16, B_BUILDLEARNSTRING("Broñ dwurêczna + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 10)), 0x16c1c);
    INFO_ADDCHOICE(0x16c16, B_BUILDLEARNSTRING("Broñ dwurêczna + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 5)), 0x16c1b);
    INFO_ADDCHOICE(0x16c16, B_BUILDLEARNSTRING("Broñ dwurêczna + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 1)), 0x16c1a);
}

func void CH_TRAINING_COMBAT_2H_20() {
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_2H, 20, 100);
    INFO_CLEARCHOICES(0x16c16);
    INFO_ADDCHOICE(0x16c16, DIALOG_BACK, 0x16c19);
    INFO_ADDCHOICE(0x16c16, B_BUILDLEARNSTRING("Broñ dwurêczna + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 20)), 0x16c1d);
    INFO_ADDCHOICE(0x16c16, B_BUILDLEARNSTRING("Broñ dwurêczna + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 10)), 0x16c1c);
    INFO_ADDCHOICE(0x16c16, B_BUILDLEARNSTRING("Broñ dwurêczna + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 5)), 0x16c1b);
    INFO_ADDCHOICE(0x16c16, B_BUILDLEARNSTRING("Broñ dwurêczna + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 1)), 0x16c1a);
}

instance DIA_CH_KAMPF_BOGEN(C_INFO) {
    NPC = 0x16b64;
    NR = 8;
    CONDITION = DIA_CH_KAMPF_BOGEN_CONDITION;
    INFORMATION = DIA_CH_KAMPF_BOGEN_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "£uki";
}

func int DIA_CH_KAMPF_BOGEN_CONDITION() {
    if ((KAMPFSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_KAMPF_BOGEN_INFO() {
    INFO_CLEARCHOICES(0x16c1e);
    INFO_ADDCHOICE(0x16c1e, DIALOG_BACK, 0x16c21);
    INFO_ADDCHOICE(0x16c1e, B_BUILDLEARNSTRING("£uki + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 20)), 0x16c25);
    INFO_ADDCHOICE(0x16c1e, B_BUILDLEARNSTRING("£uki + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 10)), 0x16c24);
    INFO_ADDCHOICE(0x16c1e, B_BUILDLEARNSTRING("£uki + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 5)), 0x16c23);
    INFO_ADDCHOICE(0x16c1e, B_BUILDLEARNSTRING("£uki + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 1)), 0x16c22);
}

func void DIA_CH_KAMPF_BOGEN_BACK() {
    INFO_CLEARCHOICES(0x16c1e);
}

func void CH_TRAINING_COMBAT_BOW_1() {
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_BOW, 1, 100);
    INFO_CLEARCHOICES(0x16c1e);
    INFO_ADDCHOICE(0x16c1e, DIALOG_BACK, 0x16c21);
    INFO_ADDCHOICE(0x16c1e, B_BUILDLEARNSTRING("£uki + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 20)), 0x16c25);
    INFO_ADDCHOICE(0x16c1e, B_BUILDLEARNSTRING("£uki + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 10)), 0x16c24);
    INFO_ADDCHOICE(0x16c1e, B_BUILDLEARNSTRING("£uki + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 5)), 0x16c23);
    INFO_ADDCHOICE(0x16c1e, B_BUILDLEARNSTRING("£uki + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 1)), 0x16c22);
}

func void CH_TRAINING_COMBAT_BOW_5() {
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_BOW, 5, 100);
    INFO_CLEARCHOICES(0x16c1e);
    INFO_ADDCHOICE(0x16c1e, DIALOG_BACK, 0x16c21);
    INFO_ADDCHOICE(0x16c1e, B_BUILDLEARNSTRING("£uki + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 20)), 0x16c25);
    INFO_ADDCHOICE(0x16c1e, B_BUILDLEARNSTRING("£uki + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 10)), 0x16c24);
    INFO_ADDCHOICE(0x16c1e, B_BUILDLEARNSTRING("£uki + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 5)), 0x16c23);
    INFO_ADDCHOICE(0x16c1e, B_BUILDLEARNSTRING("£uki + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 1)), 0x16c22);
}

func void CH_TRAINING_COMBAT_BOW_10() {
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_BOW, 10, 100);
    INFO_CLEARCHOICES(0x16c1e);
    INFO_ADDCHOICE(0x16c1e, DIALOG_BACK, 0x16c21);
    INFO_ADDCHOICE(0x16c1e, B_BUILDLEARNSTRING("£uki + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 20)), 0x16c25);
    INFO_ADDCHOICE(0x16c1e, B_BUILDLEARNSTRING("£uki + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 10)), 0x16c24);
    INFO_ADDCHOICE(0x16c1e, B_BUILDLEARNSTRING("£uki + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 5)), 0x16c23);
    INFO_ADDCHOICE(0x16c1e, B_BUILDLEARNSTRING("£uki + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 1)), 0x16c22);
}

func void CH_TRAINING_COMBAT_BOW_20() {
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_BOW, 20, 100);
    INFO_CLEARCHOICES(0x16c1e);
    INFO_ADDCHOICE(0x16c1e, DIALOG_BACK, 0x16c21);
    INFO_ADDCHOICE(0x16c1e, B_BUILDLEARNSTRING("£uki + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 20)), 0x16c25);
    INFO_ADDCHOICE(0x16c1e, B_BUILDLEARNSTRING("£uki + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 10)), 0x16c24);
    INFO_ADDCHOICE(0x16c1e, B_BUILDLEARNSTRING("£uki + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 5)), 0x16c23);
    INFO_ADDCHOICE(0x16c1e, B_BUILDLEARNSTRING("£uki + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 1)), 0x16c22);
}

instance DIA_CH_KAMPF_ARMBRUST(C_INFO) {
    NPC = 0x16b64;
    NR = 8;
    CONDITION = DIA_CH_KAMPF_ARMBRUST_CONDITION;
    INFORMATION = DIA_CH_KAMPF_ARMBRUST_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Kusze";
}

func int DIA_CH_KAMPF_ARMBRUST_CONDITION() {
    if ((KAMPFSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_KAMPF_ARMBRUST_INFO() {
    INFO_CLEARCHOICES(0x16c26);
    INFO_ADDCHOICE(0x16c26, DIALOG_BACK, 0x16c29);
    INFO_ADDCHOICE(0x16c26, B_BUILDLEARNSTRING("Kusze + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 20)), 0x16c2d);
    INFO_ADDCHOICE(0x16c26, B_BUILDLEARNSTRING("Kusze + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 10)), 0x16c2c);
    INFO_ADDCHOICE(0x16c26, B_BUILDLEARNSTRING("Kusze + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 5)), 0x16c2b);
    INFO_ADDCHOICE(0x16c26, B_BUILDLEARNSTRING("Kusze + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 1)), 0x16c2a);
}

func void DIA_CH_KAMPF_ARMBRUST_BACK() {
    INFO_CLEARCHOICES(0x16c26);
}

func void CH_TRAINING_COMBAT_CROSSBOW_1() {
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_CROSSBOW, 1, 100);
    INFO_CLEARCHOICES(0x16c26);
    INFO_ADDCHOICE(0x16c26, DIALOG_BACK, 0x16c29);
    INFO_ADDCHOICE(0x16c26, B_BUILDLEARNSTRING("Kusze + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 20)), 0x16c2d);
    INFO_ADDCHOICE(0x16c26, B_BUILDLEARNSTRING("Kusze + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 10)), 0x16c2c);
    INFO_ADDCHOICE(0x16c26, B_BUILDLEARNSTRING("Kusze + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 5)), 0x16c2b);
    INFO_ADDCHOICE(0x16c26, B_BUILDLEARNSTRING("Kusze + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 1)), 0x16c2a);
}

func void CH_TRAINING_COMBAT_CROSSBOW_5() {
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_CROSSBOW, 5, 100);
    INFO_CLEARCHOICES(0x16c26);
    INFO_ADDCHOICE(0x16c26, DIALOG_BACK, 0x16c29);
    INFO_ADDCHOICE(0x16c26, B_BUILDLEARNSTRING("Kusze + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 20)), 0x16c2d);
    INFO_ADDCHOICE(0x16c26, B_BUILDLEARNSTRING("Kusze + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 10)), 0x16c2c);
    INFO_ADDCHOICE(0x16c26, B_BUILDLEARNSTRING("Kusze + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 5)), 0x16c2b);
    INFO_ADDCHOICE(0x16c26, B_BUILDLEARNSTRING("Kusze + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 1)), 0x16c2a);
}

func void CH_TRAINING_COMBAT_CROSSBOW_10() {
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_CROSSBOW, 10, 100);
    INFO_CLEARCHOICES(0x16c26);
    INFO_ADDCHOICE(0x16c26, DIALOG_BACK, 0x16c29);
    INFO_ADDCHOICE(0x16c26, B_BUILDLEARNSTRING("Kusze + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 20)), 0x16c2d);
    INFO_ADDCHOICE(0x16c26, B_BUILDLEARNSTRING("Kusze + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 10)), 0x16c2c);
    INFO_ADDCHOICE(0x16c26, B_BUILDLEARNSTRING("Kusze + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 5)), 0x16c2b);
    INFO_ADDCHOICE(0x16c26, B_BUILDLEARNSTRING("Kusze + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 1)), 0x16c2a);
}

func void CH_TRAINING_COMBAT_CROSSBOW_20() {
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_CROSSBOW, 20, 100);
    INFO_CLEARCHOICES(0x16c26);
    INFO_ADDCHOICE(0x16c26, DIALOG_BACK, 0x16c29);
    INFO_ADDCHOICE(0x16c26, B_BUILDLEARNSTRING("Kusze + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 1)), 0x16c2a);
    INFO_ADDCHOICE(0x16c26, B_BUILDLEARNSTRING("Kusze + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 5)), 0x16c2b);
    INFO_ADDCHOICE(0x16c26, B_BUILDLEARNSTRING("Kusze + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 10)), 0x16c2c);
    INFO_ADDCHOICE(0x16c26, B_BUILDLEARNSTRING("Kusze + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 20)), 0x16c2d);
}

var int DIEBSTART = 0;
instance DIA_CH_DIEB_START(C_INFO) {
    NPC = 0x16b64;
    NR = 6;
    CONDITION = DIA_CH_DIEB_START_CONDITION;
    INFORMATION = DIA_CH_DIEB_START_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Z³odziejskie talenty";
}

func int DIA_CH_DIEB_START_CONDITION() {
    if (((((((KAMPFSTART) == (FALSE)) && ((MAGIESTART) == (FALSE))) && ((ATTRIBUTESTART) == (FALSE))) && ((LEVELSTART) == (FALSE))) && ((DIEBSTART) == (FALSE))) && ((MISCSTART) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_DIEB_START_INFO() {
    DIEBSTART = TRUE;
}

instance DIA_CH_DIEB_STOPPER(C_INFO) {
    NPC = 0x16b64;
    NR = 99;
    CONDITION = DIA_CH_DIEB_STOPPER_CONDITION;
    INFORMATION = DIA_CH_DIEB_STOPPER_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_BACK;
}

func int DIA_CH_DIEB_STOPPER_CONDITION() {
    if ((DIEBSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_DIEB_STOPPER_INFO() {
    DIEBSTART = FALSE;
}

instance DIA_CH_DIEB_STEAL(C_INFO) {
    NPC = 0x16b64;
    NR = 7;
    CONDITION = DIA_CH_DIEB_STEAL_CONDITION;
    INFORMATION = DIA_CH_DIEB_STEAL_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Kradzie¿ kieszonkowa";
}

func int DIA_CH_DIEB_STEAL_CONDITION() {
    if ((DIEBSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_DIEB_STEAL_INFO() {
    INFO_CLEARCHOICES(0x16c35);
    INFO_ADDCHOICE(0x16c35, DIALOG_BACK, 0x16c44);
    INFO_ADDCHOICE(0x16c35, B_BUILDLEARNSTRING("Kradzie¿ kieszonkowa", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_PICKPOCKET, 1)), 0x16c4a);
}

instance DIA_CH_DIEB_SCHLEICHEN(C_INFO) {
    NPC = 0x16b64;
    NR = 8;
    CONDITION = DIA_CH_DIEB_SCHLEICHEN_CONDITION;
    INFORMATION = DIA_CH_DIEB_SCHLEICHEN_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Skradanie";
}

func int DIA_CH_DIEB_SCHLEICHEN_CONDITION() {
    if ((DIEBSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_DIEB_SCHLEICHEN_INFO() {
    INFO_CLEARCHOICES(0x16c38);
    INFO_ADDCHOICE(0x16c38, DIALOG_BACK, 0x16c45);
    INFO_ADDCHOICE(0x16c38, B_BUILDLEARNSTRING("Skradanie", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_SNEAK, 1)), 0x16c4b);
}

instance DIA_CH_DIEB_PICKLOCK(C_INFO) {
    NPC = 0x16b64;
    NR = 9;
    CONDITION = DIA_CH_DIEB_PICKLOCK_CONDITION;
    INFORMATION = DIA_CH_DIEB_PICKLOCK_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Otwieranie zamków";
}

func int DIA_CH_DIEB_PICKLOCK_CONDITION() {
    if ((DIEBSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_DIEB_PICKLOCK_INFO() {
    INFO_CLEARCHOICES(0x16c3b);
    INFO_ADDCHOICE(0x16c3b, DIALOG_BACK, 0x16c46);
    INFO_ADDCHOICE(0x16c3b, B_BUILDLEARNSTRING("Otwieranie zamków - mistrz", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_PICKLOCK, 3)), 0x16c49);
    INFO_ADDCHOICE(0x16c3b, B_BUILDLEARNSTRING("Otwieranie zamków - z³odziej", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_PICKLOCK, 2)), 0x16c48);
    INFO_ADDCHOICE(0x16c3b, B_BUILDLEARNSTRING("Otwieranie zamków - zielony", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_PICKLOCK, 1)), 0x16c47);
}

instance DIA_CH_DIEB_ALLE(C_INFO) {
    NPC = 0x16b64;
    NR = 12;
    CONDITION = DIA_CH_DIEB_ALLE_CONDITION;
    INFORMATION = DIA_CH_DIEB_ALLE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Naucz siê wszystkich talentów z³odziejskich";
}

func int DIA_CH_DIEB_ALLE_CONDITION() {
    if ((DIEBSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_DIEB_ALLE_INFO() {
    KOSTEN_ALLE = ((B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_PICKLOCK, 1)) + (B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_SNEAK, 1))) + (B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_PICKPOCKET, 1));
    INFO_CLEARCHOICES(0x16c3e);
    INFO_ADDCHOICE(0x16c3e, DIALOG_BACK, 0x16c42);
    INFO_ADDCHOICE(0x16c3e, B_BUILDLEARNSTRING("Wszystkie talenty z³odziejskie", KOSTEN_ALLE), 0x16c43);
}

var int DIA_CH_DIEB_ALLE_INFO.KOSTEN_ALLE = 0;
func void DIA_CH_DIEB_ALLE_BACK() {
    INFO_CLEARCHOICES(0x16c3e);
    B_TEACHTHIEFTALENT(SELF, OTHER, NPC_TALENT_SNEAK, 1);
}

func void CH_TRAINING_THIEF_ALLE() {
    INFO_CLEARCHOICES(0x16c3e);
}

func void DIA_CH_DIEB_STEAL_BACK() {
    INFO_CLEARCHOICES(0x16c35);
}

func void DIA_CH_DIEB_SCHLEICHEN_BACK() {
    INFO_CLEARCHOICES(0x16c38);
}

func void DIA_CH_DIEB_PICKLOCK_BACK() {
    INFO_CLEARCHOICES(0x16c3b);
}

func void CH_TRAINING_THIEF_PICKLOCK1() {
    INFO_CLEARCHOICES(0x16c3b);
    B_TEACHTHIEFTALENT(SELF, OTHER, NPC_TALENT_PICKLOCK, 1);
}

func void CH_TRAINING_THIEF_PICKLOCK2() {
    INFO_CLEARCHOICES(0x16c3b);
    B_TEACHTHIEFTALENT(SELF, OTHER, NPC_TALENT_PICKLOCK, 2);
}

func void CH_TRAINING_THIEF_PICKLOCK3() {
    INFO_CLEARCHOICES(0x16c3b);
    B_TEACHTHIEFTALENT(SELF, OTHER, NPC_TALENT_PICKLOCK, 3);
}

func void CH_TRAINING_THIEF_PICKPOCKET() {
    INFO_CLEARCHOICES(0x16c35);
    B_TEACHTHIEFTALENT(SELF, OTHER, NPC_TALENT_PICKPOCKET, 1);
}

func void CH_TRAINING_THIEF_SNEAK() {
    INFO_CLEARCHOICES(0x16c38);
    B_TEACHTHIEFTALENT(SELF, OTHER, NPC_TALENT_SNEAK, 1);
}

var int MISCSTART = 0;
instance DIA_CH_MISC_START(C_INFO) {
    NPC = 0x16b64;
    NR = 20;
    CONDITION = DIA_CH_MISC_START_CONDITION;
    INFORMATION = DIA_CH_MISC_START_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Inne (mikstury, trofea, kucie, runy paladyna, jêzyk)";
}

func int DIA_CH_MISC_START_CONDITION() {
    if (((((((KAMPFSTART) == (FALSE)) && ((MAGIESTART) == (FALSE))) && ((ATTRIBUTESTART) == (FALSE))) && ((LEVELSTART) == (FALSE))) && ((DIEBSTART) == (FALSE))) && ((MISCSTART) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MISC_START_INFO() {
    MISCSTART = TRUE;
}

instance DIA_CH_MISC_STOPPER(C_INFO) {
    NPC = 0x16b64;
    NR = 99;
    CONDITION = DIA_CH_MISC_STOPPER_CONDITION;
    INFORMATION = DIA_CH_MISC_STOPPER_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_BACK;
}

func int DIA_CH_MISC_STOPPER_CONDITION() {
    if (((((MISCSTART) == (TRUE)) && ((ALCHEMYSTART) == (FALSE))) && ((ANIMALSTART) == (FALSE))) && ((PALADINSTART) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MISC_STOPPER_INFO() {
    MISCSTART = FALSE;
}

var int ALCHEMYSTART = 0;
instance DIA_CH_MISC_ALCHEMIE(C_INFO) {
    NPC = 0x16b64;
    NR = 10;
    CONDITION = DIA_CH_MISC_ALCHEMIE_CONDITION;
    INFORMATION = DIA_CH_MISC_ALCHEMIE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Alchemia - sztuka warzenia mikstur";
}

func int DIA_CH_MISC_ALCHEMIE_CONDITION() {
    if (((((MISCSTART) == (TRUE)) && ((ALCHEMYSTART) == (FALSE))) && ((ANIMALSTART) == (FALSE))) && ((PALADINSTART) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MISC_ALCHEMIE_INFO() {
    ALCHEMYSTART = TRUE;
}

instance DIA_CH_MISC_ALCHEMIE_STOPPER(C_INFO) {
    NPC = 0x16b64;
    NR = 99;
    CONDITION = DIA_CH_MISC_ALCHEMIE_STOPPER_CONDITION;
    INFORMATION = DIA_CH_MISC_ALCHEMIE_STOPPER_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_BACK;
}

func int DIA_CH_MISC_ALCHEMIE_STOPPER_CONDITION() {
    if ((ALCHEMYSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MISC_ALCHEMIE_STOPPER_INFO() {
    ALCHEMYSTART = FALSE;
}

instance DIA_CH_MISC_ALCHEMIE_1(C_INFO) {
    NPC = 0x16b64;
    NR = 5;
    CONDITION = DIA_CH_MISC_ALCHEMIE_1_CONDITION;
    INFORMATION = DIA_CH_MISC_ALCHEMIE_1_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Nowicjusz";
}

func int DIA_CH_MISC_ALCHEMIE_1_CONDITION() {
    if (((ALCHEMYSTART) == (TRUE)) && ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_ALCHEMY)) == (0))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MISC_ALCHEMIE_1_INFO() {
    B_TEACHPLAYERTALENTALCHEMY(SELF, OTHER, 1);
}

instance DIA_CH_MISC_ALCHEMIE_2(C_INFO) {
    NPC = 0x16b64;
    NR = 5;
    CONDITION = DIA_CH_MISC_ALCHEMIE_2_CONDITION;
    INFORMATION = DIA_CH_MISC_ALCHEMIE_2_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Alchemik";
}

func int DIA_CH_MISC_ALCHEMIE_2_CONDITION() {
    if (((ALCHEMYSTART) == (TRUE)) && ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_ALCHEMY)) == (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MISC_ALCHEMIE_2_INFO() {
    B_TEACHPLAYERTALENTALCHEMY(SELF, OTHER, 2);
}

instance DIA_CH_MISC_ALCHEMIE_3(C_INFO) {
    NPC = 0x16b64;
    NR = 5;
    CONDITION = DIA_CH_MISC_ALCHEMIE_3_CONDITION;
    INFORMATION = DIA_CH_MISC_ALCHEMIE_3_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Mistrz";
}

func int DIA_CH_MISC_ALCHEMIE_3_CONDITION() {
    if (((ALCHEMYSTART) == (TRUE)) && ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_ALCHEMY)) == (2))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MISC_ALCHEMIE_3_INFO() {
    B_TEACHPLAYERTALENTALCHEMY(SELF, OTHER, 3);
}

var int ANIMALSTART = 0;
instance DIA_CH_MISC_ANIMAL_START(C_INFO) {
    NPC = 0x16b64;
    NR = 8;
    CONDITION = DIA_CH_MISC_ANIMAL_START_CONDITION;
    INFORMATION = DIA_CH_MISC_ANIMAL_START_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Trofea";
}

func int DIA_CH_MISC_ANIMAL_START_CONDITION() {
    if (((((MISCSTART) == (TRUE)) && ((ALCHEMYSTART) == (FALSE))) && ((ANIMALSTART) == (FALSE))) && ((PALADINSTART) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MISC_ANIMAL_START_INFO() {
    ANIMALSTART = TRUE;
}

instance DIA_CH_MISC_ANIMAL_STOPPER(C_INFO) {
    NPC = 0x16b64;
    NR = 99;
    CONDITION = DIA_CH_MISC_ANIMAL_STOPPER_CONDITION;
    INFORMATION = DIA_CH_MISC_ANIMAL_STOPPER_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_BACK;
}

func int DIA_CH_MISC_ANIMAL_STOPPER_CONDITION() {
    if ((ANIMALSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MISC_ANIMAL_STOPPER_INFO() {
    ANIMALSTART = FALSE;
}

instance DIA_CH_MISC_ANIMAL_ALLG(C_INFO) {
    NPC = 0x16b64;
    NR = 5;
    CONDITION = DIA_CH_MISC_ANIMAL_ALLG_CONDITION;
    INFORMATION = DIA_CH_MISC_ANIMAL_ALLG_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Zêby, skóry (gadów te¿), pazury, serca, nasiona";
}

func int DIA_CH_MISC_ANIMAL_ALLG_CONDITION() {
    if ((ANIMALSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MISC_ANIMAL_ALLG_INFO() {
    INFO_CLEARCHOICES(0x16c6a);
    INFO_ADDCHOICE(0x16c6a, DIALOG_BACK, 0x16c75);
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[0]) == (FALSE)) {
        INFO_ADDCHOICE(0x16c6a, B_BUILDLEARNSTRING("Zdobywanie zêbów", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_TEETH)), 0x16c6d);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[1]) == (FALSE)) {
        INFO_ADDCHOICE(0x16c6a, B_BUILDLEARNSTRING("Zdobywanie pazurów", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_CLAWS)), 0x16c6e);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[2]) == (FALSE)) {
        INFO_ADDCHOICE(0x16c6a, B_BUILDLEARNSTRING("Skórowanie", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_FUR)), 0x16c6f);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[13]) == (FALSE)) {
        INFO_ADDCHOICE(0x16c6a, B_BUILDLEARNSTRING("Skórowanie jaszczurów", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_REPTILESKIN)), 0x16c72);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[3]) == (FALSE)) {
        INFO_ADDCHOICE(0x16c6a, B_BUILDLEARNSTRING("Zdobywanie serc", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_HEART)), 0x16c70);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[14]) == (FALSE)) {
        INFO_ADDCHOICE(0x16c6a, B_BUILDLEARNSTRING("Zdobywanie nasion", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_SEEDS)), 0x16c71);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[15]) == (FALSE)) {
        INFO_ADDCHOICE(0x16c6a, B_BUILDLEARNSTRING("Zdobywanie t³uszczy", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_FATS)), 0x16c73);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[17]) == (FALSE)) {
        INFO_ADDCHOICE(0x16c6a, B_BUILDLEARNSTRING("Zdobywanie skorup b³otniaków", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_SHELLS)), 0x16c74);
    };
}

func void CH_TRAINING_TROPHYS_TEETH() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_TEETH);
}

func void CH_TRAINING_TROPHYS_CLAWS() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_CLAWS);
}

func void CH_TRAINING_TROPHYS_FUR() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_FUR);
}

func void CH_TRAINING_TROPHYS_HEART() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_HEART);
}

func void CH_TRAINING_TROPHYS_SEEDS() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_SEEDS);
}

func void CH_TRAINING_TROPHYS_REPTILESKIN() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_REPTILESKIN);
}

func void CH_TRAINING_TROPHYS_FATS() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_FATS);
}

func void CH_TRAINING_TROPHYS_SHELLS() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_SHELLS);
}

func void DIA_CH_MISC_ANIMAL_ALLG_BACK() {
    INFO_CLEARCHOICES(0x16c6a);
}

instance DIA_CH_MISC_ANIMAL_SPEZIELL(C_INFO) {
    NPC = 0x16b64;
    NR = 6;
    CONDITION = DIA_CH_MISC_ANIMAL_SPEZIELL_CONDITION;
    INFORMATION = DIA_CH_MISC_ANIMAL_SPEZIELL_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Skrzyd³a, ¿¹d³o, szczypce, p³ytki";
}

func int DIA_CH_MISC_ANIMAL_SPEZIELL_CONDITION() {
    if ((ANIMALSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MISC_ANIMAL_SPEZIELL_INFO() {
    INFO_CLEARCHOICES(0x16c76);
    INFO_ADDCHOICE(0x16c76, DIALOG_BACK, 0x16c79);
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[7]) == (FALSE)) {
        INFO_ADDCHOICE(0x16c76, B_BUILDLEARNSTRING("Blutfliegenstachel", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_BFSTING)), 0x16c7a);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[6]) == (FALSE)) {
        INFO_ADDCHOICE(0x16c76, B_BUILDLEARNSTRING("Blutfliegenflügel", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_BFWING)), 0x16c7b);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[9]) == (FALSE)) {
        INFO_ADDCHOICE(0x16c76, B_BUILDLEARNSTRING("Crawlerplatten nehmen", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_CRAWLERPLATE)), 0x16c7c);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[8]) == (FALSE)) {
        INFO_ADDCHOICE(0x16c76, B_BUILDLEARNSTRING("Zangen rausschneiden", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_MANDIBLES)), 0x16c7d);
    };
}

func void DIA_CH_MISC_ANIMAL_SPEZIELL_BACK() {
    INFO_CLEARCHOICES(0x16c76);
}

func void CH_TRAINING_TROPHYS_BFSTING() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_BFWING);
}

func void CH_TRAINING_TROPHYS_BFWING() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_BFSTING);
}

func void CH_TRAINING_TROPHYS_CRAWLERPLATE() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_MANDIBLES);
}

func void CH_TRAINING_TROPHYS_MANDIBLES() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_CRAWLERPLATE);
}

instance DIA_CH_MISC_ANIMAL_OTHER(C_INFO) {
    NPC = 0x16b64;
    NR = 7;
    CONDITION = DIA_CH_MISC_ANIMAL_OTHER_CONDITION;
    INFORMATION = DIA_CH_MISC_ANIMAL_OTHER_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Blut, Schuppen, Hörner, Zunge";
}

func int DIA_CH_MISC_ANIMAL_OTHER_CONDITION() {
    if ((ANIMALSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MISC_ANIMAL_OTHER_INFO() {
    INFO_CLEARCHOICES(0x16c7e);
    INFO_ADDCHOICE(0x16c7e, DIALOG_BACK, 0x16c81);
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[4]) == (FALSE)) {
        INFO_ADDCHOICE(0x16c7e, B_BUILDLEARNSTRING("Horn des Schattenläufers", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_SHADOWHORN)), 0x16c82);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[5]) == (FALSE)) {
        INFO_ADDCHOICE(0x16c7e, B_BUILDLEARNSTRING("Feuerzunge", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_FIRETONGUE)), 0x16c83);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[10]) == (FALSE)) {
        INFO_ADDCHOICE(0x16c7e, B_BUILDLEARNSTRING("Drachensnapperhorn", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_DRGSNAPPERHORN)), 0x16c84);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[11]) == (FALSE)) {
        INFO_ADDCHOICE(0x16c7e, B_BUILDLEARNSTRING("Drachenschuppen ziehen", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_DRAGONSCALE)), 0x16c85);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[12]) == (FALSE)) {
        INFO_ADDCHOICE(0x16c7e, B_BUILDLEARNSTRING("Drachenblut zapfen", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_DRAGONBLOOD)), 0x16c86);
    };
}

func void DIA_CH_MISC_ANIMAL_OTHER_BACK() {
    INFO_CLEARCHOICES(0x16c7e);
}

func void CH_TRAINING_TROPHYS_SHADOWHORN() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_SHADOWHORN);
}

func void CH_TRAINING_TROPHYS_FIRETONGUE() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_FIRETONGUE);
}

func void CH_TRAINING_TROPHYS_DRGSNAPPERHORN() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_DRGSNAPPERHORN);
}

func void CH_TRAINING_TROPHYS_DRAGONSCALE() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_DRAGONSCALE);
}

func void CH_TRAINING_TROPHYS_DRAGONBLOOD() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_DRAGONBLOOD);
}

var int PALADINSTART = 0;
instance DIA_CH_MISC_PALADINSTART(C_INFO) {
    NPC = 0x16b64;
    NR = 7;
    CONDITION = DIA_CH_MISC_PALADINSTART_CONDITION;
    INFORMATION = DIA_CH_MISC_PALADINSTART_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Paladin Runen";
}

func int DIA_CH_MISC_PALADINSTART_CONDITION() {
    if (((((MISCSTART) == (TRUE)) && ((ALCHEMYSTART) == (FALSE))) && ((ANIMALSTART) == (FALSE))) && ((PALADINSTART) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MISC_PALADINSTART_INFO() {
    PALADINSTART = TRUE;
}

instance DIA_CH_MISC_PALADINSTOPPER(C_INFO) {
    NPC = 0x16b64;
    NR = 99;
    CONDITION = DIA_CH_MISC_PALADINSTOPPER_CONDITION;
    INFORMATION = DIA_CH_MISC_PALADINSTOPPER_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_BACK;
}

func int DIA_CH_MISC_PALADINSTOPPER_CONDITION() {
    if ((PALADINSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MISC_PALADINSTOPPER_INFO() {
    PALADINSTART = FALSE;
}

