instance DIA_LUCAS_EXIT(C_INFO) {
    NPC = 0xe387;
    NR = 999;
    CONDITION = DIA_LUCAS_EXIT_CONDITION;
    INFORMATION = DIA_LUCAS_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_LUCAS_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_LUCAS_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_LUCAS_HELLO(C_INFO) {
    NPC = 0xe387;
    NR = 1;
    CONDITION = DIA_LUCAS_HELLO_CONDITION;
    INFORMATION = DIA_LUCAS_HELLO_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_LUCAS_HELLO_CONDITION() {
    if ((LOG_GETSTATUS(MIS_Q401)) == (LOG_SUCCESS)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_LUCAS_HELLO_INFO() {
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Lucas_Hello_03_01");
    INFO_CLEARCHOICES(0x13d71);
    INFO_ADDCHOICE(0x13d71, "Compared to the city, it's nothing...", 0x13d75);
    INFO_ADDCHOICE(0x13d71, "The walls look impregnable.", 0x13d76);
}

func void DIA_LUCAS_HELLO_GREAT_NEXT() {
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Lucas_Hello_Next_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Lucas_Hello_Next_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Lucas_Hello_Next_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Lucas_Hello_Next_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Lucas_Hello_Next_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Lucas_Hello_Next_03_06");
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Lucas_Hello_Next_03_07");
    AI_RESETFACEANI(SELF);
    INFO_CLEARCHOICES(0x13d71);
}

func void DIA_LUCAS_HELLO_NOTHING() {
    AI_OUTPUT(OTHER, SELF, "DIA_Lucas_Hello_Nothing_15_01");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Lucas_Hello_Nothing_03_02");
    DIA_LUCAS_HELLO_GREAT_NEXT();
}

func void DIA_LUCAS_HELLO_GREAT() {
    AI_OUTPUT(OTHER, SELF, "DIA_Lucas_Hello_Great_15_01");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Lucas_Hello_Great_03_02");
    DIA_LUCAS_HELLO_GREAT_NEXT();
}

instance DIA_LUCAS_SQ404_START(C_INFO) {
    NPC = 0xe387;
    NR = 1;
    CONDITION = DIA_LUCAS_SQ404_START_CONDITION;
    INFORMATION = DIA_LUCAS_SQ404_START_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I'll look for the workers and the gearwheel.";
}

func int DIA_LUCAS_SQ404_START_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x13d71)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_LUCAS_SQ404_START_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Lucas_SQ404_Start_15_01");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Lucas_SQ404_Start_03_02");
    LOG_CREATETOPIC(TOPIC_SQ404, LOG_MISSION);
    LOG_SETSTATUS(_@(MIS_SQ404), TOPIC_SQ404, LOG_RUNNING);
    AI_LOGENTRY(TOPIC_SQ404, LOG_SQ404_START);
    AI_FUNCTION(SELF, 0xf8f0);
}

instance DIA_LUCAS_ABOUTPLACE(C_INFO) {
    NPC = 0xe387;
    NR = 2;
    CONDITION = DIA_LUCAS_ABOUTPLACE_CONDITION;
    INFORMATION = DIA_LUCAS_ABOUTPLACE_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "What can you tell me about this place?";
}

func int DIA_LUCAS_ABOUTPLACE_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x13d71)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_LUCAS_ABOUTPLACE_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Lucas_AboutPlace_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Lucas_AboutPlace_13_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Lucas_AboutPlace_13_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Lucas_AboutPlace_13_03");
}

instance DIA_LUCAS_SQ404_FINISH(C_INFO) {
    NPC = 0xe387;
    NR = 1;
    CONDITION = DIA_LUCAS_SQ404_FINISH_CONDITION;
    INFORMATION = DIA_LUCAS_SQ404_FINISH_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I found the gearwheel and your workers.";
}

func int DIA_LUCAS_SQ404_FINISH_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ404)) == (LOG_RUNNING)) && ((NPC_HASITEMS(OTHER, 0x91ba)) >= (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_LUCAS_SQ404_FINISH_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Lucas_SQ404_Finish_15_01");
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Lucas_SQ404_Finish_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Lucas_SQ404_Finish_15_03");
    AI_STARTFACEANI(SELF, S_SAD, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Lucas_SQ404_Finish_03_04");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Lucas_SQ404_Finish_03_05");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Lucas_SQ404_Finish_03_06");
    AI_RESETFACEANI(SELF);
    AI_LOGENTRY(TOPIC_SQ404, LOG_SQ404_FINISH);
    LOG_SETSTATUS(_@(MIS_SQ404), TOPIC_SQ404, LOG_SUCCESS);
    B_GIVEPLAYERXP(XP_SQ404_FINISH);
    CREATEINVITEMS(SELF, 0x859b, SQ404_REWARD);
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, SQ404_REWARD);
    CREATEINVITEMS(SELF, 0x838e, 2);
    NPC_REMOVEINVITEMS(SELF, 0x91ba, 1);
}

instance DIA_LUCAS_SEARCHING(C_INFO) {
    NPC = 0xe387;
    NR = 1;
    CONDITION = DIA_LUCAS_SEARCHING_CONDITION;
    INFORMATION = DIA_LUCAS_SEARCHING_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "You know Henk and Legrif?";
}

func int DIA_LUCAS_SEARCHING_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_Q402)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x13e78))) && ((NPC_GETDISTTOWP(SELF, "WOLFSDEN_TAVERN_CHAIR02")) <= (0x1388))) {
        if ((Q402_FOUNDVARHALANDLEGRIF) == (FALSE)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_LUCAS_SEARCHING_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Lucas_Searching_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Lucas_Searching_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Lucas_Searching_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Lucas_Searching_03_04");
    AI_OUTPUT(OTHER, SELF, "DIA_Lucas_Searching_15_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Lucas_Searching_03_06");
    AI_LOGENTRY(TOPIC_Q402, LOG_Q402_LUCASVARHALINFO);
    AI_OUTPUT(SELF, OTHER, "DIA_Lucas_Searching_03_07");
    AI_LOGENTRY(TOPIC_Q402, LOG_Q402_LUCASLEGRIFINFO);
    AI_OUTPUT(OTHER, SELF, "DIA_Lucas_Searching_15_08");
}

instance DIA_LUCAS_AMBIENT(C_INFO) {
    NPC = 0xe387;
    NR = 850;
    CONDITION = DIA_LUCAS_AMBIENT_CONDITION;
    INFORMATION = DIA_LUCAS_AMBIENT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "What's up?";
}

func int DIA_LUCAS_AMBIENT_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x13d71)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_LUCAS_AMBIENT_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Lucas_Ambient_15_01");
    if (((LOG_GETSTATUS(MIS_SQ404)) != (LOG_SUCCESS)) && ((LOG_GETSTATUS(MIS_SQ404)) != (LOG_RUNNING))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Lucas_Ambient_03_02");
    };
    if ((LOG_GETSTATUS(MIS_SQ404)) == (LOG_RUNNING)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Lucas_Ambient_03_03");
    };
    if ((LOG_GETSTATUS(MIS_SQ404)) == (LOG_SUCCESS)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Lucas_Ambient_03_04");
    };
}

instance DIA_LUCAS_PICKPOCKET(C_INFO) {
    NPC = 0xe387;
    NR = 900;
    CONDITION = DIA_LUCAS_PICKPOCKET_CONDITION;
    INFORMATION = DIA_LUCAS_PICKPOCKET_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = PICKPOCKET_80;
}

func int DIA_LUCAS_PICKPOCKET_CONDITION() {
    if (((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) && ((SELF.AIVAR[6]) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_LUCAS_PICKPOCKET_INFO() {
    INFO_CLEARCHOICES(0x13d86);
    INFO_ADDCHOICE(0x13d86, DIALOG_BACK, 0x13d8a);
    INFO_ADDCHOICE(0x13d86, DIALOG_PICKPOCKET, 0x13d89);
}

func void DIA_LUCAS_PICKPOCKET_DOIT() {
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (2)) {
        B_PICKPOCKET_AMBIENT_TIER_2();
        SELF.AIVAR[6] = TRUE;
        INFO_CLEARCHOICES(0x13d86);
    };
    AI_PLAYANI(HERO, T_CANNOTTAKE);
    PRINTSCREEN(PRINT_CANTPICKPOCKETTHISPERSON, -(1), -(1), FONT_SCREEN, 4);
    INFO_CLEARCHOICES(0x13d86);
}

func void DIA_LUCAS_PICKPOCKET_BACK() {
    INFO_CLEARCHOICES(0x13d86);
}

instance DIA_LUCAS_SELLHORN(C_INFO) {
    NPC = 0xe387;
    NR = 770;
    CONDITION = DIA_LUCAS_SELLHORN_CONDITION;
    INFORMATION = DIA_LUCAS_SELLHORN_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "I have everything you need. (Sell horns)";
}

var int LUCASNEEDHORN_SHADOW_ENOUGH = 0;
var int LUCASNEEDHORN_OLDSHADOW_ENOUGH = 0;
var int LUCASNEEDHORN_DRAGON_ENOUGH = 0;
var int LUCASNEEDHORN_SHADOW_COUNT = 0;
var int LUCASNEEDHORN_OLDSHADOW_COUNT = 0;
var int LUCASNEEDHORN_DRAGON_COUNT = 0;
func int DIA_LUCAS_SELLHORN_CONDITION() {
    if ((LUCASWANTSHORN) == (TRUE)) {
        if ((((LUCASNEEDHORN_SHADOW_ENOUGH) == (FALSE)) || ((LUCASNEEDHORN_OLDSHADOW_ENOUGH) == (FALSE))) || ((LUCASNEEDHORN_DRAGON_ENOUGH) == (FALSE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

var int LUCAS_HORNINSTANCE = 0;
var int LUCAS_HORNVALUE = 0;
func void DIA_LUCAS_SELLHORN_CHOICES() {
    LUCAS_HORNINSTANCE = -(1);
    LUCAS_HORNVALUE = 0;
    if ((((LUCASNEEDHORN_SHADOW_ENOUGH) == (TRUE)) && ((LUCASNEEDHORN_OLDSHADOW_ENOUGH) == (TRUE))) && ((LUCASNEEDHORN_DRAGON_ENOUGH) == (TRUE))) {
        INFO_CLEARCHOICES(0x13d8b);
    };
    INFO_CLEARCHOICES(0x13d8b);
    INFO_ADDCHOICE(0x13d8b, DIALOG_BACK, 0x13d9a);
    if (((NPC_HASITEMS(OTHER, 0x844c)) >= (1)) && ((LUCASNEEDHORN_SHADOW_ENOUGH) == (FALSE))) {
        INFO_ADDCHOICE(0x13d8b, THROPHYNAME_SHADOWHORN, 0x13d9b);
    };
    if (((NPC_HASITEMS(OTHER, 0x8a1e)) >= (1)) && ((LUCASNEEDHORN_OLDSHADOW_ENOUGH) == (FALSE))) {
        INFO_ADDCHOICE(0x13d8b, THROPHYNAME_OLDSHADOWHORN, 0x13d9c);
    };
    if (((NPC_HASITEMS(OTHER, 0x8445)) >= (1)) && ((LUCASNEEDHORN_DRAGON_ENOUGH) == (FALSE))) {
        INFO_ADDCHOICE(0x13d8b, THROPHYNAME_DRGSNAPPERHORN, 0x13d9d);
    };
}

func void DIA_LUCAS_SELLHORN_INFO() {
    B_SAY(OTHER, SELF, "$MARVIN_GiveItem3");
    DIA_LUCAS_SELLHORN_CHOICES();
}

func void DIA_LUCAS_SELLHORN_AMMOUNT() {
    INFO_CLEARCHOICES(0x13d8b);
    MAX = NPC_HASITEMS(HERO, LUCAS_HORNINSTANCE);
    ALL_STRING = CS4(DIALOG_ALL, " (", I2S(MAX), ")");
    INFO_ADDCHOICE(0x13d8b, ALL_STRING, 0x13d9e);
    INFO_ADDCHOICE(0x13d8b, CHOICE_NUMBER_5, 0x13da0);
    INFO_ADDCHOICE(0x13d8b, CHOICE_NUMBER_1, 0x13da2);
    INFO_ADDCHOICE(0x13d8b, DIALOG_BACK, 0x13d95);
}

var int DIA_LUCAS_SELLHORN_AMMOUNT.MAX = 0;
var string DIA_LUCAS_SELLHORN_AMMOUNT.ALL_STRING = "";
func void DIA_LUCAS_SELLHORN_BACK() {
    INFO_CLEARCHOICES(0x13d8b);
}

func void DIA_LUCAS_SELLHORN_SHADOW() {
    LUCAS_HORNINSTANCE = 0x844c;
    LUCAS_HORNVALUE = VALUE_SHADOWHORN;
    DIA_LUCAS_SELLHORN_AMMOUNT();
}

func void DIA_LUCAS_SELLHORN_OLDSHADOW() {
    LUCAS_HORNINSTANCE = 0x8a1e;
    LUCAS_HORNVALUE = VALUE_OLDSHADOWHORN;
    DIA_LUCAS_SELLHORN_AMMOUNT();
}

func void DIA_LUCAS_SELLHORN_DRAGON() {
    LUCAS_HORNINSTANCE = 0x8445;
    LUCAS_HORNVALUE = VALUE_DRGSNAPPERHORN;
    DIA_LUCAS_SELLHORN_AMMOUNT();
}

func void DIA_LUCAS_SELLHORN_ALL() {
    if ((NPC_HASITEMS(OTHER, LUCAS_HORNINSTANCE)) >= (1)) {
        MAX = NPC_HASITEMS(HERO, LUCAS_HORNINSTANCE);
        NPC_REMOVEINVITEMS(SELF, LUCAS_HORNINSTANCE, MAX);
        CREATEINVITEMS(SELF, 0x859b, (MAX) * (LUCAS_HORNVALUE));
        B_GIVEINVITEMS(SELF, OTHER, 0x859b, (MAX) * (LUCAS_HORNVALUE));
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        B_GIVEINVITEMS(OTHER, SELF, LUCAS_HORNINSTANCE, MAX);
        B_SAY(SELF, OTHER, "$REWARD_CALM");
        AI_RESETFACEANI(SELF);
        if ((LUCAS_HORNINSTANCE) == (0x8445)) {
            LUCASNEEDHORN_DRAGON_COUNT = (LUCASNEEDHORN_DRAGON_COUNT) + (MAX);
            if ((LUCASNEEDHORN_DRAGON_COUNT) >= (2)) {
                LUCASNEEDHORN_DRAGON_ENOUGH = TRUE;
                if ((LUCASNEEDHORN_DRAGON_COUNT) > (2)) {
                    AI_FUNCTION(SELF, 0x13da3);
                };
            };
        } else if ((LUCAS_HORNINSTANCE) == (0x8a1e)) {
            LUCASNEEDHORN_OLDSHADOW_COUNT = (LUCASNEEDHORN_OLDSHADOW_COUNT) + (MAX);
            if ((LUCASNEEDHORN_OLDSHADOW_COUNT) >= (2)) {
                LUCASNEEDHORN_OLDSHADOW_ENOUGH = TRUE;
                if ((LUCASNEEDHORN_OLDSHADOW_COUNT) > (2)) {
                    AI_FUNCTION(SELF, 0x13da4);
                };
            };
        } else if ((LUCAS_HORNINSTANCE) == (0x844c)) {
            LUCASNEEDHORN_SHADOW_COUNT = (LUCASNEEDHORN_SHADOW_COUNT) + (MAX);
            if ((LUCASNEEDHORN_SHADOW_COUNT) >= (2)) {
                LUCASNEEDHORN_SHADOW_ENOUGH = TRUE;
                if ((LUCASNEEDHORN_SHADOW_COUNT) > (2)) {
                    AI_FUNCTION(SELF, 0x13da5);
                };
            };
        };
        DIA_LUCAS_SELLHORN_CHOICES();
    };
    DIA_LUCAS_SELLHORN_CHOICES();
}

var int DIA_LUCAS_SELLHORN_ALL.MAX = 0;
func void DIA_LUCAS_SELLHORN_5() {
    if ((NPC_HASITEMS(OTHER, LUCAS_HORNINSTANCE)) >= (5)) {
        NPC_REMOVEINVITEMS(SELF, LUCAS_HORNINSTANCE, 5);
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        B_GIVEINVITEMS(OTHER, SELF, LUCAS_HORNINSTANCE, 5);
        B_SAY(SELF, OTHER, "$REWARD_CALM");
        AI_RESETFACEANI(SELF);
        CREATEINVITEMS(SELF, 0x859b, (5) * (LUCAS_HORNVALUE));
        if ((LUCAS_HORNINSTANCE) == (0x8445)) {
            LUCASNEEDHORN_DRAGON_COUNT = (LUCASNEEDHORN_DRAGON_COUNT) + (5);
            if ((LUCASNEEDHORN_DRAGON_COUNT) >= (2)) {
                LUCASNEEDHORN_DRAGON_ENOUGH = TRUE;
                if ((LUCASNEEDHORN_DRAGON_COUNT) > (2)) {
                    AI_FUNCTION(SELF, 0x13da3);
                };
            };
        } else if ((LUCAS_HORNINSTANCE) == (0x8a1e)) {
            LUCASNEEDHORN_OLDSHADOW_COUNT = (LUCASNEEDHORN_OLDSHADOW_COUNT) + (5);
            if ((LUCASNEEDHORN_OLDSHADOW_COUNT) >= (2)) {
                LUCASNEEDHORN_OLDSHADOW_ENOUGH = TRUE;
                if ((LUCASNEEDHORN_OLDSHADOW_COUNT) > (2)) {
                    AI_FUNCTION(SELF, 0x13da4);
                };
            };
        } else if ((LUCAS_HORNINSTANCE) == (0x844c)) {
            LUCASNEEDHORN_SHADOW_COUNT = (LUCASNEEDHORN_SHADOW_COUNT) + (5);
            if ((LUCASNEEDHORN_SHADOW_COUNT) >= (2)) {
                LUCASNEEDHORN_SHADOW_ENOUGH = TRUE;
                if ((LUCASNEEDHORN_SHADOW_COUNT) > (2)) {
                    AI_FUNCTION(SELF, 0x13da5);
                };
            };
        };
        if (((((LUCAS_HORNINSTANCE) == (0x844c)) && ((LUCASNEEDHORN_SHADOW_ENOUGH) == (FALSE))) || (((LUCAS_HORNINSTANCE) == (0x8a1e)) && ((LUCASNEEDHORN_OLDSHADOW_ENOUGH) == (FALSE)))) || (((LUCAS_HORNINSTANCE) == (0x8445)) && ((LUCASNEEDHORN_DRAGON_ENOUGH) == (FALSE)))) {
            DIA_LUCAS_SELLHORN_AMMOUNT();
        } else {
            DIA_LUCAS_SELLHORN_CHOICES();
        } else {
            /* set_instance(0) */;
        };
    };
    if (((NPC_HASITEMS(OTHER, LUCAS_HORNINSTANCE)) >= (1)) && ((NPC_HASITEMS(OTHER, LUCAS_HORNINSTANCE)) < (5))) {
        MAX = NPC_HASITEMS(HERO, LUCAS_HORNINSTANCE);
        NPC_REMOVEINVITEMS(SELF, LUCAS_HORNINSTANCE, MAX);
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        B_GIVEINVITEMS(OTHER, SELF, LUCAS_HORNINSTANCE, MAX);
        B_SAY(SELF, OTHER, "$REWARD_CALM");
        AI_RESETFACEANI(SELF);
        CREATEINVITEMS(SELF, 0x859b, (MAX) * (LUCAS_HORNVALUE));
        if ((LUCAS_HORNINSTANCE) == (0x8445)) {
            LUCASNEEDHORN_DRAGON_COUNT = (LUCASNEEDHORN_DRAGON_COUNT) + (MAX);
            if ((LUCASNEEDHORN_DRAGON_COUNT) >= (2)) {
                LUCASNEEDHORN_DRAGON_ENOUGH = TRUE;
                if ((LUCASNEEDHORN_DRAGON_COUNT) > (2)) {
                    AI_FUNCTION(SELF, 0x13da3);
                };
            };
        } else if ((LUCAS_HORNINSTANCE) == (0x8a1e)) {
            LUCASNEEDHORN_OLDSHADOW_COUNT = (LUCASNEEDHORN_OLDSHADOW_COUNT) + (MAX);
            if ((LUCASNEEDHORN_OLDSHADOW_COUNT) >= (2)) {
                LUCASNEEDHORN_OLDSHADOW_ENOUGH = TRUE;
                if ((LUCASNEEDHORN_OLDSHADOW_COUNT) > (2)) {
                    AI_FUNCTION(SELF, 0x13da4);
                };
            };
        } else if ((LUCAS_HORNINSTANCE) == (0x844c)) {
            LUCASNEEDHORN_SHADOW_COUNT = (LUCASNEEDHORN_SHADOW_COUNT) + (MAX);
            if ((LUCASNEEDHORN_SHADOW_COUNT) >= (2)) {
                LUCASNEEDHORN_SHADOW_ENOUGH = TRUE;
                if ((LUCASNEEDHORN_SHADOW_COUNT) > (2)) {
                    AI_FUNCTION(SELF, 0x13da5);
                };
            };
        };
        if (((((LUCAS_HORNINSTANCE) == (0x844c)) && ((LUCASNEEDHORN_SHADOW_ENOUGH) == (FALSE))) || (((LUCAS_HORNINSTANCE) == (0x8a1e)) && ((LUCASNEEDHORN_OLDSHADOW_ENOUGH) == (FALSE)))) || (((LUCAS_HORNINSTANCE) == (0x8445)) && ((LUCASNEEDHORN_DRAGON_ENOUGH) == (FALSE)))) {
            DIA_LUCAS_SELLHORN_AMMOUNT();
        } else {
            DIA_LUCAS_SELLHORN_CHOICES();
        } else {
            /* set_instance(0) */;
        };
    };
    if ((NPC_HASITEMS(OTHER, LUCAS_HORNINSTANCE)) == (0)) {
        DIA_LUCAS_SELLHORN_CHOICES();
    };
}

var int DIA_LUCAS_SELLHORN_5.MAX = 0;
func void DIA_LUCAS_SELLHORN_1() {
    if ((NPC_HASITEMS(OTHER, LUCAS_HORNINSTANCE)) >= (1)) {
        NPC_REMOVEINVITEMS(SELF, LUCAS_HORNINSTANCE, 1);
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        B_GIVEINVITEMS(OTHER, SELF, LUCAS_HORNINSTANCE, 1);
        B_SAY(SELF, OTHER, "$REWARD_CALM");
        AI_RESETFACEANI(SELF);
        CREATEINVITEMS(SELF, 0x859b, LUCAS_HORNVALUE);
        if ((LUCAS_HORNINSTANCE) == (0x8445)) {
            LUCASNEEDHORN_DRAGON_COUNT = (LUCASNEEDHORN_DRAGON_COUNT) + (1);
            if ((LUCASNEEDHORN_DRAGON_COUNT) >= (2)) {
                LUCASNEEDHORN_DRAGON_ENOUGH = TRUE;
                if ((LUCASNEEDHORN_DRAGON_COUNT) > (2)) {
                    AI_FUNCTION(SELF, 0x13da3);
                };
            };
        } else if ((LUCAS_HORNINSTANCE) == (0x8a1e)) {
            LUCASNEEDHORN_OLDSHADOW_COUNT = (LUCASNEEDHORN_OLDSHADOW_COUNT) + (1);
            if ((LUCASNEEDHORN_OLDSHADOW_COUNT) >= (2)) {
                LUCASNEEDHORN_OLDSHADOW_ENOUGH = TRUE;
                if ((LUCASNEEDHORN_OLDSHADOW_COUNT) > (2)) {
                    AI_FUNCTION(SELF, 0x13da4);
                };
            };
        } else if ((LUCAS_HORNINSTANCE) == (0x844c)) {
            LUCASNEEDHORN_SHADOW_COUNT = (LUCASNEEDHORN_SHADOW_COUNT) + (1);
            if ((LUCASNEEDHORN_SHADOW_COUNT) >= (2)) {
                LUCASNEEDHORN_SHADOW_ENOUGH = TRUE;
                if ((LUCASNEEDHORN_SHADOW_COUNT) > (2)) {
                    AI_FUNCTION(SELF, 0x13da5);
                };
            };
        };
        if (((((LUCAS_HORNINSTANCE) == (0x844c)) && ((LUCASNEEDHORN_SHADOW_ENOUGH) == (FALSE))) || (((LUCAS_HORNINSTANCE) == (0x8a1e)) && ((LUCASNEEDHORN_OLDSHADOW_ENOUGH) == (FALSE)))) || (((LUCAS_HORNINSTANCE) == (0x8445)) && ((LUCASNEEDHORN_DRAGON_ENOUGH) == (FALSE)))) {
            DIA_LUCAS_SELLHORN_AMMOUNT();
        } else {
            DIA_LUCAS_SELLHORN_CHOICES();
        } else {
            /* set_instance(0) */;
        };
    };
    if ((NPC_HASITEMS(OTHER, LUCAS_HORNINSTANCE)) == (0)) {
        DIA_LUCAS_SELLHORN_CHOICES();
    };
}

func void LUCAS_GIVEBACKSTUFF_DRAGON() {
    CREATEINVITEMS(DJG_10001_LUCAS, 0x8445, (LUCASNEEDHORN_DRAGON_COUNT) - (2));
    NPC_REMOVEINVITEMS(DJG_10001_LUCAS, 0x859b, (VALUE_DRGSNAPPERHORN) * ((LUCASNEEDHORN_DRAGON_COUNT) - (2)));
    PRINTSCREENS(PRINT_LUCASHORN, -(1), -(1), FONT_SCREENSMALL, 4);
    B_GIVEINVITEMS(HERO, DJG_10001_LUCAS, 0x859b, (VALUE_DRGSNAPPERHORN) * ((LUCASNEEDHORN_DRAGON_COUNT) - (2)));
}

func void LUCAS_GIVEBACKSTUFF_OLDSHADOW() {
    CREATEINVITEMS(DJG_10001_LUCAS, 0x8a1e, (LUCASNEEDHORN_OLDSHADOW_COUNT) - (2));
    NPC_REMOVEINVITEMS(DJG_10001_LUCAS, 0x859b, (VALUE_OLDSHADOWHORN) * ((LUCASNEEDHORN_OLDSHADOW_COUNT) - (2)));
    PRINTSCREENS(PRINT_LUCASHORN, -(1), -(1), FONT_SCREENSMALL, 4);
    B_GIVEINVITEMS(HERO, DJG_10001_LUCAS, 0x859b, (VALUE_OLDSHADOWHORN) * ((LUCASNEEDHORN_OLDSHADOW_COUNT) - (2)));
}

func void LUCAS_GIVEBACKSTUFF_SHADOW() {
    CREATEINVITEMS(DJG_10001_LUCAS, 0x844c, (LUCASNEEDHORN_SHADOW_COUNT) - (2));
    NPC_REMOVEINVITEMS(DJG_10001_LUCAS, 0x859b, (VALUE_SHADOWHORN) * ((LUCASNEEDHORN_SHADOW_COUNT) - (2)));
    PRINTSCREENS(PRINT_LUCASHORN, -(1), -(1), FONT_SCREENSMALL, 4);
    B_GIVEINVITEMS(HERO, DJG_10001_LUCAS, 0x859b, (VALUE_SHADOWHORN) * ((LUCASNEEDHORN_SHADOW_COUNT) - (2)));
}

