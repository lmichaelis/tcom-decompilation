func int ISGOTHIC() {
    return (MEM_READINT(0x401000)) == (0x1e1405c7);
}

func void INIT_MOD() {
    if (ONCE) {
        return;
    };
    if (!(ISGOTHIC())) {
        return;
    };
    MEM_INITALL();
    INIT_KMLIB();
    KMLIB_INITIALIZEMENU();
    MEMORYPROTECTIONOVERRIDE(0x42ebe3, 5);
    MEM_WRITEBYTE((0x42ebe3) + (0), ASMINT_OP_NOP);
    MEM_WRITEBYTE((0x42ebe3) + (1), ASMINT_OP_NOP);
    MEM_WRITEBYTE((0x42ebe3) + (2), ASMINT_OP_NOP);
    MEM_WRITEBYTE((0x42ebe3) + (3), ASMINT_OP_NOP);
    MEM_WRITEBYTE((0x42ebe3) + (4), ASMINT_OP_NOP);
    if ((GAME_RUNTIMECONFIG) == (TARGET_FINAL)) {
        STARTLOGFILE(1);
    };
    if ((GAME_RUNTIMECONFIG) == (TARGET_DEBUG)) {
        STARTLOGFILE(7);
    };
    STARTLOGFILE(-(1));
    ONCE = TRUE;
}

const int INIT_MOD.ONCE = 0;
func void INITPERCEPTIONS() {
    INIT_MOD();
    PERC_SETRANGE(PERC_ASSESSDAMAGE, 0x270f);
    PERC_SETRANGE(PERC_ASSESSOTHERSDAMAGE, PERC_DIST_INTERMEDIAT);
    PERC_SETRANGE(PERC_ASSESSDEFEAT, WATCHFIGHT_DIST_MAX);
    PERC_SETRANGE(PERC_ASSESSMURDER, PERC_DIST_ACTIVE_MAX);
    PERC_SETRANGE(PERC_ASSESSTHREAT, PERC_DIST_INTERMEDIAT);
    PERC_SETRANGE(PERC_DRAWWEAPON, PERC_DIST_DIALOG);
    PERC_SETRANGE(PERC_ASSESSFIGHTSOUND, 0xbb8);
    PERC_SETRANGE(PERC_ASSESSQUIETSOUND, PERC_DIST_INTERMEDIAT);
    PERC_SETRANGE(PERC_ASSESSTHEFT, PERC_DIST_INTERMEDIAT);
    PERC_SETRANGE(PERC_ASSESSUSEMOB, PERC_DIST_INTERMEDIAT);
    PERC_SETRANGE(PERC_ASSESSENTERROOM, PERC_DIST_INTERMEDIAT);
    PERC_SETRANGE(PERC_ASSESSMAGIC, 0x270f);
    PERC_SETRANGE(PERC_ASSESSSTOPMAGIC, 0x270f);
    PERC_SETRANGE(PERC_ASSESSTALK, PERC_DIST_DIALOG);
    PERC_SETRANGE(PERC_ASSESSWARN, PERC_DIST_INTERMEDIAT);
    PERC_SETRANGE(PERC_MOVEMOB, PERC_DIST_DIALOG);
    PERC_SETRANGE(PERC_ASSESSSURPRISE, FIGHT_DIST_CANCEL);
    PERC_SETRANGE(PERC_OBSERVEINTRUDER, 100);
    PERC_SETRANGE(PERC_ASSESSREMOVEWEAPON, 100);
    PERC_SETRANGE(PERC_CATCHTHIEF, 100);
    PERC_SETRANGE(PERC_ASSESSCALL, 100);
    PERC_SETRANGE(PERC_MOVENPC, 100);
    PERC_SETRANGE(PERC_ASSESSCASTER, 100);
    PERC_SETRANGE(PERC_NPCCOMMAND, 100);
    PERC_SETRANGE(PERC_OBSERVESUSPECT, 100);
}

func void PERCEPTION_SET_NORMAL() {
    SELF.SENSES = (SENSE_HEAR) | (SENSE_SEE);
    SELF.SENSES_RANGE = PERC_DIST_ACTIVE_MAX;
    if ((NPC_KNOWSINFO(SELF, 1)) || (C_NPCISGATEGUARD(SELF))) {
        NPC_SETPERCTIME(SELF, 0x3e99999a);
    };
    NPC_SETPERCTIME(SELF, 0x3f800000);
    NPC_PERCENABLE(SELF, PERC_ASSESSPLAYER, 0xa92a);
    NPC_PERCENABLE(SELF, PERC_ASSESSENEMY, 0xa2a1);
    NPC_PERCENABLE(SELF, PERC_ASSESSMAGIC, 0xa92d);
    NPC_PERCENABLE(SELF, PERC_ASSESSDAMAGE, 0xa2a3);
    NPC_PERCENABLE(SELF, PERC_ASSESSMURDER, 0xa2aa);
    NPC_PERCENABLE(SELF, PERC_ASSESSTHEFT, 0xa2b1);
    NPC_PERCENABLE(SELF, PERC_ASSESSUSEMOB, 0xa2b3);
    NPC_PERCENABLE(SELF, PERC_ASSESSENTERROOM, 0xa2a7);
    NPC_PERCENABLE(SELF, PERC_ASSESSTHREAT, 0xa2b2);
    NPC_PERCENABLE(SELF, PERC_DRAWWEAPON, 0xa2a4);
    NPC_PERCENABLE(SELF, PERC_ASSESSFIGHTSOUND, 0xa2a9);
    NPC_PERCENABLE(SELF, PERC_ASSESSQUIETSOUND, 0xa2ac);
    NPC_PERCENABLE(SELF, PERC_ASSESSWARN, 0xa2b5);
    NPC_PERCENABLE(SELF, PERC_ASSESSTALK, 0xa2ad);
    NPC_PERCENABLE(SELF, PERC_MOVEMOB, 0xa2b6);
}

func void PERCEPTION_SET_BLINDED() {
    SELF.SENSES = SENSE_HEAR;
    SELF.SENSES_RANGE = 0xabe;
    if ((NPC_KNOWSINFO(SELF, 1)) || (C_NPCISGATEGUARD(SELF))) {
        NPC_SETPERCTIME(SELF, 0x3e99999a);
    };
    NPC_SETPERCTIME(SELF, 0x3f800000);
    NPC_PERCENABLE(SELF, PERC_ASSESSPLAYER, 0xa92a);
    NPC_PERCENABLE(SELF, PERC_ASSESSENEMY, 0xa2a1);
    NPC_PERCENABLE(SELF, PERC_ASSESSMAGIC, 0xa2a3);
    NPC_PERCENABLE(SELF, PERC_ASSESSDAMAGE, 0xa2a3);
    NPC_PERCENABLE(SELF, PERC_ASSESSMURDER, 0xa2aa);
    NPC_PERCENABLE(SELF, PERC_ASSESSTHEFT, 0xa2a3);
    NPC_PERCENABLE(SELF, PERC_ASSESSUSEMOB, 0xa2a3);
    NPC_PERCENABLE(SELF, PERC_ASSESSENTERROOM, 0xa2a7);
    NPC_PERCENABLE(SELF, PERC_ASSESSTHREAT, 0xa2a3);
    NPC_PERCENABLE(SELF, PERC_DRAWWEAPON, 0xa2a3);
    NPC_PERCENABLE(SELF, PERC_ASSESSFIGHTSOUND, 0xa2a3);
    NPC_PERCENABLE(SELF, PERC_ASSESSQUIETSOUND, 0xa2a3);
    NPC_PERCENABLE(SELF, PERC_ASSESSWARN, 0xa2a3);
    NPC_PERCENABLE(SELF, PERC_ASSESSTALK, 0xa2a3);
    NPC_PERCENABLE(SELF, PERC_MOVEMOB, 0xa2b6);
}

func void PERCEPTION_SET_DUMB() {
    SELF.SENSES = SENSE_SEE;
    SELF.SENSES_RANGE = 75;
    if ((NPC_KNOWSINFO(SELF, 1)) || (C_NPCISGATEGUARD(SELF))) {
        NPC_SETPERCTIME(SELF, 0x3e99999a);
    };
    NPC_SETPERCTIME(SELF, 0x3f800000);
    NPC_PERCENABLE(SELF, PERC_ASSESSPLAYER, 0xa92a);
    NPC_PERCENABLE(SELF, PERC_ASSESSENEMY, 0xa2a1);
    NPC_PERCENABLE(SELF, PERC_ASSESSMAGIC, 0xa92d);
    NPC_PERCENABLE(SELF, PERC_ASSESSDAMAGE, 0xa2a3);
    NPC_PERCENABLE(SELF, PERC_ASSESSTHEFT, 0xa2b1);
    NPC_PERCENABLE(SELF, PERC_ASSESSUSEMOB, 0xa2b3);
    NPC_PERCENABLE(SELF, PERC_ASSESSENTERROOM, 0xa2a7);
    NPC_PERCENABLE(SELF, PERC_ASSESSTHREAT, 0xa2b2);
    NPC_PERCENABLE(SELF, PERC_DRAWWEAPON, 0xa2a4);
    NPC_PERCENABLE(SELF, PERC_ASSESSQUIETSOUND, 0xa2ac);
    NPC_PERCENABLE(SELF, PERC_ASSESSWARN, 0xa2b5);
    NPC_PERCENABLE(SELF, PERC_ASSESSTALK, 0xa2ad);
    NPC_PERCENABLE(SELF, PERC_MOVEMOB, 0xa2b6);
}

func void PERCEPTION_SET_ULTRADUMB() {
    SELF.SENSES = SENSE_SEE;
    SELF.SENSES_RANGE = 15;
    if ((NPC_KNOWSINFO(SELF, 1)) || (C_NPCISGATEGUARD(SELF))) {
        NPC_SETPERCTIME(SELF, 0x3e99999a);
    };
    NPC_SETPERCTIME(SELF, 0x3f800000);
    NPC_PERCENABLE(SELF, PERC_ASSESSPLAYER, 0xa92a);
    NPC_PERCENABLE(SELF, PERC_ASSESSENEMY, 0xa2a1);
    NPC_PERCENABLE(SELF, PERC_ASSESSMAGIC, 0xa92d);
    NPC_PERCENABLE(SELF, PERC_ASSESSDAMAGE, 0xa2a3);
    NPC_PERCENABLE(SELF, PERC_ASSESSTHEFT, 0xa2b1);
    NPC_PERCENABLE(SELF, PERC_ASSESSUSEMOB, 0xa2b3);
    NPC_PERCENABLE(SELF, PERC_ASSESSENTERROOM, 0xa2a7);
    NPC_PERCENABLE(SELF, PERC_ASSESSTHREAT, 0xa2b2);
    NPC_PERCENABLE(SELF, PERC_DRAWWEAPON, 0xa2a4);
    NPC_PERCENABLE(SELF, PERC_ASSESSQUIETSOUND, 0xa2ac);
    NPC_PERCENABLE(SELF, PERC_ASSESSWARN, 0xa2b5);
    NPC_PERCENABLE(SELF, PERC_ASSESSTALK, 0xa2ad);
    NPC_PERCENABLE(SELF, PERC_MOVEMOB, 0xa2b6);
}

func void PERCEPTION_SET_INTROVERT() {
    SELF.SENSES = SENSE_SEE;
    SELF.SENSES_RANGE = 90;
    if ((NPC_KNOWSINFO(SELF, 1)) || (C_NPCISGATEGUARD(SELF))) {
        NPC_SETPERCTIME(SELF, 0x3e99999a);
    };
    NPC_SETPERCTIME(SELF, 0x3f800000);
    NPC_PERCENABLE(SELF, PERC_ASSESSPLAYER, 0xa92a);
    NPC_PERCENABLE(SELF, PERC_ASSESSENEMY, 0xa2a1);
    NPC_PERCENABLE(SELF, PERC_ASSESSMAGIC, 0xa92d);
    NPC_PERCENABLE(SELF, PERC_ASSESSDAMAGE, 0xa2a3);
    NPC_PERCENABLE(SELF, PERC_ASSESSMURDER, 0xa2aa);
    NPC_PERCENABLE(SELF, PERC_ASSESSTHEFT, 0xa2b1);
    NPC_PERCENABLE(SELF, PERC_ASSESSUSEMOB, 0xa2b3);
    NPC_PERCENABLE(SELF, PERC_ASSESSENTERROOM, 0xa2a7);
    NPC_PERCENABLE(SELF, PERC_ASSESSTHREAT, 0xa2b2);
    NPC_PERCENABLE(SELF, PERC_DRAWWEAPON, 0xa2a4);
    NPC_PERCENABLE(SELF, PERC_ASSESSFIGHTSOUND, 0xa2a9);
    NPC_PERCENABLE(SELF, PERC_ASSESSQUIETSOUND, 0xa2ac);
    NPC_PERCENABLE(SELF, PERC_ASSESSWARN, 0xa2b5);
    NPC_PERCENABLE(SELF, PERC_ASSESSTALK, 0xa92a);
    NPC_PERCENABLE(SELF, PERC_MOVEMOB, 0xa2b6);
}

func void PERCEPTION_SET_DUMBINTROVERT() {
    SELF.SENSES = SENSE_SEE;
    SELF.SENSES_RANGE = 70;
    if ((NPC_KNOWSINFO(SELF, 1)) || (C_NPCISGATEGUARD(SELF))) {
        NPC_SETPERCTIME(SELF, 0x3e99999a);
    };
    NPC_SETPERCTIME(SELF, 0x3f800000);
    NPC_PERCENABLE(SELF, PERC_ASSESSPLAYER, 0xa92a);
    NPC_PERCENABLE(SELF, PERC_ASSESSENEMY, 0xa2a1);
    NPC_PERCENABLE(SELF, PERC_ASSESSMAGIC, 0xa92d);
    NPC_PERCENABLE(SELF, PERC_ASSESSDAMAGE, 0xa2a3);
    NPC_PERCENABLE(SELF, PERC_ASSESSMURDER, 0xa2aa);
    NPC_PERCENABLE(SELF, PERC_ASSESSTHEFT, 0xa2b1);
    NPC_PERCENABLE(SELF, PERC_ASSESSUSEMOB, 0xa2b3);
    NPC_PERCENABLE(SELF, PERC_ASSESSENTERROOM, 0xa2a7);
    NPC_PERCENABLE(SELF, PERC_ASSESSTHREAT, 0xa2b2);
    NPC_PERCENABLE(SELF, PERC_DRAWWEAPON, 0xa2a4);
    NPC_PERCENABLE(SELF, PERC_ASSESSFIGHTSOUND, 0xa2a9);
    NPC_PERCENABLE(SELF, PERC_ASSESSQUIETSOUND, 0xa2ac);
    NPC_PERCENABLE(SELF, PERC_ASSESSWARN, 0xa2b5);
    NPC_PERCENABLE(SELF, PERC_ASSESSTALK, 0xa92a);
    NPC_PERCENABLE(SELF, PERC_MOVEMOB, 0xa2b6);
}

func void PERCEPTION_SET_MINIMAL() {
    SELF.SENSES = (SENSE_HEAR) | (SENSE_SEE);
    SELF.SENSES_RANGE = PERC_DIST_ACTIVE_MAX;
    NPC_PERCENABLE(SELF, PERC_ASSESSMAGIC, 0xa92d);
    NPC_PERCENABLE(SELF, PERC_ASSESSDAMAGE, 0xa2a3);
    NPC_PERCENABLE(SELF, PERC_ASSESSMURDER, 0xa2aa);
    NPC_PERCENABLE(SELF, PERC_ASSESSTHEFT, 0xa2b1);
    NPC_PERCENABLE(SELF, PERC_ASSESSUSEMOB, 0xa2b3);
    NPC_PERCENABLE(SELF, PERC_ASSESSENTERROOM, 0xa2a7);
}

func void PERCEPTION_SET_WANTEDPOSTER() {
    SELF.SENSES = (SENSE_HEAR) | (SENSE_SEE);
    SELF.SENSES_RANGE = PERC_DIST_ACTIVE_WANTEDPOSTER;
    NPC_PERCENABLE(SELF, PERC_ASSESSPLAYER, 0xa92a);
    NPC_PERCENABLE(SELF, PERC_ASSESSENEMY, 0xa2a1);
    NPC_PERCENABLE(SELF, PERC_ASSESSMAGIC, 0xa92d);
    NPC_PERCENABLE(SELF, PERC_ASSESSDAMAGE, 0xa2a3);
    NPC_PERCENABLE(SELF, PERC_ASSESSMURDER, 0xa2aa);
    NPC_PERCENABLE(SELF, PERC_ASSESSTHEFT, 0xa2b1);
    NPC_PERCENABLE(SELF, PERC_ASSESSUSEMOB, 0xa2b3);
    NPC_PERCENABLE(SELF, PERC_ASSESSENTERROOM, 0xa2a7);
    NPC_PERCENABLE(SELF, PERC_ASSESSTHREAT, 0xa2b2);
    NPC_PERCENABLE(SELF, PERC_DRAWWEAPON, 0xa2a4);
    NPC_PERCENABLE(SELF, PERC_ASSESSFIGHTSOUND, 0xa2a9);
    NPC_PERCENABLE(SELF, PERC_ASSESSQUIETSOUND, 0xa2ac);
    NPC_PERCENABLE(SELF, PERC_ASSESSWARN, 0xa2b5);
    NPC_PERCENABLE(SELF, PERC_MOVEMOB, 0xa2b6);
}

func void PERCEPTION_SET_NONE() {
    SELF.SENSES = (SENSE_HEAR) | (SENSE_SEE);
    SELF.SENSES_RANGE = 1;
}

func void PERCEPTION_SET_BLINDEDANDREAS() {
    SELF.SENSES = SENSE_HEAR;
    SELF.SENSES_RANGE = 100;
    if ((NPC_KNOWSINFO(SELF, 1)) || (C_NPCISGATEGUARD(SELF))) {
        NPC_SETPERCTIME(SELF, 0x3e99999a);
    };
    NPC_SETPERCTIME(SELF, 0x3f800000);
    NPC_PERCENABLE(SELF, PERC_ASSESSPLAYER, 0xa92a);
    NPC_PERCENABLE(SELF, PERC_ASSESSMAGIC, 0xa92d);
    NPC_PERCENABLE(SELF, PERC_ASSESSDAMAGE, 0xa2a3);
    NPC_PERCENABLE(SELF, PERC_ASSESSMURDER, 0xa2aa);
    NPC_PERCENABLE(SELF, PERC_ASSESSTHEFT, 0xa2b1);
    NPC_PERCENABLE(SELF, PERC_ASSESSUSEMOB, 0xa2b3);
    NPC_PERCENABLE(SELF, PERC_ASSESSENTERROOM, 0xa2a7);
    NPC_PERCENABLE(SELF, PERC_ASSESSTHREAT, 0xa2b2);
    NPC_PERCENABLE(SELF, PERC_DRAWWEAPON, 0xa2a4);
    NPC_PERCENABLE(SELF, PERC_ASSESSQUIETSOUND, 0xa2ac);
    NPC_PERCENABLE(SELF, PERC_ASSESSTALK, 0xa2ad);
}

func void PERCEPTION_SET_DONTCAREABOUTFIGHT() {
    SELF.SENSES = (SENSE_HEAR) | (SENSE_SEE);
    SELF.SENSES_RANGE = PERC_DIST_ACTIVE_MAX;
    if ((NPC_KNOWSINFO(SELF, 1)) || (C_NPCISGATEGUARD(SELF))) {
        NPC_SETPERCTIME(SELF, 0x3e99999a);
    };
    NPC_SETPERCTIME(SELF, 0x3f800000);
    NPC_PERCENABLE(SELF, PERC_ASSESSPLAYER, 0xa92a);
    NPC_PERCENABLE(SELF, PERC_ASSESSMAGIC, 0xa92d);
    NPC_PERCENABLE(SELF, PERC_ASSESSDAMAGE, 0xa2a3);
    NPC_PERCENABLE(SELF, PERC_ASSESSMURDER, 0xa2aa);
    NPC_PERCENABLE(SELF, PERC_ASSESSTHEFT, 0xa2b1);
    NPC_PERCENABLE(SELF, PERC_ASSESSUSEMOB, 0xa2b3);
    NPC_PERCENABLE(SELF, PERC_ASSESSENTERROOM, 0xa2a7);
    NPC_PERCENABLE(SELF, PERC_ASSESSTHREAT, 0xa2b2);
    NPC_PERCENABLE(SELF, PERC_DRAWWEAPON, 0xa2a4);
    NPC_PERCENABLE(SELF, PERC_ASSESSQUIETSOUND, 0xa2ac);
    NPC_PERCENABLE(SELF, PERC_ASSESSTALK, 0xa2ad);
}

func void PERCEPTION_SET_ONLYDIALOGUE() {
    SELF.SENSES = (SENSE_HEAR) | (SENSE_SEE);
    SELF.SENSES_RANGE = PERC_DIST_ACTIVE_MAX;
    if ((NPC_KNOWSINFO(SELF, 1)) || (C_NPCISGATEGUARD(SELF))) {
        NPC_SETPERCTIME(SELF, 0x3e99999a);
    };
    NPC_SETPERCTIME(SELF, 0x3f800000);
    NPC_PERCENABLE(SELF, PERC_ASSESSPLAYER, 0xa92a);
    NPC_PERCENABLE(SELF, PERC_ASSESSTALK, 0xa2ad);
    NPC_PERCENABLE(SELF, PERC_MOVEMOB, 0xa2b6);
}

func void B_ASSESSCHAIRTALK() {
    if (C_BODYSTATECONTAINS(SELF, BS_SIT)) {
        AI_USEMOB(SELF, "THRONE", -(1));
        AI_STARTSTATE(SELF, 0xf08e, 0, "");
    };
    AI_STARTSTATE(SELF, 0xf09f, 0, "");
}

func void PERCEPTION_SET_CHAIR() {
    NPC_PERCENABLE(SELF, PERC_ASSESSQUIETSOUND, 0xa2ac);
    NPC_PERCENABLE(SELF, PERC_ASSESSENEMY, 0xa2a1);
    NPC_PERCENABLE(SELF, PERC_ASSESSMAGIC, 0xa92d);
    NPC_PERCENABLE(SELF, PERC_ASSESSDAMAGE, 0xa2a3);
    NPC_PERCENABLE(SELF, PERC_ASSESSMURDER, 0xa2aa);
    NPC_PERCENABLE(SELF, PERC_ASSESSTHEFT, 0xa2b1);
    NPC_PERCENABLE(SELF, PERC_ASSESSUSEMOB, 0xa2b3);
    NPC_PERCENABLE(SELF, PERC_ASSESSENTERROOM, 0xa2a7);
    NPC_PERCENABLE(SELF, PERC_ASSESSTHREAT, 0xa2b2);
    NPC_PERCENABLE(SELF, PERC_DRAWWEAPON, 0xa2a4);
    NPC_PERCENABLE(SELF, PERC_ASSESSFIGHTSOUND, 0xa2a9);
    NPC_PERCENABLE(SELF, PERC_ASSESSQUIETSOUND, 0xa2ac);
    NPC_PERCENABLE(SELF, PERC_ASSESSWARN, 0xa2b5);
    NPC_PERCENABLE(SELF, PERC_ASSESSDAMAGE, 0xa2a3);
    if (C_BODYSTATECONTAINS(SELF, BS_SIT)) {
        NPC_PERCENABLE(SELF, PERC_ASSESSTALK, 0xa146);
    };
    NPC_PERCENABLE(SELF, PERC_ASSESSTALK, 0xa2ad);
    NPC_PERCENABLE(SELF, PERC_ASSESSPLAYER, 0xa92a);
}

func void PERCEPTION_SET_VOLKERGUARD() {
    SELF.SENSES = (SENSE_HEAR) | (SENSE_SEE);
    SELF.SENSES_RANGE = 0x7d0;
    if ((NPC_KNOWSINFO(SELF, 1)) || (C_NPCISGATEGUARD(SELF))) {
        NPC_SETPERCTIME(SELF, 0x3e99999a);
    };
    NPC_SETPERCTIME(SELF, 0x3f800000);
    NPC_PERCENABLE(SELF, PERC_ASSESSPLAYER, 0xa92a);
    NPC_PERCENABLE(SELF, PERC_ASSESSENEMY, 0xa2a1);
    NPC_PERCENABLE(SELF, PERC_ASSESSMAGIC, 0xa92d);
    NPC_PERCENABLE(SELF, PERC_ASSESSDAMAGE, 0xa2a3);
    NPC_PERCENABLE(SELF, PERC_ASSESSMURDER, 0xa2aa);
    NPC_PERCENABLE(SELF, PERC_ASSESSTHEFT, 0xa2b1);
    NPC_PERCENABLE(SELF, PERC_ASSESSUSEMOB, 0xa2b3);
    NPC_PERCENABLE(SELF, PERC_ASSESSENTERROOM, 0xa2a7);
    NPC_PERCENABLE(SELF, PERC_ASSESSTHREAT, 0xa2b2);
    NPC_PERCENABLE(SELF, PERC_DRAWWEAPON, 0xa2a4);
    NPC_PERCENABLE(SELF, PERC_ASSESSFIGHTSOUND, 0xa2a9);
    NPC_PERCENABLE(SELF, PERC_ASSESSQUIETSOUND, 0xa2ac);
    NPC_PERCENABLE(SELF, PERC_ASSESSWARN, 0xa2b5);
    NPC_PERCENABLE(SELF, PERC_ASSESSTALK, 0xa2ad);
    NPC_PERCENABLE(SELF, PERC_MOVEMOB, 0xa2b6);
}

func void B_CLEARPERCEPTIONS(var C_NPC SLF) {
    NPC_PERCDISABLE(SLF, PERC_ASSESSPLAYER);
    NPC_PERCDISABLE(SLF, PERC_ASSESSENEMY);
    NPC_PERCDISABLE(SLF, PERC_ASSESSBODY);
    NPC_PERCDISABLE(SLF, PERC_ASSESSMAGIC);
    NPC_PERCDISABLE(SLF, PERC_ASSESSDAMAGE);
    NPC_PERCDISABLE(SLF, PERC_ASSESSMURDER);
    NPC_PERCDISABLE(SLF, PERC_ASSESSTHEFT);
    NPC_PERCDISABLE(SLF, PERC_ASSESSUSEMOB);
    NPC_PERCDISABLE(SLF, PERC_ASSESSENTERROOM);
    NPC_PERCDISABLE(SLF, PERC_ASSESSTHREAT);
    NPC_PERCDISABLE(SLF, PERC_DRAWWEAPON);
    NPC_PERCDISABLE(SLF, PERC_ASSESSFIGHTSOUND);
    NPC_PERCDISABLE(SLF, PERC_ASSESSQUIETSOUND);
    NPC_PERCDISABLE(SLF, PERC_ASSESSWARN);
    NPC_PERCDISABLE(SLF, PERC_ASSESSTALK);
    NPC_PERCDISABLE(SLF, PERC_MOVEMOB);
    NPC_PERCDISABLE(SLF, PERC_ASSESSOTHERSDAMAGE);
    NPC_PERCDISABLE(SLF, PERC_ASSESSSTOPMAGIC);
    NPC_PERCDISABLE(SLF, PERC_ASSESSSURPRISE);
}

func void PERCEPTION_SET_MONSTER_RTN() {
    NPC_SETPERCTIME(SELF, 0x3f800000);
    NPC_PERCENABLE(SELF, PERC_ASSESSENEMY, 0x165ed);
    NPC_PERCENABLE(SELF, PERC_ASSESSBODY, 0x165ea);
    NPC_PERCENABLE(SELF, PERC_ASSESSMAGIC, 0xa92d);
    NPC_PERCENABLE(SELF, PERC_ASSESSDAMAGE, 0x165ec);
    NPC_PERCENABLE(SELF, PERC_ASSESSOTHERSDAMAGE, 0x165ef);
    NPC_PERCENABLE(SELF, PERC_ASSESSMURDER, 0x165ef);
    NPC_PERCENABLE(SELF, PERC_ASSESSWARN, 0x165f1);
    if ((SELF.AIVAR[72]) == (TRUE)) {
        NPC_PERCENABLE(SELF, PERC_ASSESSPLAYER, 0xa92a);
        NPC_PERCENABLE(SELF, PERC_ASSESSTALK, 0xa2ad);
    };
}

