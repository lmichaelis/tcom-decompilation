instance DIA_WOODCUTTER_SQ419_EXIT(C_INFO) {
    NPC = 0xe366;
    NR = 999;
    CONDITION = DIA_WOODCUTTER_SQ419_EXIT_CONDITION;
    INFORMATION = DIA_WOODCUTTER_SQ419_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_WOODCUTTER_SQ419_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_WOODCUTTER_SQ419_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_WOODCUTTER_SQ419_HELLO(C_INFO) {
    NPC = 0xe366;
    NR = 1;
    CONDITION = DIA_WOODCUTTER_SQ419_HELLO_CONDITION;
    INFORMATION = DIA_WOODCUTTER_SQ419_HELLO_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_WOODCUTTER_SQ419_HELLO_CONDITION() {
    ITM = NPC_GETEQUIPPEDARMOR(OTHER);
    if ((NPC_HASEQUIPPEDARMOR(OTHER)) == (TRUE)) {
        if ((((HLP_ISITEM(ITM, 0x8ac0)) == (FALSE)) || ((HLP_ISITEM(ITM, 0x8ab8)) == (FALSE))) || ((HLP_ISITEM(ITM, 0x8abe)) == (FALSE))) {
            return TRUE;
        };
    };
    return TRUE;
}

instance DIA_WOODCUTTER_SQ419_HELLO_CONDITION.ITM(C_ITEM)
func void DIA_WOODCUTTER_SQ419_HELLO_INFO() {
    AI_STARTFACEANI(SELF, S_THINK, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_WoodCutter_SQ419_Hello_03_01");
    INFO_CLEARCHOICES(0x14254);
    INFO_ADDCHOICE(0x14254, "I had to run a little...", 0x14259);
    INFO_ADDCHOICE(0x14254, "Why do you ask?", 0x1425a);
}

func void DIA_WOODCUTTER_SQ419_HELLO_CHOICES() {
    AI_RESETFACEANI(OTHER);
    INFO_CLEARCHOICES(0x14254);
    INFO_ADDCHOICE(0x14254, "I don't have time right now.", 0x1425c);
    INFO_ADDCHOICE(0x14254, "Maybe I could help in some way?", 0x1425d);
}

func void DIA_WOODCUTTER_SQ419_HELLO_WORK() {
    AI_OUTPUT(OTHER, SELF, "DIA_WoodCutter_SQ419_Hello_Work_15_01");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_WoodCutter_SQ419_Hello_Work_03_02");
    DIA_WOODCUTTER_SQ419_HELLO_CHOICES();
}

func void DIA_WOODCUTTER_SQ419_HELLO_WHY() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_WoodCutter_SQ419_Hello_Why_15_01");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_WoodCutter_SQ419_Hello_Why_03_02");
    DIA_WOODCUTTER_SQ419_HELLO_CHOICES();
}

var int WOODCUTTER_SQ419_TAKEQUEST = 0;
func void DIA_WOODCUTTER_SQ419_HELLO_WHY_NOTIME() {
    WOODCUTTER_SQ419_TAKEQUEST = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_WoodCutter_SQ419_Hello_NoTime_15_01");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_WoodCutter_SQ419_Hello_NoTime_03_02");
    INFO_CLEARCHOICES(0x14254);
    AI_RESETFACEANI(OTHER);
    AI_RESETFACEANI(SELF);
}

func void DIA_WOODCUTTER_SQ419_HELLO_WHY_HELP() {
    AI_OUTPUT(OTHER, SELF, "DIA_WoodCutter_SQ419_Hello_Help_15_01");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_WoodCutter_SQ419_Hello_Help_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_WoodCutter_SQ419_Hello_Help_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_WoodCutter_SQ419_Hello_Help_03_04");
    AI_OUTPUT(OTHER, SELF, "DIA_WoodCutter_SQ419_Hello_Help_15_05");
    INFO_CLEARCHOICES(0x14254);
    AI_RESETFACEANI(OTHER);
    LOG_CREATETOPIC(TOPIC_SQ419, LOG_MISSION);
    LOG_SETSTATUS(_@(MIS_SQ419), TOPIC_SQ419, LOG_RUNNING);
    AI_LOGENTRY(TOPIC_SQ419, LOG_SQ419_START);
}

instance DIA_WOODCUTTER_SQ419_TAKEQUEST(C_INFO) {
    NPC = 0xe366;
    NR = 1;
    CONDITION = DIA_WOODCUTTER_SQ419_TAKEQUEST_CONDITION;
    INFORMATION = DIA_WOODCUTTER_SQ419_TAKEQUEST_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Maybe I could help in some way?";
}

func int DIA_WOODCUTTER_SQ419_TAKEQUEST_CONDITION() {
    if ((WOODCUTTER_SQ419_TAKEQUEST) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_WOODCUTTER_SQ419_TAKEQUEST_INFO() {
    DIA_WOODCUTTER_SQ419_HELLO_WHY_HELP();
}

instance DIA_WOODCUTTER_SQ419_CANENTRY(C_INFO) {
    NPC = 0xe366;
    NR = 1;
    CONDITION = DIA_WOODCUTTER_SQ419_CANENTRY_CONDITION;
    INFORMATION = DIA_WOODCUTTER_SQ419_CANENTRY_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "The way is clear, you'd better hurry, Einar is already getting impatient.";
}

func int DIA_WOODCUTTER_SQ419_CANENTRY_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ419)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x13e3e))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_WOODCUTTER_SQ419_CANENTRY_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_WoodCutter_SQ419_CanEntry_15_01");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_WoodCutter_SQ419_CanEntry_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_WoodCutter_SQ419_CanEntry_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_WoodCutter_SQ419_CanEntry_03_04");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_WoodCutter_SQ419_CanEntry_03_05");
    INFO_CLEARCHOICES(0x14261);
    INFO_ADDCHOICE(0x14261, "Let's get this over with...", 0x14264);
}

func void DIA_WOODCUTTER_SQ419_CANENTRY_ALRIGHT() {
    SQ419_CANPUSHCART = 1;
    MOB_CHANGEFOCUSNAME("SQ419_CART_01", "MOBNAME_SQ419_PushCart");
    AI_STARTFACEANI(OTHER, S_SERIOUS, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_WoodCutter_SQ419_CanEntry_Alright_15_01");
    INFO_CLEARCHOICES(0x14261);
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    AI_WAITTILLEND(SELF, OTHER);
    AI_STOPPROCESSINFOS(SELF);
    AI_LOGENTRY(TOPIC_SQ419, LOG_SQ419_WOODCUTTER_NEEDHELP);
}

instance DIA_WOODCUTTER_SQ419_WOLFSDEN(C_INFO) {
    NPC = 0xe366;
    NR = 1;
    CONDITION = DIA_WOODCUTTER_SQ419_WOLFSDEN_CONDITION;
    INFORMATION = DIA_WOODCUTTER_SQ419_WOLFSDEN_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_WOODCUTTER_SQ419_WOLFSDEN_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ419)) == (LOG_RUNNING)) && ((SQ419_CANPUSHCART) == (2))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_WOODCUTTER_SQ419_WOLFSDEN_INFO() {
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_WoodCutter_SQ419_WolfsDen_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_WoodCutter_SQ419_WolfsDen_03_02");
    CREATEINVITEMS(SELF, 0x84ac, 10);
    B_GIVEINVITEMS(SELF, OTHER, 0x84ac, 10);
    AI_LOGENTRY(TOPIC_SQ419, LOG_SQ419_WOODCUTTER_THANKS);
    AI_STOPPROCESSINFOS(SELF);
    AI_FUNCTION(SELF, 0xf9b9);
}

