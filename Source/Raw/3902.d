instance DIA_BORIS_EXIT(C_INFO) {
    NPC = 0xcd0f;
    NR = 999;
    CONDITION = DIA_BORIS_EXIT_CONDITION;
    INFORMATION = DIA_BORIS_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_BORIS_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_BORIS_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_BORIS_HELLO(C_INFO) {
    NPC = 0xcd0f;
    NR = 1;
    CONDITION = DIA_BORIS_HELLO_CONDITION;
    INFORMATION = DIA_BORIS_HELLO_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_BORIS_HELLO_CONDITION() {
    if (NPC_ISINSTATE(SELF, 0xf09f)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BORIS_HELLO_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_Hello_03_01");
    TRADER_LOGENTRY_FRIDA();
    CQ002_BORISWORK = 1;
}

instance DIA_BORIS_HOWTRADE(C_INFO) {
    NPC = 0xcd0f;
    NR = 1;
    CONDITION = DIA_BORIS_HOWTRADE_CONDITION;
    INFORMATION = DIA_BORIS_HOWTRADE_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "How did you get into trading?";
}

func int DIA_BORIS_HOWTRADE_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x12268)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BORIS_HOWTRADE_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_HowTrade_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_HowTrade_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_HowTrade_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_HowTrade_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_HowTrade_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_HowTrade_03_06");
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_HowTrade_15_07");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_HowTrade_03_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_HowTrade_03_09");
}

instance DIA_BORIS_TRADE(C_INFO) {
    NPC = 0xcd0f;
    NR = 10;
    CONDITION = DIA_BORIS_TRADE_CONDITION;
    INFORMATION = DIA_BORIS_TRADE_INFO;
    PERMANENT = TRUE;
    TRADE = TRUE;
    DESCRIPTION = "Let's deal.";
}

func int DIA_BORIS_TRADE_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x1226b)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BORIS_TRADE_INFO() {
    B_SAY(OTHER, SELF, "$MARVIN_LetsTrade");
    B_GIVETRADEINV(SELF);
}

instance DIA_BORIS_CQ002_START(C_INFO) {
    NPC = 0xcd0f;
    NR = 2;
    CONDITION = DIA_BORIS_CQ002_START_CONDITION;
    INFORMATION = DIA_BORIS_CQ002_START_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Do you have a job for me?";
}

func int DIA_BORIS_CQ002_START_CONDITION() {
    if (((NPC_KNOWSINFO(OTHER, 0x12268)) && ((CQ002_BORISWORK) == (1))) && ((SQ416_CHECKEDALLANCORPSE) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

var string BORISCHECKSMARVINBOWLEVEL = "";
var string BORISCHECKSMARVINCROSSBOWLEVEL = "";
var string MARVINCURRENTBOWLEVELBORIS = "";
var string MARVINCURRENTCROSSBOWLEVELBORIS = "";
func void DIA_BORIS_CQ002_START_INFO() {
    if ((OTHER.HITCHANCE[3]) > (OTHER.HITCHANCE[4])) {
        MARVINCURRENTBOWLEVELBORIS = INTTOSTRING((30) - (HERO.HITCHANCE[3]));
    };
    if ((OTHER.HITCHANCE[3]) < (OTHER.HITCHANCE[4])) {
        BORISCHECKSMARVINCROSSBOWLEVEL = INTTOSTRING((30) - (HERO.HITCHANCE[4]));
    };
    if (((LOG_GETSTATUS(MIS_Q202)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x11f69))) {
        AI_OUTPUT(OTHER, SELF, "DIA_Boris_CQ002_Start_15_02");
    };
    if (((LOG_GETSTATUS(MIS_Q202)) != (LOG_RUNNING)) || ((LOG_GETSTATUS(MIS_Q202)) == (LOG_SUCCESS))) {
        AI_OUTPUT(OTHER, SELF, "DIA_Boris_CQ002_Start_15_01");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_CQ002_Start_03_04");
    if ((((OTHER.HITCHANCE[3]) >= (30)) || ((C_CANIHUNTANYTHING(SELF)) == (TRUE))) || ((OTHER.HITCHANCE[4]) >= (30))) {
        AI_OUTPUT(OTHER, SELF, "DIA_Boris_CQ002_Start_15_07");
        AI_OUTPUT(SELF, OTHER, "DIA_Boris_CQ002_Start_03_08");
        AI_OUTPUT(SELF, OTHER, "DIA_Boris_CQ002_Start_03_09");
        LOG_CREATETOPIC(TOPIC_CQ002, LOG_MISSION);
        LOG_SETSTATUS(_@(MIS_CQ002), TOPIC_CQ002, LOG_RUNNING);
        if (((LOG_GETSTATUS(MIS_Q202)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x11f69))) {
            AI_LOGENTRY(TOPIC_CQ002, LOG_CQ002_START);
        } else {
            AI_LOGENTRY(TOPIC_CQ002, LOG_CQ002_STARTV2);
        } else {
            CQ002_BORISWORK = 2;
        } else {
            /* set_instance(0) */;
        };
    };
    if (((OTHER.HITCHANCE[3]) < (30)) && ((OTHER.HITCHANCE[4]) < (30))) {
        if ((OTHER.HITCHANCE[3]) > (OTHER.HITCHANCE[4])) {
            BORISCHECKSMARVINBOWLEVEL = CONCATSTRINGS(MARVINCURRENTBOWLEVELBORIS, PRINT_NEEDEDBOWLEVEL);
        } else if ((OTHER.HITCHANCE[3]) < (OTHER.HITCHANCE[4])) {
            BORISCHECKSMARVINCROSSBOWLEVEL = CONCATSTRINGS(MARVINCURRENTCROSSBOWLEVELBORIS, PRINT_NEEDEDCBOWLEVEL);
            AI_PRINTSCREEN(BORISCHECKSMARVINBOWLEVEL, -(1), -(1), FONT_SCREEN, 3);
        };
    };
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_CQ002_Start_15_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_CQ002_Start_03_06");
}

var int BORIS_REFERENCEEXCHANGE = 0;
instance DIA_BORIS_CQ002_FINISH(C_INFO) {
    NPC = 0xcd0f;
    NR = 1;
    CONDITION = DIA_BORIS_CQ002_FINISH_CONDITION;
    INFORMATION = DIA_BORIS_CQ002_FINISH_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I was at Allan's.";
}

func int DIA_BORIS_CQ002_FINISH_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 0x1245a)) && ((SQ416_CHECKEDALLANCORPSE) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BORIS_CQ002_FINISH_INFO() {
    FF_APPLYONCEEXTGT(0xf4ca, 0, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_CQ002_Finish_15_01");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_CQ002_Finish_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_CQ002_Finish_03_03");
    if (((LOG_GETSTATUS(MIS_Q202)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x11f69))) {
        AI_OUTPUT(OTHER, SELF, "DIA_Boris_CQ002_Finish_15_04");
        AI_OUTPUT(SELF, OTHER, "DIA_Boris_CQ002_Finish_03_05");
        B_USEFAKESCROLL();
        CREATEINVITEMS(SELF, 0x9124, 1);
        B_GIVEINVITEMS(SELF, OTHER, 0x9124, 1);
        AI_LOGENTRY(TOPIC_CQ002, LOG_CQ002_FINISHCITIZEN);
    };
    CREATEINVITEMS(SELF, 0x859b, CQ002_REWARD);
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, CQ002_REWARD);
    BORIS_REFERENCEEXCHANGE = TRUE;
    AI_LOGENTRY(TOPIC_CQ002, LOG_CQ002_FINISH);
    LOG_SETSTATUS(_@(MIS_CQ002), TOPIC_CQ002, LOG_SUCCESS);
    B_GIVEPLAYERXP(XP_CQ002_FINISH);
    WLD_INSERTNPC(0xc65e, "FP_ROAM_PART3_146");
}

instance DIA_BORIS_REFERENCEEXCHANGE(C_INFO) {
    NPC = 0xcd0f;
    NR = 1;
    CONDITION = DIA_BORIS_REFERENCEEXCHANGE_CONDITION;
    INFORMATION = DIA_BORIS_REFERENCEEXCHANGE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Could I exchange my reward for a reference? (100 GP)";
}

func int DIA_BORIS_REFERENCEEXCHANGE_CONDITION() {
    if ((((BORIS_REFERENCEEXCHANGE) == (TRUE)) && ((LOG_GETSTATUS(MIS_Q202)) == (LOG_RUNNING))) && (NPC_KNOWSINFO(OTHER, 0x11f69))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BORIS_REFERENCEEXCHANGE_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_ReferenceExchange_15_01");
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (CQ002_REWARD)) {
        BORIS_REFERENCEEXCHANGE = 2;
        AI_OUTPUT(SELF, OTHER, "DIA_Boris_ReferenceExchange_03_02");
        B_USEFAKESCROLL();
        AI_OUTPUT(SELF, OTHER, "DIA_Boris_ReferenceExchange_03_03");
        CREATEINVITEMS(SELF, 0x9124, 1);
    };
    B_SAY(SELF, OTHER, "$NOGOLD");
}

instance DIA_BORIS_PQ106_START(C_INFO) {
    NPC = 0xcd0f;
    NR = 1;
    CONDITION = DIA_BORIS_PQ106_START_CONDITION;
    INFORMATION = DIA_BORIS_PQ106_START_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Aren't you looking for a worker?";
}

func int DIA_BORIS_PQ106_START_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 0x12268)) && ((WHONEEDPEON) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BORIS_PQ106_START_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_PQ106_Start_15_01");
    if ((LOG_GETSTATUS(MIS_CQ002)) != (LOG_SUCCESS)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Boris_PQ106_Start_03_02");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_PQ106_Start_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_PQ106_Start_03_04");
    if (((IAM_PEON) == (TRUE)) && (((PEON_SECONDTIME) == (0)) || ((PEON_SECONDTIME) == (2)))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Boris_PQ106_Start_03_05");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_PQ106_Start_03_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_PQ106_Start_03_07");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_PQ106_Start_03_08");
    LOG_CREATETOPIC(TOPIC_PQ106, LOG_MISSION);
    LOG_SETSTATUS(_@(MIS_PQ106), TOPIC_PQ106, LOG_RUNNING);
    if (((IAM_PEON) == (TRUE)) && (((PEON_SECONDTIME) == (0)) || ((PEON_SECONDTIME) == (2)))) {
        AI_LOGENTRY(TOPIC_PQ106, LOG_PQ106_START_V1);
    };
    AI_LOGENTRY(TOPIC_PQ106, LOG_PQ106_START_V2);
}

var int PQ106_WECANBEPEON = 0;
instance DIA_BORIS_PQ106_BEGINNING(C_INFO) {
    NPC = 0xcd0f;
    NR = 1;
    CONDITION = DIA_BORIS_PQ106_BEGINNING_CONDITION;
    INFORMATION = DIA_BORIS_PQ106_BEGINNING_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Here, my citizenship document.";
}

func int DIA_BORIS_PQ106_BEGINNING_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 0x1227f)) && ((NPC_HASITEMS(OTHER, 0x9112)) >= (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BORIS_PQ106_BEGINNING_INFO() {
    B_GIVEINVITEMS(OTHER, SELF, 0x9112, 1);
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_PQ106_Beginning_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_PQ106_Beginning_03_02");
    B_USEFAKESCROLL();
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_PQ106_Beginning_03_03");
    if ((PQ106_CAGEOPENED) == (TRUE)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Boris_PQ106_Beginning_03_04");
        AI_OUTPUT(SELF, OTHER, "DIA_Boris_PQ106_Beginning_03_05");
        AI_OUTPUT(OTHER, SELF, "DIA_Boris_PQ106_Beginning_15_06");
        AI_OUTPUT(SELF, OTHER, "DIA_Boris_PQ106_Beginning_03_07");
        PQ106_WECANBEPEON = TRUE;
        if (((IAM_PEON) == (FALSE)) && ((PEON_SECONDTIME) == (TRUE))) {
            AI_OUTPUT(SELF, OTHER, "DIA_Boris_PQ106_Beginning_03_08");
            AI_LOGENTRY(TOPIC_PQ106, LOG_PQ106_FINISH_V1);
        } else {
            AI_OUTPUT(SELF, OTHER, "DIA_Boris_PQ106_Beginning_03_09");
            AI_LOGENTRY(TOPIC_PQ106, LOG_PQ106_FINISH_V2);
            LOG_SETSTATUS(_@(MIS_PQ106), TOPIC_PQ106, LOG_SUCCESS);
            CREATEINVITEMS(SELF, 0x859b, PQ106_REWARD);
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, PQ106_REWARD);
            B_GIVEPLAYERXP(XP_PQ106_FINISH);
        } else {
            /* set_instance(0) */;
        };
    };
    B_GIVEINVITEMS(SELF, OTHER, 0x9112, 1);
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_PQ106_Beginning_03_10");
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_PQ106_Beginning_15_11");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_PQ106_Beginning_03_12");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_PQ106_Beginning_03_13");
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_PQ106_Beginning_15_14");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_PQ106_Beginning_03_15");
    if (((IAM_PEON) == (TRUE)) && (((PEON_SECONDTIME) == (0)) || ((PEON_SECONDTIME) == (2)))) {
        AI_LOGENTRY(TOPIC_PQ106, LOG_PQ106_BORIS_WHATDO_V1);
    };
    AI_LOGENTRY(TOPIC_PQ106, LOG_PQ106_BORIS_WHATDO_V2);
}

instance DIA_BORIS_PQ106_YOUCARE(C_INFO) {
    NPC = 0xcd0f;
    NR = 1;
    CONDITION = DIA_BORIS_PQ106_YOUCARE_CONDITION;
    INFORMATION = DIA_BORIS_PQ106_YOUCARE_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Why do you care so much?";
}

func int DIA_BORIS_PQ106_YOUCARE_CONDITION() {
    if ((((NPC_KNOWSINFO(OTHER, 0x12283)) && ((LOG_GETSTATUS(MIS_PQ106)) == (LOG_RUNNING))) && ((PQ106_WECANBEPEON) == (FALSE))) && ((PQ106_CAGEOPENED) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BORIS_PQ106_YOUCARE_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_PQ106_YouCare_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_PQ106_YouCare_03_02");
}

instance DIA_BORIS_PQ106_HOW(C_INFO) {
    NPC = 0xcd0f;
    NR = 2;
    CONDITION = DIA_BORIS_PQ106_HOW_CONDITION;
    INFORMATION = DIA_BORIS_PQ106_HOW_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "How do I open it?";
}

func int DIA_BORIS_PQ106_HOW_CONDITION() {
    if ((((NPC_KNOWSINFO(OTHER, 0x12283)) && ((LOG_GETSTATUS(MIS_PQ106)) == (LOG_RUNNING))) && ((PQ106_WECANBEPEON) == (FALSE))) && ((PQ106_CAGEOPENED) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BORIS_PQ106_HOW_INFO() {
    MOB_CHANGEFOCUSNAME("PQ106_BUTTON", "MOBNAME_PQ106_Button");
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_PQ106_How_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_PQ106_How_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_PQ106_How_03_03");
}

instance DIA_BORIS_PQ106_WHY(C_INFO) {
    NPC = 0xcd0f;
    NR = 3;
    CONDITION = DIA_BORIS_PQ106_WHY_CONDITION;
    INFORMATION = DIA_BORIS_PQ106_WHY_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Why don't you like Alice?";
}

func int DIA_BORIS_PQ106_WHY_CONDITION() {
    if ((((NPC_KNOWSINFO(OTHER, 0x12283)) && ((LOG_GETSTATUS(MIS_PQ106)) == (LOG_RUNNING))) && ((PQ106_WECANBEPEON) == (FALSE))) && ((PQ106_CAGEOPENED) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BORIS_PQ106_WHY_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_PQ106_Why_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_PQ106_Why_03_02");
}

instance DIA_BORIS_PQ106_JOBDONE(C_INFO) {
    NPC = 0xcd0f;
    NR = 3;
    CONDITION = DIA_BORIS_PQ106_JOBDONE_CONDITION;
    INFORMATION = DIA_BORIS_PQ106_JOBDONE_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_BORIS_PQ106_JOBDONE_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_PQ106)) == (LOG_RUNNING)) && ((PQ106_WECANBEPEON) == (FALSE))) && ((PQ106_CAGEOPENED) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BORIS_PQ106_JOBDONE_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_PQ106_JobDone_03_00");
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_PQ106_JobDone_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_PQ106_JobDone_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_PQ106_JobDone_03_03");
    if (((IAM_PEON) == (TRUE)) && (((PEON_SECONDTIME) == (0)) || ((PEON_SECONDTIME) == (2)))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Boris_PQ106_JobDone_03_04");
        AI_LOGENTRY(TOPIC_PQ106, LOG_PQ106_FINISH_V3);
        CREATEINVITEMS(SELF, 0x859b, PQ106_REWARD);
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_PQ106_JobDone_03_05");
    AI_LOGENTRY(TOPIC_PQ106, LOG_PQ106_FINISH_V4);
    PQ106_WECANBEPEON = TRUE;
    B_GIVEPLAYERXP(XP_PQ106_FINISH);
    LOG_SETSTATUS(_@(MIS_PQ106), TOPIC_PQ106, LOG_SUCCESS);
}

var int FRIDA_TEACHHUNT = 0;
instance DIA_BORIS_IWANTTOBEPEON(C_INFO) {
    NPC = 0xcd0f;
    NR = 10;
    CONDITION = DIA_BORIS_IWANTTOBEPEON_CONDITION;
    INFORMATION = DIA_BORIS_IWANTTOBEPEON_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "I want to be your apprentice.";
}

func int DIA_BORIS_IWANTTOBEPEON_CONDITION() {
    if (((PQ106_WECANBEPEON) == (TRUE)) && ((PEON_BORIS) == (FALSE))) {
        if (((IAM_PEON) == (FALSE)) || ((PEON_SECONDTIME) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_BORIS_IWANTTOBEPEON_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_IwanttobePeon_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_IwanttobePeon_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_IwanttobePeon_03_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_IwanttobePeon_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_IwanttobePeon_03_05");
    INFO_CLEARCHOICES(0x12293);
    INFO_ADDCHOICE(0x12293, "I'll think about it some more.", 0x12296);
    INFO_ADDCHOICE(0x12293, "Sure, I'm in.", 0x12297);
}

func void DIA_BORIS_IWANTTOBEPEON_NOTSURE() {
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_IwanttobePeonNotSure_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_IwanttobePeonNotSure_03_02");
    INFO_CLEARCHOICES(0x12293);
}

func void DIA_BORIS_IWANTTOBEPEON_YES() {
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_IwanttobePeonYes_15_01");
    if ((B_GETGREATESTPETZCRIME(SELF)) > (CRIME_NONE)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Boris_IwanttobePeonYes_03_06");
        AI_OUTPUT(SELF, OTHER, "DIA_Boris_IwanttobePeonYes_03_07");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_IwanttobePeonYes_03_02");
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[2]) == (FALSE)) {
        AI_OUTPUT(OTHER, SELF, "DIA_Boris_IwanttobePeonYes_15_03");
        AI_OUTPUT(SELF, OTHER, "DIA_Boris_IwanttobePeonYes_03_04");
        FRIDA_TEACHHUNT = TRUE;
    };
    B_SAY(OTHER, SELF, "$MARVIN_YES");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_IwanttobePeonYes_03_05");
    B_GIVEPLAYERXP(XP_PEON_FINISH);
    IAM_PEON = TRUE;
    PEON_BORIS = TRUE;
    if ((PEON_WHOFIRSTPEON) == (0)) {
        PEON_WHOFIRSTPEON = 4;
    };
    PEON_SECONDTIME = 2;
    INFO_CLEARCHOICES(0x12293);
}

var int BORIS_MIL_SURPRISED = 0;
var int BORIS_SLD_SURPRISED = 0;
var int PQ107_CANBESTARTED = 0;
instance DIA_BORIS_HOWTOBEPEON(C_INFO) {
    NPC = 0xcd0f;
    NR = 10;
    CONDITION = DIA_BORIS_HOWTOBEPEON_CONDITION;
    INFORMATION = DIA_BORIS_HOWTOBEPEON_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "What am I supposed to do?";
}

func int DIA_BORIS_HOWTOBEPEON_CONDITION() {
    if ((PEON_BORIS) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BORIS_HOWTOBEPEON_LOGENTRY() {
    LOG_CREATETOPIC(TOPIC_WORK_BORIS, LOG_NOTE);
    AI_LOGENTRY(TOPIC_WORK_BORIS, LOG_WORK_BORIS_START);
}

func void DIA_BORIS_HOWTOBEPEON_WHATDO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_HowToBePeonGuide_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_HowToBePeonGuide_03_02");
}

func void DIA_BORIS_HOWTOBEPEON_END() {
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_HowToBePeonGuide_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_HowToBePeonGuide_03_04");
    DIA_BORIS_HOWTOBEPEON_LOGENTRY();
    PQ107_CANBESTARTED = TRUE;
}

func void DIA_BORIS_HOWTOBEPEON_SIDEQUEST() {
    if ((PQ107_CANBESTARTED) == (FALSE)) {
        DIA_BORIS_HOWTOBEPEON_WHATDO();
        DIA_BORIS_HOWTOBEPEON_END();
        AI_OUTPUT(OTHER, SELF, "DIA_Boris_HowToBePeon_SideQuest_15_04");
        AI_RESETFACEANI(SELF);
        AI_OUTPUT(SELF, OTHER, "DIA_Boris_HowToBePeon_SideQuest_03_05");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_HowToBePeon_SideQuest_03_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_HowToBePeon_SideQuest_03_07");
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_HowToBePeon_SideQuest_15_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_HowToBePeon_SideQuest_03_09");
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_HowToBePeon_SideQuest_15_10");
    LOG_CREATETOPIC(TOPIC_PQ107, LOG_MISSION);
    LOG_SETSTATUS(_@(MIS_PQ107), TOPIC_PQ107, LOG_RUNNING);
    AI_LOGENTRY(TOPIC_PQ107, LOG_PQ107_START);
    PQ107_PREPAREALICEHOUSE();
}

func void DIA_BORIS_HOWTOBEPEON_GUDIE() {
    if ((((KAPITEL) >= (3)) && ((PEON_SECONDTIME) == (FALSE))) && ((LOG_GETSTATUS(MIS_PQ107)) == (0))) {
        DIA_BORIS_HOWTOBEPEON_SIDEQUEST();
    };
    if ((NPC_ISDEAD(VLK_3025_ALLAN)) == (FALSE)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Boris_HowToBePeon_03_01");
        AI_OUTPUT(SELF, OTHER, "DIA_Boris_HowToBePeon_03_02");
        DIA_BORIS_HOWTOBEPEON_END();
    };
    DIA_BORIS_HOWTOBEPEON_WHATDO();
    DIA_BORIS_HOWTOBEPEON_END();
}

func void DIA_BORIS_HOWTOBEPEON_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_HowToBePeon_15_00");
    if ((HERO.GUILD) == (GIL_MIL)) {
        BORIS_MIL_SURPRISED = TRUE;
        DIA_BORIS_HOWTOBEPEON_GUDIE();
    };
    if ((HERO.GUILD) == (GIL_SLD)) {
        BORIS_SLD_SURPRISED = TRUE;
        DIA_BORIS_HOWTOBEPEON_GUDIE();
    };
    DIA_BORIS_HOWTOBEPEON_GUDIE();
}

instance DIA_BORIS_WHOAYOUMILITIA(C_INFO) {
    NPC = 0xcd0f;
    NR = 10;
    CONDITION = DIA_BORIS_WHOAYOUMILITIA_CONDITION;
    INFORMATION = DIA_BORIS_WHOAYOUMILITIA_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_BORIS_WHOAYOUMILITIA_CONDITION() {
    if (((((PEON_BORIS) == (TRUE)) && ((BORIS_MIL_SURPRISED) == (FALSE))) && ((HERO.GUILD) == (GIL_MIL))) && (NPC_KNOWSINFO(OTHER, 0x1229b))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BORIS_AFTERPROMOTION() {
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_WhoaYouAraxos_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_WhoaYouAraxos_03_04");
    PQ107_CANBESTARTED = TRUE;
}

func void DIA_BORIS_WHOAYOUMILITIA_INFO() {
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_WhoaYouMilitia_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_WhoaYouMilitia_03_02");
    AI_RESETFACEANI(SELF);
    if ((((KAPITEL) >= (3)) && ((PEON_SECONDTIME) == (FALSE))) && ((LOG_GETSTATUS(MIS_PQ107)) == (0))) {
        PQ107_CANBESTARTED = TRUE;
        DIA_BORIS_HOWTOBEPEON_SIDEQUEST();
        BORIS_MIL_SURPRISED = TRUE;
    };
    DIA_BORIS_AFTERPROMOTION();
}

instance DIA_BORIS_WHOAYOUARAXOS(C_INFO) {
    NPC = 0xcd0f;
    NR = 10;
    CONDITION = DIA_BORIS_WHOAYOUARAXOS_CONDITION;
    INFORMATION = DIA_BORIS_WHOAYOUARAXOS_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_BORIS_WHOAYOUARAXOS_CONDITION() {
    if (((((PEON_BORIS) == (TRUE)) && ((BORIS_SLD_SURPRISED) == (FALSE))) && ((HERO.GUILD) == (GIL_SLD))) && (NPC_KNOWSINFO(OTHER, 0x1229b))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BORIS_WHOAYOUARAXOS_INFO() {
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_WhoaYouAraxos_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_WhoaYouAraxos_03_02");
    AI_RESETFACEANI(SELF);
    if ((((KAPITEL) >= (3)) && ((PEON_SECONDTIME) == (FALSE))) && ((LOG_GETSTATUS(MIS_PQ107)) == (0))) {
        PQ107_CANBESTARTED = TRUE;
        DIA_BORIS_HOWTOBEPEON_SIDEQUEST();
        BORIS_SLD_SURPRISED = TRUE;
    };
    DIA_BORIS_AFTERPROMOTION();
}

instance DIA_BORIS_PQ107_STARTING(C_INFO) {
    NPC = 0xcd0f;
    NR = 10;
    CONDITION = DIA_BORIS_PQ107_STARTING_CONDITION;
    INFORMATION = DIA_BORIS_PQ107_STARTING_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_BORIS_PQ107_STARTING_CONDITION() {
    if ((((((PEON_BORIS) == (TRUE)) && ((KAPITEL) >= (3))) && ((PQ107_CANBESTARTED) == (TRUE))) && ((LOG_GETSTATUS(MIS_PQ107)) == (0))) && ((PEON_SECONDTIME) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BORIS_PQ107_STARTING_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_PQ107_Starting_03_01");
    DIA_BORIS_HOWTOBEPEON_SIDEQUEST();
}

instance DIA_BORIS_SQ207_LEXX(C_INFO) {
    NPC = 0xcd0f;
    NR = 1;
    CONDITION = DIA_BORIS_SQ207_LEXX_CONDITION;
    INFORMATION = DIA_BORIS_SQ207_LEXX_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Luna would like her money back.";
}

func int DIA_BORIS_SQ207_LEXX_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ207)) == (LOG_RUNNING)) && ((SQ207_FAILED) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BORIS_SQ207_LEXX_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_SQ207_Lexx_15_01");
    AI_STARTFACEANI(SELF, S_SAD, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_SQ207_Lexx_03_02");
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_SQ207_Lexx_15_03");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_SQ207_Lexx_03_04");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

instance DIA_BORIS_SQ207_WHAT(C_INFO) {
    NPC = 0xcd0f;
    NR = 1;
    CONDITION = DIA_BORIS_SQ207_WHAT_CONDITION;
    INFORMATION = DIA_BORIS_SQ207_WHAT_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "What are you talking about?";
}

func int DIA_BORIS_SQ207_WHAT_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_SQ207)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x122ad))) && ((SQ207_FAILED) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BORIS_SQ207_WHAT_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_SQ207_What_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_SQ207_What_03_02");
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_SQ207_What_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_SQ207_What_03_04");
    INFO_CLEARCHOICES(0x122b0);
    INFO_ADDCHOICE(0x122b0, "Do you think he knows about the whole thing?", 0x122b3);
}

func void DIA_BORIS_SQ207_WHAT_KNOW() {
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_SQ207_What_Know_15_01");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_SQ207_What_Know_03_02");
    AI_STARTFACEANI(OTHER, S_THINK, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_SQ207_What_Know_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_SQ207_What_Know_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_SQ207_What_Know_03_05");
    AI_STARTFACEANI(OTHER, S_SERIOUS, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_SQ207_What_Know_15_06");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_SQ207_What_Know_03_07");
    AI_STARTFACEANI(SELF, S_SAD, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_SQ207_What_Know_03_08");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    INFO_CLEARCHOICES(0x122b0);
    AI_LOGENTRY(TOPIC_SQ207, LOG_SQ207_BORRIS_PROBLEM);
    WLD_INSERTNPC(0xd0f2, "PARTM4_SQ207_SCARMAN");
}

instance DIA_BORIS_SQ207_RESULT(C_INFO) {
    NPC = 0xcd0f;
    NR = 1;
    CONDITION = DIA_BORIS_SQ207_RESULT_CONDITION;
    INFORMATION = DIA_BORIS_SQ207_RESULT_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "You don't have to worry about Volker's people anymore.";
}

func int DIA_BORIS_SQ207_RESULT_CONDITION() {
    if (((((LOG_GETSTATUS(MIS_SQ207)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x122b0))) && ((SQ207_BORISRESULT) >= (1))) && ((SQ207_FAILED) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BORIS_SQ207_FINISH() {
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_SQ207_Result_03_09");
    AI_LOGENTRY(TOPIC_SQ207, LOG_SQ207_BORIS_DONE);
    INFO_CLEARCHOICES(0x122b4);
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

func void DIA_BORIS_SQ207_RESULT_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_SQ207_Result_15_01");
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_SQ207_Result_03_02");
    if ((SQ207_BORISRESULT) == (1)) {
        AI_STARTFACEANI(OTHER, S_SMUG, 1, -(1));
        AI_OUTPUT(OTHER, SELF, "DIA_Boris_SQ207_Result_15_03");
        AI_STARTFACEANI(SELF, T_HURT, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Boris_SQ207_Result_03_04");
        AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Boris_SQ207_Result_03_05");
        DIA_BORIS_SQ207_FINISH();
    };
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_SQ207_Result_15_06");
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_SQ207_Result_15_07");
    NPC_REMOVEINVITEM(SELF, 0x910d);
    B_STANDUP();
    B_GIVEINVITEMS(OTHER, SELF, 0x910d, 1);
    B_USEFAKESCROLL();
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_SQ207_Result_03_08");
    if ((NPC_HASITEMS(OTHER, 0x87b1)) >= (1)) {
        INFO_CLEARCHOICES(0x122b4);
        INFO_ADDCHOICE(0x122b4, "(Keep the pouch from Bradlock)", 0x122b9);
        INFO_ADDCHOICE(0x122b4, "(Give the pouch from Bradlock)", 0x122b8);
    };
    DIA_BORIS_SQ207_FINISH();
}

func void DIA_BORIS_SQ207_RESULT_GIVE() {
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_SQ207_Result_Give_15_01");
    NPC_REMOVEINVITEM(SELF, 0x87b1);
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    B_GIVEINVITEMS(OTHER, SELF, 0x87b1, 1);
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_SQ207_Result_Give_03_02");
    B_GIVEPLAYERXP(XP_SQ207_BORISPACKET);
    DIA_BORIS_SQ207_FINISH();
}

func void DIA_BORIS_SQ207_RESULT_KEEP() {
    DIA_BORIS_SQ207_FINISH();
}

instance DIA_BORIS_TEACH(C_INFO) {
    NPC = 0xcd0f;
    NR = 980;
    CONDITION = DIA_BORIS_TEACH_CONDITION;
    INFORMATION = DIA_BORIS_TEACH_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Could you teach me something?";
}

func int DIA_BORIS_TEACH_CONDITION() {
    if ((PEON_BORIS) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BORIS_TEACH_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_Teach_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_Teach_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_Teach_03_03");
    LOG_CREATETOPIC(TOPIC_WORK_BORIS, LOG_NOTE);
    AI_LOGENTRY(TOPIC_WORK_BORIS, LOG_CITYTEACHER_FRIDA);
}

instance DIA_BORIS_TEACHFLETCHERY(C_INFO) {
    NPC = 0xcd0f;
    NR = 950;
    CONDITION = DIA_BORIS_TEACHFLETCHERY_CONDITION;
    INFORMATION = DIA_BORIS_TEACHFLETCHERY_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = B_BUILDLEARNSTRING2(PRINT_LEARN_FLETCHERY1, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_FLETCHERY, 1), 0);
}

func int DIA_BORIS_TEACHFLETCHERY_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 0x122ba)) && ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_FLETCHERY)) == (0))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BORIS_TEACHFLETCHERY_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_TeachFletchery_15_01");
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_FLETCHERY)) == (1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Boris_TeachFletchery_13_02");
        AI_OUTPUT(SELF, OTHER, "DIA_Boris_TeachFletchery_13_03");
    };
    B_TEACHPLAYERTALENTFLETCHERY(SELF, OTHER, 1);
}

instance DIA_BORIS_TEACHFLETCHERY2(C_INFO) {
    NPC = 0xcd0f;
    NR = 950;
    CONDITION = DIA_BORIS_TEACHFLETCHERY2_CONDITION;
    INFORMATION = DIA_BORIS_TEACHFLETCHERY2_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = B_BUILDLEARNSTRING2(PRINT_LEARN_FLETCHERY2, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_FLETCHERY, 2), 0);
}

func int DIA_BORIS_TEACHFLETCHERY2_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 0x122ba)) && ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_FLETCHERY)) == (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BORIS_TEACHFLETCHERY2_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_TeachFletchery2_15_01");
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_FLETCHERY)) == (2)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Boris_TeachFletchery2_13_02");
        AI_OUTPUT(SELF, OTHER, "DIA_Boris_TeachFletchery2_13_03");
    };
    B_TEACHPLAYERTALENTFLETCHERY(SELF, OTHER, 2);
}

instance DIA_BORIS_TEACHFLETCHERY3(C_INFO) {
    NPC = 0xcd0f;
    NR = 950;
    CONDITION = DIA_BORIS_TEACHFLETCHERY3_CONDITION;
    INFORMATION = DIA_BORIS_TEACHFLETCHERY3_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = B_BUILDLEARNSTRING2(PRINT_LEARN_FLETCHERY3, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_FLETCHERY, 3), 0);
}

func int DIA_BORIS_TEACHFLETCHERY3_CONDITION() {
    if (((NPC_KNOWSINFO(OTHER, 0x122ba)) && ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_FLETCHERY)) == (2))) && ((LOG_GETSTATUS(MIS_PQ107)) == (LOG_SUCCESS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BORIS_TEACHFLETCHERY3_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_TeachFletchery3_15_01");
    FLETCHERY_FINISHTRAIN = TRUE;
    FLETCHERY_FINISHTRAIN_DAY = WLD_GETDAY();
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_FLETCHERY)) == (3)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Boris_TeachFletchery3_13_02");
        AI_OUTPUT(SELF, OTHER, "DIA_Boris_TeachFletchery3_13_03");
        AI_OUTPUT(SELF, OTHER, "DIA_Boris_TeachFletchery3_13_04");
    };
    B_TEACHPLAYERTALENTFLETCHERY(SELF, OTHER, 3);
}

instance DIA_BORIS_PQ107_ENDING(C_INFO) {
    NPC = 0xcd0f;
    NR = 980;
    CONDITION = DIA_BORIS_PQ107_ENDING_CONDITION;
    INFORMATION = DIA_BORIS_PQ107_ENDING_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I have your property deed.";
}

func int DIA_BORIS_PQ107_ENDING_CONDITION() {
    if (((LOG_GETSTATUS(MIS_PQ107)) == (LOG_RUNNING)) && ((NPC_HASITEMS(OTHER, 0x90b9)) == (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BORIS_PQ107_ENDING_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_PQ107_Ending_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_PQ107_Ending_03_02");
    NPC_REMOVEINVITEM(SELF, 0x90b9);
    B_USEFAKESCROLL();
    B_GIVEINVITEMS(OTHER, SELF, 0x90b9, 1);
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_PQ107_Ending_03_03");
    CREATEINVITEMS(SELF, 0x859b, PQ107_REWARD);
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, PQ107_REWARD);
    B_GIVEPLAYERXP(XP_PQ107_FINISH);
    LOG_SETSTATUS(_@(MIS_PQ107), TOPIC_PQ107, LOG_SUCCESS);
    AI_LOGENTRY(TOPIC_PQ107, LOG_PQ107_SUCCESS);
    PQ107_PREPAREALICEHOUSE();
}

instance DIA_BORIS_Q505_HELP(C_INFO) {
    NPC = 0xcd0f;
    NR = 1;
    CONDITION = DIA_BORIS_Q505_HELP_CONDITION;
    INFORMATION = DIA_BORIS_Q505_HELP_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I'm going to check out dangerous ruins...";
}

func int DIA_BORIS_Q505_HELP_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q505)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x13974))) {
        if ((PEON_BORIS) == (TRUE)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_BORIS_Q505_HELP_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_Q505_Help_15_01");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_Q505_Help_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_Q505_Help_03_03");
    CREATEINVITEMS(SELF, 0x92d6, 1);
    B_GIVEINVITEMS(SELF, OTHER, 0x92d6, 1);
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

instance DIA_BORIS_ALLANISDEAD(C_INFO) {
    NPC = 0xcd0f;
    NR = 1;
    CONDITION = DIA_BORIS_ALLANISDEAD_CONDITION;
    INFORMATION = DIA_BORIS_ALLANISDEAD_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Allan is dead.";
}

func int DIA_BORIS_ALLANISDEAD_CONDITION() {
    if ((SQ416_CHECKEDALLANCORPSE) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BORIS_ALLANISDEAD_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_AllanIsDead_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_AllanIsDead_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_AllanIsDead_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_AllanIsDead_03_04");
    B_GIVEPLAYERXP(XP_SQ416_FRIDA);
}

instance DIA_BORIS_FINISHPEON(C_INFO) {
    NPC = 0xcd0f;
    NR = 1;
    CONDITION = DIA_BORIS_FINISHPEON_CONDITION;
    INFORMATION = DIA_BORIS_FINISHPEON_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_BORIS_FINISHPEON_CONDITION() {
    if (((((KAPITEL) >= (4)) && ((LOG_GETSTATUS(MIS_PQ107)) == (LOG_SUCCESS))) && ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_FLETCHERY)) == (3))) && ((FLETCHERY_FINISHTRAIN) == (TRUE))) {
        if ((FLETCHERY_FINISHTRAIN_DAY) <= ((WLD_GETDAY()) - (1))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

var int BORIS_FINISHPEON = 0;
var int BORIS_FINISHPEON_DAY = 0;
func void DIA_BORIS_FINISHPEON_INFO() {
    PEON_SECONDTIME = TRUE;
    BORIS_FINISHPEON = TRUE;
    BORIS_FINISHPEON_DAY = WLD_GETDAY();
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_FinishPeon_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_FinishPeon_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_FinishPeon_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_FinishPeon_03_04");
    AI_RESETFACEANI(SELF);
    CREATEINVITEMS(SELF, 0x9bd6, 1);
    B_GIVEINVITEMS(SELF, OTHER, 0x9bd6, 1);
    LOG_CREATETOPIC(TOPIC_WORK_BORIS, LOG_NOTE);
    AI_LOGENTRY(TOPIC_WORK_BORIS, LOG_WORK_BORIS_FINISH);
}

instance DIA_BORRIS_HUNTING_BASE(C_INFO) {
    NPC = 0xcd0f;
    NR = 940;
    CONDITION = DIA_BORRIS_HUNTING_BASE_CONDITION;
    INFORMATION = DIA_BORRIS_HUNTING_BASE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = B_BUILDLEARNSTRING2(PRINT_LEARN_HUNTING_BASE, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_FUR), BORRIS_BASETROPHY);
}

func int DIA_BORRIS_HUNTING_BASE_CONDITION() {
    if (((((FRIDA_TEACHHUNT) == (TRUE)) && ((PLAYER_TALENT_TAKEANIMALTROPHY[2]) == (FALSE))) && ((IAM_PEON) == (FALSE))) && ((PEON_BORIS) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BORRIS_HUNTING_BASE_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Borris_Hunting_Base_15_01");
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (BORRIS_BASETROPHY)) {
        if ((PLAYER_TALENT_TAKEANIMALTROPHY[2]) == (TRUE)) {
            if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_SNEAK)) == (0)) {
                PRINTSCREEN(PRINT_LEARNSNEAK, -(1), YPOS_LEVELUP, FONT_SCREEN, 2);
                AI_OUTPUT(SELF, OTHER, "DIA_Borris_Base_Sneak_03_01");
                B_TEACHTHIEFTALENT(VLK_3023_BORIS, HERO, NPC_TALENT_SNEAK, 1);
                AI_OUTPUT(SELF, OTHER, "DIA_Borris_Base_Sneak_03_02");
            };
            NPC_REMOVEINVITEMS(SELF, 0x859b, BORRIS_BASETROPHY);
            AI_OUTPUT(SELF, OTHER, "DIA_Borris_Hunting_Base_03_02");
            B_GIVEINVITEMS(OTHER, SELF, 0x859b, BORRIS_BASETROPHY);
            AI_OUTPUT(SELF, OTHER, "DIA_Borris_Hunting_Base_03_03");
            AI_OUTPUT(SELF, OTHER, "DIA_Borris_Hunting_Base_03_04");
            PRINTSCREEN(PRINT_LEARNTAKEANIMALTROPHY, -(1), -(1), FONT_SCREEN, 2);
        };
    };
    if ((NPC_HASITEMS(OTHER, 0x859b)) < (BORRIS_BASETROPHY)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Borris_Hunting_Base_03_05");
    };
}

instance DIA_BORIS_CANITOO(C_INFO) {
    NPC = 0xcd0f;
    NR = 1;
    CONDITION = DIA_BORIS_CANITOO_CONDITION;
    INFORMATION = DIA_BORIS_CANITOO_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Would you buy trophies from me too?";
}

func int DIA_BORIS_CANITOO_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 0x1226b)) && (!(NPC_KNOWSINFO(OTHER, 0x1229b)))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BORIS_CANITOO_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_CanIToo_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_CanIToo_03_02");
    if ((NEWSBOARD_LOGENTRY_SILBACH_FRIDA) == (TRUE)) {
        LOG_CREATETOPIC(TOPIC_BARTER, LOG_NOTE);
        AI_LOGENTRY(TOPIC_BARTER, LOG_NEWSBOARD_SILBACH_FRIDA_V2);
    };
    NEWSBOARD_LOGENTRY_SILBACH_FRIDA = 2;
    LOG_CREATETOPIC(TOPIC_BARTER, LOG_NOTE);
    AI_LOGENTRY(TOPIC_BARTER, LOG_CITYBARTER_FRIDA);
}

instance DIA_BORIS_TRADE_ANIMALSKIN(C_INFO) {
    NPC = 0xcd0f;
    NR = 5;
    CONDITION = DIA_BORIS_TRADE_ANIMALSKIN_CONDITION;
    INFORMATION = DIA_BORIS_TRADE_ANIMALSKIN_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "I have some skins for sale.";
}

func int DIA_BORIS_TRADE_ANIMALSKIN_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 0x122d7)) || (NPC_KNOWSINFO(OTHER, 0x1229b))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

var int BORIS_TRADE_ANIMALSKIN_AMOUNT = 0;
const int BORIS_TRADE_ANIMALSKIN_AMOUNT_COMMENT = 500;
var int BORISALLREPTILESKIN_GOLD = 0;
var int BORISALLMAMMALSKIN_GOLD = 0;
var int BORISALLSPECIALSKIN_GOLD = 0;
func void DIA_BORIS_TRADE_ANIMALSKIN_CHOICES() {
    BORISALLREPTILESKIN_GOLD = 0;
    BORISALLMAMMALSKIN_GOLD = 0;
    BORISALLSPECIALSKIN_GOLD = 0;
    INFO_CLEARCHOICES(0x122da);
    INFO_ADDCHOICE(0x122da, "Curios.", 0x12380);
    INFO_ADDCHOICE(0x122da, "Reptiles.", 0x122ff);
    INFO_ADDCHOICE(0x122da, "Mammals.", 0x12342);
    INFO_ADDCHOICE(0x122da, DIALOG_BACK, 0x122e4);
}

func void DIA_BORIS_TRADE_ANIMALSKIN_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Boris_Trade_AnimalSkin_15_01");
    if ((PEON_BORIS) == (TRUE)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Boris_Trade_AnimalSkin_03_02");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_Trade_AnimalSkin_03_03");
    DIA_BORIS_TRADE_ANIMALSKIN_CHOICES();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_NOTHING() {
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_Trade_AnimalSkin_03_07");
    AI_RESETFACEANI(SELF);
}

func void DIA_BORIS_TRADE_ANIMALSKIN_BACK() {
    if ((BORIS_TRADE_ANIMALSKIN_AMOUNT) >= (BORIS_TRADE_ANIMALSKIN_AMOUNT_COMMENT)) {
        AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Boris_Trade_AnimalSkin_03_09");
    };
    if (((BORIS_TRADE_ANIMALSKIN_AMOUNT) > (1)) && ((BORIS_TRADE_ANIMALSKIN_AMOUNT) < (BORIS_TRADE_ANIMALSKIN_AMOUNT_COMMENT))) {
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Boris_Trade_AnimalSkin_03_08");
    };
    if ((BORIS_TRADE_ANIMALSKIN_AMOUNT) == (0)) {
        DIA_BORIS_TRADE_ANIMALSKIN_NOTHING();
    };
    AI_RESETFACEANI(SELF);
    BORIS_TRADE_ANIMALSKIN_AMOUNT = 0;
    INFO_CLEARCHOICES(0x122da);
}

var int TROHPYINSTANCE = 0;
var int TROPHYVALUE = 0;
var int MAXLURKER = 0;
var int MAXSHARK = 0;
var int MAXSEALURKER = 0;
var int MAXSNAPPER = 0;
var int MAXRAZOR = 0;
var int MAXDRGSNAPPER = 0;
var int MAXSWAMPWARAN = 0;
var int MAXFIREWARAN = 0;
var int MAXSEASHARK = 0;
var int MAXALLIGATOR = 0;
var int MAXTURTLE = 0;
var int MAXWARAN = 0;
var int GOLDLURKER = 0;
var int GOLDSHARK = 0;
var int GOLDSEALURKER = 0;
var int GOLDSNAPPER = 0;
var int GOLDRAZOR = 0;
var int GOLDDRGSNAPPER = 0;
var int GOLDSWAMPWARAN = 0;
var int GOLDFIREWARAN = 0;
var int GOLDSEASHARK = 0;
var int GOLDALLIGATOR = 0;
var int GOLDTURTLE = 0;
var int GOLDWARAN = 0;
func void DIA_BORIS_TRADE_ANIMALSKIN_REPTILES() {
    MAXLURKER = NPC_HASITEMS(HERO, 0x8442);
    MAXSHARK = NPC_HASITEMS(HERO, 0x8448);
    MAXSEALURKER = NPC_HASITEMS(HERO, 0x89f2);
    MAXSNAPPER = NPC_HASITEMS(HERO, 0x89f4);
    MAXRAZOR = NPC_HASITEMS(HERO, 0x89f6);
    MAXDRGSNAPPER = NPC_HASITEMS(HERO, 0x89f7);
    MAXSWAMPWARAN = NPC_HASITEMS(HERO, 0x89f9);
    MAXFIREWARAN = NPC_HASITEMS(HERO, 0x89fa);
    MAXSEASHARK = NPC_HASITEMS(HERO, 0x89fb);
    MAXALLIGATOR = NPC_HASITEMS(HERO, 0x89fc);
    MAXTURTLE = NPC_HASITEMS(HERO, 0x89fd);
    MAXWARAN = NPC_HASITEMS(HERO, 0x89f8);
    GOLDLURKER = 0;
    GOLDSHARK = 0;
    GOLDSEALURKER = 0;
    GOLDSNAPPER = 0;
    GOLDRAZOR = 0;
    GOLDDRGSNAPPER = 0;
    GOLDSWAMPWARAN = 0;
    GOLDFIREWARAN = 0;
    GOLDSEASHARK = 0;
    GOLDALLIGATOR = 0;
    GOLDTURTLE = 0;
    GOLDWARAN = 0;
    BORISALLREPTILESKIN_COUNT = ((((((((((((MAXLURKER) + (MAXSHARK)) + (MAXSEALURKER)) + (MAXSNAPPER)) + (MAXRAZOR)) + (MAXDRGSNAPPER)) + (MAXSWAMPWARAN)) + (MAXFIREWARAN)) + (MAXSEASHARK)) + (MAXALLIGATOR)) + (MAXALLIGATOR)) + (MAXTURTLE)) + (MAXWARAN);
    RESERVED_VAR_INT_17 = -(1);
    RESERVED_VAR_INT_18 = 0;
    INFO_CLEARCHOICES(0x122da);
    if ((NPC_HASITEMS(OTHER, 0x8442)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_LURKERSKIN, 0x12307);
    };
    if ((NPC_HASITEMS(OTHER, 0x8448)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_SHARKSKIN, 0x12308);
    };
    if ((NPC_HASITEMS(OTHER, 0x89f2)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_SEALURKERSKIN, 0x12309);
    };
    if ((NPC_HASITEMS(OTHER, 0x89f4)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_SNAPPERSKIN, 0x1230a);
    };
    if ((NPC_HASITEMS(OTHER, 0x89f6)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_RAZORSKIN, 0x1230b);
    };
    if ((NPC_HASITEMS(OTHER, 0x89f7)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_DRAGONSNAPPERSKIN, 0x1230c);
    };
    if ((NPC_HASITEMS(OTHER, 0x89f8)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_WARANSKIN, 0x1230d);
    };
    if ((NPC_HASITEMS(OTHER, 0x89f9)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_SWAMPWARANSKIN, 0x1230e);
    };
    if ((NPC_HASITEMS(OTHER, 0x89fa)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_FIREWARANSKIN, 0x1230f);
    };
    if ((NPC_HASITEMS(OTHER, 0x89fb)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_SEASHARKSKIN, 0x12310);
    };
    if ((NPC_HASITEMS(OTHER, 0x89fc)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_ALLIGATORSKIN, 0x12311);
    };
    if ((NPC_HASITEMS(OTHER, 0x89fd)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_TURTLESKIN, 0x12312);
    };
    ALL_STRING_REPTILE = CS4(DIALOG_ALL, " (", I2S(BORISALLREPTILESKIN_COUNT), ")");
    INFO_ADDCHOICE(0x122da, ALL_STRING_REPTILE, 0x12305);
    INFO_ADDCHOICE(0x122da, DIALOG_BACK, 0x122e1);
}

var int DIA_BORIS_TRADE_ANIMALSKIN_REPTILES.BORISALLREPTILESKIN_COUNT = 0;
var string DIA_BORIS_TRADE_ANIMALSKIN_REPTILES.ALL_STRING_REPTILE = "";
func void DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_AMMOUNT() {
    INFO_CLEARCHOICES(0x122da);
    MAX = NPC_HASITEMS(HERO, RESERVED_VAR_INT_17);
    ALL_STRING = CS4(DIALOG_ALL, " (", I2S(MAX), ")");
    INFO_ADDCHOICE(0x122da, ALL_STRING, 0x12313);
    INFO_ADDCHOICE(0x122da, CHOICE_NUMBER_25, 0x12315);
    INFO_ADDCHOICE(0x122da, CHOICE_NUMBER_10, 0x12317);
    INFO_ADDCHOICE(0x122da, CHOICE_NUMBER_5, 0x12319);
    INFO_ADDCHOICE(0x122da, CHOICE_NUMBER_1, 0x1231b);
    INFO_ADDCHOICE(0x122da, DIALOG_BACK, 0x122ff);
}

var int DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_AMMOUNT.MAX = 0;
var string DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_AMMOUNT.ALL_STRING = "";
func void DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_EVERYTHING() {
    MAXLURKER = NPC_HASITEMS(HERO, 0x8442);
    MAXSHARK = NPC_HASITEMS(HERO, 0x8448);
    MAXSEALURKER = NPC_HASITEMS(HERO, 0x89f2);
    MAXSNAPPER = NPC_HASITEMS(HERO, 0x89f4);
    MAXRAZOR = NPC_HASITEMS(HERO, 0x89f6);
    MAXDRGSNAPPER = NPC_HASITEMS(HERO, 0x89f7);
    MAXSWAMPWARAN = NPC_HASITEMS(HERO, 0x89f9);
    MAXFIREWARAN = NPC_HASITEMS(HERO, 0x89fa);
    MAXSEASHARK = NPC_HASITEMS(HERO, 0x89fb);
    MAXALLIGATOR = NPC_HASITEMS(HERO, 0x89fc);
    MAXTURTLE = NPC_HASITEMS(HERO, 0x89fd);
    MAXWARAN = NPC_HASITEMS(HERO, 0x89f8);
    GOLDLURKER = (MAXLURKER) * (VALUE_LURKERSKIN);
    GOLDSHARK = (MAXSHARK) * (VALUE_SHARKSKIN);
    GOLDSEALURKER = (MAXSEALURKER) * (VALUE_SEALURKERSKIN);
    GOLDSNAPPER = (MAXSNAPPER) * (VALUE_SNAPPERSKIN);
    GOLDRAZOR = (MAXRAZOR) * (VALUE_RAZORSKIN);
    GOLDDRGSNAPPER = (MAXDRGSNAPPER) * (VALUE_DRAGONSNAPPERSKIN);
    GOLDSWAMPWARAN = (MAXSWAMPWARAN) * (VALUE_SWAMPWARANSKIN);
    GOLDFIREWARAN = (MAXFIREWARAN) * (VALUE_FIREWARANSKIN);
    GOLDSEASHARK = (MAXSEASHARK) * (VALUE_SEASHARKSKIN);
    GOLDALLIGATOR = (MAXALLIGATOR) * (VALUE_REPTILESKIN);
    GOLDTURTLE = (MAXTURTLE) * (VALUE_TURTLESKIN);
    GOLDWARAN = (MAXWARAN) * (VALUE_WARANSKIN);
    BORISALLREPTILESKIN_GOLD = ((((((((((((GOLDLURKER) + (GOLDSHARK)) + (GOLDSEALURKER)) + (GOLDSNAPPER)) + (GOLDRAZOR)) + (GOLDDRGSNAPPER)) + (GOLDSWAMPWARAN)) + (GOLDFIREWARAN)) + (GOLDSEASHARK)) + (GOLDALLIGATOR)) + (GOLDALLIGATOR)) + (GOLDTURTLE)) + (GOLDWARAN);
    if ((NPC_HASITEMS(OTHER, 0x8442)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8442, MAXLURKER);
    };
    if ((NPC_HASITEMS(OTHER, 0x8448)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8448, MAXSHARK);
    };
    if ((NPC_HASITEMS(OTHER, 0x89f2)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x89f2, MAXSEALURKER);
    };
    if ((NPC_HASITEMS(OTHER, 0x89f4)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x89f4, MAXSNAPPER);
    };
    if ((NPC_HASITEMS(OTHER, 0x89f6)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x89f6, MAXRAZOR);
    };
    if ((NPC_HASITEMS(OTHER, 0x89f7)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x89f7, MAXDRGSNAPPER);
    };
    if ((NPC_HASITEMS(OTHER, 0x89f9)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x89f9, MAXSWAMPWARAN);
    };
    if ((NPC_HASITEMS(OTHER, 0x89fa)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x89fa, MAXFIREWARAN);
    };
    if ((NPC_HASITEMS(OTHER, 0x89fb)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x89fb, MAXSEASHARK);
    };
    if ((NPC_HASITEMS(OTHER, 0x89fc)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x89fc, MAXALLIGATOR);
    };
    if ((NPC_HASITEMS(OTHER, 0x89fd)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x89fd, MAXTURTLE);
    };
    if ((NPC_HASITEMS(OTHER, 0x89f8)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x89f8, MAXWARAN);
    };
    AI_WAIT(SELF, 0x3f000000);
    AI_FUNCTION(SELF, 0x12306);
    DIA_BORIS_TRADE_ANIMALSKIN_REPTILES();
}

func void BORIS_SELLALLREPTILE() {
    if ((PEON_BORIS) == (TRUE)) {
        B_GIVEINVITEMS(VLK_3023_BORIS, HERO, 0x859b, (BORISALLREPTILESKIN_GOLD) / (2));
        BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + ((BORISALLREPTILESKIN_GOLD) / (2));
    };
    B_GIVEINVITEMS(VLK_3023_BORIS, HERO, 0x859b, (BORISALLREPTILESKIN_GOLD) / (4));
    BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + ((BORISALLREPTILESKIN_GOLD) / (4));
}

func void DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_ITAT_LURKERSKIN() {
    RESERVED_VAR_INT_17 = 0x8442;
    RESERVED_VAR_INT_18 = VALUE_LURKERSKIN;
    DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_ITAT_SHARKSKIN() {
    RESERVED_VAR_INT_17 = 0x8448;
    RESERVED_VAR_INT_18 = VALUE_SHARKSKIN;
    DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_ITAT_SEALURKERSKIN() {
    RESERVED_VAR_INT_17 = 0x89f2;
    RESERVED_VAR_INT_18 = VALUE_SEALURKERSKIN;
    DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_ITAT_SNAPPERSKIN() {
    RESERVED_VAR_INT_17 = 0x89f4;
    RESERVED_VAR_INT_18 = VALUE_SNAPPERSKIN;
    DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_ITAT_RAZORSKIN() {
    RESERVED_VAR_INT_17 = 0x89f6;
    RESERVED_VAR_INT_18 = VALUE_RAZORSKIN;
    DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_ITAT_DRAGONSNAPPERSKIN() {
    RESERVED_VAR_INT_17 = 0x89f7;
    RESERVED_VAR_INT_18 = VALUE_DRAGONSNAPPERSKIN;
    DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_ITAT_WARANSKIN() {
    RESERVED_VAR_INT_17 = 0x89f8;
    RESERVED_VAR_INT_18 = VALUE_WARANSKIN;
    DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_ITAT_SWAMPWARANSKIN() {
    RESERVED_VAR_INT_17 = 0x89f9;
    RESERVED_VAR_INT_18 = VALUE_SWAMPWARANSKIN;
    DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_ITAT_FIREWARANSKIN() {
    RESERVED_VAR_INT_17 = 0x89fa;
    RESERVED_VAR_INT_18 = VALUE_FIREWARANSKIN;
    DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_ITAT_SEASHARKSKIN() {
    RESERVED_VAR_INT_17 = 0x89fb;
    RESERVED_VAR_INT_18 = VALUE_SEASHARKSKIN;
    DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_ITAT_ALLIGATORSKIN() {
    RESERVED_VAR_INT_17 = 0x89fc;
    RESERVED_VAR_INT_18 = VALUE_REPTILESKIN;
    DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_ITAT_TURTLESKIN() {
    RESERVED_VAR_INT_17 = 0x89fd;
    RESERVED_VAR_INT_18 = VALUE_TURTLESKIN;
    DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_ALL() {
    if ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) >= (1)) {
        MAX = NPC_HASITEMS(HERO, RESERVED_VAR_INT_17);
        if ((PEON_BORIS) == (TRUE)) {
            CREATEINVITEMS(SELF, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (2));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (2));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((MAX) * (RESERVED_VAR_INT_18)) / (2));
        } else {
            CREATEINVITEMS(SELF, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (4));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (4));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((MAX) * (RESERVED_VAR_INT_18)) / (4));
        } else {
            DIA_BORIS_TRADE_ANIMALSKIN_REPTILES();
        } else {
            /* set_instance(0) */;
        };
    };
    DIA_BORIS_TRADE_ANIMALSKIN_NOTHING();
    DIA_BORIS_TRADE_ANIMALSKIN_REPTILES();
}

var int DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_ALL.MAX = 0;
func void DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_25() {
    if ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) >= (25)) {
        if ((PEON_BORIS) == (TRUE)) {
            CREATEINVITEMS(SELF, 0x859b, ((25) * (RESERVED_VAR_INT_18)) / (2));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((25) * (RESERVED_VAR_INT_18)) / (2));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((25) * (RESERVED_VAR_INT_18)) / (2));
        } else {
            CREATEINVITEMS(SELF, 0x859b, ((25) * (RESERVED_VAR_INT_18)) / (4));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((25) * (RESERVED_VAR_INT_18)) / (4));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((25) * (RESERVED_VAR_INT_18)) / (4));
        } else {
            DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_AMMOUNT();
        } else {
            /* set_instance(0) */;
        };
    };
    if (((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) >= (1)) && ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) < (25))) {
        MAX = NPC_HASITEMS(HERO, RESERVED_VAR_INT_17);
        if ((PEON_BORIS) == (TRUE)) {
            CREATEINVITEMS(SELF, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (2));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (2));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((MAX) * (RESERVED_VAR_INT_18)) / (2));
        } else {
            CREATEINVITEMS(SELF, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (4));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (4));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((MAX) * (RESERVED_VAR_INT_18)) / (4));
        } else {
            DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_AMMOUNT();
        } else {
            /* set_instance(0) */;
        };
    };
    if ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) == (0)) {
        DIA_BORIS_TRADE_ANIMALSKIN_NOTHING();
        DIA_BORIS_TRADE_ANIMALSKIN_REPTILES();
    };
}

var int DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_25.MAX = 0;
func void DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_10() {
    if ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) >= (10)) {
        if ((PEON_BORIS) == (TRUE)) {
            CREATEINVITEMS(SELF, 0x859b, ((10) * (RESERVED_VAR_INT_18)) / (2));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((10) * (RESERVED_VAR_INT_18)) / (2));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((10) * (RESERVED_VAR_INT_18)) / (2));
        } else {
            CREATEINVITEMS(SELF, 0x859b, ((10) * (RESERVED_VAR_INT_18)) / (4));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((10) * (RESERVED_VAR_INT_18)) / (4));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((10) * (RESERVED_VAR_INT_18)) / (4));
        } else {
            DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_AMMOUNT();
        } else {
            /* set_instance(0) */;
        };
    };
    if (((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) >= (1)) && ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) < (10))) {
        MAX = NPC_HASITEMS(HERO, RESERVED_VAR_INT_17);
        if ((PEON_BORIS) == (TRUE)) {
            CREATEINVITEMS(SELF, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (2));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (2));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((MAX) * (RESERVED_VAR_INT_18)) / (2));
        } else {
            CREATEINVITEMS(SELF, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (4));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (4));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((MAX) * (RESERVED_VAR_INT_18)) / (4));
        } else {
            DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_AMMOUNT();
        } else {
            /* set_instance(0) */;
        };
    };
    if ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) == (0)) {
        DIA_BORIS_TRADE_ANIMALSKIN_NOTHING();
        DIA_BORIS_TRADE_ANIMALSKIN_REPTILES();
    };
}

var int DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_10.MAX = 0;
func void DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_5() {
    if ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) >= (5)) {
        if ((PEON_BORIS) == (TRUE)) {
            CREATEINVITEMS(SELF, 0x859b, ((5) * (RESERVED_VAR_INT_18)) / (2));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((5) * (RESERVED_VAR_INT_18)) / (2));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((5) * (RESERVED_VAR_INT_18)) / (2));
        } else {
            CREATEINVITEMS(SELF, 0x859b, ((5) * (RESERVED_VAR_INT_18)) / (4));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((5) * (RESERVED_VAR_INT_18)) / (4));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((5) * (RESERVED_VAR_INT_18)) / (4));
        } else {
            DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_AMMOUNT();
        } else {
            /* set_instance(0) */;
        };
    };
    if (((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) >= (1)) && ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) < (5))) {
        MAX = NPC_HASITEMS(HERO, RESERVED_VAR_INT_17);
        if ((PEON_BORIS) == (TRUE)) {
            CREATEINVITEMS(SELF, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (2));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (2));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((MAX) * (RESERVED_VAR_INT_18)) / (2));
        } else {
            CREATEINVITEMS(SELF, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (4));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (4));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((MAX) * (RESERVED_VAR_INT_18)) / (4));
        } else {
            DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_AMMOUNT();
        } else {
            /* set_instance(0) */;
        };
    };
    if ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) == (0)) {
        DIA_BORIS_TRADE_ANIMALSKIN_NOTHING();
        DIA_BORIS_TRADE_ANIMALSKIN_REPTILES();
    };
}

var int DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_5.MAX = 0;
func void DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_1() {
    if ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) >= (1)) {
        if ((PEON_BORIS) == (TRUE)) {
            CREATEINVITEMS(SELF, 0x859b, (RESERVED_VAR_INT_18) / (2));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, (RESERVED_VAR_INT_18) / (2));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + ((RESERVED_VAR_INT_18) / (2));
        } else {
            CREATEINVITEMS(SELF, 0x859b, (RESERVED_VAR_INT_18) / (4));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, (RESERVED_VAR_INT_18) / (4));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + ((RESERVED_VAR_INT_18) / (4));
        } else {
            DIA_BORIS_TRADE_ANIMALSKIN_REPTILES_AMMOUNT();
        } else {
            /* set_instance(0) */;
        };
    };
    if ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) == (0)) {
        DIA_BORIS_TRADE_ANIMALSKIN_NOTHING();
        DIA_BORIS_TRADE_ANIMALSKIN_REPTILES();
    };
}

var int MAXSHEEP = 0;
var int MAXSHEEP2 = 0;
var int MAXLAMB = 0;
var int MAXWOLF = 0;
var int MAXBLACKWOLF = 0;
var int MAXWARG = 0;
var int MAXORCDOG = 0;
var int MAXDOG = 0;
var int MAXKEILER = 0;
var int MAXYKEILER = 0;
var int MAXSHADOW = 0;
var int MAXBEAR = 0;
var int MAXBLACKBEAR = 0;
var int MAXTROLL = 0;
var int MAXRAT = 0;
var int MAXBLACKRAT = 0;
var int MAXSWAMPRAT = 0;
var int MAXMOLERAT = 0;
var int MAXYMOLERAT = 0;
var int GOLDSHEEP = 0;
var int GOLDSHEEP2 = 0;
var int GOLDLAMB = 0;
var int GOLDWOLF = 0;
var int GOLDBLACKWOLF = 0;
var int GOLDWARG = 0;
var int GOLDORCDOG = 0;
var int GOLDDOG = 0;
var int GOLDKEILER = 0;
var int GOLDYKEILER = 0;
var int GOLDSHADOW = 0;
var int GOLDBEAR = 0;
var int GOLDBLACKBEAR = 0;
var int GOLDTROLL = 0;
var int GOLDRAT = 0;
var int GOLDBLACKRAT = 0;
var int GOLDSWAMPRAT = 0;
var int GOLDMOLERAT = 0;
var int GOLDYMOLERAT = 0;
func void DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS() {
    MAXSHEEP = NPC_HASITEMS(HERO, 0x8437);
    MAXSHEEP2 = NPC_HASITEMS(HERO, 0x8a02);
    MAXLAMB = NPC_HASITEMS(HERO, 0x8a03);
    MAXWOLF = NPC_HASITEMS(HERO, 0x8438);
    MAXBLACKWOLF = NPC_HASITEMS(HERO, 0x8a16);
    MAXWARG = NPC_HASITEMS(HERO, 0x8443);
    MAXORCDOG = NPC_HASITEMS(HERO, 0x8a15);
    MAXDOG = NPC_HASITEMS(HERO, 0x8a17);
    MAXKEILER = NPC_HASITEMS(HERO, 0x8444);
    MAXYKEILER = NPC_HASITEMS(HERO, 0x8a04);
    MAXSHADOW = NPC_HASITEMS(HERO, 0x8447);
    MAXBEAR = NPC_HASITEMS(HERO, 0x89fe);
    MAXBLACKBEAR = NPC_HASITEMS(HERO, 0x89ff);
    MAXTROLL = NPC_HASITEMS(HERO, 0x8449);
    MAXRAT = NPC_HASITEMS(HERO, 0x8a0d);
    MAXBLACKRAT = NPC_HASITEMS(HERO, 0x8a0e);
    MAXSWAMPRAT = NPC_HASITEMS(HERO, 0x8a11);
    MAXMOLERAT = NPC_HASITEMS(HERO, 0x8a0f);
    MAXYMOLERAT = NPC_HASITEMS(HERO, 0x8a10);
    GOLDSHEEP = 0;
    GOLDSHEEP2 = 0;
    GOLDLAMB = 0;
    GOLDWOLF = 0;
    GOLDBLACKWOLF = 0;
    GOLDWARG = 0;
    GOLDORCDOG = 0;
    GOLDDOG = 0;
    GOLDKEILER = 0;
    GOLDYKEILER = 0;
    GOLDSHADOW = 0;
    GOLDBEAR = 0;
    GOLDBLACKBEAR = 0;
    GOLDTROLL = 0;
    GOLDRAT = 0;
    GOLDBLACKRAT = 0;
    GOLDSWAMPRAT = 0;
    GOLDMOLERAT = 0;
    GOLDYMOLERAT = 0;
    BORISALLMAMMALFUR_COUNT = ((((((((((((((((((MAXSHEEP) + (MAXSHEEP2)) + (MAXLAMB)) + (MAXWOLF)) + (MAXBLACKWOLF)) + (MAXWARG)) + (MAXORCDOG)) + (MAXDOG)) + (MAXKEILER)) + (MAXYKEILER)) + (MAXSHADOW)) + (MAXBEAR)) + (MAXBLACKBEAR)) + (MAXTROLL)) + (MAXRAT)) + (MAXBLACKRAT)) + (MAXSWAMPRAT)) + (MAXMOLERAT)) + (MAXYMOLERAT);
    RESERVED_VAR_INT_17 = -(1);
    RESERVED_VAR_INT_18 = 0;
    INFO_CLEARCHOICES(0x122da);
    if ((NPC_HASITEMS(OTHER, 0x8437)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_SHEEPFUR01, 0x1234a);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a02)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_SHEEPFUR02, 0x1234b);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a03)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_LAMBFUR, 0x1234c);
    };
    if ((NPC_HASITEMS(OTHER, 0x8438)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_WOLFFUR, 0x1234d);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a16)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_BLACKWOLFFUR, 0x1234e);
    };
    if ((NPC_HASITEMS(OTHER, 0x8443)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_WARGSKIN, 0x1234f);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a15)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_ORCDOGFUR, 0x12350);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a17)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_DOGFUR, 0x12351);
    };
    if ((NPC_HASITEMS(OTHER, 0x8444)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_KEILERSKIN, 0x12352);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a04)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_YKEILERFUR, 0x12353);
    };
    if ((NPC_HASITEMS(OTHER, 0x8447)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_SHADOWFUR, 0x12354);
    };
    if ((NPC_HASITEMS(OTHER, 0x89fe)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_BEARFUR, 0x12355);
    };
    if ((NPC_HASITEMS(OTHER, 0x89ff)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_BLACKBEARFUR, 0x12356);
    };
    if ((NPC_HASITEMS(OTHER, 0x8449)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_TROLLSKIN, 0x12357);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a0d)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_RATFUR, 0x12358);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a0e)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_BLACKRATFUR, 0x12359);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a11)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_SWAMPRATSKIN, 0x1235a);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a0f)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_MOLERATSKIN, 0x1235b);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a10)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_YMOLERATSKIN, 0x1235c);
    };
    ALL_STRING_MAMMAL = CS4(DIALOG_ALL, " (", I2S(BORISALLMAMMALFUR_COUNT), ")");
    INFO_ADDCHOICE(0x122da, ALL_STRING_MAMMAL, 0x12345);
    INFO_ADDCHOICE(0x122da, DIALOG_BACK, 0x122e1);
}

var int DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS.BORISALLMAMMALFUR_COUNT = 0;
var string DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS.ALL_STRING_MAMMAL = "";
func void DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_EVERYTHING() {
    MAXSHEEP = NPC_HASITEMS(HERO, 0x8437);
    MAXSHEEP2 = NPC_HASITEMS(HERO, 0x8a02);
    MAXLAMB = NPC_HASITEMS(HERO, 0x8a03);
    MAXWOLF = NPC_HASITEMS(HERO, 0x8438);
    MAXBLACKWOLF = NPC_HASITEMS(HERO, 0x8a16);
    MAXWARG = NPC_HASITEMS(HERO, 0x8443);
    MAXORCDOG = NPC_HASITEMS(HERO, 0x8a15);
    MAXDOG = NPC_HASITEMS(HERO, 0x8a17);
    MAXKEILER = NPC_HASITEMS(HERO, 0x8444);
    MAXYKEILER = NPC_HASITEMS(HERO, 0x8a04);
    MAXSHADOW = NPC_HASITEMS(HERO, 0x8447);
    MAXBEAR = NPC_HASITEMS(HERO, 0x89fe);
    MAXBLACKBEAR = NPC_HASITEMS(HERO, 0x89ff);
    MAXTROLL = NPC_HASITEMS(HERO, 0x8449);
    MAXRAT = NPC_HASITEMS(HERO, 0x8a0d);
    MAXBLACKRAT = NPC_HASITEMS(HERO, 0x8a0e);
    MAXSWAMPRAT = NPC_HASITEMS(HERO, 0x8a11);
    MAXMOLERAT = NPC_HASITEMS(HERO, 0x8a0f);
    MAXYMOLERAT = NPC_HASITEMS(HERO, 0x8a10);
    GOLDSHEEP = (MAXSHEEP) * (VALUE_SHEEPFUR);
    GOLDSHEEP2 = (MAXSHEEP2) * (VALUE_SHEEPFUR02);
    GOLDLAMB = (MAXLAMB) * (VALUE_SHEEPFUR03);
    GOLDWOLF = (MAXWOLF) * (VALUE_WOLFFUR);
    GOLDBLACKWOLF = (MAXBLACKWOLF) * (VALUE_BLACKWOLFFUR);
    GOLDWARG = (MAXWARG) * (VALUE_WARGFUR);
    GOLDORCDOG = (MAXORCDOG) * (VALUE_ORCDOGFUR);
    GOLDDOG = (MAXDOG) * (VALUE_DOGFUR);
    GOLDKEILER = (MAXKEILER) * (VALUE_KEILERFUR);
    GOLDYKEILER = (MAXYKEILER) * (VALUE_YKEILERFUR);
    GOLDSHADOW = (MAXSHADOW) * (VALUE_SHADOWFUR);
    GOLDBEAR = (MAXBEAR) * (VALUE_ITAT_BEARFUR);
    GOLDBLACKBEAR = (MAXBLACKBEAR) * (VALUE_ITAT_BLACKBEARFUR);
    GOLDTROLL = (MAXTROLL) * (VALUE_TROLLFUR);
    GOLDRAT = (MAXRAT) * (VALUE_RATFUR);
    GOLDBLACKRAT = (MAXBLACKRAT) * (VALUE_BLACKRATFUR);
    GOLDSWAMPRAT = (MAXSWAMPRAT) * (VALUE_SWAMPRATSKIN);
    GOLDMOLERAT = (MAXMOLERAT) * (VALUE_MOLERATSKIN);
    GOLDYMOLERAT = (MAXYMOLERAT) * (VALUE_MOLERATSKIN02);
    BORISALLMAMMALSKIN_GOLD = ((((((((((((((((((GOLDSHEEP) + (GOLDSHEEP2)) + (GOLDLAMB)) + (GOLDWOLF)) + (GOLDBLACKWOLF)) + (GOLDWARG)) + (GOLDORCDOG)) + (GOLDDOG)) + (GOLDKEILER)) + (GOLDYKEILER)) + (GOLDSHADOW)) + (GOLDBEAR)) + (GOLDBLACKBEAR)) + (GOLDTROLL)) + (GOLDRAT)) + (GOLDBLACKRAT)) + (GOLDSWAMPRAT)) + (GOLDMOLERAT)) + (GOLDYMOLERAT);
    if ((NPC_HASITEMS(OTHER, 0x8437)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8437, MAXSHEEP);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a02)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8a02, MAXSHEEP2);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a03)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8a03, MAXLAMB);
    };
    if ((NPC_HASITEMS(OTHER, 0x8438)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8438, MAXWOLF);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a16)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8a16, MAXBLACKWOLF);
    };
    if ((NPC_HASITEMS(OTHER, 0x8443)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8443, MAXWARG);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a15)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8a15, MAXORCDOG);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a17)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8a17, MAXDOG);
    };
    if ((NPC_HASITEMS(OTHER, 0x8444)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8444, MAXKEILER);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a04)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8a04, MAXYKEILER);
    };
    if ((NPC_HASITEMS(OTHER, 0x8447)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8447, MAXSHADOW);
    };
    if ((NPC_HASITEMS(OTHER, 0x89fe)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x89fe, MAXBEAR);
    };
    if ((NPC_HASITEMS(OTHER, 0x89ff)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x89ff, MAXBLACKBEAR);
    };
    if ((NPC_HASITEMS(OTHER, 0x8449)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8449, MAXTROLL);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a0d)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8a0d, MAXRAT);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a0e)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8a0e, MAXBLACKRAT);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a11)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8a11, MAXSWAMPRAT);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a0f)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8a0f, MAXMOLERAT);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a10)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8a10, MAXYMOLERAT);
    };
    AI_WAIT(SELF, 0x3f000000);
    AI_FUNCTION(SELF, 0x12346);
    DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS();
}

func void BORIS_SELLALLMAMMALS() {
    if ((PEON_BORIS) == (TRUE)) {
        B_GIVEINVITEMS(VLK_3023_BORIS, HERO, 0x859b, (BORISALLMAMMALSKIN_GOLD) / (2));
        BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + ((BORISALLMAMMALSKIN_GOLD) / (2));
    };
    B_GIVEINVITEMS(VLK_3023_BORIS, HERO, 0x859b, (BORISALLMAMMALSKIN_GOLD) / (4));
    BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + ((BORISALLMAMMALSKIN_GOLD) / (4));
}

func void DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_AMMOUNT() {
    INFO_CLEARCHOICES(0x122da);
    MAX = NPC_HASITEMS(HERO, RESERVED_VAR_INT_17);
    ALL_STRING = CS4(DIALOG_ALL, " (", I2S(MAX), ")");
    INFO_ADDCHOICE(0x122da, ALL_STRING, 0x1235d);
    INFO_ADDCHOICE(0x122da, CHOICE_NUMBER_25, 0x1235f);
    INFO_ADDCHOICE(0x122da, CHOICE_NUMBER_10, 0x12361);
    INFO_ADDCHOICE(0x122da, CHOICE_NUMBER_5, 0x12363);
    INFO_ADDCHOICE(0x122da, CHOICE_NUMBER_1, 0x12365);
    INFO_ADDCHOICE(0x122da, DIALOG_BACK, 0x12342);
}

var int DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_AMMOUNT.MAX = 0;
var string DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_AMMOUNT.ALL_STRING = "";
func void DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_ITAT_SHEEPFUR() {
    RESERVED_VAR_INT_17 = 0x8437;
    RESERVED_VAR_INT_18 = VALUE_SHEEPFUR;
    DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_ITAT_SHEEPFUR02() {
    RESERVED_VAR_INT_17 = 0x8a02;
    RESERVED_VAR_INT_18 = VALUE_SHEEPFUR02;
    DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_ITAT_LAMBFUR() {
    RESERVED_VAR_INT_17 = 0x8a03;
    RESERVED_VAR_INT_18 = VALUE_SHEEPFUR03;
    DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_ITAT_WOLFFUR() {
    RESERVED_VAR_INT_17 = 0x8438;
    RESERVED_VAR_INT_18 = VALUE_WOLFFUR;
    DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_ITAT_BLACKWOLFFUR() {
    RESERVED_VAR_INT_17 = 0x8a16;
    RESERVED_VAR_INT_18 = VALUE_BLACKWOLFFUR;
    DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_ITAT_WARGFUR() {
    RESERVED_VAR_INT_17 = 0x8443;
    RESERVED_VAR_INT_18 = VALUE_WARGFUR;
    DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_ITAT_ORCDOGFUR() {
    RESERVED_VAR_INT_17 = 0x8a15;
    RESERVED_VAR_INT_18 = VALUE_ORCDOGFUR;
    DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_ITAT_DOGFUR() {
    RESERVED_VAR_INT_17 = 0x8a17;
    RESERVED_VAR_INT_18 = VALUE_DOGFUR;
    DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_ITAT_ADDON_KEILERFUR() {
    RESERVED_VAR_INT_17 = 0x8444;
    RESERVED_VAR_INT_18 = VALUE_KEILERFUR;
    DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_ITAT_ADDON_YKEILERFUR() {
    RESERVED_VAR_INT_17 = 0x8a04;
    RESERVED_VAR_INT_18 = VALUE_YKEILERFUR;
    DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_ITAT_SHADOWFUR() {
    RESERVED_VAR_INT_17 = 0x8447;
    RESERVED_VAR_INT_18 = VALUE_SHADOWFUR;
    DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_ITAT_BEARFUR() {
    RESERVED_VAR_INT_17 = 0x89fe;
    RESERVED_VAR_INT_18 = VALUE_ITAT_BEARFUR;
    DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_ITAT_BLACKBEARFUR() {
    RESERVED_VAR_INT_17 = 0x89ff;
    RESERVED_VAR_INT_18 = VALUE_ITAT_BLACKBEARFUR;
    DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_ITAT_TROLLFUR() {
    RESERVED_VAR_INT_17 = 0x8449;
    RESERVED_VAR_INT_18 = VALUE_TROLLFUR;
    DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_ITAT_RATFUR() {
    RESERVED_VAR_INT_17 = 0x8a0d;
    RESERVED_VAR_INT_18 = VALUE_RATFUR;
    DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_ITAT_BLACKRATFUR() {
    RESERVED_VAR_INT_17 = 0x8a0e;
    RESERVED_VAR_INT_18 = VALUE_BLACKRATFUR;
    DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_ITAT_SWAMPRATSKIN() {
    RESERVED_VAR_INT_17 = 0x8a11;
    RESERVED_VAR_INT_18 = VALUE_SWAMPRATSKIN;
    DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_ITAT_MOLERATSKIN() {
    RESERVED_VAR_INT_17 = 0x8a0f;
    RESERVED_VAR_INT_18 = VALUE_MOLERATSKIN;
    DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_ITAT_YMOLERATSKIN() {
    RESERVED_VAR_INT_17 = 0x8a10;
    RESERVED_VAR_INT_18 = VALUE_MOLERATSKIN02;
    DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_ALL() {
    if ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) >= (1)) {
        MAX = NPC_HASITEMS(HERO, RESERVED_VAR_INT_17);
        if ((PEON_BORIS) == (TRUE)) {
            CREATEINVITEMS(SELF, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (2));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (2));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((MAX) * (RESERVED_VAR_INT_18)) / (2));
        } else {
            CREATEINVITEMS(SELF, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (4));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (4));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((MAX) * (RESERVED_VAR_INT_18)) / (4));
        } else {
            DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS();
        } else {
            /* set_instance(0) */;
        };
    };
    DIA_BORIS_TRADE_ANIMALSKIN_NOTHING();
    DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS();
}

var int DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_ALL.MAX = 0;
func void DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_25() {
    if ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) >= (25)) {
        if ((PEON_BORIS) == (TRUE)) {
            CREATEINVITEMS(SELF, 0x859b, ((25) * (RESERVED_VAR_INT_18)) / (2));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((25) * (RESERVED_VAR_INT_18)) / (2));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((25) * (RESERVED_VAR_INT_18)) / (2));
        } else {
            CREATEINVITEMS(SELF, 0x859b, ((25) * (RESERVED_VAR_INT_18)) / (4));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((25) * (RESERVED_VAR_INT_18)) / (4));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((25) * (RESERVED_VAR_INT_18)) / (4));
        } else {
            DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_AMMOUNT();
        } else {
            /* set_instance(0) */;
        };
    };
    if (((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) >= (1)) && ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) < (25))) {
        MAX = NPC_HASITEMS(HERO, RESERVED_VAR_INT_17);
        if ((PEON_BORIS) == (TRUE)) {
            CREATEINVITEMS(SELF, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (2));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (2));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((MAX) * (RESERVED_VAR_INT_18)) / (2));
        } else {
            CREATEINVITEMS(SELF, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (4));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (4));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((MAX) * (RESERVED_VAR_INT_18)) / (4));
        } else {
            DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_AMMOUNT();
        } else {
            /* set_instance(0) */;
        };
    };
    if ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) == (0)) {
        DIA_BORIS_TRADE_ANIMALSKIN_NOTHING();
        DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS();
    };
}

var int DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_25.MAX = 0;
func void DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_10() {
    if ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) >= (10)) {
        if ((PEON_BORIS) == (TRUE)) {
            CREATEINVITEMS(SELF, 0x859b, ((10) * (RESERVED_VAR_INT_18)) / (2));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((10) * (RESERVED_VAR_INT_18)) / (2));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((10) * (RESERVED_VAR_INT_18)) / (2));
        } else {
            CREATEINVITEMS(SELF, 0x859b, ((10) * (RESERVED_VAR_INT_18)) / (4));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((10) * (RESERVED_VAR_INT_18)) / (4));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((10) * (RESERVED_VAR_INT_18)) / (4));
        } else {
            DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_AMMOUNT();
        } else {
            /* set_instance(0) */;
        };
    };
    if (((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) >= (1)) && ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) < (10))) {
        MAX = NPC_HASITEMS(HERO, RESERVED_VAR_INT_17);
        if ((PEON_BORIS) == (TRUE)) {
            CREATEINVITEMS(SELF, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (2));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (2));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((MAX) * (RESERVED_VAR_INT_18)) / (2));
        } else {
            CREATEINVITEMS(SELF, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (4));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (4));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((MAX) * (RESERVED_VAR_INT_18)) / (4));
        } else {
            DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_AMMOUNT();
        } else {
            /* set_instance(0) */;
        };
    };
    if ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) == (0)) {
        DIA_BORIS_TRADE_ANIMALSKIN_NOTHING();
        DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS();
    };
}

var int DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_10.MAX = 0;
func void DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_5() {
    if ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) >= (5)) {
        if ((PEON_BORIS) == (TRUE)) {
            CREATEINVITEMS(SELF, 0x859b, ((5) * (RESERVED_VAR_INT_18)) / (2));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((5) * (RESERVED_VAR_INT_18)) / (2));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((5) * (RESERVED_VAR_INT_18)) / (2));
        } else {
            CREATEINVITEMS(SELF, 0x859b, ((5) * (RESERVED_VAR_INT_18)) / (4));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((5) * (RESERVED_VAR_INT_18)) / (4));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((5) * (RESERVED_VAR_INT_18)) / (4));
        } else {
            DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_AMMOUNT();
        } else {
            /* set_instance(0) */;
        };
    };
    if (((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) >= (1)) && ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) < (5))) {
        MAX = NPC_HASITEMS(HERO, RESERVED_VAR_INT_17);
        if ((PEON_BORIS) == (TRUE)) {
            CREATEINVITEMS(SELF, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (2));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (2));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((MAX) * (RESERVED_VAR_INT_18)) / (2));
        } else {
            CREATEINVITEMS(SELF, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (4));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (4));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((MAX) * (RESERVED_VAR_INT_18)) / (4));
        } else {
            DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_AMMOUNT();
        } else {
            /* set_instance(0) */;
        };
    };
    if ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) == (0)) {
        DIA_BORIS_TRADE_ANIMALSKIN_NOTHING();
        DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS();
    };
}

var int DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_5.MAX = 0;
func void DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_1() {
    if ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) >= (1)) {
        if ((PEON_BORIS) == (TRUE)) {
            CREATEINVITEMS(SELF, 0x859b, (RESERVED_VAR_INT_18) / (2));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, (RESERVED_VAR_INT_18) / (2));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + ((RESERVED_VAR_INT_18) / (2));
        } else {
            CREATEINVITEMS(SELF, 0x859b, (RESERVED_VAR_INT_18) / (4));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, (RESERVED_VAR_INT_18) / (4));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + ((RESERVED_VAR_INT_18) / (4));
        } else {
            DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS_AMMOUNT();
        } else {
            /* set_instance(0) */;
        };
    };
    if ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) == (0)) {
        DIA_BORIS_TRADE_ANIMALSKIN_NOTHING();
        DIA_BORIS_TRADE_ANIMALSKIN_MAMMALS();
    };
}

var int MAXBIGSNAPPER = 0;
var int MAXOLDLURKER = 0;
var int MAXSWAMPTROLL = 0;
var int MAXCAVETROLL = 0;
var int MAXICEWOLF = 0;
var int MAXDESERTWOLF = 0;
var int MAXWHITEBEAR = 0;
var int MAXWANTEDPOSTERKEILER = 0;
var int MAXWANTEDPOSTERMOLERAT = 0;
var int MAXWANTEDPOSTERSHADOW = 0;
var int MAXWANTEDPOSTERRATS = 0;
var int MAXWANTEDPOSTERTROLL = 0;
var int MAXWANTEDPOSTERFIREWARAN = 0;
var int GOLDBIGSNAPPER = 0;
var int GOLDOLDLURKER = 0;
var int GOLDSWAMPTROLL = 0;
var int GOLDCAVETROLL = 0;
var int GOLDICEWOLF = 0;
var int GOLDDESERTWOLF = 0;
var int GOLDWHITEBEAR = 0;
var int GOLDWANTEDPOSTERKEILER = 0;
var int GOLDWANTEDPOSTERMOLERAT = 0;
var int GOLDWANTEDPOSTERSHADOW = 0;
var int GOLDWANTEDPOSTERRATS = 0;
var int GOLDWANTEDPOSTERTROLL = 0;
var int GOLDWANTEDPOSTERFIREWARAN = 0;
func void DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL() {
    MAXBIGSNAPPER = NPC_HASITEMS(HERO, 0x89f5);
    MAXOLDLURKER = NPC_HASITEMS(HERO, 0x89f3);
    MAXSWAMPTROLL = NPC_HASITEMS(HERO, 0x8a0b);
    MAXCAVETROLL = NPC_HASITEMS(HERO, 0x8a0c);
    MAXICEWOLF = NPC_HASITEMS(HERO, 0x8a13);
    MAXDESERTWOLF = NPC_HASITEMS(HERO, 0x8a14);
    MAXWHITEBEAR = NPC_HASITEMS(HERO, 0x8a00);
    MAXWANTEDPOSTERKEILER = NPC_HASITEMS(HERO, 0x8a05);
    MAXWANTEDPOSTERMOLERAT = NPC_HASITEMS(HERO, 0x8a06);
    MAXWANTEDPOSTERSHADOW = NPC_HASITEMS(HERO, 0x8a07);
    MAXWANTEDPOSTERRATS = NPC_HASITEMS(HERO, 0x8a08);
    MAXWANTEDPOSTERTROLL = NPC_HASITEMS(HERO, 0x8a09);
    MAXWANTEDPOSTERFIREWARAN = NPC_HASITEMS(HERO, 0x8a0a);
    RESERVED_VAR_INT_15 = NPC_HASITEMS(HERO, 0x8a01);
    GOLDBIGSNAPPER = 0;
    GOLDOLDLURKER = 0;
    GOLDSWAMPTROLL = 0;
    GOLDCAVETROLL = 0;
    GOLDICEWOLF = 0;
    GOLDDESERTWOLF = 0;
    GOLDWHITEBEAR = 0;
    GOLDWANTEDPOSTERKEILER = 0;
    GOLDWANTEDPOSTERMOLERAT = 0;
    GOLDWANTEDPOSTERSHADOW = 0;
    GOLDWANTEDPOSTERRATS = 0;
    GOLDWANTEDPOSTERTROLL = 0;
    GOLDWANTEDPOSTERFIREWARAN = 0;
    RESERVED_VAR_INT_16 = 0;
    BORISALLSPECIALFUR_COUNT = (((((((((((((MAXBIGSNAPPER) + (MAXOLDLURKER)) + (MAXSWAMPTROLL)) + (MAXCAVETROLL)) + (MAXICEWOLF)) + (MAXDESERTWOLF)) + (MAXWHITEBEAR)) + (MAXWANTEDPOSTERKEILER)) + (MAXWANTEDPOSTERMOLERAT)) + (MAXWANTEDPOSTERSHADOW)) + (MAXWANTEDPOSTERRATS)) + (MAXWANTEDPOSTERTROLL)) + (MAXWANTEDPOSTERFIREWARAN)) + (RESERVED_VAR_INT_15);
    RESERVED_VAR_INT_17 = -(1);
    RESERVED_VAR_INT_18 = 0;
    RESERVED_VAR_STRING_04 = CS4(DIALOG_ALL, RESERVED_CONST_STRING_19, I2S(RESERVED_VAR_INT_15), RESERVED_CONST_STRING_20);
    INFO_CLEARCHOICES(0x122da);
    if ((NPC_HASITEMS(OTHER, 0x89f5)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_BIGSNAPPERSKIN, 0x12388);
    };
    if ((NPC_HASITEMS(OTHER, 0x89f3)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_OLDLURKERSKIN, 0x12389);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a0b)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_SWAMPTROLLFUR, 0x1238a);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a0c)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_CAVETROLLFUR, 0x1238b);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a13)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_ICEWOLFFUR, 0x1238c);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a14)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_DESERTWOLFFUR, 0x1238d);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a00)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_WHITEBEARFUR, 0x1238e);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a05)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_WANTEDPOSTER_KEILER, 0x1238f);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a06)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_WANTEDPOSTER_MOLERAT, 0x12390);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a07)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_WANTEDPOSTER_SHADOW, 0x12391);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a08)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_WANTEDPOSTER_RATS, 0x12392);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a09)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_WANTEDPOSTER_TROLL, 0x12393);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a0a)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_WANTEDPOSTER_FIREWARAN, 0x12394);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a01)) >= (1)) {
        INFO_ADDCHOICE(0x122da, THROPHYNAME_SQ114_BEARFUR, 0x97c);
    };
    ALL_STRING_SPECIAL = CS4(DIALOG_ALL, " (", I2S(BORISALLSPECIALFUR_COUNT), ")");
    INFO_ADDCHOICE(0x122da, ALL_STRING_SPECIAL, 0x12383);
    INFO_ADDCHOICE(0x122da, DIALOG_BACK, 0x122e1);
}

var int DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL.BORISALLSPECIALFUR_COUNT = 0;
var string DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL.ALL_STRING_SPECIAL = "";
func void DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_EVERYTHING() {
    MAXBIGSNAPPER = NPC_HASITEMS(HERO, 0x89f5);
    MAXOLDLURKER = NPC_HASITEMS(HERO, 0x89f3);
    MAXSWAMPTROLL = NPC_HASITEMS(HERO, 0x8a0b);
    MAXCAVETROLL = NPC_HASITEMS(HERO, 0x8a0c);
    MAXICEWOLF = NPC_HASITEMS(HERO, 0x8a13);
    MAXDESERTWOLF = NPC_HASITEMS(HERO, 0x8a14);
    MAXWHITEBEAR = NPC_HASITEMS(HERO, 0x8a00);
    MAXWANTEDPOSTERKEILER = NPC_HASITEMS(HERO, 0x8a05);
    MAXWANTEDPOSTERMOLERAT = NPC_HASITEMS(HERO, 0x8a06);
    MAXWANTEDPOSTERSHADOW = NPC_HASITEMS(HERO, 0x8a07);
    MAXWANTEDPOSTERRATS = NPC_HASITEMS(HERO, 0x8a08);
    MAXWANTEDPOSTERTROLL = NPC_HASITEMS(HERO, 0x8a09);
    MAXWANTEDPOSTERFIREWARAN = NPC_HASITEMS(HERO, 0x8a0a);
    GOLDBIGSNAPPER = (MAXBIGSNAPPER) * (VALUE_SNAPPERBIGSKIN);
    GOLDOLDLURKER = (MAXOLDLURKER) * (VALUE_OLDLURKERSKIN);
    GOLDSWAMPTROLL = (MAXSWAMPTROLL) * (VALUE_SWAMPTROLLFUR);
    GOLDCAVETROLL = (MAXCAVETROLL) * (VALUE_CAVETROLLFUR);
    GOLDICEWOLF = (MAXICEWOLF) * (VALUE_ICEWOLFFUR);
    GOLDDESERTWOLF = (MAXDESERTWOLF) * (VALUE_DESERTWOLFFUR);
    GOLDWHITEBEAR = (MAXWHITEBEAR) * (VALUE_ITAT_WHITEBEARFUR);
    GOLDWANTEDPOSTERKEILER = (MAXWANTEDPOSTERKEILER) * (VALUE_WANTEDPOSTER_FUR_KEILER);
    GOLDWANTEDPOSTERMOLERAT = (MAXWANTEDPOSTERMOLERAT) * (VALUE_WANTEDPOSTER_FUR_MOLERAT);
    GOLDWANTEDPOSTERSHADOW = (MAXWANTEDPOSTERSHADOW) * (VALUE_WANTEDPOSTER_FUR_SHADOW);
    GOLDWANTEDPOSTERRATS = (MAXWANTEDPOSTERRATS) * (VALUE_WANTEDPOSTER_FUR_RATS);
    GOLDWANTEDPOSTERTROLL = (MAXWANTEDPOSTERTROLL) * (VALUE_WANTEDPOSTER_FUR_TROLL);
    GOLDWANTEDPOSTERFIREWARAN = (MAXWANTEDPOSTERFIREWARAN) * (VALUE_WANTEDPOSTER_FUR_FIREWARAN);
    RESERVED_VAR_INT_16 = (RESERVED_VAR_INT_15) * (VALUE_ITAT_BEARFUR);
    BORISALLSPECIALSKIN_GOLD = ((((((((((((((GOLDBIGSNAPPER) + (GOLDOLDLURKER)) + (GOLDSWAMPTROLL)) + (GOLDCAVETROLL)) + (GOLDBLACKWOLF)) + (GOLDICEWOLF)) + (GOLDDESERTWOLF)) + (GOLDWHITEBEAR)) + (GOLDWANTEDPOSTERKEILER)) + (GOLDWANTEDPOSTERMOLERAT)) + (GOLDWANTEDPOSTERSHADOW)) + (GOLDWANTEDPOSTERRATS)) + (GOLDWANTEDPOSTERTROLL)) + (GOLDWANTEDPOSTERFIREWARAN)) + (RESERVED_VAR_INT_16);
    if ((NPC_HASITEMS(OTHER, 0x89f5)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x89f5, MAXBIGSNAPPER);
    };
    if ((NPC_HASITEMS(OTHER, 0x89f3)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x89f3, MAXOLDLURKER);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a0b)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8a0b, MAXSWAMPTROLL);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a0c)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8a0c, MAXCAVETROLL);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a13)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8a13, MAXICEWOLF);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a14)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8a14, MAXDESERTWOLF);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a00)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8a00, MAXWHITEBEAR);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a05)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8a05, MAXWANTEDPOSTERKEILER);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a06)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8a06, MAXWANTEDPOSTERMOLERAT);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a07)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8a07, MAXWANTEDPOSTERSHADOW);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a08)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8a08, MAXWANTEDPOSTERRATS);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a09)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8a09, MAXWANTEDPOSTERTROLL);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a0a)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8a0a, MAXWANTEDPOSTERFIREWARAN);
    };
    if ((NPC_HASITEMS(OTHER, 0x8a01)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8a01, RESERVED_VAR_INT_15);
    };
    AI_WAIT(SELF, 0x3f000000);
    AI_FUNCTION(SELF, 0x12384);
    DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL();
}

func void BORIS_SELLALLSPECIAL() {
    if ((PEON_BORIS) == (TRUE)) {
        B_GIVEINVITEMS(VLK_3023_BORIS, HERO, 0x859b, (BORISALLSPECIALSKIN_GOLD) / (2));
        BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + ((BORISALLSPECIALSKIN_GOLD) / (2));
    };
    B_GIVEINVITEMS(VLK_3023_BORIS, HERO, 0x859b, (BORISALLSPECIALSKIN_GOLD) / (4));
    BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + ((BORISALLSPECIALSKIN_GOLD) / (4));
}

func void DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_AMMOUNT() {
    INFO_CLEARCHOICES(0x122da);
    MAX = NPC_HASITEMS(HERO, RESERVED_VAR_INT_17);
    ALL_STRING = CS4(DIALOG_ALL, " (", I2S(MAX), ")");
    INFO_ADDCHOICE(0x122da, ALL_STRING, 0x12395);
    INFO_ADDCHOICE(0x122da, CHOICE_NUMBER_25, 0x12397);
    INFO_ADDCHOICE(0x122da, CHOICE_NUMBER_10, 0x12399);
    INFO_ADDCHOICE(0x122da, CHOICE_NUMBER_5, 0x1239b);
    INFO_ADDCHOICE(0x122da, CHOICE_NUMBER_1, 0x1239d);
    INFO_ADDCHOICE(0x122da, DIALOG_BACK, 0x12380);
}

var int DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_AMMOUNT.MAX = 0;
var string DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_AMMOUNT.ALL_STRING = "";
func void DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_ITAT_BIGSNAPPERSKIN() {
    RESERVED_VAR_INT_17 = 0x89f5;
    RESERVED_VAR_INT_18 = VALUE_SNAPPERBIGSKIN;
    DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_ITAT_OLDLURKERSKIN() {
    RESERVED_VAR_INT_17 = 0x89f3;
    RESERVED_VAR_INT_18 = VALUE_OLDLURKERSKIN;
    DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_ITAT_SWAMPTROLLFUR() {
    RESERVED_VAR_INT_17 = 0x8a0b;
    RESERVED_VAR_INT_18 = VALUE_SWAMPTROLLFUR;
    DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_ITAT_CAVETROLLFUR() {
    RESERVED_VAR_INT_17 = 0x8a0c;
    RESERVED_VAR_INT_18 = VALUE_CAVETROLLFUR;
    DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_ITAT_ICEWOLFFUR() {
    RESERVED_VAR_INT_17 = 0x8a13;
    RESERVED_VAR_INT_18 = VALUE_ICEWOLFFUR;
    DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_ITAT_DESERTWOLFFUR() {
    RESERVED_VAR_INT_17 = 0x8a14;
    RESERVED_VAR_INT_18 = VALUE_DESERTWOLFFUR;
    DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_ITAT_WHITEBEARFUR() {
    RESERVED_VAR_INT_17 = 0x8a00;
    RESERVED_VAR_INT_18 = VALUE_ITAT_WHITEBEARFUR;
    DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_ITAT_WANTEDPOSTER_FUR_KEILER() {
    RESERVED_VAR_INT_17 = 0x8a05;
    RESERVED_VAR_INT_18 = VALUE_WANTEDPOSTER_FUR_KEILER;
    DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_ITAT_WANTEDPOSTER_FUR_MOLERAT() {
    RESERVED_VAR_INT_17 = 0x8a06;
    RESERVED_VAR_INT_18 = VALUE_WANTEDPOSTER_FUR_MOLERAT;
    DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_ITAT_WANTEDPOSTER_FUR_SHADOW() {
    RESERVED_VAR_INT_17 = 0x8a07;
    RESERVED_VAR_INT_18 = VALUE_WANTEDPOSTER_FUR_SHADOW;
    DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_ITAT_WANTEDPOSTER_FUR_RATS() {
    RESERVED_VAR_INT_17 = 0x8a08;
    RESERVED_VAR_INT_18 = VALUE_WANTEDPOSTER_FUR_RATS;
    DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_ITAT_WANTEDPOSTER_FUR_TROLL() {
    RESERVED_VAR_INT_17 = 0x8a09;
    RESERVED_VAR_INT_18 = VALUE_WANTEDPOSTER_FUR_TROLL;
    DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_ITAT_WANTEDPOSTER_FUR_FIREWARAN() {
    RESERVED_VAR_INT_17 = 0x8a0a;
    RESERVED_VAR_INT_18 = VALUE_WANTEDPOSTER_FUR_FIREWARAN;
    DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_AMMOUNT();
}

func void DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_ALL() {
    if ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) >= (1)) {
        MAX = NPC_HASITEMS(HERO, RESERVED_VAR_INT_17);
        if ((PEON_BORIS) == (TRUE)) {
            CREATEINVITEMS(SELF, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (2));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (2));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((MAX) * (RESERVED_VAR_INT_18)) / (2));
        } else {
            CREATEINVITEMS(SELF, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (4));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (4));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((MAX) * (RESERVED_VAR_INT_18)) / (4));
        } else {
            DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL();
        } else {
            /* set_instance(0) */;
        };
    };
    DIA_BORIS_TRADE_ANIMALSKIN_NOTHING();
    DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL();
}

var int DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_ALL.MAX = 0;
func void DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_25() {
    if ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) >= (25)) {
        if ((PEON_BORIS) == (TRUE)) {
            CREATEINVITEMS(SELF, 0x859b, ((25) * (RESERVED_VAR_INT_18)) / (2));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((25) * (RESERVED_VAR_INT_18)) / (2));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((25) * (RESERVED_VAR_INT_18)) / (2));
        } else {
            CREATEINVITEMS(SELF, 0x859b, ((25) * (RESERVED_VAR_INT_18)) / (4));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((25) * (RESERVED_VAR_INT_18)) / (4));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((25) * (RESERVED_VAR_INT_18)) / (4));
        } else {
            DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_AMMOUNT();
        } else {
            /* set_instance(0) */;
        };
    };
    if (((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) >= (1)) && ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) < (25))) {
        MAX = NPC_HASITEMS(HERO, RESERVED_VAR_INT_17);
        if ((PEON_BORIS) == (TRUE)) {
            CREATEINVITEMS(SELF, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (2));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (2));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((MAX) * (RESERVED_VAR_INT_18)) / (2));
        } else {
            CREATEINVITEMS(SELF, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (4));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (4));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((MAX) * (RESERVED_VAR_INT_18)) / (4));
        } else {
            DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_AMMOUNT();
        } else {
            /* set_instance(0) */;
        };
    };
    if ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) == (0)) {
        DIA_BORIS_TRADE_ANIMALSKIN_NOTHING();
        DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL();
    };
}

var int DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_25.MAX = 0;
func void DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_10() {
    if ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) >= (10)) {
        if ((PEON_BORIS) == (TRUE)) {
            CREATEINVITEMS(SELF, 0x859b, ((10) * (RESERVED_VAR_INT_18)) / (2));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((10) * (RESERVED_VAR_INT_18)) / (2));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((10) * (RESERVED_VAR_INT_18)) / (2));
        } else {
            CREATEINVITEMS(SELF, 0x859b, ((10) * (RESERVED_VAR_INT_18)) / (4));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((10) * (RESERVED_VAR_INT_18)) / (4));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((10) * (RESERVED_VAR_INT_18)) / (4));
        } else {
            DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_AMMOUNT();
        } else {
            /* set_instance(0) */;
        };
    };
    if (((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) >= (1)) && ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) < (10))) {
        MAX = NPC_HASITEMS(HERO, RESERVED_VAR_INT_17);
        if ((PEON_BORIS) == (TRUE)) {
            CREATEINVITEMS(SELF, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (2));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (2));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((MAX) * (RESERVED_VAR_INT_18)) / (2));
        } else {
            CREATEINVITEMS(SELF, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (4));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (4));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((MAX) * (RESERVED_VAR_INT_18)) / (4));
        } else {
            DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_AMMOUNT();
        } else {
            /* set_instance(0) */;
        };
    };
    if ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) == (0)) {
        DIA_BORIS_TRADE_ANIMALSKIN_NOTHING();
        DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL();
    };
}

var int DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_10.MAX = 0;
func void DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_5() {
    if ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) >= (5)) {
        if ((PEON_BORIS) == (TRUE)) {
            CREATEINVITEMS(SELF, 0x859b, ((5) * (RESERVED_VAR_INT_18)) / (2));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((5) * (RESERVED_VAR_INT_18)) / (2));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((5) * (RESERVED_VAR_INT_18)) / (2));
        } else {
            CREATEINVITEMS(SELF, 0x859b, ((5) * (RESERVED_VAR_INT_18)) / (4));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((5) * (RESERVED_VAR_INT_18)) / (4));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((5) * (RESERVED_VAR_INT_18)) / (4));
        } else {
            DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_AMMOUNT();
        } else {
            /* set_instance(0) */;
        };
    };
    if (((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) >= (1)) && ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) < (5))) {
        MAX = NPC_HASITEMS(HERO, RESERVED_VAR_INT_17);
        if ((PEON_BORIS) == (TRUE)) {
            CREATEINVITEMS(SELF, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (2));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (2));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((MAX) * (RESERVED_VAR_INT_18)) / (2));
        } else {
            CREATEINVITEMS(SELF, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (4));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((MAX) * (RESERVED_VAR_INT_18)) / (4));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + (((MAX) * (RESERVED_VAR_INT_18)) / (4));
        } else {
            DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_AMMOUNT();
        } else {
            /* set_instance(0) */;
        };
    };
    if ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) == (0)) {
        DIA_BORIS_TRADE_ANIMALSKIN_NOTHING();
        DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL();
    };
}

var int DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_5.MAX = 0;
func void DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_1() {
    if ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) >= (1)) {
        if ((PEON_BORIS) == (TRUE)) {
            CREATEINVITEMS(SELF, 0x859b, (RESERVED_VAR_INT_18) / (2));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, (RESERVED_VAR_INT_18) / (2));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + ((RESERVED_VAR_INT_18) / (2));
        } else {
            CREATEINVITEMS(SELF, 0x859b, (RESERVED_VAR_INT_18) / (4));
            B_GIVEINVITEMS(SELF, OTHER, 0x859b, (RESERVED_VAR_INT_18) / (4));
            BORIS_TRADE_ANIMALSKIN_AMOUNT = (BORIS_TRADE_ANIMALSKIN_AMOUNT) + ((RESERVED_VAR_INT_18) / (4));
        } else {
            DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL_AMMOUNT();
        } else {
            /* set_instance(0) */;
        };
    };
    if ((NPC_HASITEMS(OTHER, RESERVED_VAR_INT_17)) == (0)) {
        DIA_BORIS_TRADE_ANIMALSKIN_NOTHING();
        DIA_BORIS_TRADE_ANIMALSKIN_SPECIAL();
    };
}

instance DIA_BORIS_IHAVEWEAPON(C_INFO) {
    NPC = 0xcd0f;
    NR = 970;
    CONDITION = DIA_BORIS_IHAVEWEAPON_CONDITION;
    INFORMATION = DIA_BORIS_IHAVEWEAPON_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "I have a weapon for sale.";
}

func int DIA_BORIS_IHAVEWEAPON_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x1229b)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BORIS_IHAVEWEAPON_CHOICES() {
    AI_UNEQUIPWEAPONS(OTHER);
    INFO_CLEARCHOICES(0x1239e);
    INFO_ADDCHOICE(0x1239e, "Crossbows.", 0x123b0);
    INFO_ADDCHOICE(0x1239e, "Bows.", 0x123ce);
    INFO_ADDCHOICE(0x1239e, DIALOG_BACK, 0x123a2);
}

func void DIA_BORIS_IHAVEWEAPON_INFO() {
    B_SAY(OTHER, SELF, "$MARVIN_SellWeapon");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_IHaveWeapon_03_02");
    DIA_BORIS_IHAVEWEAPON_CHOICES();
}

func void DIA_BORIS_IHAVEWEAPON_BACK() {
    INFO_CLEARCHOICES(0x1239e);
}

var int IHAVEWEAPON_CROSSBOW_COUNT = 0;
var int IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_L_02 = 0;
var int IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_01 = 0;
var int IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_L_01 = 0;
var int IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_M_02 = 0;
var int IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_05 = 0;
var int IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_H_02 = 0;
var int IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_M_01 = 0;
var int IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_H_01 = 0;
var int IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_03 = 0;
var int IHAVEWEAPON_CROSSBOW_ITRW_ADDON_MAGICCROSSBOW = 0;
var int IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_09 = 0;
var int IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_10 = 0;
func void DIA_BORIS_IHAVEWEAPON_CROSSBOW() {
    INFO_CLEARCHOICES(0x1239e);
    if (((NPC_HASITEMS(OTHER, 0x866e)) >= (1)) && ((IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_L_02) == (FALSE))) {
        INFO_ADDCHOICE(0x1239e, NAMEWEAPON_CROSSBOW_L_02, 0x123b2);
    };
    if (((NPC_HASITEMS(OTHER, 0x9b2c)) >= (1)) && ((IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_01) == (FALSE))) {
        INFO_ADDCHOICE(0x1239e, NAMEWEAPON_CROSSBOW_01, 0x123b3);
    };
    if (((NPC_HASITEMS(OTHER, 0x866b)) >= (1)) && ((IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_L_01) == (FALSE))) {
        INFO_ADDCHOICE(0x1239e, NAMEWEAPON_CROSSBOW_L_01, 0x123b4);
    };
    if (((NPC_HASITEMS(OTHER, 0x8673)) >= (1)) && ((IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_M_02) == (FALSE))) {
        INFO_ADDCHOICE(0x1239e, NAMEWEAPON_CROSSBOW_M_02, 0x123b5);
    };
    if (((NPC_HASITEMS(OTHER, 0x9b34)) >= (1)) && ((IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_05) == (FALSE))) {
        INFO_ADDCHOICE(0x1239e, NAMEWEAPON_CROSSBOW_05, 0x123b6);
    };
    if (((NPC_HASITEMS(OTHER, 0x8678)) >= (1)) && ((IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_H_02) == (FALSE))) {
        INFO_ADDCHOICE(0x1239e, NAMEWEAPON_CROSSBOW_H_02, 0x123b7);
    };
    if (((NPC_HASITEMS(OTHER, 0x8671)) >= (1)) && ((IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_M_01) == (FALSE))) {
        INFO_ADDCHOICE(0x1239e, NAMEWEAPON_CROSSBOW_M_01, 0x123b8);
    };
    if (((NPC_HASITEMS(OTHER, 0x8676)) >= (1)) && ((IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_H_01) == (FALSE))) {
        INFO_ADDCHOICE(0x1239e, NAMEWEAPON_CROSSBOW_H_01, 0x123b9);
    };
    if (((NPC_HASITEMS(OTHER, 0x9b30)) >= (1)) && ((IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_03) == (FALSE))) {
        INFO_ADDCHOICE(0x1239e, NAMEWEAPON_CROSSBOW_03, 0x123ba);
    };
    if (((NPC_HASITEMS(OTHER, 0x83d6)) >= (1)) && ((IHAVEWEAPON_CROSSBOW_ITRW_ADDON_MAGICCROSSBOW) == (FALSE))) {
        INFO_ADDCHOICE(0x1239e, NAMEWEAPON_ADDON_MAGICCROSSBOW, 0x123bb);
    };
    if (((NPC_HASITEMS(OTHER, 0x9b29)) >= (1)) && ((IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_09) == (FALSE))) {
        INFO_ADDCHOICE(0x1239e, NAMEWEAPON_CROSSBOW_09, 0x123bc);
    };
    if (((NPC_HASITEMS(OTHER, 0x9b23)) >= (1)) && ((IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_10) == (FALSE))) {
        INFO_ADDCHOICE(0x1239e, NAMEWEAPON_CROSSBOW_10, 0x123bd);
    };
    INFO_ADDCHOICE(0x1239e, DIALOG_BACK, 0x123a0);
}

func void DIA_BORIS_IHAVEWEAPON_CROSSBOW_COMMENT() {
    IHAVEWEAPON_CROSSBOW_COUNT = (IHAVEWEAPON_CROSSBOW_COUNT) + (1);
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_IHaveWeapon_03_03");
    AI_RESETFACEANI(SELF);
}

func void DIA_BORIS_IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_L_02() {
    DIA_BORIS_IHAVEWEAPON_CROSSBOW_COMMENT();
    IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_L_02 = TRUE;
    NPC_REMOVEINVITEM(SELF, 0x866e);
    CREATEINVITEMS(SELF, 0x859b, (VALUE_LEICHTEARMBRUST) / (2));
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, (VALUE_LEICHTEARMBRUST) / (2));
    DIA_BORIS_IHAVEWEAPON_CROSSBOW();
    B_GIVEINVITEMS(OTHER, SELF, 0x866e, 1);
}

func void DIA_BORIS_IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_01() {
    DIA_BORIS_IHAVEWEAPON_CROSSBOW_COMMENT();
    IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_01 = TRUE;
    NPC_REMOVEINVITEM(SELF, 0x9b2c);
    CREATEINVITEMS(SELF, 0x859b, (VALUE_CROSSBOW_01) / (2));
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, (VALUE_CROSSBOW_01) / (2));
    DIA_BORIS_IHAVEWEAPON_CROSSBOW();
    B_GIVEINVITEMS(OTHER, SELF, 0x9b2c, 1);
}

func void DIA_BORIS_IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_L_01() {
    DIA_BORIS_IHAVEWEAPON_CROSSBOW_COMMENT();
    IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_L_01 = TRUE;
    NPC_REMOVEINVITEM(SELF, 0x866b);
    CREATEINVITEMS(SELF, 0x859b, (VALUE_JAGDARMBRUST) / (2));
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, (VALUE_JAGDARMBRUST) / (2));
    DIA_BORIS_IHAVEWEAPON_CROSSBOW();
    B_GIVEINVITEMS(OTHER, SELF, 0x866b, 1);
}

func void DIA_BORIS_IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_M_02() {
    DIA_BORIS_IHAVEWEAPON_CROSSBOW_COMMENT();
    IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_M_02 = TRUE;
    NPC_REMOVEINVITEM(SELF, 0x8673);
    CREATEINVITEMS(SELF, 0x859b, (VALUE_KRIEGSARMBRUST) / (2));
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, (VALUE_KRIEGSARMBRUST) / (2));
    DIA_BORIS_IHAVEWEAPON_CROSSBOW();
    B_GIVEINVITEMS(OTHER, SELF, 0x8673, 1);
}

func void DIA_BORIS_IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_05() {
    DIA_BORIS_IHAVEWEAPON_CROSSBOW_COMMENT();
    IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_05 = TRUE;
    NPC_REMOVEINVITEM(SELF, 0x9b34);
    CREATEINVITEMS(SELF, 0x859b, (VALUE_CROSSBOW_05) / (2));
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, (VALUE_CROSSBOW_05) / (2));
    DIA_BORIS_IHAVEWEAPON_CROSSBOW();
    B_GIVEINVITEMS(OTHER, SELF, 0x9b34, 1);
}

func void DIA_BORIS_IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_H_02() {
    DIA_BORIS_IHAVEWEAPON_CROSSBOW_COMMENT();
    IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_H_02 = TRUE;
    NPC_REMOVEINVITEM(SELF, 0x8678);
    CREATEINVITEMS(SELF, 0x859b, (VALUE_DRACHENJAEGERARMBRUST) / (2));
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, (VALUE_DRACHENJAEGERARMBRUST) / (2));
    DIA_BORIS_IHAVEWEAPON_CROSSBOW();
    B_GIVEINVITEMS(OTHER, SELF, 0x8678, 1);
}

func void DIA_BORIS_IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_M_01() {
    DIA_BORIS_IHAVEWEAPON_CROSSBOW_COMMENT();
    IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_M_01 = TRUE;
    NPC_REMOVEINVITEM(SELF, 0x8671);
    CREATEINVITEMS(SELF, 0x859b, (VALUE_ARMBRUST) / (2));
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, (VALUE_ARMBRUST) / (2));
    DIA_BORIS_IHAVEWEAPON_CROSSBOW();
    B_GIVEINVITEMS(OTHER, SELF, 0x8671, 1);
}

func void DIA_BORIS_IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_H_01() {
    DIA_BORIS_IHAVEWEAPON_CROSSBOW_COMMENT();
    IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_H_01 = TRUE;
    NPC_REMOVEINVITEM(SELF, 0x8676);
    CREATEINVITEMS(SELF, 0x859b, (VALUE_SCHWEREARMBRUST) / (2));
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, (VALUE_SCHWEREARMBRUST) / (2));
    DIA_BORIS_IHAVEWEAPON_CROSSBOW();
    B_GIVEINVITEMS(OTHER, SELF, 0x8676, 1);
}

func void DIA_BORIS_IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_03() {
    DIA_BORIS_IHAVEWEAPON_CROSSBOW_COMMENT();
    IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_03 = TRUE;
    NPC_REMOVEINVITEM(SELF, 0x9b30);
    CREATEINVITEMS(SELF, 0x859b, (VALUE_CROSSBOW_03) / (2));
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, (VALUE_CROSSBOW_03) / (2));
    DIA_BORIS_IHAVEWEAPON_CROSSBOW();
    B_GIVEINVITEMS(OTHER, SELF, 0x9b30, 1);
}

func void DIA_BORIS_IHAVEWEAPON_CROSSBOW_ITRW_ADDON_MAGICCROSSBOW() {
    DIA_BORIS_IHAVEWEAPON_CROSSBOW_COMMENT();
    IHAVEWEAPON_CROSSBOW_ITRW_ADDON_MAGICCROSSBOW = TRUE;
    NPC_REMOVEINVITEM(SELF, 0x83d6);
    CREATEINVITEMS(SELF, 0x859b, (VALUE_MAGICCROSSBOW) / (2));
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, (VALUE_MAGICCROSSBOW) / (2));
    DIA_BORIS_IHAVEWEAPON_CROSSBOW();
    B_GIVEINVITEMS(OTHER, SELF, 0x83d6, 1);
}

func void DIA_BORIS_IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_09() {
    DIA_BORIS_IHAVEWEAPON_CROSSBOW_COMMENT();
    IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_09 = TRUE;
    NPC_REMOVEINVITEM(SELF, 0x9b29);
    CREATEINVITEMS(SELF, 0x859b, (VALUE_CROSSBOW_09) / (2));
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, (VALUE_CROSSBOW_09) / (2));
    DIA_BORIS_IHAVEWEAPON_CROSSBOW();
    B_GIVEINVITEMS(OTHER, SELF, 0x9b29, 1);
}

func void DIA_BORIS_IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_10() {
    DIA_BORIS_IHAVEWEAPON_CROSSBOW_COMMENT();
    IHAVEWEAPON_CROSSBOW_ITRW_CROSSBOW_10 = TRUE;
    NPC_REMOVEINVITEM(SELF, 0x9b23);
    CREATEINVITEMS(SELF, 0x859b, (VALUE_CROSSBOW_10) / (2));
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, (VALUE_CROSSBOW_10) / (2));
    DIA_BORIS_IHAVEWEAPON_CROSSBOW();
    B_GIVEINVITEMS(OTHER, SELF, 0x9b23, 1);
}

var int IHAVEWEAPON_BOW_COUNT = 0;
var int IHAVEWEAPON_BOW_ITRW_BOW_01 = 0;
var int IHAVEWEAPON_BOW_ITRW_BOW_09 = 0;
var int IHAVEWEAPON_BOW_ITRW_BOW_05 = 0;
var int IHAVEWEAPON_BOW_ITRW_BOW_M_01 = 0;
var int IHAVEWEAPON_BOW_ITRW_BOW_04 = 0;
var int IHAVEWEAPON_BOW_ITRW_BOW_07 = 0;
var int IHAVEWEAPON_BOW_ITRW_BOW_02 = 0;
var int IHAVEWEAPON_BOW_ITRW_BOW_08 = 0;
var int IHAVEWEAPON_BOW_ITRW_ADDON_FIREBOW = 0;
var int IHAVEWEAPON_BOW_ITRW_BOW_M_04 = 0;
var int IHAVEWEAPON_BOW_ITRW_BOW_06 = 0;
var int IHAVEWEAPON_BOW_ITRW_BOW_H_01 = 0;
var int IHAVEWEAPON_BOW_ITRW_BOW_H_02 = 0;
var int IHAVEWEAPON_BOW_ITRW_BOW_H_04 = 0;
var int IHAVEWEAPON_BOW_ITRW_ADDON_MAGICBOW = 0;
func void DIA_BORIS_IHAVEWEAPON_BOW() {
    INFO_CLEARCHOICES(0x1239e);
    if (((NPC_HASITEMS(OTHER, 0x9b40)) >= (1)) && ((IHAVEWEAPON_BOW_ITRW_BOW_01) == (FALSE))) {
        INFO_ADDCHOICE(0x1239e, NAMEWEAPON_BOW_01, 0x123d0);
    };
    if (((NPC_HASITEMS(OTHER, 0x9b52)) >= (1)) && ((IHAVEWEAPON_BOW_ITRW_BOW_09) == (FALSE))) {
        INFO_ADDCHOICE(0x1239e, NAMEWEAPON_BOW_09, 0x123d1);
    };
    if (((NPC_HASITEMS(OTHER, 0x9b49)) >= (1)) && ((IHAVEWEAPON_BOW_ITRW_BOW_05) == (FALSE))) {
        INFO_ADDCHOICE(0x1239e, NAMEWEAPON_BOW_05, 0x123d2);
    };
    if (((NPC_HASITEMS(OTHER, 0x865c)) >= (1)) && ((IHAVEWEAPON_BOW_ITRW_BOW_M_01) == (FALSE))) {
        INFO_ADDCHOICE(0x1239e, NAMEWEAPON_BOW_M_01, 0x123d3);
    };
    if (((NPC_HASITEMS(OTHER, 0x9b48)) >= (1)) && ((IHAVEWEAPON_BOW_ITRW_BOW_04) == (FALSE))) {
        INFO_ADDCHOICE(0x1239e, NAMEWEAPON_BOW_04, 0x123d4);
    };
    if (((NPC_HASITEMS(OTHER, 0x9b4d)) >= (1)) && ((IHAVEWEAPON_BOW_ITRW_BOW_07) == (FALSE))) {
        INFO_ADDCHOICE(0x1239e, NAMEWEAPON_BOW_07, 0x123d5);
    };
    if (((NPC_HASITEMS(OTHER, 0x9b43)) >= (1)) && ((IHAVEWEAPON_BOW_ITRW_BOW_02) == (FALSE))) {
        INFO_ADDCHOICE(0x1239e, NAMEWEAPON_BOW_02, 0x123d6);
    };
    if (((NPC_HASITEMS(OTHER, 0x9b4e)) >= (1)) && ((IHAVEWEAPON_BOW_ITRW_BOW_08) == (FALSE))) {
        INFO_ADDCHOICE(0x1239e, NAMEWEAPON_BOW_08, 0x123d7);
    };
    if (((NPC_HASITEMS(OTHER, 0x83d4)) >= (1)) && ((IHAVEWEAPON_BOW_ITRW_ADDON_FIREBOW) == (FALSE))) {
        INFO_ADDCHOICE(0x1239e, NAMEWEAPON_ADDON_FIREBOW, 0x123d8);
    };
    if (((NPC_HASITEMS(OTHER, 0x8660)) >= (1)) && ((IHAVEWEAPON_BOW_ITRW_BOW_M_04) == (FALSE))) {
        INFO_ADDCHOICE(0x1239e, NAMEWEAPON_BOW_M_04, 0x123d9);
    };
    if (((NPC_HASITEMS(OTHER, 0x9b4b)) >= (1)) && ((IHAVEWEAPON_BOW_ITRW_BOW_06) == (FALSE))) {
        INFO_ADDCHOICE(0x1239e, NAMEWEAPON_BOW_06, 0x123da);
    };
    if (((NPC_HASITEMS(OTHER, 0x8662)) >= (1)) && ((IHAVEWEAPON_BOW_ITRW_BOW_H_01) == (FALSE))) {
        INFO_ADDCHOICE(0x1239e, NAMEWEAPON_BOW_H_01, 0x123db);
    };
    if (((NPC_HASITEMS(OTHER, 0x8665)) >= (1)) && ((IHAVEWEAPON_BOW_ITRW_BOW_H_02) == (FALSE))) {
        INFO_ADDCHOICE(0x1239e, NAMEWEAPON_BOW_H_02, 0x123dc);
    };
    if (((NPC_HASITEMS(OTHER, 0x8669)) >= (1)) && ((IHAVEWEAPON_BOW_ITRW_BOW_H_04) == (FALSE))) {
        INFO_ADDCHOICE(0x1239e, NAMEWEAPON_BOW_H_04, 0x123dd);
    };
    if (((NPC_HASITEMS(OTHER, 0x83d3)) >= (1)) && ((IHAVEWEAPON_BOW_ITRW_ADDON_MAGICBOW) == (FALSE))) {
        INFO_ADDCHOICE(0x1239e, NAMEWEAPON_ADDON_MAGICBOW, 0x123de);
    };
    INFO_ADDCHOICE(0x1239e, DIALOG_BACK, 0x123a0);
}

func void DIA_BORIS_IHAVEWEAPON_BOW_COMMENT() {
    IHAVEWEAPON_BOW_COUNT = (IHAVEWEAPON_BOW_COUNT) + (1);
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_IHaveWeapon_03_04");
    AI_RESETFACEANI(SELF);
}

func void DIA_BORIS_IHAVEWEAPON_BOW_ITRW_BOW_01() {
    DIA_BORIS_IHAVEWEAPON_BOW_COMMENT();
    IHAVEWEAPON_BOW_ITRW_BOW_01 = TRUE;
    NPC_REMOVEINVITEM(SELF, 0x9b40);
    CREATEINVITEMS(SELF, 0x859b, (VALUE_BOW_01) / (2));
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, (VALUE_BOW_01) / (2));
    DIA_BORIS_IHAVEWEAPON_BOW();
    B_GIVEINVITEMS(OTHER, SELF, 0x9b40, 1);
}

func void DIA_BORIS_IHAVEWEAPON_BOW_ITRW_BOW_09() {
    DIA_BORIS_IHAVEWEAPON_BOW_COMMENT();
    IHAVEWEAPON_BOW_ITRW_BOW_09 = TRUE;
    NPC_REMOVEINVITEM(SELF, 0x9b52);
    CREATEINVITEMS(SELF, 0x859b, (VALUE_BOW_09) / (2));
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, (VALUE_BOW_09) / (2));
    DIA_BORIS_IHAVEWEAPON_BOW();
    B_GIVEINVITEMS(OTHER, SELF, 0x9b52, 1);
}

func void DIA_BORIS_IHAVEWEAPON_BOW_ITRW_BOW_05() {
    DIA_BORIS_IHAVEWEAPON_BOW_COMMENT();
    IHAVEWEAPON_BOW_ITRW_BOW_05 = TRUE;
    NPC_REMOVEINVITEM(SELF, 0x9b49);
    CREATEINVITEMS(SELF, 0x859b, (VALUE_BOW_05) / (2));
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, (VALUE_BOW_05) / (2));
    DIA_BORIS_IHAVEWEAPON_BOW();
    B_GIVEINVITEMS(OTHER, SELF, 0x9b49, 1);
}

func void DIA_BORIS_IHAVEWEAPON_BOW_ITRW_BOW_M_01() {
    DIA_BORIS_IHAVEWEAPON_BOW_COMMENT();
    IHAVEWEAPON_BOW_ITRW_BOW_M_01 = TRUE;
    NPC_REMOVEINVITEM(SELF, 0x865c);
    CREATEINVITEMS(SELF, 0x859b, (VALUE_KOMPOSITBOGEN) / (2));
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, (VALUE_KOMPOSITBOGEN) / (2));
    DIA_BORIS_IHAVEWEAPON_BOW();
    B_GIVEINVITEMS(OTHER, SELF, 0x865c, 1);
}

func void DIA_BORIS_IHAVEWEAPON_BOW_ITRW_BOW_04() {
    DIA_BORIS_IHAVEWEAPON_BOW_COMMENT();
    IHAVEWEAPON_BOW_ITRW_BOW_04 = TRUE;
    NPC_REMOVEINVITEM(SELF, 0x9b48);
    CREATEINVITEMS(SELF, 0x859b, (VALUE_BOW_04) / (2));
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, (VALUE_BOW_04) / (2));
    DIA_BORIS_IHAVEWEAPON_BOW();
    B_GIVEINVITEMS(OTHER, SELF, 0x9b48, 1);
}

func void DIA_BORIS_IHAVEWEAPON_BOW_ITRW_BOW_07() {
    DIA_BORIS_IHAVEWEAPON_BOW_COMMENT();
    IHAVEWEAPON_BOW_ITRW_BOW_07 = TRUE;
    NPC_REMOVEINVITEM(SELF, 0x9b4d);
    CREATEINVITEMS(SELF, 0x859b, (VALUE_BOW_07) / (2));
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, (VALUE_BOW_07) / (2));
    DIA_BORIS_IHAVEWEAPON_BOW();
    B_GIVEINVITEMS(OTHER, SELF, 0x9b4d, 1);
}

func void DIA_BORIS_IHAVEWEAPON_BOW_ITRW_BOW_02() {
    DIA_BORIS_IHAVEWEAPON_BOW_COMMENT();
    IHAVEWEAPON_BOW_ITRW_BOW_02 = TRUE;
    NPC_REMOVEINVITEM(SELF, 0x9b43);
    CREATEINVITEMS(SELF, 0x859b, (VALUE_BOW_02) / (2));
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, (VALUE_BOW_02) / (2));
    DIA_BORIS_IHAVEWEAPON_BOW();
    B_GIVEINVITEMS(OTHER, SELF, 0x9b43, 1);
}

func void DIA_BORIS_IHAVEWEAPON_BOW_ITRW_BOW_08() {
    DIA_BORIS_IHAVEWEAPON_BOW_COMMENT();
    IHAVEWEAPON_BOW_ITRW_BOW_08 = TRUE;
    NPC_REMOVEINVITEM(SELF, 0x9b4e);
    CREATEINVITEMS(SELF, 0x859b, (VALUE_BOW_08) / (2));
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, (VALUE_BOW_08) / (2));
    DIA_BORIS_IHAVEWEAPON_BOW();
    B_GIVEINVITEMS(OTHER, SELF, 0x9b4e, 1);
}

func void DIA_BORIS_IHAVEWEAPON_BOW_ITRW_ADDON_FIREBOW() {
    DIA_BORIS_IHAVEWEAPON_BOW_COMMENT();
    IHAVEWEAPON_BOW_ITRW_ADDON_FIREBOW = TRUE;
    NPC_REMOVEINVITEM(SELF, 0x83d4);
    CREATEINVITEMS(SELF, 0x859b, (VALUE_FIREBOW) / (2));
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, (VALUE_FIREBOW) / (2));
    DIA_BORIS_IHAVEWEAPON_BOW();
    B_GIVEINVITEMS(OTHER, SELF, 0x83d4, 1);
}

func void DIA_BORIS_IHAVEWEAPON_BOW_ITRW_BOW_M_04() {
    DIA_BORIS_IHAVEWEAPON_BOW_COMMENT();
    IHAVEWEAPON_BOW_ITRW_BOW_M_04 = TRUE;
    NPC_REMOVEINVITEM(SELF, 0x8660);
    CREATEINVITEMS(SELF, 0x859b, (VALUE_BUCHENBOGEN) / (2));
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, (VALUE_BUCHENBOGEN) / (2));
    DIA_BORIS_IHAVEWEAPON_BOW();
    B_GIVEINVITEMS(OTHER, SELF, 0x8660, 1);
}

func void DIA_BORIS_IHAVEWEAPON_BOW_ITRW_BOW_06() {
    DIA_BORIS_IHAVEWEAPON_BOW_COMMENT();
    IHAVEWEAPON_BOW_ITRW_BOW_06 = TRUE;
    NPC_REMOVEINVITEM(SELF, 0x9b4b);
    CREATEINVITEMS(SELF, 0x859b, (VALUE_BOW_06) / (2));
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, (VALUE_BOW_06) / (2));
    DIA_BORIS_IHAVEWEAPON_BOW();
    B_GIVEINVITEMS(OTHER, SELF, 0x9b4b, 1);
}

func void DIA_BORIS_IHAVEWEAPON_BOW_ITRW_BOW_H_01() {
    DIA_BORIS_IHAVEWEAPON_BOW_COMMENT();
    IHAVEWEAPON_BOW_ITRW_BOW_H_01 = TRUE;
    NPC_REMOVEINVITEM(SELF, 0x8662);
    CREATEINVITEMS(SELF, 0x859b, (VALUE_KNOCHENBOGEN) / (2));
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, (VALUE_KNOCHENBOGEN) / (2));
    DIA_BORIS_IHAVEWEAPON_BOW();
    B_GIVEINVITEMS(OTHER, SELF, 0x8662, 1);
}

func void DIA_BORIS_IHAVEWEAPON_BOW_ITRW_BOW_H_02() {
    DIA_BORIS_IHAVEWEAPON_BOW_COMMENT();
    IHAVEWEAPON_BOW_ITRW_BOW_H_02 = TRUE;
    NPC_REMOVEINVITEM(SELF, 0x8665);
    CREATEINVITEMS(SELF, 0x859b, (VALUE_EICHENBOGEN) / (2));
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, (VALUE_EICHENBOGEN) / (2));
    DIA_BORIS_IHAVEWEAPON_BOW();
    B_GIVEINVITEMS(OTHER, SELF, 0x8665, 1);
}

func void DIA_BORIS_IHAVEWEAPON_BOW_ITRW_BOW_H_04() {
    DIA_BORIS_IHAVEWEAPON_BOW_COMMENT();
    IHAVEWEAPON_BOW_ITRW_BOW_H_04 = TRUE;
    NPC_REMOVEINVITEM(SELF, 0x8669);
    CREATEINVITEMS(SELF, 0x859b, (VALUE_DRACHENBOGEN) / (2));
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, (VALUE_DRACHENBOGEN) / (2));
    DIA_BORIS_IHAVEWEAPON_BOW();
    B_GIVEINVITEMS(OTHER, SELF, 0x8669, 1);
}

func void DIA_BORIS_IHAVEWEAPON_BOW_ITRW_ADDON_MAGICBOW() {
    DIA_BORIS_IHAVEWEAPON_BOW_COMMENT();
    IHAVEWEAPON_BOW_ITRW_ADDON_MAGICBOW = TRUE;
    NPC_REMOVEINVITEM(SELF, 0x83d3);
    CREATEINVITEMS(SELF, 0x859b, (VALUE_MAGICBOW) / (2));
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, (VALUE_MAGICBOW) / (2));
    DIA_BORIS_IHAVEWEAPON_BOW();
    B_GIVEINVITEMS(OTHER, SELF, 0x83d3, 1);
}

instance DIA_BORIS_FINALPRESENT(C_INFO) {
    NPC = 0xcd0f;
    NR = 1;
    CONDITION = DIA_BORIS_FINALPRESENT_CONDITION;
    INFORMATION = DIA_BORIS_FINALPRESENT_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_BORIS_FINALPRESENT_CONDITION() {
    if ((((KAPITEL) >= (5)) && ((PEON_WHOFIRSTPEON) == (4))) && ((BORIS_FINISHPEON) == (TRUE))) {
        if (((IHAVEWEAPON_BOW_COUNT) >= (2)) && ((IHAVEWEAPON_CROSSBOW_COUNT) >= (2))) {
            if ((BORIS_FINISHPEON_DAY) <= ((WLD_GETDAY()) - (1))) {
                return TRUE;
            };
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_BORIS_FINALPRESENT_INFO() {
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_FinalPresent_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_FinalPresent_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_FinalPresent_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Boris_FinalPresent_03_04");
    AI_RESETFACEANI(SELF);
    if ((HERO.HITCHANCE[3]) >= (HERO.HITCHANCE[4])) {
        CREATEINVITEMS(VLK_3023_BORIS, 0x943d, 1);
    };
    if ((HERO.HITCHANCE[4]) > (HERO.HITCHANCE[3])) {
        CREATEINVITEMS(VLK_3023_BORIS, 0x941d, 1);
        B_GIVEINVITEMS(VLK_3023_BORIS, HERO, 0x941d, 1);
    };
}

instance DIA_BORIS_PICKPOCKET(C_INFO) {
    NPC = 0xcd0f;
    NR = 900;
    CONDITION = DIA_BORIS_PICKPOCKET_CONDITION;
    INFORMATION = DIA_BORIS_PICKPOCKET_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = PICKPOCKET_120_FEMALE;
}

func int DIA_BORIS_PICKPOCKET_CONDITION() {
    if (((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) && ((SELF.AIVAR[6]) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BORIS_PICKPOCKET_INFO() {
    INFO_CLEARCHOICES(0x123e2);
    INFO_ADDCHOICE(0x123e2, DIALOG_BACK, 0x123e6);
    INFO_ADDCHOICE(0x123e2, DIALOG_PICKPOCKET, 0x123e5);
}

func void DIA_BORIS_PICKPOCKET_DOIT() {
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (3)) {
        CREATEINVITEMS(SELF, 0x8c8e, 2);
        B_GIVEINVITEMS(SELF, OTHER, 0x8c8e, 2);
        B_PICKPOCKET_AMBIENT_TIER_3();
        SELF.AIVAR[6] = TRUE;
        INFO_CLEARCHOICES(0x123e2);
    };
    AI_PLAYANI(HERO, T_CANNOTTAKE);
    PRINTSCREEN(PRINT_CANTPICKPOCKETTHISPERSON, -(1), -(1), FONT_SCREEN, 4);
    INFO_CLEARCHOICES(0x123e2);
}

func void DIA_BORIS_PICKPOCKET_BACK() {
    INFO_CLEARCHOICES(0x123e2);
}

