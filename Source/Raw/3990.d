instance DIA_INSTRUCTOR_EXIT(C_INFO) {
    NPC = 0xcede;
    NR = 999;
    CONDITION = DIA_INSTRUCTOR_EXIT_CONDITION;
    INFORMATION = DIA_INSTRUCTOR_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_INSTRUCTOR_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_INSTRUCTOR_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_INSTRUCTOR_FMQ001_HELLO(C_INFO) {
    NPC = 0xcede;
    NR = 1;
    CONDITION = DIA_INSTRUCTOR_FMQ001_HELLO_CONDITION;
    INFORMATION = DIA_INSTRUCTOR_FMQ001_HELLO_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_INSTRUCTOR_FMQ001_HELLO_CONDITION() {
    if ((LOG_GETSTATUS(MIS_FMQ001)) == (LOG_RUNNING)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_INSTRUCTOR_FMQ001_HELLO_INFO() {
    FMQ001_BLOCKDIALOGUE = FALSE;
    TELEPORTNPCTOWP(0xce96, MIL_4040_RECRUIT.WP);
    TELEPORTNPCTOWP(0xceaf, MIL_4041_RECRUIT.WP);
    TELEPORTNPCTOWP(0xcec5, MIL_4042_RECRUIT.WP);
    MIL_4040_RECRUIT.AIVAR[15] = TRUE;
    MIL_4041_RECRUIT.AIVAR[15] = TRUE;
    MIL_4042_RECRUIT.AIVAR[15] = TRUE;
    MIL_4043_INSTRUCTOR.AIVAR[15] = TRUE;
    AI_OUTPUT(SELF, OTHER, "DIA_Instructor_FMQ001_HELLO_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Instructor_FMQ001_HELLO_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Instructor_FMQ001_HELLO_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Instructor_FMQ001_HELLO_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Instructor_FMQ001_HELLO_03_05");
    AI_STOPPROCESSINFOS(SELF);
    AI_FUNCTION(SELF, 0xf545);
    NPC_EXCHANGEROUTINE(MIL_4043_INSTRUCTOR, "Run");
    AI_LOGENTRY(TOPIC_FMQ001, LOG_FMQ001_INSTRUCTOR_RUN);
}

instance DIA_INSTRUCTOR_FMQ001_TARGET(C_INFO) {
    NPC = 0xcede;
    NR = 2;
    CONDITION = DIA_INSTRUCTOR_FMQ001_TARGET_CONDITION;
    INFORMATION = DIA_INSTRUCTOR_FMQ001_TARGET_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_INSTRUCTOR_FMQ001_TARGET_CONDITION() {
    if ((LOG_GETSTATUS(MIS_FMQ001)) == (LOG_RUNNING)) {
        if (((FMQ001_INSTRUCTORREADYFORACTION) == (TRUE)) && ((NPC_GETDISTTOWP(SELF, "PART3_INSTRUCTOR_WAIT")) <= (500))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void FMQ001_SHOTTHEAPPLE() {
    FMQ001_INSTRUCTORRUN = 0;
    FMQ001_RUNNINGTOTREE = FALSE;
    AI_FUNCTION(SELF, 0xf546);
    AI_OUTPUT(SELF, OTHER, "DIA_Instructor_FMQ001_Target_Silence_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Instructor_FMQ001_Target_Silence_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Instructor_FMQ001_Target_Silence_03_03");
    AI_WAITTILLEND(SELF, OTHER);
    AI_TURNAWAY(SELF, OTHER);
    AI_OUTPUT(SELF, OTHER, "DIA_Instructor_FMQ001_Target_Silence_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Instructor_FMQ001_Target_Silence_03_05");
    AI_WAITTILLEND(SELF, OTHER);
    AI_TURNTONPC(SELF, OTHER);
    AI_OUTPUT(SELF, OTHER, "DIA_Instructor_FMQ001_Target_Silence_03_06");
    if ((NPC_HASRANGEDWEAPONWITHAMMO(HERO)) == (FALSE)) {
        AI_TURNTONPC(SELF, HERO);
        B_SAY(SELF, OTHER, "$REWARD_CALM");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Instructor_FMQ001_Target_Silence_03_08");
    OTHER.AIVAR[95] = TRUE;
    OTHER.AIVAR[94] = TRUE;
    FMQ001_CHECKMARVINCHEAT = TRUE;
    AI_STOPPROCESSINFOS(SELF);
    AI_LOGENTRY(TOPIC_FMQ001, LOG_FMQ001_INSTRUCTOR_SHOOTTHEAPPLE);
    INFO_CLEARCHOICES(0x12e1b);
    AI_FUNCTION(SELF, 0xf547);
}

func void DIA_INSTRUCTOR_FMQ001_TARGET_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Instructor_FMQ001_Target_03_01");
    INFO_CLEARCHOICES(0x12e1b);
    INFO_ADDCHOICE(0x12e1b, "Why are we stopping?", 0x12e1f);
    INFO_ADDCHOICE(0x12e1b, "(Be silent)", 0x12e20);
}

func void DIA_INSTRUCTOR_FMQ001_TARGET_WAIT() {
    AI_OUTPUT(OTHER, SELF, "DIA_Instructor_FMQ001_Target_Wait_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Instructor_FMQ001_Target_Wait_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Instructor_FMQ001_Target_Wait_03_03");
    FMQ001_SHOTTHEAPPLE();
}

func void DIA_INSTRUCTOR_FMQ001_TARGET_SILENCE() {
    FMQ001_SHOTTHEAPPLE();
}

instance DIA_INSTRUCTOR_FMQ001_APPLERESULT(C_INFO) {
    NPC = 0xcede;
    NR = 3;
    CONDITION = DIA_INSTRUCTOR_FMQ001_APPLERESULT_CONDITION;
    INFORMATION = DIA_INSTRUCTOR_FMQ001_APPLERESULT_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_INSTRUCTOR_FMQ001_APPLERESULT_CONDITION() {
    if ((LOG_GETSTATUS(MIS_FMQ001)) == (LOG_RUNNING)) {
        if (((FMQ001_APPLESTATUS) == (1)) || ((FMQ001_APPLESTATUS) == (2))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_INSTRUCTOR_FMQ001_NEXTQUEST() {
    AI_OUTPUT(SELF, OTHER, "DIA_Instructor_FMQ001_AppleResult_03_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Instructor_FMQ001_AppleResult_03_07");
    AI_OUTPUT(SELF, OTHER, "DIA_Instructor_FMQ001_AppleResult_03_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Instructor_FMQ001_AppleResult_03_09");
    AI_OUTPUT(SELF, OTHER, "DIA_Instructor_FMQ001_AppleResult_03_10");
    AI_LOGENTRY(TOPIC_FMQ001, LOG_FMQ001_INSTRUCTOR_FINALJOB);
    INFO_CLEARCHOICES(0x12e21);
    INFO_ADDCHOICE(0x12e21, "I wanted to ask you...", 0x12e25);
    INFO_ADDCHOICE(0x12e21, "(Be silent)", 0x12e24);
    INFO_CLEARCHOICES(0x12e27);
    INFO_ADDCHOICE(0x12e27, "I wanted to ask you...", 0x12e25);
    INFO_ADDCHOICE(0x12e27, "(Be silent)", 0x12e24);
}

func void DIA_INSTRUCTOR_FMQ001_APPLERESULT_SILENCE() {
    AI_OUTPUT(SELF, OTHER, "DIA_Instructor_FMQ001_AppleResult_Silence_03_01");
    FMQ001_STARTKANSAIDRIFTO = TRUE;
    INFO_CLEARCHOICES(0x12e21);
    INFO_CLEARCHOICES(0x12e27);
    AI_STOPPROCESSINFOS(SELF);
    NPC_EXCHANGEROUTINE(SELF, TOT);
    AI_FUNCTION(SELF, 0xf548);
}

func void DIA_INSTRUCTOR_FMQ001_APPLERESULT_QUESTION() {
    AI_OUTPUT(OTHER, SELF, "DIA_Instructor_FMQ001_AppleResult_Question_15_01");
    DIA_INSTRUCTOR_FMQ001_APPLERESULT_SILENCE();
}

func void DIA_INSTRUCTOR_FMQ001_APPLERESULT_INFO() {
    if ((FMQ001_APPLESTATUS) == (1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Instructor_FMQ001_AppleResult_03_01");
        AI_OUTPUT(SELF, OTHER, "DIA_Instructor_FMQ001_AppleResult_03_02");
        DIA_INSTRUCTOR_FMQ001_NEXTQUEST();
    };
    if ((FMQ001_APPLESTATUS) == (2)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Instructor_FMQ001_AppleResult_03_03");
        AI_OUTPUT(SELF, OTHER, "DIA_Instructor_FMQ001_AppleResult_03_04");
        AI_OUTPUT(SELF, OTHER, "DIA_Instructor_FMQ001_AppleResult_03_05");
        DIA_INSTRUCTOR_FMQ001_NEXTQUEST();
    };
}

instance DIA_INSTRUCTOR_FMQ001_CHEATER(C_INFO) {
    NPC = 0xcede;
    NR = 4;
    CONDITION = DIA_INSTRUCTOR_FMQ001_CHEATER_CONDITION;
    INFORMATION = DIA_INSTRUCTOR_FMQ001_CHEATER_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_INSTRUCTOR_FMQ001_CHEATER_CONDITION() {
    if ((LOG_GETSTATUS(MIS_FMQ001)) == (LOG_RUNNING)) {
        if ((((NPC_GETDISTTOWP(SELF, "RECRUIT_CHECK_02")) <= (250)) && ((FMQ001_APPLESTATUS) != (1))) && ((FMQ001_APPLESTATUS) != (2))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_INSTRUCTOR_FMQ001_CHEATER_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Instructor_FMQ001_Cheater_03_01");
    AI_LOGENTRY(TOPIC_FMQ001, LOG_FMQ001_INSTRUCTOR_SHOOTFAILED);
    FMQ001_CHECKMARVINCHEAT = FALSE;
    FMQ001_REFRESHRECRUITSAFTERSHOOTING();
    DIA_INSTRUCTOR_FMQ001_NEXTQUEST();
}

