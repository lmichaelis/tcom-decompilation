instance DIA_FORAL_EXIT(C_INFO) {
    NPC = 0xe382;
    NR = 999;
    CONDITION = DIA_FORAL_EXIT_CONDITION;
    INFORMATION = DIA_FORAL_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_FORAL_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_FORAL_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_FORAL_FROMCITY(C_INFO) {
    NPC = 0xe382;
    NR = 1;
    CONDITION = DIA_FORAL_FROMCITY_CONDITION;
    INFORMATION = DIA_FORAL_FROMCITY_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "You don't look like one of the locals.";
}

func int DIA_FORAL_FROMCITY_CONDITION() {
    return TRUE;
}

func void DIA_FORAL_FROMCITY_INFO() {
    AI_STARTFACEANI(OTHER, S_THINK, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Foral_FromCity_15_01");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Foral_FromCity_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Foral_FromCity_03_03");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

instance DIA_FORAL_CANYOUTEACH(C_INFO) {
    NPC = 0xe382;
    NR = 1;
    CONDITION = DIA_FORAL_CANYOUTEACH_CONDITION;
    INFORMATION = DIA_FORAL_CANYOUTEACH_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Can you teach me something?";
}

func int DIA_FORAL_CANYOUTEACH_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x13d40)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_FORAL_CANYOUTEACH_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    B_SAY(OTHER, SELF, "$MARVIN_CanYouTeachMe");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Foral_CanYouTeach_03_02");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    LOG_CREATETOPIC(TOPIC_WOLFSDENTEACHER, LOG_NOTE);
    AI_LOGENTRY(TOPIC_WOLFSDENTEACHER, LOG_WOLFSDEN_FORAL);
}

instance DIA_FORAL_TEACH(C_INFO) {
    NPC = 0xe382;
    NR = 100;
    CONDITION = DIA_FORAL_TEACH_CONDITION;
    INFORMATION = DIA_FORAL_TEACH_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Teach me.";
}

var int FORAL_CANTEACHYOU = 0;
func int DIA_FORAL_TEACH_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 0x13d43)) && ((FORAL_CANTEACHYOU) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_FORAL_TEACH_CHOICES() {
    INFO_CLEARCHOICES(0x13d46);
    INFO_ADDCHOICE(0x13d46, DIALOG_BACK, 0x13d4d);
    if ((HERO_HACKCHANCE) <= (65)) {
        INFO_ADDCHOICE(0x13d46, B_BUILDLEARNSTRING2(PRINT_LEARN_MINE5, 0, FORAL_PAYMENT2), 0x13d4f);
    };
    if ((HERO_HACKCHANCE) <= (69)) {
        INFO_ADDCHOICE(0x13d46, B_BUILDLEARNSTRING2(PRINT_LEARN_MINE1, 0, FORAL_PAYMENT1), 0x13d4e);
    };
}

func void DIA_FORAL_TEACH_CHECKLEVEL() {
    if ((HERO_HACKCHANCE) >= (70)) {
        FORAL_CANTEACHYOU = TRUE;
        B_SAY(SELF, OTHER, "$NoLearnYoureBetter");
        INFO_CLEARCHOICES(0x13d46);
    };
    DIA_FORAL_TEACH_CHOICES();
}

var string FORAL_PRINTS = "";
func void DIA_FORAL_TEACH_INFO() {
    B_SAY(OTHER, SELF, "$MARVIN_TeachMe");
    DIA_FORAL_TEACH_CHOICES();
}

func void DIA_FORAL_TEACH_BACK() {
    INFO_CLEARCHOICES(0x13d46);
}

func void DIA_FORAL_TEACH_1POINTS() {
    if ((HERO_HACKCHANCE) == (100)) {
        B_SAY(SELF, OTHER, "$NoLearnOverPersonalMAX");
    };
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (FORAL_PAYMENT1)) {
        if ((HERO_HACKCHANCE) < (100)) {
            B_UPGRADE_HERO_HACKCHANCE(1);
        };
    };
    B_SAY(SELF, OTHER, "$NOGOLD");
    FORAL_PRINTS = CONCATSTRINGS(PRINT_RGOLD, INTTOSTRING(FORAL_PAYMENT1));
    PRINTSCREEN(FORAL_PRINTS, -(1), -(1), FONT_SCREEN, 2);
    DIA_FORAL_TEACH_CHECKLEVEL();
}

func void DIA_FORAL_TEACH_5POINTS() {
    if ((HERO_HACKCHANCE) == (100)) {
        B_SAY(SELF, OTHER, "$NoLearnOverPersonalMAX");
    };
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (FORAL_PAYMENT2)) {
        if ((HERO_HACKCHANCE) < (95)) {
            B_UPGRADE_HERO_HACKCHANCE(5);
        } else {
            B_UPGRADE_HERO_HACKCHANCE((100) - (HERO_HACKCHANCE));
        } else {
            /* set_instance(0) */;
        };
    };
    B_SAY(SELF, OTHER, "$NOGOLD");
    FORAL_PRINTS = CONCATSTRINGS(PRINT_RGOLD, INTTOSTRING(FORAL_PAYMENT2));
    PRINTSCREEN(FORAL_PRINTS, -(1), -(1), FONT_SCREEN, 2);
    DIA_FORAL_TEACH_CHECKLEVEL();
}

instance DIA_FORAL_DACK(C_INFO) {
    NPC = 0xe382;
    NR = 1;
    CONDITION = DIA_FORAL_DACK_CONDITION;
    INFORMATION = DIA_FORAL_DACK_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I met your father, Dack.";
}

func int DIA_FORAL_DACK_CONDITION() {
    if (((DACK_WANTTOSEESON) == (TRUE)) && (NPC_KNOWSINFO(OTHER, 0x13d40))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_FORAL_DACK_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Foral_Dack_15_01");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Foral_Dack_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Foral_Dack_15_03");
    AI_STARTFACEANI(SELF, S_SURPRISE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Foral_Dack_03_04");
    AI_STARTFACEANI(SELF, S_THINK, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Foral_Dack_03_05");
    AI_RESETFACEANI(SELF);
    B_GIVEPLAYERXP(XP_FORALISFINE);
}

instance DIA_FORAL_PICKPOCKET(C_INFO) {
    NPC = 0xe382;
    NR = 900;
    CONDITION = DIA_FORAL_PICKPOCKET_CONDITION;
    INFORMATION = DIA_FORAL_PICKPOCKET_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = PICKPOCKET_80;
}

func int DIA_FORAL_PICKPOCKET_CONDITION() {
    if (((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) && ((SELF.AIVAR[6]) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_FORAL_PICKPOCKET_INFO() {
    INFO_CLEARCHOICES(0x13d53);
    INFO_ADDCHOICE(0x13d53, DIALOG_BACK, 0x13d57);
    INFO_ADDCHOICE(0x13d53, DIALOG_PICKPOCKET, 0x13d56);
}

func void DIA_FORAL_PICKPOCKET_DOIT() {
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (2)) {
        B_PICKPOCKET_AMBIENT_TIER_2();
        SELF.AIVAR[6] = TRUE;
        INFO_CLEARCHOICES(0x13d53);
    };
    AI_PLAYANI(HERO, T_CANNOTTAKE);
    PRINTSCREEN(PRINT_CANTPICKPOCKETTHISPERSON, -(1), -(1), FONT_SCREEN, 4);
    INFO_CLEARCHOICES(0x13d53);
}

func void DIA_FORAL_PICKPOCKET_BACK() {
    INFO_CLEARCHOICES(0x13d53);
}

