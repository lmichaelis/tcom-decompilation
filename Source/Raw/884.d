func void SCROLL_WRITING_S1() {
    HER = HLP_GETNPC(0xc3ab);
    if ((HLP_GETINSTANCEID(SELF)) == (HLP_GETINSTANCEID(HER))) {
        SELF.AIVAR[4] = TRUE;
        PLAYER_MOBSI_PRODUCTION = MOBSI_SCROLL_WRITING;
        AI_PROCESSINFOS(HER);
    };
}

instance SCROLL_WRITING_S1.HER(C_NPC)
const int SCROLLWRITING_MODE = 0;
const int SCROLL_WRITING_INFO = -1;
const int SCROLL_WRITING_INSTANCE = -1;
func void PC_SCROLL_WRITING_AMOUNTCHOICES() {
    INFO_CLEARCHOICES(SCROLL_WRITING_INFO);
    MAX = PC_CRAFTRECIPEITEM_MAX(SCROLL_WRITING_INSTANCE);
    if ((MAX) > (0)) {
        ALL_STRING = CS4(DIALOG_ALL, " (", I2S(MAX), ")");
        INFO_ADDCHOICE(SCROLL_WRITING_INFO, ALL_STRING, 0xbab1);
        if ((MAX) > (9)) {
            INFO_ADDCHOICE(SCROLL_WRITING_INFO, CHOICE_NUMBER_10, 0xbab3);
        };
        if ((MAX) > (4)) {
            INFO_ADDCHOICE(SCROLL_WRITING_INFO, CHOICE_NUMBER_5, 0xbab4);
        };
        INFO_ADDCHOICE(SCROLL_WRITING_INFO, CHOICE_NUMBER_1, 0xbab5);
        INFO_ADDCHOICE(SCROLL_WRITING_INFO, DIALOG_BACK, 0xbab0);
    };
    SCROLL_WRITING_INSTANCE = -(1);
}

var int PC_SCROLL_WRITING_AMOUNTCHOICES.MAX = 0;
var string PC_SCROLL_WRITING_AMOUNTCHOICES.ALL_STRING = "";
func void PC_SCROLL_WRITING_CHECKAMOUNTCHOICES() {
    if ((PC_CRAFTRECIPEITEM_MAX(SCROLL_WRITING_INSTANCE)) > (0)) {
        PC_SCROLL_WRITING_AMOUNTCHOICES();
    };
    SCROLL_WRITING_INSTANCE = -(1);
    PRINTS_EXT(PRINT_PRODITEMSMISSING, RGBA(255, 50, 50, 255));
}

func void PC_SCROLL_WRITING_AMOUNTBACK() {
    INFO_CLEARCHOICES(SCROLL_WRITING_INFO);
    SCROLL_WRITING_INSTANCE = -(1);
}

func void PC_SCROLL_WRITING_AMOUNTALL() {
    MAX = PC_CRAFTRECIPEITEM_MAX(SCROLL_WRITING_INSTANCE);
    PC_CRAFTRECIPEITEMS(SCROLL_WRITING_INSTANCE, MAX);
    PC_SCROLL_WRITING_AMOUNTCHOICES();
}

var int PC_SCROLL_WRITING_AMOUNTALL.MAX = 0;
func void PC_SCROLL_WRITING_AMOUNT10() {
    PC_CRAFTRECIPEITEMS(SCROLL_WRITING_INSTANCE, 10);
    PC_SCROLL_WRITING_AMOUNTCHOICES();
}

func void PC_SCROLL_WRITING_AMOUNT5() {
    PC_CRAFTRECIPEITEMS(SCROLL_WRITING_INSTANCE, 5);
    PC_SCROLL_WRITING_AMOUNTCHOICES();
}

func void PC_SCROLL_WRITING_AMOUNT1() {
    PC_CRAFTRECIPEITEMS(SCROLL_WRITING_INSTANCE, 1);
    PC_SCROLL_WRITING_AMOUNTCHOICES();
}

instance PC_SCROLL_WRITING_END(C_INFO) {
    NPC = 0xc3ab;
    NR = 999;
    CONDITION = PC_SCROLL_WRITING_END_CONDITION;
    INFORMATION = PC_SCROLL_WRITING_END_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int PC_SCROLL_WRITING_END_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_SCROLL_WRITING)) && ((SCROLLWRITING_MODE) == (0))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_SCROLL_WRITING_END_INFO() {
    AI_STOPPROCESSINFOS(SELF);
    SELF.AIVAR[4] = FALSE;
    PLAYER_MOBSI_PRODUCTION = MOBSI_NONE;
}

instance PC_SCROLL_WRITING_DEVTALENT(C_INFO) {
    NPC = 0xc3ab;
    NR = 1;
    CONDITION = PC_SCROLL_WRITING_DEVTALENT_CONDITION;
    INFORMATION = PC_SCROLL_WRITING_DEVTALENT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "DEV: Daj skilla";
}

func int PC_SCROLL_WRITING_DEVTALENT_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_SCROLL_WRITING)) && ((SCROLLWRITING_MODE) == (0))) && ((GAME_RUNTIMECONFIG) == (TARGET_DEBUG))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_SCROLL_WRITING_DEVTALENT_INFO() {
    NPC_SETTALENTSKILL(HERO, NPC_TALENT_SCROLLWRITING, 1);
}

instance PC_SCROLL_WRITING_SCROLL(C_INFO) {
    NPC = 0xc3ab;
    NR = 1;
    CONDITION = PC_SCROLL_WRITING_CONDITION;
    INFORMATION = PC_SCROLL_WRITING_SCROLL_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_REWRITESCROLL;
}

func int PC_SCROLL_WRITING_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_SCROLL_WRITING)) && ((SCROLLWRITING_MODE) == (0))) {
        if (((LOG_GETSTATUS(MIS_SQ121)) == (LOG_RUNNING)) || ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_SCROLLWRITING)) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_SCROLL_WRITING_SCROLL_INFO() {
    SCROLLWRITING_MODE = 1;
}

instance PC_SCROLL_WRITING_SCROLL_BACK(C_INFO) {
    NPC = 0xc3ab;
    NR = 1;
    CONDITION = PC_SCROLL_WRITING_SCROLL_BACK_CONDITION;
    INFORMATION = PC_SCROLL_WRITING_SCROLL_BACK_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_BACK;
}

func int PC_SCROLL_WRITING_SCROLL_BACK_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_SCROLL_WRITING)) && ((SCROLLWRITING_MODE) == (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_SCROLL_WRITING_SCROLL_BACK_INFO() {
    SCROLLWRITING_MODE = 0;
}

instance PC_ITSC_LIGHT(C_INFO) {
    NR = 0x283c;
    NPC = 0xc3ab;
    CONDITION = PC_ITSC_LIGHT_CONDITION;
    INFORMATION = PC_ITSC_LIGHT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = NAME_SPL_LIGHT;
}

func int PC_ITSC_LIGHT_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_SCROLL_WRITING)) && ((SCROLLWRITING_MODE) == (1))) && ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_SCROLLWRITING)) == (TRUE))) {
        if ((NPC_HASITEMS(SELF, 0x877e)) > (0)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITSC_LIGHT_INFO() {
    SCROLL_WRITING_INSTANCE = 0x9505;
    SCROLL_WRITING_INFO = 0xbac2;
    PC_SCROLL_WRITING_CHECKAMOUNTCHOICES();
}

instance PC_ITSC_ZAP(C_INFO) {
    NR = 0x283d;
    NPC = 0xc3ab;
    CONDITION = PC_ITSC_ZAP_CONDITION;
    INFORMATION = PC_ITSC_ZAP_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = NAME_SPL_ZAP;
}

func int PC_ITSC_ZAP_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_SCROLL_WRITING)) && ((SCROLLWRITING_MODE) == (1))) && ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_SCROLLWRITING)) == (TRUE))) {
        if ((NPC_HASITEMS(SELF, 0x8784)) > (0)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITSC_ZAP_INFO() {
    SCROLL_WRITING_INSTANCE = 0x9506;
    SCROLL_WRITING_INFO = 0xbac5;
    PC_SCROLL_WRITING_CHECKAMOUNTCHOICES();
}

instance PC_ITSC_SKULL(C_INFO) {
    NR = 0x2853;
    NPC = 0xc3ab;
    CONDITION = PC_ITSC_SKULL_CONDITION;
    INFORMATION = PC_ITSC_SKULL_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = NAME_SPL_SKULL;
}

func int PC_ITSC_SKULL_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_SCROLL_WRITING)) && ((SCROLLWRITING_MODE) == (1))) && ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_SCROLLWRITING)) == (TRUE))) {
        if ((NPC_HASITEMS(SELF, 0x952d)) > (0)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITSC_SKULL_INFO() {
    SCROLL_WRITING_INSTANCE = 0x9507;
    SCROLL_WRITING_INFO = 0xbac8;
    PC_SCROLL_WRITING_CHECKAMOUNTCHOICES();
}

instance PC_ITSC_LIGHTHEAL(C_INFO) {
    NR = 0x283e;
    NPC = 0xc3ab;
    CONDITION = PC_ITSC_LIGHTHEAL_CONDITION;
    INFORMATION = PC_ITSC_LIGHTHEAL_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = NAME_SPL_LIGHTHEAL;
}

func int PC_ITSC_LIGHTHEAL_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_SCROLL_WRITING)) && ((SCROLLWRITING_MODE) == (1))) && ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_SCROLLWRITING)) == (TRUE))) {
        if ((NPC_HASITEMS(SELF, 0x8781)) > (0)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITSC_LIGHTHEAL_INFO() {
    SCROLL_WRITING_INSTANCE = 0x9508;
    SCROLL_WRITING_INFO = 0xbacb;
    PC_SCROLL_WRITING_CHECKAMOUNTCHOICES();
}

instance PC_ITSC_ICEBOLT(C_INFO) {
    NR = 0x283f;
    NPC = 0xc3ab;
    CONDITION = PC_ITSC_ICEBOLT_CONDITION;
    INFORMATION = PC_ITSC_ICEBOLT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = NAME_SPL_ICEBOLT;
}

func int PC_ITSC_ICEBOLT_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_SCROLL_WRITING)) && ((SCROLLWRITING_MODE) == (1))) && ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_SCROLLWRITING)) == (TRUE))) {
        if ((NPC_HASITEMS(SELF, 0x8780)) > (0)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITSC_ICEBOLT_INFO() {
    SCROLL_WRITING_INSTANCE = 0x9509;
    SCROLL_WRITING_INFO = 0xbace;
    PC_SCROLL_WRITING_CHECKAMOUNTCHOICES();
}

instance PC_SCROLL_WRITING_SCROLL_SQ121_ICEBOLT(C_INFO) {
    NPC = 0xc3ab;
    NR = 0x283f;
    CONDITION = PC_SCROLL_WRITING_SCROLL_SQ121_ICEBOLT_CONDITION;
    INFORMATION = PC_SCROLL_WRITING_SCROLL_SQ121_ICEBOLT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = NAME_SPL_ICEBOLT;
}

func int PC_SCROLL_WRITING_SCROLL_SQ121_ICEBOLT_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_SCROLL_WRITING)) && ((SCROLLWRITING_MODE) == (1))) {
        if ((LOG_GETSTATUS(MIS_SQ121)) == (LOG_RUNNING)) {
            if ((((NPC_HASITEMS(SELF, 0x8780)) >= (1)) && ((SQ121_CREATESCROLLCOUNT) != (5))) && (NPC_KNOWSINFO(SELF, 0x136ed))) {
                return TRUE;
            };
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_SCROLL_WRITING_SCROLL_SQ121_ICEBOLT_INFO() {
    if (((NPC_HASITEMS(HERO, 0x8c94)) >= (1)) && ((NPC_HASITEMS(HERO, 0x8c95)) >= (1))) {
        NPC_REMOVEINVITEMS(HERO, 0x8c95, 3);
        RANDOM = HLP_RANDOM(2);
        if ((RANDOM) == (0)) {
            PRINTS_EXT(PRINT_SCROLLSUCCESS, RGBA(50, 255, 50, 255));
            SQ121_CREATESCROLLSUCCESSCOUNT = (SQ121_CREATESCROLLSUCCESSCOUNT) + (1);
            CREATEINVITEMS(HERO, 0x8780, 1);
            SND_PLAY3D(HERO, "SCROLL_SUCCESS");
        } else if ((RANDOM) == (1)) {
            PRINTS_EXT(PRINT_SCROLLFAILED, COL_RED);
            SND_PLAY3D(HERO, "SCROLL_FAILED");
        };
        NPC_REMOVEINVITEMS(HERO, 0x8c94, 1);
        SQ121_CREATESCROLLCOUNT = (SQ121_CREATESCROLLCOUNT) + (1);
        if ((SQ121_CREATESCROLLCOUNT) == (1)) {
            AI_PLAYANI(SELF, "R_WRITING_SQ505_01");
        } else if ((SQ121_CREATESCROLLCOUNT) == (3)) {
            AI_PLAYANI(SELF, "R_WRITING_SQ505_02");
        } else if ((SQ121_CREATESCROLLCOUNT) == (5)) {
            AI_PLAYANI(SELF, "R_WRITING_SQ505_02");
            B_LOGENTRY(TOPIC_SQ121, LOG_SQ121_ICEBOLTSCROLLDONE);
            PC_SCROLL_WRITING_END_INFO();
        };
    };
    PRINTS_EXT(PRINT_PRODITEMSMISSING, COL_RED);
}

var int PC_SCROLL_WRITING_SCROLL_SQ121_ICEBOLT_INFO.RANDOM = 0;
instance PC_ITSC_SUMWOLF(C_INFO) {
    NR = 0x2840;
    NPC = 0xc3ab;
    CONDITION = PC_ITSC_SUMWOLF_CONDITION;
    INFORMATION = PC_ITSC_SUMWOLF_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = NAME_SPL_SUMMONWOLF;
}

func int PC_ITSC_SUMWOLF_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_SCROLL_WRITING)) && ((SCROLLWRITING_MODE) == (1))) && ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_SCROLLWRITING)) == (TRUE))) {
        if ((NPC_HASITEMS(SELF, 0x8785)) > (0)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITSC_SUMWOLF_INFO() {
    SCROLL_WRITING_INSTANCE = 0x950a;
    SCROLL_WRITING_INFO = 0xbad5;
    PC_SCROLL_WRITING_CHECKAMOUNTCHOICES();
}

instance PC_ITSC_WINDFIST(C_INFO) {
    NR = 0x2841;
    NPC = 0xc3ab;
    CONDITION = PC_ITSC_WINDFIST_CONDITION;
    INFORMATION = PC_ITSC_WINDFIST_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = NAME_SPL_WINDFIST;
}

func int PC_ITSC_WINDFIST_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_SCROLL_WRITING)) && ((SCROLLWRITING_MODE) == (1))) && ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_SCROLLWRITING)) == (TRUE))) {
        if ((NPC_HASITEMS(SELF, 0x8786)) > (0)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITSC_WINDFIST_INFO() {
    SCROLL_WRITING_INSTANCE = 0x950b;
    SCROLL_WRITING_INFO = 0xbad8;
    PC_SCROLL_WRITING_CHECKAMOUNTCHOICES();
}

instance PC_ITSC_ICELANCE(C_INFO) {
    NR = 0x2842;
    NPC = 0xc3ab;
    CONDITION = PC_ITSC_ICELANCE_CONDITION;
    INFORMATION = PC_ITSC_ICELANCE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = NAME_SPL_ICELANCE;
}

func int PC_ITSC_ICELANCE_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_SCROLL_WRITING)) && ((SCROLLWRITING_MODE) == (1))) && ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_SCROLLWRITING)) == (TRUE))) {
        if ((NPC_HASITEMS(SELF, 0x83b3)) > (0)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITSC_ICELANCE_INFO() {
    SCROLL_WRITING_INSTANCE = 0x950c;
    SCROLL_WRITING_INFO = 0xbadb;
    PC_SCROLL_WRITING_CHECKAMOUNTCHOICES();
}

instance PC_ITSC_WHIRLWIND(C_INFO) {
    NR = 0x2843;
    NPC = 0xc3ab;
    CONDITION = PC_ITSC_WHIRLWIND_CONDITION;
    INFORMATION = PC_ITSC_WHIRLWIND_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = NAME_SPL_WHIRLWIND;
}

func int PC_ITSC_WHIRLWIND_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_SCROLL_WRITING)) && ((SCROLLWRITING_MODE) == (1))) && ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_SCROLLWRITING)) == (TRUE))) {
        if ((NPC_HASITEMS(SELF, 0x83b6)) > (0)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITSC_WHIRLWIND_INFO() {
    SCROLL_WRITING_INSTANCE = 0x950d;
    SCROLL_WRITING_INFO = 0xbade;
    PC_SCROLL_WRITING_CHECKAMOUNTCHOICES();
}

instance PC_ITSC_SUMSNAPPER(C_INFO) {
    NR = 0x2844;
    NPC = 0xc3ab;
    CONDITION = PC_ITSC_SUMSNAPPER_CONDITION;
    INFORMATION = PC_ITSC_SUMSNAPPER_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = NAME_SPL_SUMMONSNAPPER;
}

func int PC_ITSC_SUMSNAPPER_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_SCROLL_WRITING)) && ((SCROLLWRITING_MODE) == (1))) && ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_SCROLLWRITING)) == (TRUE))) {
        if ((NPC_HASITEMS(SELF, 0x9525)) > (0)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITSC_SUMSNAPPER_INFO() {
    SCROLL_WRITING_INSTANCE = 0x950e;
    SCROLL_WRITING_INFO = 0xbae1;
    PC_SCROLL_WRITING_CHECKAMOUNTCHOICES();
}

instance PC_ITSC_MEDIUMHEAL(C_INFO) {
    NR = 0x2845;
    NPC = 0xc3ab;
    CONDITION = PC_ITSC_MEDIUMHEAL_CONDITION;
    INFORMATION = PC_ITSC_MEDIUMHEAL_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = NAME_SPL_MEDIUMHEAL;
}

func int PC_ITSC_MEDIUMHEAL_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_SCROLL_WRITING)) && ((SCROLLWRITING_MODE) == (1))) && ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_SCROLLWRITING)) == (TRUE))) {
        if ((NPC_HASITEMS(SELF, 0x8788)) > (0)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITSC_MEDIUMHEAL_INFO() {
    SCROLL_WRITING_INSTANCE = 0x950f;
    SCROLL_WRITING_INFO = 0xbae4;
    PC_SCROLL_WRITING_CHECKAMOUNTCHOICES();
}

instance PC_ITSC_ICECUBE(C_INFO) {
    NR = 0x2846;
    NPC = 0xc3ab;
    CONDITION = PC_ITSC_ICECUBE_CONDITION;
    INFORMATION = PC_ITSC_ICECUBE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = NAME_SPL_ICECUBE;
}

func int PC_ITSC_ICECUBE_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_SCROLL_WRITING)) && ((SCROLLWRITING_MODE) == (1))) && ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_SCROLLWRITING)) == (TRUE))) {
        if ((NPC_HASITEMS(SELF, 0x878d)) > (0)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITSC_ICECUBE_INFO() {
    SCROLL_WRITING_INSTANCE = 0x9510;
    SCROLL_WRITING_INFO = 0xbae7;
    PC_SCROLL_WRITING_CHECKAMOUNTCHOICES();
}

instance PC_SCROLL_WRITING_SCROLL_SQ121_ICECUBE(C_INFO) {
    NPC = 0xc3ab;
    NR = 0x2846;
    CONDITION = PC_SCROLL_WRITING_SCROLL_SQ121_ICECUBE_CONDITION;
    INFORMATION = PC_SCROLL_WRITING_SCROLL_SQ121_ICECUBE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = NAME_SPL_ICECUBE;
}

func int PC_SCROLL_WRITING_SCROLL_SQ121_ICECUBE_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_SCROLL_WRITING)) && ((SCROLLWRITING_MODE) == (1))) {
        if ((LOG_GETSTATUS(MIS_SQ121)) == (LOG_RUNNING)) {
            if ((((NPC_HASITEMS(SELF, 0x878d)) >= (1)) && ((SQ121_CREATESCROLLCOUNT) == (5))) && (NPC_KNOWSINFO(SELF, 0x136ed))) {
                return TRUE;
            };
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_SCROLL_WRITING_SCROLL_SQ121_ICECUBE_INFO() {
    if (((NPC_HASITEMS(HERO, 0x8c94)) >= (1)) && ((NPC_HASITEMS(HERO, 0x8c95)) >= (15))) {
        SQ121_CREATEFINALSCROLL = TRUE;
        B_LOGENTRY(TOPIC_SQ121, LOG_SQ121_FINALSCROLL);
        NPC_REMOVEINVITEMS(HERO, 0x8c95, 15);
        PRINTS_EXT(PRINT_SCROLLFAILED, COL_RED);
        NPC_REMOVEINVITEMS(HERO, 0x8c94, 1);
        SND_PLAY3D(HERO, "SCROLL_FAILED");
        AI_PLAYANI(SELF, "R_WRITING_SQ505_02");
        PC_SCROLL_WRITING_END_INFO();
    };
    PRINTS_EXT(PRINT_PRODITEMSMISSING, COL_RED);
}

instance PC_ITSC_THUNDERBALL(C_INFO) {
    NR = 0x2847;
    NPC = 0xc3ab;
    CONDITION = PC_ITSC_THUNDERBALL_CONDITION;
    INFORMATION = PC_ITSC_THUNDERBALL_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = NAME_SPL_CHARGEZAP;
}

func int PC_ITSC_THUNDERBALL_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_SCROLL_WRITING)) && ((SCROLLWRITING_MODE) == (1))) && ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_SCROLLWRITING)) == (TRUE))) {
        if ((NPC_HASITEMS(SELF, 0x878e)) > (0)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITSC_THUNDERBALL_INFO() {
    SCROLL_WRITING_INSTANCE = 0x9511;
    SCROLL_WRITING_INFO = 0xbaed;
    PC_SCROLL_WRITING_CHECKAMOUNTCHOICES();
}

instance PC_ITSC_GEYSER(C_INFO) {
    NR = 0x2848;
    NPC = 0xc3ab;
    CONDITION = PC_ITSC_GEYSER_CONDITION;
    INFORMATION = PC_ITSC_GEYSER_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = NAME_SPL_GEYSER;
}

func int PC_ITSC_GEYSER_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_SCROLL_WRITING)) && ((SCROLLWRITING_MODE) == (1))) && ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_SCROLLWRITING)) == (TRUE))) {
        if ((NPC_HASITEMS(SELF, 0x83b2)) > (0)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITSC_GEYSER_INFO() {
    SCROLL_WRITING_INSTANCE = 0x9512;
    SCROLL_WRITING_INFO = 0xbaf0;
    PC_SCROLL_WRITING_CHECKAMOUNTCHOICES();
}

instance PC_ITSC_SUMBEAR(C_INFO) {
    NR = 0x2849;
    NPC = 0xc3ab;
    CONDITION = PC_ITSC_SUMBEAR_CONDITION;
    INFORMATION = PC_ITSC_SUMBEAR_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = NAME_SPL_SUMMONBEAR;
}

func int PC_ITSC_SUMBEAR_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_SCROLL_WRITING)) && ((SCROLLWRITING_MODE) == (1))) && ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_SCROLLWRITING)) == (TRUE))) {
        if ((NPC_HASITEMS(SELF, 0x9524)) > (0)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITSC_SUMBEAR_INFO() {
    SCROLL_WRITING_INSTANCE = 0x9513;
    SCROLL_WRITING_INFO = 0xbaf3;
    PC_SCROLL_WRITING_CHECKAMOUNTCHOICES();
}

instance PC_ITSC_LIGHTNINGFLASH(C_INFO) {
    NR = 0x284a;
    NPC = 0xc3ab;
    CONDITION = PC_ITSC_LIGHTNINGFLASH_CONDITION;
    INFORMATION = PC_ITSC_LIGHTNINGFLASH_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = NAME_SPL_LIGHTNINGFLASH;
}

func int PC_ITSC_LIGHTNINGFLASH_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_SCROLL_WRITING)) && ((SCROLLWRITING_MODE) == (1))) && ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_SCROLLWRITING)) == (TRUE))) {
        if ((NPC_HASITEMS(SELF, 0x8789)) > (0)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITSC_LIGHTNINGFLASH_INFO() {
    SCROLL_WRITING_INSTANCE = 0x9514;
    SCROLL_WRITING_INFO = 0xbaf6;
    PC_SCROLL_WRITING_CHECKAMOUNTCHOICES();
}

instance PC_ITSC_SUMGOL(C_INFO) {
    NR = 0x284b;
    NPC = 0xc3ab;
    CONDITION = PC_ITSC_SUMGOL_CONDITION;
    INFORMATION = PC_ITSC_SUMGOL_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = NAME_SPL_SUMMONGOLEM;
}

func int PC_ITSC_SUMGOL_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_SCROLL_WRITING)) && ((SCROLLWRITING_MODE) == (1))) && ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_SCROLLWRITING)) == (TRUE))) {
        if ((NPC_HASITEMS(SELF, 0x878f)) > (0)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITSC_SUMGOL_INFO() {
    SCROLL_WRITING_INSTANCE = 0x9515;
    SCROLL_WRITING_INFO = 0xbaf9;
    PC_SCROLL_WRITING_CHECKAMOUNTCHOICES();
}

instance PC_ITSC_WATERFIST(C_INFO) {
    NR = 0x284c;
    NPC = 0xc3ab;
    CONDITION = PC_ITSC_WATERFIST_CONDITION;
    INFORMATION = PC_ITSC_WATERFIST_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = NAME_SPL_WATERFIST;
}

func int PC_ITSC_WATERFIST_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_SCROLL_WRITING)) && ((SCROLLWRITING_MODE) == (1))) && ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_SCROLLWRITING)) == (TRUE))) {
        if ((NPC_HASITEMS(SELF, 0x83b4)) > (0)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITSC_WATERFIST_INFO() {
    SCROLL_WRITING_INSTANCE = 0x9516;
    SCROLL_WRITING_INFO = 0xbafc;
    PC_SCROLL_WRITING_CHECKAMOUNTCHOICES();
}

instance PC_ITSC_FULLHEAL(C_INFO) {
    NR = 0x284d;
    NPC = 0xc3ab;
    CONDITION = PC_ITSC_FULLHEAL_CONDITION;
    INFORMATION = PC_ITSC_FULLHEAL_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = NAME_SPL_FULLHEAL;
}

func int PC_ITSC_FULLHEAL_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_SCROLL_WRITING)) && ((SCROLLWRITING_MODE) == (1))) && ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_SCROLLWRITING)) == (TRUE))) {
        if ((NPC_HASITEMS(SELF, 0x8795)) > (0)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITSC_FULLHEAL_INFO() {
    SCROLL_WRITING_INSTANCE = 0x9517;
    SCROLL_WRITING_INFO = 0xbaff;
    PC_SCROLL_WRITING_CHECKAMOUNTCHOICES();
}

instance PC_ITSC_PICKLOCK(C_INFO) {
    NR = 0x284e;
    NPC = 0xc3ab;
    CONDITION = PC_ITSC_PICKLOCK_CONDITION;
    INFORMATION = PC_ITSC_PICKLOCK_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = NAME_SPL_PICKLOCK;
}

func int PC_ITSC_PICKLOCK_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_SCROLL_WRITING)) && ((SCROLLWRITING_MODE) == (1))) && ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_SCROLLWRITING)) == (TRUE))) {
        if ((NPC_HASITEMS(SELF, 0x952a)) > (0)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITSC_PICKLOCK_INFO() {
    SCROLL_WRITING_INSTANCE = 0x9518;
    SCROLL_WRITING_INFO = 0xbb02;
    PC_SCROLL_WRITING_CHECKAMOUNTCHOICES();
}

instance PC_ITSC_TELEKINESIS(C_INFO) {
    NR = 0x284f;
    NPC = 0xc3ab;
    CONDITION = PC_ITSC_TELEKINESIS_CONDITION;
    INFORMATION = PC_ITSC_TELEKINESIS_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = NAME_SPL_TELEKINESIS;
}

func int PC_ITSC_TELEKINESIS_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_SCROLL_WRITING)) && ((SCROLLWRITING_MODE) == (1))) && ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_SCROLLWRITING)) == (TRUE))) {
        if ((NPC_HASITEMS(SELF, 0x9526)) > (0)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITSC_TELEKINESIS_INFO() {
    SCROLL_WRITING_INSTANCE = 0x9519;
    SCROLL_WRITING_INFO = 0xbb05;
    PC_SCROLL_WRITING_CHECKAMOUNTCHOICES();
}

instance PC_ITSC_SLOWDOWN(C_INFO) {
    NR = 0x2850;
    NPC = 0xc3ab;
    CONDITION = PC_ITSC_SLOWDOWN_CONDITION;
    INFORMATION = PC_ITSC_SLOWDOWN_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = NAME_SPL_SLOWDOWN;
}

func int PC_ITSC_SLOWDOWN_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_SCROLL_WRITING)) && ((SCROLLWRITING_MODE) == (1))) && ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_SCROLLWRITING)) == (TRUE))) {
        if ((NPC_HASITEMS(SELF, 0x9527)) > (0)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITSC_SLOWDOWN_INFO() {
    SCROLL_WRITING_INSTANCE = 0x951a;
    SCROLL_WRITING_INFO = 0xbb08;
    PC_SCROLL_WRITING_CHECKAMOUNTCHOICES();
}

instance PC_ITSC_SLEEP(C_INFO) {
    NR = 0x2851;
    NPC = 0xc3ab;
    CONDITION = PC_ITSC_SLEEP_CONDITION;
    INFORMATION = PC_ITSC_SLEEP_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = NAME_SPL_SLEEP;
}

func int PC_ITSC_SLEEP_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_SCROLL_WRITING)) && ((SCROLLWRITING_MODE) == (1))) && ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_SCROLLWRITING)) == (TRUE))) {
        if ((NPC_HASITEMS(SELF, 0x8787)) > (0)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITSC_SLEEP_INFO() {
    SCROLL_WRITING_INSTANCE = 0x951b;
    SCROLL_WRITING_INFO = 0xbb0b;
    PC_SCROLL_WRITING_CHECKAMOUNTCHOICES();
}

instance PC_ITSC_ICEWAVE(C_INFO) {
    NR = 0x2852;
    NPC = 0xc3ab;
    CONDITION = PC_ITSC_ICEWAVE_CONDITION;
    INFORMATION = PC_ITSC_ICEWAVE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = NAME_SPL_ICEWAVE;
}

func int PC_ITSC_ICEWAVE_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_SCROLL_WRITING)) && ((SCROLLWRITING_MODE) == (1))) && ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_SCROLLWRITING)) == (TRUE))) {
        if ((NPC_HASITEMS(SELF, 0x8793)) > (0)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITSC_ICEWAVE_INFO() {
    SCROLL_WRITING_INSTANCE = 0x951c;
    SCROLL_WRITING_INFO = 0xbb0e;
    PC_SCROLL_WRITING_CHECKAMOUNTCHOICES();
}

instance PC_SCROLL_WRITING_SQ505_VOLKERNOTE(C_INFO) {
    NPC = 0xc3ab;
    NR = 90;
    CONDITION = PC_SCROLL_WRITING_SQ505_VOLKERNOTE_CONDITION;
    INFORMATION = PC_SCROLL_WRITING_SQ505_VOLKERNOTE_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = DIALOG_WRITESPEECH;
}

func int PC_SCROLL_WRITING_SQ505_VOLKERNOTE_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_SCROLL_WRITING)) && ((SQ505_CANUSEWRITETABLE) == (TRUE))) && ((SCROLLWRITING_MODE) == (0))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_SCROLL_WRITING_SQ505_VOLKERNOTE_END() {
    SQ505_CANUSEWRITETABLE = 0;
    MOB_CHANGEFOCUSNAME("SQ505_WRITETABLE", "MOBNAME_NOTHING");
    AI_PLAYANI(SELF, "R_WRITING_SQ505_02");
    B_PLAYERFINDITEM(0x9259, 1);
    NPC_REMOVEINVITEMS(HERO, 0x8d0e, 1);
    AI_STOPPROCESSINFOS(SELF);
    SELF.AIVAR[4] = FALSE;
    PLAYER_MOBSI_PRODUCTION = MOBSI_NONE;
}

func void PC_SCROLL_WRITING_SQ505_VOLKERNOTE_V5_CHOICES() {
    AI_PLAYANI(SELF, "R_WRITING_SQ505_02");
    INFO_CLEARCHOICES(0xbb11);
    INFO_ADDCHOICE(0xbb11, "We'll get back to you tomorrow with more slander and libel!", 0xbb21);
}

func void PC_SCROLL_WRITING_SQ505_VOLKERNOTE_V4_CHOICES() {
    AI_PLAYANI(SELF, "R_WRITING_SQ505_01");
    INFO_CLEARCHOICES(0xbb11);
    INFO_ADDCHOICE(0xbb11, "Volker spits on the pushovers of the Guard and the Merchant's Guild...", 0xbb20);
    INFO_ADDCHOICE(0xbb11, "forget the Guard and the Merchant's Guild...", 0xbb1f);
}

func void PC_SCROLL_WRITING_SQ505_VOLKERNOTE_V3_CHOICES() {
    AI_PLAYANI(SELF, "R_WRITING_SQ505_02");
    INFO_CLEARCHOICES(0xbb11);
    INFO_ADDCHOICE(0xbb11, "we'll take everyone, but only a few will get paid...", 0xbb1e);
    INFO_ADDCHOICE(0xbb11, "no one is useless to us, you will be great cannon fodder...", 0xbb1d);
}

func void PC_SCROLL_WRITING_SQ505_VOLKERNOTE_V2_CHOICES() {
    AI_PLAYANI(SELF, "R_WRITING_SQ505_01");
    INFO_CLEARCHOICES(0xbb11);
    INFO_ADDCHOICE(0xbb11, "we're offering you the opportunity to join the murderers in Volker's service...", 0xbb1c);
    INFO_ADDCHOICE(0xbb11, "we want to offer you exploitation and torment...", 0xbb1b);
}

func void PC_SCROLL_WRITING_SQ505_VOLKERNOTE_INFO() {
    INFO_CLEARCHOICES(0xbb11);
    INFO_ADDCHOICE(0xbb11, "The mindless citizens of Archolos...", 0xbb19);
    INFO_ADDCHOICE(0xbb11, "Dear desperate and poor...", 0xbb1a);
}

func void PC_SCROLL_WRITING_SQ505_VOLKERNOTE_V1_B() {
    SQ505_VOLKERNOTE_DIALOGUE_V1 = 2;
    PC_SCROLL_WRITING_SQ505_VOLKERNOTE_V2_CHOICES();
}

func void PC_SCROLL_WRITING_SQ505_VOLKERNOTE_V1_A() {
    SQ505_VOLKERNOTE_DIALOGUE_V1 = 1;
    PC_SCROLL_WRITING_SQ505_VOLKERNOTE_V2_CHOICES();
}

func void PC_SCROLL_WRITING_SQ505_VOLKERNOTE_V2_A() {
    SQ505_VOLKERNOTE_DIALOGUE_V2 = 1;
    PC_SCROLL_WRITING_SQ505_VOLKERNOTE_V3_CHOICES();
}

func void PC_SCROLL_WRITING_SQ505_VOLKERNOTE_V2_B() {
    SQ505_VOLKERNOTE_DIALOGUE_V2 = 2;
    PC_SCROLL_WRITING_SQ505_VOLKERNOTE_V3_CHOICES();
}

func void PC_SCROLL_WRITING_SQ505_VOLKERNOTE_V3_A() {
    SQ505_VOLKERNOTE_DIALOGUE_V3 = 1;
    PC_SCROLL_WRITING_SQ505_VOLKERNOTE_V4_CHOICES();
}

func void PC_SCROLL_WRITING_SQ505_VOLKERNOTE_V3_B() {
    SQ505_VOLKERNOTE_DIALOGUE_V3 = 2;
    PC_SCROLL_WRITING_SQ505_VOLKERNOTE_V4_CHOICES();
}

func void PC_SCROLL_WRITING_SQ505_VOLKERNOTE_V4_A() {
    SQ505_VOLKERNOTE_DIALOGUE_V4 = 1;
    PC_SCROLL_WRITING_SQ505_VOLKERNOTE_V5_CHOICES();
}

func void PC_SCROLL_WRITING_SQ505_VOLKERNOTE_V4_B() {
    SQ505_VOLKERNOTE_DIALOGUE_V4 = 2;
    PC_SCROLL_WRITING_SQ505_VOLKERNOTE_V5_CHOICES();
}

func void PC_SCROLL_WRITING_SQ505_VOLKERNOTE_V5_A() {
    SQ505_VOLKERNOTE_DIALOGUE_V5 = 1;
    PC_SCROLL_WRITING_SQ505_VOLKERNOTE_END();
}

