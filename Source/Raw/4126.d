instance DIA_DEVIR_EXIT(C_INFO) {
    NPC = 0xe3de;
    NR = 999;
    CONDITION = DIA_DEVIR_EXIT_CONDITION;
    INFORMATION = DIA_DEVIR_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_DEVIR_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_DEVIR_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_DEVIR_SQ415_EMOTIONS(C_INFO) {
    NPC = 0xe3de;
    NR = 1;
    CONDITION = DIA_DEVIR_SQ415_EMOTIONS_CONDITION;
    INFORMATION = DIA_DEVIR_SQ415_EMOTIONS_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "How are the emotions before the fight?";
}

func int DIA_DEVIR_SQ415_EMOTIONS_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ415)) == (LOG_RUNNING)) && ((SQ415_OURWARRIOR) == (2))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_DEVIR_SQ415_EMOTIONS_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Devir_SQ415_Emotions_15_01");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Devir_SQ415_Emotions_03_02");
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Devir_SQ415_Emotions_15_03");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    AI_OUTPUT(SELF, OTHER, "DIA_Devir_SQ415_Emotions_03_04");
    AI_OUTPUT(OTHER, SELF, "DIA_Devir_SQ415_Emotions_15_05");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Devir_SQ415_Emotions_03_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Devir_SQ415_Emotions_03_07");
    AI_OUTPUT(SELF, OTHER, "DIA_Devir_SQ415_Emotions_03_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Devir_SQ415_Emotions_03_09");
    AI_LOGENTRY(TOPIC_SQ415, LOG_SQ415_DEVIR_EMOTIONS);
}

instance DIA_DEVIR_SQ415_GOTPLANT(C_INFO) {
    NPC = 0xe3de;
    NR = 1;
    CONDITION = DIA_DEVIR_SQ415_GOTPLANT_CONDITION;
    INFORMATION = DIA_DEVIR_SQ415_GOTPLANT_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I brought the plant you asked for.";
}

func int DIA_DEVIR_SQ415_GOTPLANT_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_SQ415)) == (LOG_RUNNING)) && ((NPC_HASITEMS(OTHER, 0x85f0)) >= (1))) && (NPC_KNOWSINFO(OTHER, 0x14190))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_DEVIR_SQ415_COUNTTASKS() {
    DEVIR_SQ415_COUNTTASKS = (DEVIR_SQ415_COUNTTASKS) + (1);
    if ((DEVIR_SQ415_COUNTTASKS) == (2)) {
        SQ415_DEVIRREADY = TRUE;
        AI_OUTPUT(SELF, OTHER, "DIA_Devir_SQ415_ReadyForFight_03_01");
        AI_OUTPUT(OTHER, SELF, "DIA_Devir_SQ415_ReadyForFight_15_02");
        AI_LOGENTRY(TOPIC_SQ415, LOG_SQ415_DEVIR_READYFORFIGHT);
    };
}

var int DIA_DEVIR_SQ415_COUNTTASKS.DEVIR_SQ415_COUNTTASKS = 0;
func void DIA_DEVIR_SQ415_GOTPLANT_INFO() {
    NPC_REMOVEINVITEMS(SELF, 0x85f0, 1);
    AI_OUTPUT(OTHER, SELF, "DIA_Devir_SQ415_GotPlant_15_01");
    B_GIVEINVITEMS(OTHER, SELF, 0x85f0, 1);
    AI_OUTPUT(SELF, OTHER, "DIA_Devir_SQ415_GotPlant_03_02");
    B_USEFAKESTRHERB_STATE_START();
    AI_OUTPUT(SELF, OTHER, "DIA_Devir_SQ415_GotPlant_03_03");
    B_USEFAKESTRHERB_STATE_REMOVE();
    AI_LOGENTRY(TOPIC_SQ415, LOG_SQ415_DEVIR_GOTPLANT);
    DIA_DEVIR_SQ415_COUNTTASKS();
}

instance DIA_DEVIR_SQ415_FOUNDSWORD(C_INFO) {
    NPC = 0xe3de;
    NR = 1;
    CONDITION = DIA_DEVIR_SQ415_FOUNDSWORD_CONDITION;
    INFORMATION = DIA_DEVIR_SQ415_FOUNDSWORD_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I brought your sword.";
}

func int DIA_DEVIR_SQ415_FOUNDSWORD_CONDITION() {
    if (((NPC_KNOWSINFO(OTHER, 0x14190)) && ((LOG_GETSTATUS(MIS_SQ415)) == (LOG_RUNNING))) && ((NPC_HASITEMS(OTHER, 0x9a6e)) >= (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_DEVIR_SQ415_FOUNDSWORD_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Devir_SQ415_FoundSword_15_01");
    B_GIVEINVITEMS(OTHER, SELF, 0x9a6e, 1);
    AI_OUTPUT(SELF, OTHER, "DIA_Devir_SQ415_FoundSword_03_02");
    B_USEFAKECHECKSWORD_WOLFSSON();
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Devir_SQ415_FoundSword_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Devir_SQ415_FoundSword_03_04");
    AI_LOGENTRY(TOPIC_SQ415, LOG_SQ415_DEVIR_GOTSWORD);
    AI_EQUIPBESTMELEEWEAPON(SELF);
    DIA_DEVIR_SQ415_COUNTTASKS();
}

instance DIA_DEVIR_SQ415_FINISH(C_INFO) {
    NPC = 0xe3de;
    NR = 1;
    CONDITION = DIA_DEVIR_SQ415_FINISH_CONDITION;
    INFORMATION = DIA_DEVIR_SQ415_FINISH_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_DEVIR_SQ415_FINISH_CONDITION() {
    if (((((LOG_GETSTATUS(MIS_SQ415)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x14181))) && ((SQ415_OURWARRIOR) == (2))) && ((SQ415_FIGHTRESULT) >= (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_DEVIR_SQ415_FINISH_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Devir_SQ415_Finish_15_01");
    if ((SQ415_FIGHTRESULT) == (2)) {
        AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Devir_SQ415_Finish_03_02");
    };
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Devir_SQ415_Finish_03_03");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Devir_SQ415_Finish_03_04");
    CREATEINVITEMS(SELF, 0x8643, 1);
    B_GIVEINVITEMS(SELF, OTHER, 0x8643, 1);
    AI_OUTPUT(OTHER, SELF, "DIA_Devir_SQ415_Finish_15_05");
    if ((SQ415_FIGHTRESULT) == (2)) {
        AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Devir_SQ415_Finish_03_06");
    };
    AI_LOGENTRY(TOPIC_SQ415, LOG_SQ415_DEVIR_FINISH);
    SQ415_FINISHQUEST();
}

instance DIA_DEVIR_YOURSWORD(C_INFO) {
    NPC = 0xe3de;
    NR = 1;
    CONDITION = DIA_DEVIR_YOURSWORD_CONDITION;
    INFORMATION = DIA_DEVIR_YOURSWORD_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Is this your sword?";
}

func int DIA_DEVIR_YOURSWORD_CONDITION() {
    if ((NPC_HASITEMS(OTHER, 0x9a6e)) >= (1)) {
        if (((LOG_GETSTATUS(MIS_SQ415)) == (LOG_SUCCESS)) && ((SQ415_OURWARRIOR) == (1))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_DEVIR_YOURSWORD_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Devir_YourSword_15_01");
    B_GIVEINVITEMS(OTHER, SELF, 0x9a6e, 1);
    AI_STARTFACEANI(SELF, "S_SURPRSIE", 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Devir_YourSword_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Devir_YourSword_15_03");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Devir_YourSword_03_04");
    CREATEINVITEMS(SELF, 0x87b3, 1);
    AI_EQUIPBESTMELEEWEAPON(SELF);
}

instance DIA_DEVIR_AMBIENT(C_INFO) {
    NPC = 0xe3de;
    NR = 998;
    CONDITION = DIA_DEVIR_AMBIENT_CONDITION;
    INFORMATION = DIA_DEVIR_AMBIENT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "What's up?";
}

func int DIA_DEVIR_AMBIENT_CONDITION() {
    return TRUE;
}

func void DIA_DEVIR_AMBIENT_INFO() {
    B_SAY(OTHER, SELF, "$MARVIN_HowAreYou2");
    if ((NPC_KNOWSINFO(OTHER, 0x14190)) == (FALSE)) {
        AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
        B_SAY(SELF, OTHER, "$SQ311_MilitiaMiner_LeaveMeV2");
    };
    if (((LOG_GETSTATUS(MIS_SQ415)) == (LOG_SUCCESS)) && ((SQ415_OURWARRIOR) == (2))) {
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        B_SAY(SELF, OTHER, "$GREETINGS_FromFriend");
        B_SAY(SELF, OTHER, "$IMBUSY_CALM");
    };
    B_SAY(SELF, OTHER, "$IMBUSY_CALM");
    AI_RESETFACEANI(SELF);
}

instance DIA_DEVIR_Q404_NEEDHELP(C_INFO) {
    NPC = 0xe3de;
    NR = 850;
    CONDITION = DIA_DEVIR_Q404_NEEDHELP_CONDITION;
    INFORMATION = DIA_DEVIR_Q404_NEEDHELP_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "I need someone to guard the mine.";
}

func int DIA_DEVIR_Q404_NEEDHELP_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q404)) == (LOG_RUNNING)) && ((Q404_GUARDMINE_NEEDHELP) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_DEVIR_Q404_NEEDHELP_INFO() {
    Q404_MARVINASK_NEEDHELP();
    DIA_IMBUSY_CALM();
}

instance DIA_DEVIR_PICKPOCKET(C_INFO) {
    NPC = 0xe3de;
    NR = 900;
    CONDITION = DIA_DEVIR_PICKPOCKET_CONDITION;
    INFORMATION = DIA_DEVIR_PICKPOCKET_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = PICKPOCKET_80;
}

func int DIA_DEVIR_PICKPOCKET_CONDITION() {
    if (((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) && ((SELF.AIVAR[6]) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_DEVIR_PICKPOCKET_INFO() {
    INFO_CLEARCHOICES(0x141a7);
    INFO_ADDCHOICE(0x141a7, DIALOG_BACK, 0x141ab);
    INFO_ADDCHOICE(0x141a7, DIALOG_PICKPOCKET, 0x141aa);
}

func void DIA_DEVIR_PICKPOCKET_DOIT() {
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (2)) {
        B_PICKPOCKET_AMBIENT_TIER_2();
        SELF.AIVAR[6] = TRUE;
        INFO_CLEARCHOICES(0x141a7);
    };
    AI_PLAYANI(HERO, T_CANNOTTAKE);
    PRINTSCREEN(PRINT_CANTPICKPOCKETTHISPERSON, -(1), -(1), FONT_SCREEN, 4);
    INFO_CLEARCHOICES(0x141a7);
}

func void DIA_DEVIR_PICKPOCKET_BACK() {
    INFO_CLEARCHOICES(0x141a7);
}

