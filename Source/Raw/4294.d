var int ALBYN_STATUSGIVEN = 0;
instance DIA_ALBYN_EXIT(C_INFO) {
    NPC = 0xe09d;
    NR = 999;
    CONDITION = DIA_ALBYN_EXIT_CONDITION;
    INFORMATION = DIA_ALBYN_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_ALBYN_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_ALBYN_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

var int ALBYN_LASTPETZCOUNTER = 0;
var int ALBYN_LASTPETZCRIME = 0;
instance DIA_ALBYN_PMDEBTS(C_INFO) {
    NPC = 0xe09d;
    NR = 1;
    CONDITION = DIA_ALBYN_PMDEBTS_CONDITION;
    INFORMATION = DIA_ALBYN_PMDEBTS_INFO;
    PERMANENT = TRUE;
    IMPORTANT = TRUE;
}

func int DIA_ALBYN_PMDEBTS_CONDITION() {
    if (NPC_ISINSTATE(SELF, 0xf09f)) {
        if ((((ALBYN_DEBTS) > (0)) && ((B_GETGREATESTPETZCRIME(SELF)) <= (ALBYN_LASTPETZCRIME))) || ((Q105_BREADTHIEF) == (2))) {
            if (((SQ416_RAMSEYPARTY) != (2)) && ((SQ416_PARTYCUTSCENEENABLE) >= (2))) {
                return FALSE;
            };
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_ALBYN_PMDEBTS_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PMDebts_700_00");
    if ((B_GETTOTALPETZCOUNTER(SELF)) > (ALBYN_LASTPETZCOUNTER)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PMDebts_700_01");
        AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PMDebts_700_02");
        if ((ALBYN_DEBTS) < (1000)) {
            AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PMDebts_700_03");
            AI_OUTPUT(OTHER, SELF, "DIA_Albyn_PMAdd_15_00");
            DIFF = (B_GETTOTALPETZCOUNTER(SELF)) - (ALBYN_LASTPETZCOUNTER);
            if ((DIFF) > (0)) {
                ALBYN_DEBTS = (ALBYN_DEBTS) + ((DIFF) * (50));
            };
            if ((ALBYN_DEBTS) > (1000)) {
                ALBYN_DEBTS = 1000;
            };
            B_SAY_GOLD(SELF, OTHER, ALBYN_DEBTS);
        } else {
            AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PMDebts_700_04");
        } else {
            /* set_instance(0) */;
        };
    };
    if ((B_GETGREATESTPETZCRIME(SELF)) < (ALBYN_LASTPETZCRIME)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PMDebts_700_05");
        if ((ALBYN_LASTPETZCRIME) == (CRIME_MURDER)) {
            AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PMDebts_700_06");
        };
        if (((ALBYN_LASTPETZCRIME) == (CRIME_THEFT)) || (((ALBYN_LASTPETZCRIME) > (CRIME_THEFT)) && ((B_GETGREATESTPETZCRIME(SELF)) < (CRIME_THEFT)))) {
            AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PMDebts_700_07");
        };
        if (((ALBYN_LASTPETZCRIME) == (CRIME_ATTACK)) || (((ALBYN_LASTPETZCRIME) > (CRIME_ATTACK)) && ((B_GETGREATESTPETZCRIME(SELF)) < (CRIME_ATTACK)))) {
            AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PMDebts_700_08");
        };
        if ((B_GETGREATESTPETZCRIME(SELF)) == (CRIME_NONE)) {
            AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PMDebts_700_09");
        };
        AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PMDebts_700_10");
        if ((B_GETGREATESTPETZCRIME(SELF)) == (CRIME_NONE)) {
            AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PMDebts_700_11");
            AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PMDebts_700_12");
            ALBYN_DEBTS = 0;
            ALBYN_LASTPETZCOUNTER = 0;
            ALBYN_LASTPETZCRIME = CRIME_NONE;
        } else {
            AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PMDebts_700_13");
            B_SAY_GOLD(SELF, OTHER, ALBYN_DEBTS);
            AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PMDebts_700_14");
        };
    };
    if ((((B_GETGREATESTPETZCRIME(SELF)) != (CRIME_NONE)) || ((Q105_BREADTHIEF) == (2))) || ((ALBYN_DEBTS) >= (1))) {
        INFO_CLEARCHOICES(0x15679);
        INFO_CLEARCHOICES(0x1567e);
        INFO_ADDCHOICE(0x15679, "I don't have enough gold!", 0x15682);
        INFO_ADDCHOICE(0x15679, "How much was it supposed to be?", 0x1567d);
        if ((NPC_HASITEMS(OTHER, 0x859b)) >= (ALBYN_DEBTS)) {
            INFO_ADDCHOICE(0x15679, "I want to pay the fine!", 0x15681);
        };
    };
}

var int DIA_ALBYN_PMDEBTS_INFO.DIFF = 0;
func void DIA_ALBYN_PMDEBTS_HOWMUCHAGAIN() {
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_PMDebts_HowMuchAgain_15_00");
    B_SAY_GOLD(SELF, OTHER, ALBYN_DEBTS);
    INFO_CLEARCHOICES(0x15679);
    INFO_CLEARCHOICES(0x1567e);
    INFO_ADDCHOICE(0x15679, "I don't have enough gold!", 0x15682);
    INFO_ADDCHOICE(0x15679, "How much was it supposed to be?", 0x1567d);
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (ALBYN_DEBTS)) {
        INFO_ADDCHOICE(0x15679, "I want to pay the fine!", 0x15681);
    };
}

instance DIA_ALBYN_PETZMASTER(C_INFO) {
    NPC = 0xe09d;
    NR = 1;
    CONDITION = DIA_ALBYN_PETZMASTER_CONDITION;
    INFORMATION = DIA_ALBYN_PETZMASTER_INFO;
    PERMANENT = TRUE;
    IMPORTANT = TRUE;
}

func int DIA_ALBYN_PETZMASTER_CONDITION() {
    if (((B_GETGREATESTPETZCRIME(SELF)) > (ALBYN_LASTPETZCRIME)) || ((Q105_BREADTHIEF) == (1))) {
        if (((SQ416_RAMSEYPARTY) != (2)) && ((SQ416_PARTYCUTSCENEENABLE) >= (2))) {
            return FALSE;
        };
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ALBYN_PETZMASTER_INFO() {
    ALBYN_DEBTS = 0;
    if ((B_GETGREATESTPETZCRIME(SELF)) == (CRIME_MURDER)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PETZMASTER_700_02");
        AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PETZMASTER_700_03");
        ALBYN_DEBTS = (B_GETTOTALPETZCOUNTER(SELF)) * (50);
        ALBYN_DEBTS = (ALBYN_DEBTS) + (500);
        if ((((PETZCOUNTER_FARMS_THEFT) + (PETZCOUNTER_FARMS_ATTACK)) + (PETZCOUNTER_FARMS_SHEEPKILLER)) > (0)) {
            AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PETZMASTER_700_04");
        };
        AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PETZMASTER_700_05");
        AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PETZMASTER_700_06");
    };
    if ((B_GETGREATESTPETZCRIME(SELF)) == (CRIME_THEFT)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PETZMASTER_700_07");
        if ((PETZCOUNTER_FARMS_ATTACK) > (0)) {
            AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PETZMASTER_700_08");
        };
        if ((PETZCOUNTER_FARMS_SHEEPKILLER) > (0)) {
            AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PETZMASTER_700_09");
        };
        AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PETZMASTER_700_10");
        AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PETZMASTER_700_11");
        ALBYN_DEBTS = (B_GETTOTALPETZCOUNTER(SELF)) * (50);
    };
    if ((B_GETGREATESTPETZCRIME(SELF)) == (CRIME_ATTACK)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PETZMASTER_700_12");
        AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PETZMASTER_700_13");
        if ((PETZCOUNTER_FARMS_SHEEPKILLER) > (0)) {
            AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PETZMASTER_700_14");
        };
        AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PETZMASTER_700_15");
        ALBYN_DEBTS = (B_GETTOTALPETZCOUNTER(SELF)) * (50);
    };
    if ((B_GETGREATESTPETZCRIME(SELF)) == (CRIME_SHEEPKILLER)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PETZMASTER_700_16");
        AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PETZMASTER_700_17");
        ALBYN_DEBTS = 100;
    };
    if ((Q105_BREADTHIEF) == (1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Q105_700_00");
        AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Q105_700_01");
        AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Q105_700_02");
        AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Q105_700_03");
        PETZCOUNTER_FARMS_THEFT = (PETZCOUNTER_FARMS_THEFT) + (1);
    };
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_PETZMASTER_15_18");
    if ((ALBYN_DEBTS) > (1000)) {
        ALBYN_DEBTS = 1000;
    };
    B_SAY_GOLD(SELF, OTHER, ALBYN_DEBTS);
    INFO_CLEARCHOICES(0x15679);
    INFO_CLEARCHOICES(0x1567e);
    INFO_ADDCHOICE(0x1567e, "I don't have enough gold!", 0x15682);
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (ALBYN_DEBTS)) {
        INFO_ADDCHOICE(0x1567e, "I want to pay the fine!", 0x15681);
    };
}

func void DIA_ALBYN_PETZMASTER_PAYNOW() {
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_PETZMASTER_PayNow_15_00");
    NPC_REMOVEINVITEMS(SELF, 0x859b, ALBYN_DEBTS);
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PETZMASTER_PayNow_700_01");
    B_GIVEINVITEMS(OTHER, SELF, 0x859b, ALBYN_DEBTS);
    B_GRANTABSOLUTION(LOC_FARMS);
    ALBYN_DEBTS = 0;
    ALBYN_LASTPETZCOUNTER = 0;
    ALBYN_LASTPETZCRIME = CRIME_NONE;
    if ((Q105_BREADTHIEF) >= (1)) {
        Q105_BREADTHIEF = 0;
    };
    INFO_CLEARCHOICES(0x1567e);
    INFO_CLEARCHOICES(0x15679);
}

func void DIA_ALBYN_PETZMASTER_PAYLATER() {
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_PETZMASTER_PayLater_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PETZMASTER_PayLater_700_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_PETZMASTER_PayLater_700_02");
    ALBYN_LASTPETZCOUNTER = B_GETTOTALPETZCOUNTER(SELF);
    ALBYN_LASTPETZCRIME = B_GETGREATESTPETZCRIME(SELF);
    if ((Q105_BREADTHIEF) == (1)) {
        Q105_BREADTHIEF = 2;
    };
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_ALBYN_HELLO(C_INFO) {
    NPC = 0xe09d;
    NR = 1;
    CONDITION = DIA_ALBYN_HELLO_CONDITION;
    INFORMATION = DIA_ALBYN_HELLO_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_ALBYN_HELLO_CONDITION() {
    if (NPC_ISINSTATE(SELF, 0xf09f)) {
        if (((ALBYN_DEBTS) != (0)) && ((Q105_BREADTHIEF) != (2))) {
            return FALSE;
        };
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ALBYN_HELLO_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Hello_700_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Hello_700_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Hello_700_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Hello_700_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Hello_700_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Hello_700_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Hello_700_07");
}

instance DIA_ALBYN_LAW(C_INFO) {
    NPC = 0xe09d;
    NR = 1;
    CONDITION = DIA_ALBYN_LAW_CONDITION;
    INFORMATION = DIA_ALBYN_LAW_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "What are the laws in Silbach?";
}

func int DIA_ALBYN_LAW_CONDITION() {
    return TRUE;
}

func void DIA_ALBYN_LAW_INFO() {
    ALBYN_STATUSGIVEN = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_Law_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Law_700_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Law_700_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Law_700_04");
    if ((HERO.GUILD) == (GIL_NONE)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Law_700_05");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Law_700_06");
    CREATEINVITEMS(SELF, 0x9dd0, 1);
    B_GIVEINVITEMS(SELF, OTHER, 0x9dd0, 1);
}

instance DIA_ALBYN_PLACE(C_INFO) {
    NPC = 0xe09d;
    NR = 1;
    CONDITION = DIA_ALBYN_PLACE_CONDITION;
    INFORMATION = DIA_ALBYN_PLACE_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "What should I know about this place?";
}

func int DIA_ALBYN_PLACE_CONDITION() {
    return TRUE;
}

func void DIA_ALBYN_PLACE_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_Place_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Place_700_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Place_700_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Place_700_03");
}

instance DIA_ALBYN_SIRRAMSEY(C_INFO) {
    NPC = 0xe09d;
    NR = 1;
    CONDITION = DIA_ALBYN_SIRRAMSEY_CONDITION;
    INFORMATION = DIA_ALBYN_SIRRAMSEY_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Where can I meet Sir Ramsey?";
}

func int DIA_ALBYN_SIRRAMSEY_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 0x15689)) && ((NPC_KNOWSINFO(OTHER, 0x10ce2)) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ALBYN_SIRRAMSEY_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_SirRamsey_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SirRamsey_700_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SirRamsey_700_02");
}

instance DIA_ALBYN_Q104_FRATERNALASSISTANCE(C_INFO) {
    NPC = 0xe09d;
    NR = 1;
    CONDITION = DIA_ALBYN_Q104_FRATERNALASSISTANCE_CONDITION;
    INFORMATION = DIA_ALBYN_Q104_FRATERNALASSISTANCE_INFO;
    PERMANENT = FALSE;
    IMPORTANT = FALSE;
    DESCRIPTION = "My companions need help.";
}

func int DIA_ALBYN_Q104_FRATERNALASSISTANCE_CONDITION() {
    if ((LOG_GETSTATUS(MIS_Q108)) == (LOG_SUCCESS)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ALBYN_Q104_FRATERNALASSISTANCE_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_Q104_FraternalAssistance_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Q104_FraternalAssistance_700_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_Q104_FraternalAssistance_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Q104_FraternalAssistance_700_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Q104_FraternalAssistance_700_05");
    INFO_CLEARCHOICES(0x1568f);
    INFO_ADDCHOICE(0x1568f, "Don't forget that we are the ones in need.", 0x15692);
    INFO_ADDCHOICE(0x1568f, "You're not very hospitable.", 0x15693);
    INFO_ADDCHOICE(0x1568f, "How can we help you?", 0x15694);
}

func void DIA_ALBYN_Q104_FRATERNALASSISTANCE1() {
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_Q104_FraternalAssistance1_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Q104_FraternalAssistance1_700_01");
}

func void DIA_ALBYN_Q104_FRATERNALASSISTANCE2() {
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_Q104_FraternalAssistance2_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Q104_FraternalAssistance2_700_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Q104_FraternalAssistance2_700_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Q104_FraternalAssistance2_700_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Q104_FraternalAssistance2_700_05");
}

func void DIA_ALBYN_Q104_FRATERNALASSISTANCE3() {
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_Q104_FraternalAssistance3_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Q104_FraternalAssistance3_700_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Q104_FraternalAssistance3_700_02");
    INFO_CLEARCHOICES(0x1568f);
    INFO_ADDCHOICE(0x1568f, "Grazing sheep and shoveling dung? Are you kidding me?", 0x15696);
    INFO_ADDCHOICE(0x1568f, "I'll talk to them, but I doubt they'll be happy.", 0x15695);
}

func void DIA_ALBYN_Q104_FRATERNALASSISTANCE3_YES() {
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_Q104_FraternalAssistance3_YES_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Q104_FraternalAssistance3_YES_700_03");
    AI_LOGENTRY(TOPIC_Q104, LOG_Q104_ALBYNREFUGEESHAVETOWORK);
    Q104_PREPARENPC();
    AI_STOPPROCESSINFOS(SELF);
}

func void DIA_ALBYN_Q104_FRATERNALASSISTANCE3_NO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_Q104_FraternalAssistance3_NO_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Q104_FraternalAssistance3_NO_700_01");
    DIA_ALBYN_Q104_FRATERNALASSISTANCE3_YES();
}

instance DIA_ALBYN_Q104_FRATERNALASSISTANCE4(C_INFO) {
    NPC = 0xe09d;
    NR = 1;
    CONDITION = DIA_ALBYN_Q104_FRATERNALASSISTANCE4_CONDITION;
    INFORMATION = DIA_ALBYN_Q104_FRATERNALASSISTANCE4_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "About that refugee issue...";
}

func int DIA_ALBYN_Q104_FRATERNALASSISTANCE4_CONDITION() {
    if (((NPC_KNOWSINFO(OTHER, 0x1568f)) && ((NPC_KNOWSINFO(OTHER, 0x1569a)) == (FALSE))) && ((LOG_GETSTATUS(MIS_Q104)) == (LOG_RUNNING))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ALBYN_Q104_FRATERNALASSISTANCE4_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_Q104_FraternalAssistance4_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Q104_FraternalAssistance4_700_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_Q104_FraternalAssistance4_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Q104_FraternalAssistance4_700_02");
}

instance DIA_ALBYN_Q104_FRATERNALASSISTANCE5(C_INFO) {
    NPC = 0xe09d;
    NR = 1;
    CONDITION = DIA_ALBYN_Q104_FRATERNALASSISTANCE5_CONDITION;
    INFORMATION = DIA_ALBYN_Q104_FRATERNALASSISTANCE5_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_ALBYN_Q104_FRATERNALASSISTANCE5_CONDITION() {
    if (((((NPC_KNOWSINFO(OTHER, 0x1568f)) && ((Q104_REFUGEESFORWORK) >= (3))) && (NPC_ISINSTATE(SELF, 0xf09f))) && ((LOG_GETSTATUS(MIS_Q104)) == (LOG_RUNNING))) && (NPC_KNOWSINFO(OTHER, 0x158a1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ALBYN_Q104_FRATERNALASSISTANCE5_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Q104_FraternalAssistance5_700_01");
    if ((Q104_REFUGEESFORWORK) > (3)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Q104_FraternalAssistance5_700_02");
        AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Q104_FraternalAssistance5_700_03");
    };
    B_GIVEPLAYERXP((XP_Q104_REFUGEESFORWORK) * (Q104_REFUGEESFORWORK));
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_Q104_FraternalAssistance5_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Q104_FraternalAssistance5_700_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Q104_FraternalAssistance5_700_05");
    LOG_SETSTATUS(_@(MIS_Q104), TOPIC_Q104, LOG_SUCCESS);
    AI_LOGENTRY(TOPIC_Q104, LOG_Q104_FINISH);
    AI_FUNCTION(SELF, 0xf26a);
    if ((LOG_GETSTATUS(MIS_SQ121)) == (LOG_RUNNING)) {
        AI_LOGENTRY(TOPIC_SQ121, LOG_SQ121_DOTHEQUEST);
    };
}

instance DIA_ALBYN_NOHELP(C_INFO) {
    NPC = 0xe09d;
    NR = 1;
    CONDITION = DIA_ALBYN_NOHELP_CONDITION;
    INFORMATION = DIA_ALBYN_NOHELP_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Is there really nothing you can do about Jorn?";
}

func int DIA_ALBYN_NOHELP_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 0x1577f)) && ((HERO.GUILD) == (GIL_NONE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ALBYN_NOHELP_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_NoHelp_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_NoHelp_700_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_NoHelp_700_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_NoHelp_700_04");
}

instance DIA_ALBYN_SQ221_START(C_INFO) {
    NPC = 0xe09d;
    NR = 1;
    CONDITION = DIA_ALBYN_SQ221_START_CONDITION;
    INFORMATION = DIA_ALBYN_SQ221_START_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I need help getting into the city.";
}

func int DIA_ALBYN_SQ221_START_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x1569d)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ALBYN_SQ221_START_INFO() {
    SQ221_CHANGEMAIKRTN();
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_SQ221_Start_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ221_Start_700_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ221_Start_700_03");
    INFO_CLEARCHOICES(0x156a0);
    INFO_ADDCHOICE(0x156a0, "I care about time.", 0x156a4);
    INFO_ADDCHOICE(0x156a0, "How much?", 0x156a3);
    B_STARTOTHERROUTINE(NONE_6252_FREDRIK, "GQ001");
    TELEPORTNPCTOWP(0xe15c, "VILLAGE_PATH_142");
}

func void DIA_ALBYN_SQ221_START_HOWMUCH() {
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_SQ221_Start_HowMuch_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ221_Start_HowMuch_700_02");
}

func void DIA_ALBYN_SQ221_START_NOTIME() {
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_SQ221_Start_NoTime_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ221_Start_NoTime_700_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ221_Start_NoTime_700_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ221_Start_NoTime_700_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ221_Start_NoTime_700_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ221_Start_NoTime_700_06");
    INFO_CLEARCHOICES(0x156a0);
    LOG_CREATETOPIC(TOPIC_SQ221, LOG_MISSION);
    LOG_SETSTATUS(_@(MIS_SQ221), TOPIC_SQ221, LOG_RUNNING);
    AI_LOGENTRY(TOPIC_SQ221, LOG_SQ221_START);
}

instance DIA_ALBYN_SQ221_BRIDGE(C_INFO) {
    NPC = 0xe09d;
    NR = 1;
    CONDITION = DIA_ALBYN_SQ221_BRIDGE_CONDITION;
    INFORMATION = DIA_ALBYN_SQ221_BRIDGE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "About the riverbank...";
}

func int DIA_ALBYN_SQ221_BRIDGE_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ221)) == (LOG_RUNNING)) && ((SQ221_UWEDONE) != (2))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ALBYN_SQ221_BRIDGE_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_SQ221_Bridge_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ221_Bridge_700_02");
    if ((SQ221_UWEDONE) == (1)) {
        SQ221_UWEDONE = 2;
        AI_OUTPUT(OTHER, SELF, "DIA_Albyn_SQ221_Bridge_15_03");
        AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ221_Bridge_700_04");
        CREATEINVITEMS(SELF, 0x859b, SQ221_ALBYN_REWARD);
    };
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_SQ221_Bridge_15_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ221_Bridge_700_06");
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_SQ221_Bridge_15_07");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ221_Bridge_700_08");
    if ((SQ221_UWEQUESTION) == (FALSE)) {
        AI_LOGENTRY(TOPIC_SQ221, LOG_SQ221_UWELOCATION);
        SQ221_UWEQUESTION = TRUE;
    };
}

var int SQ221_LOGENTRY_ALBYNGOODS = 0;
instance DIA_ALBYN_SQ221_GOODS(C_INFO) {
    NPC = 0xe09d;
    NR = 1;
    CONDITION = DIA_ALBYN_SQ221_GOODS_CONDITION;
    INFORMATION = DIA_ALBYN_SQ221_GOODS_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "About the goods carrier...";
}

func int DIA_ALBYN_SQ221_GOODS_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ221)) == (LOG_RUNNING)) && ((SQ221_MAIKDONE) != (2))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ALBYN_SQ221_GOODS_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_SQ221_Goods_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ221_Goods_700_02");
    if ((SQ221_MAIKDONE) == (1)) {
        SQ221_MAIKDONE = 2;
        SQ221_CHANGEMAIKRTN_COMEBACK();
        AI_OUTPUT(OTHER, SELF, "DIA_Albyn_SQ221_Goods_15_03");
        AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ221_Goods_700_04");
        CREATEINVITEMS(SELF, 0x859b, SQ221_ALBYN_REWARD);
    };
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_SQ221_Goods_15_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ221_Goods_700_06");
    if ((SQ221_LOGENTRY_ALBYNGOODS) == (FALSE)) {
        AI_LOGENTRY(TOPIC_SQ221, LOG_SQ221_GOODSLOCATION);
        SQ221_LOGENTRY_ALBYNGOODS = TRUE;
    };
}

instance DIA_ALBYN_SQ221_FINISH(C_INFO) {
    NPC = 0xe09d;
    NR = 1;
    CONDITION = DIA_ALBYN_SQ221_FINISH_CONDITION;
    INFORMATION = DIA_ALBYN_SQ221_FINISH_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I did everything you asked me to do.";
}

func int DIA_ALBYN_SQ221_FINISH_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_SQ221)) == (LOG_RUNNING)) && ((SQ221_UWEDONE) == (2))) && ((SQ221_MAIKDONE) == (2))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ALBYN_SQ221_FINISH_INFO() {
    CREATEINVITEMS(SELF, 0x9110, 1);
    B_GIVEINVITEMS(SELF, OTHER, 0x9110, 1);
    CREATEINVITEMS(SELF, 0x922b, 1);
    B_GIVEINVITEMS(SELF, OTHER, 0x922b, 1);
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_SQ221_Finish_15_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_SQ221_Finish_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ221_Finish_700_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ221_Finish_700_04");
    AI_LOGENTRY(TOPIC_SQ221, LOG_SQ221_ALBYN_FINISH);
    AI_LOGENTRY(TOPIC_Q201, LOG_Q201_ALBYN_PERMIT);
    LOG_SETSTATUS(_@(MIS_SQ221), TOPIC_SQ221, LOG_SUCCESS);
    B_GIVEPLAYERXP(XP_SQ221_FINISH);
    SQ221_REMOVEROCKSNAME();
    INFO_CLEARCHOICES(0x156ac);
    SQ221_SPAWNMONSTERS();
}

instance DIA_ALBYN_SQ227_EZEKIEL(C_INFO) {
    NPC = 0xe09d;
    NR = 1;
    CONDITION = DIA_ALBYN_SQ227_EZEKIEL_CONDITION;
    INFORMATION = DIA_ALBYN_SQ227_EZEKIEL_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Ezekiel would like to replace Veit as the village trader.";
}

func int DIA_ALBYN_SQ227_EZEKIEL_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ227)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x15e24))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void ALBYN_SQ227_GIVEDOC() {
    SQ227_ALBYNDECISION = 1;
    B_STANDUP();
    B_USEFAKESCROLL();
    CREATEINVITEMS(SELF, 0x90f1, 1);
    B_GIVEINVITEMS(SELF, OTHER, 0x90f1, 1);
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ227_Ezekiel_700_06");
    AI_LOGENTRY(TOPIC_SQ227, LOG_SQ227_ALBYN_ACCEPTEZEKIEL);
}

func void DIA_ALBYN_SQ227_EZEKIEL_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_SQ227_Ezekiel_15_01");
    AI_STARTFACEANI(SELF, "S_SEROIUS", 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ227_Ezekiel_700_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_SQ227_Ezekiel_15_03");
    if ((SILBACHREPUTATION) >= (4)) {
        AI_RESETFACEANI(SELF);
        AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ227_Ezekiel_700_04");
        AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ227_Ezekiel_700_05");
        ALBYN_SQ227_GIVEDOC();
    };
    SQ227_ALBYNDECISION = 2;
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ227_Ezekiel_700_07");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ227_Ezekiel_700_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ227_Ezekiel_700_09");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ227_Ezekiel_700_10");
    AI_LOGENTRY(TOPIC_SQ227, LOG_SQ227_ALBYN_DECLINEEZEKIEL);
}

instance DIA_ALBYN_SQ227_EZEKIELCANTRADE(C_INFO) {
    NPC = 0xe09d;
    NR = 1;
    CONDITION = DIA_ALBYN_SQ227_EZEKIELCANTRADE_CONDITION;
    INFORMATION = DIA_ALBYN_SQ227_EZEKIELCANTRADE_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_ALBYN_SQ227_EZEKIELCANTRADE_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_SQ227)) == (LOG_RUNNING)) && ((EZEKIEL_SQ227_GOTPARSLEY) == (1))) && ((EZEKIEL_SQ227_GOTBEER) == (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ALBYN_SQ227_EZEKIELCANTRADE_INFO() {
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ227_EzekielCanTrade_700_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ227_EzekielCanTrade_700_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ227_EzekielCanTrade_700_03");
    ALBYN_SQ227_GIVEDOC();
    AI_STOPPROCESSINFOS(SELF);
    NPC_EXCHANGEROUTINE(SELF, START);
}

instance DIA_ALBYN_Q205(C_INFO) {
    NPC = 0xe09d;
    NR = 1;
    CONDITION = DIA_ALBYN_Q205_CONDITION;
    INFORMATION = DIA_ALBYN_Q205_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Have you seen Sergeant Gerwin?";
}

func int DIA_ALBYN_Q205_CONDITION() {
    if ((LOG_GETSTATUS(MIS_Q205)) == (LOG_RUNNING)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ALBYN_Q205_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_Q205_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Q205_700_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Q205_700_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Q205_700_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Q205_700_05");
    INFO_CLEARCHOICES(0x156b6);
    INFO_ADDCHOICE(0x156b6, "How do you know they were part of Gerwin's unit?", 0x156bb);
    INFO_ADDCHOICE(0x156b6, "Which way did they go?", 0x156bc);
}

func void DIA_ALBYN_Q205_COUNT() {
    ALBYN_Q205_RENEGADEINFORMATIONS = (ALBYN_Q205_RENEGADEINFORMATIONS) + (1);
    if ((ALBYN_Q205_RENEGADEINFORMATIONS) == (2)) {
        AI_LOGENTRY(TOPIC_Q205, LOG_Q205_ALBYN);
        INFO_CLEARCHOICES(0x156b6);
    };
}

var int DIA_ALBYN_Q205_COUNT.ALBYN_Q205_RENEGADEINFORMATIONS = 0;
func void DIA_ALBYN_Q205_GERWIN() {
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_Q205_Gerwin_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Q205_Gerwin_700_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Q205_Gerwin_700_03");
    DIA_ALBYN_Q205_COUNT();
}

func void DIA_ALBYN_Q205_WHERE() {
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_Q205_Where_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Q205_Where_700_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Q205_Where_700_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Q205_Where_700_04");
    DIA_ALBYN_Q205_COUNT();
}

instance DIA_ALBYN_SQ202(C_INFO) {
    NPC = 0xe09d;
    NR = 1;
    CONDITION = DIA_ALBYN_SQ202_CONDITION;
    INFORMATION = DIA_ALBYN_SQ202_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_ALBYN_SQ202_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ202)) == (LOG_SUCCESS)) || ((LOG_GETSTATUS(MIS_SQ202)) == (LOG_FAILED))) {
        if ((SQ202_HARRYBUSTED) == (TRUE)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_ALBYN_SQ202_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ202_700_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ202_700_02");
    INFO_CLEARCHOICES(0x156bd);
    INFO_ADDCHOICE(0x156bd, "I didn't know it was illegal.", 0x156c0);
    INFO_ADDCHOICE(0x156bd, "Someone's imagination got carried away.", 0x156c1);
}

func void DIA_ALBYN_SQ202_DONTKNOW() {
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_SQ202_DontKnow_15_01");
    if ((ALBYN_STATUSGIVEN) == (TRUE)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ202_DontKnow_700_02");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ202_DontKnow_700_03");
    CREATEINVITEMS(SELF, 0x9dd0, 1);
    B_GIVEINVITEMS(SELF, OTHER, 0x9dd0, 1);
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ202_DontKnow_700_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ202_DontKnow_700_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ202_DontKnow_700_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ202_DontKnow_700_07");
    INFO_CLEARCHOICES(0x156bd);
    INFO_ADDCHOICE(0x156bd, "It won't happen again.", 0x156c3);
    INFO_ADDCHOICE(0x156bd, "Why forbid something that people demand?", 0x156c4);
}

func void DIA_ALBYN_SQ202_NOTME() {
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_SQ202_NotMe_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ202_NotMe_700_02");
    AI_RESETFACEANI(SELF);
}

func void DIA_ALBYN_SQ202_WHATNEXT() {
    INFO_CLEARCHOICES(0x156bd);
    INFO_ADDCHOICE(0x156bd, "What awaits me?", 0x156c5);
}

func void DIA_ALBYN_SQ202_DONTKNOW_NOMORE() {
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_SQ202_NoMore_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ202_NoMore_700_02");
    DIA_ALBYN_SQ202_WHATNEXT();
}

func void DIA_ALBYN_SQ202_DONTKNOW_WHY() {
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_SQ202_Why_15_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_SQ202_Why_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ202_Why_700_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ202_Why_700_04");
    DIA_ALBYN_SQ202_WHATNEXT();
}

func void DIA_ALBYN_SQ202_DONTKNOW_WHY_WHATNEXT() {
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_SQ202_WhatNext_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ202_WhatNext_700_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ202_WhatNext_700_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ202_WhatNext_700_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ202_WhatNext_700_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ202_WhatNext_700_07");
    INFO_CLEARCHOICES(0x156bd);
    INFO_ADDCHOICE(0x156bd, "Here's the gold. (200 GP)", 0x156c8);
    INFO_ADDCHOICE(0x156bd, "It was Petra.", 0x156c9);
    if ((SQ202_RASCOWANTSJOINT) == (2)) {
        INFO_ADDCHOICE(0x156bd, "Rasco gave me joints. (Frame)", 0x156ca);
    };
    INFO_ADDCHOICE(0x156bd, "Do what you have to do.", 0x156cb);
}

func void DIA_ALBYN_SQ202_FREE() {
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ202_Free_700_01");
    INFO_CLEARCHOICES(0x156bd);
}

func void DIA_ALBYN_SQ202_STOCKS() {
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ202_Chance_700_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ202_Chance_700_02");
    AI_RESETFACEANI(SELF);
    INFO_CLEARCHOICES(0x156bd);
    AI_STOPPROCESSINFOS(SELF);
    AI_FUNCTION(SELF, 0x156cc);
}

func void DIA_ALBYN_SQ202_DONTKNOW_WHY_WHATNEXT_GOLD() {
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (SQ202_ALBYNSAFE)) {
        AI_OUTPUT(OTHER, SELF, "DIA_Albyn_SQ202_Gold_15_01");
        B_GIVEINVITEMS(OTHER, SELF, 0x859b, SQ202_ALBYNSAFE);
        DIA_ALBYN_SQ202_FREE();
    };
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    B_SAY(SELF, OTHER, "$NOGOLD_BRIBE");
    AI_RESETFACEANI(SELF);
    DIA_ALBYN_SQ202_STOCKS();
}

func void DIA_ALBYN_SQ202_DONTKNOW_WHY_WHATNEXT_FREDRIK() {
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_SQ202_Fredrik_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ202_Fredrik_700_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_SQ202_Fredrik_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ202_Fredrik_700_04");
    DIA_ALBYN_SQ202_STOCKS();
}

func void DIA_ALBYN_SQ202_DONTKNOW_WHY_WHATNEXT_RASCO() {
    SQ202_RASCOFRAMED = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_SQ202_Rasco_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ202_Rasco_700_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ202_Rasco_700_03");
    DIA_ALBYN_SQ202_FREE();
}

func void DIA_ALBYN_SQ202_DONTKNOW_WHY_WHATNEXT_DOIT() {
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_SQ202_DoIt_15_01");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    DIA_ALBYN_SQ202_STOCKS();
}

func void ALBYN_SQ202_STOCKS() {
    SQ202_CANUSESTOCKS = TRUE;
    FADESCREENTOBLACKF(1, 0xf4f7, 1000);
}

instance DIA_ALBYN_SQ416_WELCOME(C_INFO) {
    NPC = 0xe09d;
    NR = 1;
    CONDITION = DIA_ALBYN_SQ416_WELCOME_CONDITION;
    INFORMATION = DIA_ALBYN_SQ416_WELCOME_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_ALBYN_SQ416_WELCOME_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_SQ416)) == (LOG_RUNNING)) && ((SQ416_PARTYCUTSCENEENABLE) == (3))) && ((NPC_GETDISTTONPC(SELF, OTHER)) <= (300))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ALBYN_SQ416_WELCOME_INFO() {
    AI_TURNTONPC(OTHER, SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ416_Welcome_700_01");
    AI_STOPPROCESSINFOS(SELF);
    NPC_EXCHANGEROUTINE(SELF, START);
    AI_FUNCTION(SELF, 0xf84f);
}

instance DIA_ALBYN_SQ416_GOODJOB(C_INFO) {
    NPC = 0xe09d;
    NR = 1;
    CONDITION = DIA_ALBYN_SQ416_GOODJOB_CONDITION;
    INFORMATION = DIA_ALBYN_SQ416_GOODJOB_INFO;
    PERMANENT = TRUE;
    IMPORTANT = TRUE;
}

func int DIA_ALBYN_SQ416_GOODJOB_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ416)) == (LOG_SUCCESS)) && (NPC_ISINSTATE(SELF, 0xf09f))) {
        if ((SQ416_RAMSEYPARTY) != (2)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_ALBYN_SQ416_GOODJOB_INFO() {
    if ((SQ416_AMBIENT_ALBYN) == (FALSE)) {
        SQ416_AMBIENT_ALBYN = TRUE;
        B_GIVEPLAYERXP(XP_SQ416_AMBIENT);
    };
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_SQ416_GoodJob_700_01");
    AI_STOPPROCESSINFOS(SELF);
}

var int DIA_ALBYN_SQ416_GOODJOB_INFO.SQ416_AMBIENT_ALBYN = 0;
instance DIA_ALBYN_KQ405_BURKHARD(C_INFO) {
    NPC = 0xe09d;
    NR = 1;
    CONDITION = DIA_ALBYN_KQ405_BURKHARD_CONDITION;
    INFORMATION = DIA_ALBYN_KQ405_BURKHARD_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I'm looking for a man named Burkhard.";
}

func int DIA_ALBYN_KQ405_BURKHARD_CONDITION() {
    if ((LOG_GETSTATUS(MIS_KQ405)) == (LOG_RUNNING)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ALBYN_KQ405_BURKHARD_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_KQ405_Burkhard_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_KQ405_Burkhard_700_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_KQ405_Burkhard_700_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_KQ405_Burkhard_700_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_KQ405_Burkhard_700_05");
    AI_RESETFACEANI(OTHER);
    AI_LOGENTRY(TOPIC_KQ405, LOG_KQ405_ALBYN_HARRY);
}

instance DIA_ALBYN_KQ405_QUESTIONS(C_INFO) {
    NPC = 0xe09d;
    NR = 1;
    CONDITION = DIA_ALBYN_KQ405_QUESTIONS_CONDITION;
    INFORMATION = DIA_ALBYN_KQ405_QUESTIONS_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_BURKHARDASK;
}

var int ALBYN_KQ405_QUESTIONS_WHO = 0;
var int ALBYN_KQ405_QUESTIONS_SCOUT = 0;
func int DIA_ALBYN_KQ405_QUESTIONS_CONDITION() {
    if (((LOG_GETSTATUS(MIS_KQ405)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x156d4))) {
        if (((ALBYN_KQ405_QUESTIONS_WHO) == (FALSE)) || ((ALBYN_KQ405_QUESTIONS_SCOUT) == (FALSE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_ALBYN_KQ405_QUESTIONS_INFO() {
    INFO_CLEARCHOICES(0x156d7);
    INFO_ADDCHOICE(0x156d7, DIALOG_BACK, 0x156dc);
    if ((ALBYN_KQ405_QUESTIONS_WHO) == (FALSE)) {
        INFO_ADDCHOICE(0x156d7, "Do you know who he was?", 0x156dd);
    };
    if ((ALBYN_KQ405_QUESTIONS_SCOUT) == (FALSE)) {
        INFO_ADDCHOICE(0x156d7, "He made no secret of his profession?", 0x156de);
    };
}

func void DIA_ALBYN_KQ405_QUESTIONS_BACK() {
    INFO_CLEARCHOICES(0x156d4);
}

func void DIA_ALBYN_KQ405_QUESTIONS_WHO() {
    ALBYN_KQ405_QUESTIONS_WHO = TRUE;
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_KQ405_Burkhard_Who_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_KQ405_Burkhard_Who_700_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_KQ405_Burkhard_Who_700_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_KQ405_Burkhard_Who_700_04");
    AI_RESETFACEANI(OTHER);
    DIA_ALBYN_KQ405_QUESTIONS_INFO();
}

func void DIA_ALBYN_KQ405_QUESTIONS_SCOUT() {
    ALBYN_KQ405_QUESTIONS_SCOUT = TRUE;
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Albyn_KQ405_Burkhard_Scout_15_01");
    AI_STARTFACEANI(SELF, S_THINK, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_KQ405_Burkhard_Scout_700_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Albyn_KQ405_Burkhard_Scout_700_03");
    AI_RESETFACEANI(OTHER);
    AI_RESETFACEANI(SELF);
    DIA_ALBYN_KQ405_QUESTIONS_INFO();
}

instance DIA_ALBYN_AMBIENT(C_INFO) {
    NPC = 0xe09d;
    NR = 890;
    CONDITION = DIA_ALBYN_AMBIENT_CONDITION;
    INFORMATION = DIA_ALBYN_AMBIENT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "How are things going?";
}

func int DIA_ALBYN_AMBIENT_CONDITION() {
    if ((NPC_ISINSTATE(SELF, 0xf09f)) && (NPC_KNOWSINFO(OTHER, 0x15683))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ALBYN_AMBIENT_INFO() {
    B_SAY(OTHER, SELF, "$MARVIN_WhatNew3");
    if ((((SILBACHREPUTATION) == (0)) && ((Q402_MILITIA_MESSAGE) == (FALSE))) && ((Q402_ARAXOS_MESSAGE) == (FALSE))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Ambient_13_01");
    };
    if (((((SILBACHREPUTATION) > (0)) && ((SILBACHREPUTATION) < (4))) && ((Q402_MILITIA_MESSAGE) == (FALSE))) && ((Q402_ARAXOS_MESSAGE) == (FALSE))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Ambient_13_02");
    };
    if ((((SILBACHREPUTATION) >= (4)) && ((Q402_MILITIA_MESSAGE) == (FALSE))) && ((Q402_ARAXOS_MESSAGE) == (FALSE))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Ambient_13_03");
    };
    if (((Q402_MILITIA_MESSAGE) == (TRUE)) || ((Q402_ARAXOS_MESSAGE) == (TRUE))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Albyn_Ambient_13_04");
    };
}

instance DIA_ALBYN_FORESTBUG(C_INFO) {
    NPC = 0xe09d;
    NR = 600;
    CONDITION = DIA_ALBYN_FORESTBUG_CONDITION;
    INFORMATION = DIA_ALBYN_FORESTBUG_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I want to collect the reward for the beast I hunted.";
}

func int DIA_ALBYN_FORESTBUG_CONDITION() {
    if (((BOUNTY_FORESTBUG_SPAWN) == (TRUE)) && ((BOUNTY_FORESTBUG_SPAWNINARCHOLOS) == (3))) {
        if (NPC_ISDEAD(BDT_8038_FORESTBUG)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_ALBYN_FORESTBUG_INFO() {
    ALBYN_WANTEDPOSTER_REWARD = 100;
    AI_OUTPUT(OTHER, SELF, "DIA_Garos_Bounty_15_01");
    GAMESERVICES_INCREMENTSTATANDCHECKACHIEVEMENT(STAT_ACH_28, 1, ACH_28, STAT_ACH_28_REQUIRED);
    CREATEINVITEMS(SELF, 0x859b, ALBYN_WANTEDPOSTER_REWARD);
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, ALBYN_WANTEDPOSTER_REWARD);
    B_GIVEPLAYERXP(ALBYN_WANTEDPOSTER_REWARD);
    AI_WAITTILLEND(SELF, OTHER);
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    B_SAY(SELF, OTHER, "$GoddamnBug");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    B_SAY(SELF, OTHER, "$REWARD_CALM");
    AI_RESETFACEANI(SELF);
}

var int DIA_ALBYN_FORESTBUG_INFO.ALBYN_WANTEDPOSTER_REWARD = 0;
instance DIA_ALBYN_PICKPOCKET(C_INFO) {
    NPC = 0xe09d;
    NR = 900;
    CONDITION = DIA_ALBYN_PICKPOCKET_CONDITION;
    INFORMATION = DIA_ALBYN_PICKPOCKET_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = PICKPOCKET_120;
}

func int DIA_ALBYN_PICKPOCKET_CONDITION() {
    if (((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) && ((SELF.AIVAR[6]) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ALBYN_PICKPOCKET_INFO() {
    INFO_CLEARCHOICES(0x156e6);
    INFO_ADDCHOICE(0x156e6, DIALOG_BACK, 0x156ea);
    INFO_ADDCHOICE(0x156e6, DIALOG_PICKPOCKET, 0x156e9);
}

func void DIA_ALBYN_PICKPOCKET_DOIT() {
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (3)) {
        CREATEINVITEMS(SELF, 0x859f, 1);
        B_GIVEINVITEMS(SELF, OTHER, 0x859f, 1);
        B_PICKPOCKET_AMBIENT_TIER_3();
        SELF.AIVAR[6] = TRUE;
        INFO_CLEARCHOICES(0x156e6);
    };
    AI_PLAYANI(HERO, T_CANNOTTAKE);
    PRINTSCREEN(PRINT_CANTPICKPOCKETTHISPERSON, -(1), -(1), FONT_SCREEN, 4);
    INFO_CLEARCHOICES(0x156e6);
}

func void DIA_ALBYN_PICKPOCKET_BACK() {
    INFO_CLEARCHOICES(0x156e6);
}

