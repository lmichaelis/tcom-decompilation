var int COOKINGMEALS_MODE = 0;
const int COOKINGMEALS_INFO = -1;
const int COOKINGMEALS_INSTANCE = -1;
instance PC_COOKMEAL(C_INFO) {
    NPC = 0xc3ab;
    CONDITION = PC_COOKMEAL_CONDITION;
    INFORMATION = PC_COOKMEAL_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_PREPAREMEAL;
}

func int PC_COOKMEAL_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if ((COOKINGMEALS_MODE) == (FALSE)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_COOKMEAL_INFO() {
    COOKINGMEALS_MODE = TRUE;
    MEM_CALL(0xbe67);
}

instance PC_COOKINGMEAL_BACK(C_INFO) {
    NPC = 0xc3ab;
    NR = 1;
    CONDITION = PC_COOKINGMEAL_BACK_CONDITION;
    INFORMATION = PC_COOKINGMEAL_BACK_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_BACK;
}

func int PC_COOKINGMEAL_BACK_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if ((COOKINGMEALS_MODE) == (TRUE)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_COOKINGMEAL_BACK_INFO() {
    COOKINGMEALS_MODE = FALSE;
    COOKINGMEALS_INSTANCE = -(1);
}

func void PC_COOKINGMEALS_AMOUNTCHOICES() {
    INFO_CLEARCHOICES(COOKINGMEALS_INFO);
    MAX = PC_CRAFTRECIPEITEM_MAX(COOKINGMEALS_INSTANCE);
    if ((MAX) > (0)) {
        ALL_STRING = CS4(DIALOG_ALL, " (", I2S(MAX), ")");
        INFO_ADDCHOICE(COOKINGMEALS_INFO, ALL_STRING, 0xbdae);
        if ((MAX) > (9)) {
            INFO_ADDCHOICE(COOKINGMEALS_INFO, CHOICE_NUMBER_10, 0xbdb0);
        };
        if ((MAX) > (4)) {
            INFO_ADDCHOICE(COOKINGMEALS_INFO, CHOICE_NUMBER_5, 0xbdb1);
        };
        INFO_ADDCHOICE(COOKINGMEALS_INFO, CHOICE_NUMBER_1, 0xbdb2);
        INFO_ADDCHOICE(COOKINGMEALS_INFO, DIALOG_BACK, 0xbdad);
    };
    COOKINGMEALS_INSTANCE = -(1);
}

var int PC_COOKINGMEALS_AMOUNTCHOICES.MAX = 0;
var string PC_COOKINGMEALS_AMOUNTCHOICES.ALL_STRING = "";
func void PC_COOKINGMEALS_CHECKAMOUNTCHOICES() {
    MAX = PC_CRAFTRECIPEITEM_MAX(COOKINGMEALS_INSTANCE);
    if ((MAX) > (0)) {
        PC_COOKINGMEALS_AMOUNTCHOICES();
    };
    COOKINGMEALS_INSTANCE = -(1);
    PRINTS_EXT(PRINT_PRODITEMSMISSING, RGBA(255, 50, 50, 255));
}

var int PC_COOKINGMEALS_CHECKAMOUNTCHOICES.MAX = 0;
func void PC_COOKINGMEALS_AMOUNTBACK() {
    INFO_CLEARCHOICES(COOKINGMEALS_INFO);
    COOKINGMEALS_INSTANCE = -(1);
}

func void PC_COOKINGMEALS_AMOUNTALL() {
    MAX = PC_CRAFTRECIPEITEM_MAX(COOKINGMEALS_INSTANCE);
    PC_CRAFTRECIPEITEMS(COOKINGMEALS_INSTANCE, MAX);
    PC_COOKINGMEALS_AMOUNTCHOICES();
}

var int PC_COOKINGMEALS_AMOUNTALL.MAX = 0;
func void PC_COOKINGMEALS_AMOUNT10() {
    PC_CRAFTRECIPEITEMS(COOKINGMEALS_INSTANCE, 10);
    PC_COOKINGMEALS_AMOUNTCHOICES();
}

func void PC_COOKINGMEALS_AMOUNT5() {
    PC_CRAFTRECIPEITEMS(COOKINGMEALS_INSTANCE, 5);
    PC_COOKINGMEALS_AMOUNTCHOICES();
}

func void PC_COOKINGMEALS_AMOUNT1() {
    PC_CRAFTRECIPEITEMS(COOKINGMEALS_INSTANCE, 1);
    PC_COOKINGMEALS_AMOUNTCHOICES();
}

instance PC_ITFO_PICKLEDBEET(C_INFO) {
    NR = 0x27d8;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_PICKLEDBEET_CONDITION;
    INFORMATION = PC_ITFO_PICKLEDBEET_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_PICKLEDBEET;
}

func int PC_ITFO_PICKLEDBEET_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[0]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_PICKLEDBEET_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c06;
    COOKINGMEALS_INFO = 0xbdb3;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_BEERBREAD(C_INFO) {
    NR = 0x27d9;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_BEERBREAD_CONDITION;
    INFORMATION = PC_ITFO_BEERBREAD_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_BEERBREAD;
}

func int PC_ITFO_BEERBREAD_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[1]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_BEERBREAD_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c08;
    COOKINGMEALS_INFO = 0xbdb6;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_PUMPKINCOMPOTE(C_INFO) {
    NR = 0x27da;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_PUMPKINCOMPOTE_CONDITION;
    INFORMATION = PC_ITFO_PUMPKINCOMPOTE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_PUMPKINCOMPOTE;
}

func int PC_ITFO_PUMPKINCOMPOTE_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[2]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_PUMPKINCOMPOTE_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c0a;
    COOKINGMEALS_INFO = 0xbdb9;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_HONEYCOOKIES(C_INFO) {
    NR = 0x27db;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_HONEYCOOKIES_CONDITION;
    INFORMATION = PC_ITFO_HONEYCOOKIES_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_HONEYCOOKIES;
}

func int PC_ITFO_HONEYCOOKIES_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[3]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_HONEYCOOKIES_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c0c;
    COOKINGMEALS_INFO = 0xbdbc;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_FRIEDFISHSKINS(C_INFO) {
    NR = 0x27dc;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_FRIEDFISHSKINS_CONDITION;
    INFORMATION = PC_ITFO_FRIEDFISHSKINS_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_FRIEDFISHSKINS;
}

func int PC_ITFO_FRIEDFISHSKINS_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[4]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_FRIEDFISHSKINS_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c0e;
    COOKINGMEALS_INFO = 0xbdbf;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_SCAVENGERSHASHLIK(C_INFO) {
    NR = 0x27dd;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_SCAVENGERSHASHLIK_CONDITION;
    INFORMATION = PC_ITFO_SCAVENGERSHASHLIK_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_SCAVENGERSHASHLIK;
}

func int PC_ITFO_SCAVENGERSHASHLIK_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[5]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_SCAVENGERSHASHLIK_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c10;
    COOKINGMEALS_INFO = 0xbdc2;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_ROASTEDINSECTS(C_INFO) {
    NR = 0x27de;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_ROASTEDINSECTS_CONDITION;
    INFORMATION = PC_ITFO_ROASTEDINSECTS_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_ROASTEDINSECTS;
}

func int PC_ITFO_ROASTEDINSECTS_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[6]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_ROASTEDINSECTS_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c12;
    COOKINGMEALS_INFO = 0xbdc5;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_CABBAGESOUP(C_INFO) {
    NR = 0x27df;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_CABBAGESOUP_CONDITION;
    INFORMATION = PC_ITFO_CABBAGESOUP_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_CABBAGESOUP;
}

func int PC_ITFO_CABBAGESOUP_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[7]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_CABBAGESOUP_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c14;
    COOKINGMEALS_INFO = 0xbdc8;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_MUSHROOMCOTLET(C_INFO) {
    NR = 0x27e0;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_MUSHROOMCOTLET_CONDITION;
    INFORMATION = PC_ITFO_MUSHROOMCOTLET_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_MUSHROOMCOTLET;
}

func int PC_ITFO_MUSHROOMCOTLET_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[8]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_MUSHROOMCOTLET_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c16;
    COOKINGMEALS_INFO = 0xbdcb;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_DRYFRUITCOMPOTE(C_INFO) {
    NR = 0x27e1;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_DRYFRUITCOMPOTE_CONDITION;
    INFORMATION = PC_ITFO_DRYFRUITCOMPOTE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_DRYFRUITCOMPOTE;
}

func int PC_ITFO_DRYFRUITCOMPOTE_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[9]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_DRYFRUITCOMPOTE_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c18;
    COOKINGMEALS_INFO = 0xbdce;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_FISHVINEGAR(C_INFO) {
    NR = 0x27e2;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_FISHVINEGAR_CONDITION;
    INFORMATION = PC_ITFO_FISHVINEGAR_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_FISHVINEGAR;
}

func int PC_ITFO_FISHVINEGAR_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[10]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_FISHVINEGAR_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c1a;
    COOKINGMEALS_INFO = 0xbdd1;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_MANAPERMSOUP(C_INFO) {
    NR = 0x27e3;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_MANAPERMSOUP_CONDITION;
    INFORMATION = PC_ITFO_MANAPERMSOUP_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_MANAPERMSOUP;
}

func int PC_ITFO_MANAPERMSOUP_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[11]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_MANAPERMSOUP_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c1c;
    COOKINGMEALS_INFO = 0xbdd4;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_SWEETBUN(C_INFO) {
    NR = 0x27e4;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_SWEETBUN_CONDITION;
    INFORMATION = PC_ITFO_SWEETBUN_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_SWEETBUN;
}

func int PC_ITFO_SWEETBUN_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[12]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_SWEETBUN_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c1e;
    COOKINGMEALS_INFO = 0xbdd7;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_MUSHROOMSOUP(C_INFO) {
    NR = 0x27e5;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_MUSHROOMSOUP_CONDITION;
    INFORMATION = PC_ITFO_MUSHROOMSOUP_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_MUSHROOMSOUP;
}

func int PC_ITFO_MUSHROOMSOUP_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[13]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_MUSHROOMSOUP_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c20;
    COOKINGMEALS_INFO = 0xbdda;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_RIVERMIRTSOUP(C_INFO) {
    NR = 0x27e6;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_RIVERMIRTSOUP_CONDITION;
    INFORMATION = PC_ITFO_RIVERMIRTSOUP_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_RIVERMIRTSOUP;
}

func int PC_ITFO_RIVERMIRTSOUP_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[14]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_RIVERMIRTSOUP_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c22;
    COOKINGMEALS_INFO = 0xbddd;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_SPEEDHERBOYSTERS(C_INFO) {
    NR = 0x27e7;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_SPEEDHERBOYSTERS_CONDITION;
    INFORMATION = PC_ITFO_SPEEDHERBOYSTERS_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_SPEEDHERBOYSTERS;
}

func int PC_ITFO_SPEEDHERBOYSTERS_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[15]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_SPEEDHERBOYSTERS_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c24;
    COOKINGMEALS_INFO = 0xbde0;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_BOARSTEW(C_INFO) {
    NR = 0x27e8;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_BOARSTEW_CONDITION;
    INFORMATION = PC_ITFO_BOARSTEW_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_BOARSTEW;
}

func int PC_ITFO_BOARSTEW_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[16]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_BOARSTEW_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c26;
    COOKINGMEALS_INFO = 0xbde3;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_MEATMISHMASH(C_INFO) {
    NR = 0x27e9;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_MEATMISHMASH_CONDITION;
    INFORMATION = PC_ITFO_MEATMISHMASH_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_MEATMISHMASH;
}

func int PC_ITFO_MEATMISHMASH_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[17]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_MEATMISHMASH_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c28;
    COOKINGMEALS_INFO = 0xbde6;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_RATSTICK(C_INFO) {
    NR = 0x27ea;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_RATSTICK_CONDITION;
    INFORMATION = PC_ITFO_RATSTICK_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_RATSTICK;
}

func int PC_ITFO_RATSTICK_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[18]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_RATSTICK_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c2a;
    COOKINGMEALS_INFO = 0xbde9;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_MULLEDWISP(C_INFO) {
    NR = 0x27eb;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_MULLEDWISP_CONDITION;
    INFORMATION = PC_ITFO_MULLEDWISP_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_MULLEDWISP;
}

func int PC_ITFO_MULLEDWISP_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[19]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_MULLEDWISP_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c2c;
    COOKINGMEALS_INFO = 0xbdec;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_FISHCOTLET(C_INFO) {
    NR = 0x27ec;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_FISHCOTLET_CONDITION;
    INFORMATION = PC_ITFO_FISHCOTLET_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_FISHCOTLET;
}

func int PC_ITFO_FISHCOTLET_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[20]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_FISHCOTLET_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c2e;
    COOKINGMEALS_INFO = 0xbdef;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_FISHFILLETPERM(C_INFO) {
    NR = 0x27ed;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_FISHFILLETPERM_CONDITION;
    INFORMATION = PC_ITFO_FISHFILLETPERM_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_FISHFILLETPERM;
}

func int PC_ITFO_FISHFILLETPERM_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[21]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_FISHFILLETPERM_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c30;
    COOKINGMEALS_INFO = 0xbdf2;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_POORBROTH(C_INFO) {
    NR = 0x27ee;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_POORBROTH_CONDITION;
    INFORMATION = PC_ITFO_POORBROTH_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_POORBROTH;
}

func int PC_ITFO_POORBROTH_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[22]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_POORBROTH_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c32;
    COOKINGMEALS_INFO = 0xbdf5;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_FISHPOT(C_INFO) {
    NR = 0x27ef;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_FISHPOT_CONDITION;
    INFORMATION = PC_ITFO_FISHPOT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_FISHPOT;
}

func int PC_ITFO_FISHPOT_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[23]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_FISHPOT_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c34;
    COOKINGMEALS_INFO = 0xbdf8;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_HERBSTEW(C_INFO) {
    NR = 0x27f1;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_HERBSTEW_CONDITION;
    INFORMATION = PC_ITFO_HERBSTEW_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_HERBSTEW;
}

func int PC_ITFO_HERBSTEW_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[25]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_HERBSTEW_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c36;
    COOKINGMEALS_INFO = 0xbdfb;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_MEATANDCHEESE(C_INFO) {
    NR = 0x27f2;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_MEATANDCHEESE_CONDITION;
    INFORMATION = PC_ITFO_MEATANDCHEESE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_MEATANDCHEESE;
}

func int PC_ITFO_MEATANDCHEESE_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[26]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_MEATANDCHEESE_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c38;
    COOKINGMEALS_INFO = 0xbdfe;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_MEATANDBREAD(C_INFO) {
    NR = 0x27f3;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_MEATANDBREAD_CONDITION;
    INFORMATION = PC_ITFO_MEATANDBREAD_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_MEATANDBREAD;
}

func int PC_ITFO_MEATANDBREAD_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[27]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_MEATANDBREAD_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c3a;
    COOKINGMEALS_INFO = 0xbe01;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_MUSHROOMSTEW(C_INFO) {
    NR = 0x27f4;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_MUSHROOMSTEW_CONDITION;
    INFORMATION = PC_ITFO_MUSHROOMSTEW_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_MUSHROOMSTEW;
}

func int PC_ITFO_MUSHROOMSTEW_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[28]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_MUSHROOMSTEW_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c3c;
    COOKINGMEALS_INFO = 0xbe04;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_POORAPPLEPIE(C_INFO) {
    NR = 0x27f5;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_POORAPPLEPIE_CONDITION;
    INFORMATION = PC_ITFO_POORAPPLEPIE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_POORAPPLEPIE;
}

func int PC_ITFO_POORAPPLEPIE_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[29]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_POORAPPLEPIE_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c3e;
    COOKINGMEALS_INFO = 0xbe07;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_POORPATE(C_INFO) {
    NR = 0x27f6;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_POORPATE_CONDITION;
    INFORMATION = PC_ITFO_POORPATE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_POORPATE;
}

func int PC_ITFO_POORPATE_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[30]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_POORPATE_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c40;
    COOKINGMEALS_INFO = 0xbe0a;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_PICKLEDMUSHROOMS(C_INFO) {
    NR = 0x27f7;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_PICKLEDMUSHROOMS_CONDITION;
    INFORMATION = PC_ITFO_PICKLEDMUSHROOMS_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_PICKLEDMUSHROOMS;
}

func int PC_ITFO_PICKLEDMUSHROOMS_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[31]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_PICKLEDMUSHROOMS_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c42;
    COOKINGMEALS_INFO = 0xbe0d;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_BREADSOUP(C_INFO) {
    NR = 0x27f8;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_BREADSOUP_CONDITION;
    INFORMATION = PC_ITFO_BREADSOUP_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_BREADSOUP;
}

func int PC_ITFO_BREADSOUP_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[32]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_BREADSOUP_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c44;
    COOKINGMEALS_INFO = 0xbe10;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_SHEPARDROAST(C_INFO) {
    NR = 0x27f9;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_SHEPARDROAST_CONDITION;
    INFORMATION = PC_ITFO_SHEPARDROAST_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_SHEPARDROAST;
}

func int PC_ITFO_SHEPARDROAST_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[33]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_SHEPARDROAST_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c46;
    COOKINGMEALS_INFO = 0xbe13;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_POOREGGS(C_INFO) {
    NR = 0x27fa;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_POOREGGS_CONDITION;
    INFORMATION = PC_ITFO_POOREGGS_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_POOREGGS;
}

func int PC_ITFO_POOREGGS_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[34]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_POOREGGS_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c48;
    COOKINGMEALS_INFO = 0xbe16;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_BEERFISH(C_INFO) {
    NR = 0x27fb;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_BEERFISH_CONDITION;
    INFORMATION = PC_ITFO_BEERFISH_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_BEERFISH;
}

func int PC_ITFO_BEERFISH_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[35]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_BEERFISH_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c4a;
    COOKINGMEALS_INFO = 0xbe19;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_SPICYPIE(C_INFO) {
    NR = 0x27fc;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_SPICYPIE_CONDITION;
    INFORMATION = PC_ITFO_SPICYPIE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_SPICYPIE;
}

func int PC_ITFO_SPICYPIE_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[36]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_SPICYPIE_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c4c;
    COOKINGMEALS_INFO = 0xbe1c;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_VEGEPIE(C_INFO) {
    NR = 0x27fd;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_VEGEPIE_CONDITION;
    INFORMATION = PC_ITFO_VEGEPIE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_VEGEPIE;
}

func int PC_ITFO_VEGEPIE_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[37]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_VEGEPIE_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c4e;
    COOKINGMEALS_INFO = 0xbe1f;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_FATSTEW(C_INFO) {
    NR = 0x27ff;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_FATSTEW_CONDITION;
    INFORMATION = PC_ITFO_FATSTEW_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_FATSTEW;
}

func int PC_ITFO_FATSTEW_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[39]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_FATSTEW_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c50;
    COOKINGMEALS_INFO = 0xbe22;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_BEARSTEW(C_INFO) {
    NR = 0x2800;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_BEARSTEW_CONDITION;
    INFORMATION = PC_ITFO_BEARSTEW_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_BEARSTEW;
}

func int PC_ITFO_BEARSTEW_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[40]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_BEARSTEW_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c53;
    COOKINGMEALS_INFO = 0xbe25;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_HUNTERSPECIAL(C_INFO) {
    NR = 0x2801;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_HUNTERSPECIAL_CONDITION;
    INFORMATION = PC_ITFO_HUNTERSPECIAL_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_HUNTERSPECIAL;
}

func int PC_ITFO_HUNTERSPECIAL_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[41]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_HUNTERSPECIAL_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c56;
    COOKINGMEALS_INFO = 0xbe28;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_SPEEDSTEW(C_INFO) {
    NR = 0x2802;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_SPEEDSTEW_CONDITION;
    INFORMATION = PC_ITFO_SPEEDSTEW_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_SPEEDSTEW;
}

func int PC_ITFO_SPEEDSTEW_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[42]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_SPEEDSTEW_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c58;
    COOKINGMEALS_INFO = 0xbe2b;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_SMOKEDHERBFISH(C_INFO) {
    NR = 0x2803;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_SMOKEDHERBFISH_CONDITION;
    INFORMATION = PC_ITFO_SMOKEDHERBFISH_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_SMOKEDHERBFISH;
}

func int PC_ITFO_SMOKEDHERBFISH_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[43]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_SMOKEDHERBFISH_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c5a;
    COOKINGMEALS_INFO = 0xbe2e;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_MEATPACKS(C_INFO) {
    NR = 0x2805;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_MEATPACKS_CONDITION;
    INFORMATION = PC_ITFO_MEATPACKS_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_MEATPACKS;
}

func int PC_ITFO_MEATPACKS_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[45]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_MEATPACKS_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c5c;
    COOKINGMEALS_INFO = 0xbe31;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_HERBMUSHROOMBREWING(C_INFO) {
    NR = 0x2806;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_HERBMUSHROOMBREWING_CONDITION;
    INFORMATION = PC_ITFO_HERBMUSHROOMBREWING_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_HERBMUSHROOMBREWING;
}

func int PC_ITFO_HERBMUSHROOMBREWING_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[46]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_HERBMUSHROOMBREWING_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c5e;
    COOKINGMEALS_INFO = 0xbe34;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_BERRYJAM(C_INFO) {
    NR = 0x2807;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_BERRYJAM_CONDITION;
    INFORMATION = PC_ITFO_BERRYJAM_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_BERRYJAM;
}

func int PC_ITFO_BERRYJAM_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[47]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_BERRYJAM_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c60;
    COOKINGMEALS_INFO = 0xbe37;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_STRENGTHJAM(C_INFO) {
    NR = 0x2808;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_STRENGTHJAM_CONDITION;
    INFORMATION = PC_ITFO_STRENGTHJAM_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_STRENGTHJAM;
}

func int PC_ITFO_STRENGTHJAM_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[48]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_STRENGTHJAM_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c62;
    COOKINGMEALS_INFO = 0xbe3a;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_DEXDUMPLINGS(C_INFO) {
    NR = 0x2809;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_DEXDUMPLINGS_CONDITION;
    INFORMATION = PC_ITFO_DEXDUMPLINGS_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_DEXDUMPLINGS;
}

func int PC_ITFO_DEXDUMPLINGS_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[49]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_DEXDUMPLINGS_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c64;
    COOKINGMEALS_INFO = 0xbe3d;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_SIMPLEOYSTERS(C_INFO) {
    NR = 0x280a;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_SIMPLEOYSTERS_CONDITION;
    INFORMATION = PC_ITFO_SIMPLEOYSTERS_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_SIMPLEOYSTERS;
}

func int PC_ITFO_SIMPLEOYSTERS_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[50]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_SIMPLEOYSTERS_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c66;
    COOKINGMEALS_INFO = 0xbe40;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_BERRYCOMPOTE(C_INFO) {
    NR = 0x280b;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_BERRYCOMPOTE_CONDITION;
    INFORMATION = PC_ITFO_BERRYCOMPOTE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_BERRYCOMPOTE;
}

func int PC_ITFO_BERRYCOMPOTE_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[51]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_BERRYCOMPOTE_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c68;
    COOKINGMEALS_INFO = 0xbe43;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_RASPBERRYDRINK(C_INFO) {
    NR = 0x280c;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_RASPBERRYDRINK_CONDITION;
    INFORMATION = PC_ITFO_RASPBERRYDRINK_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_RASPBERRYDRINK;
}

func int PC_ITFO_RASPBERRYDRINK_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[52]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_RASPBERRYDRINK_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c6a;
    COOKINGMEALS_INFO = 0xbe46;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_GRAPEJUICE(C_INFO) {
    NR = 0x280d;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_GRAPEJUICE_CONDITION;
    INFORMATION = PC_ITFO_GRAPEJUICE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_GRAPEJUICE;
}

func int PC_ITFO_GRAPEJUICE_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[53]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_GRAPEJUICE_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c6c;
    COOKINGMEALS_INFO = 0xbe49;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_RASPBERRYTINCTURE(C_INFO) {
    NR = 0x280e;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_RASPBERRYTINCTURE_CONDITION;
    INFORMATION = PC_ITFO_RASPBERRYTINCTURE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_RASPBERRYTINCTURE;
}

func int PC_ITFO_RASPBERRYTINCTURE_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[54]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_RASPBERRYTINCTURE_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c6e;
    COOKINGMEALS_INFO = 0xbe4c;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_EXOTICDESSERT(C_INFO) {
    NR = 0x280f;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_EXOTICDESSERT_CONDITION;
    INFORMATION = PC_ITFO_EXOTICDESSERT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_EXOTICDESSERT;
}

func int PC_ITFO_EXOTICDESSERT_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[55]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_EXOTICDESSERT_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c70;
    COOKINGMEALS_INFO = 0xbe4f;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_APPLEPIE(C_INFO) {
    NR = 0x2810;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_APPLEPIE_CONDITION;
    INFORMATION = PC_ITFO_APPLEPIE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_APPLEPIE;
}

func int PC_ITFO_APPLEPIE_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[56]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_APPLEPIE_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c72;
    COOKINGMEALS_INFO = 0xbe52;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_SPICYFISH(C_INFO) {
    NR = 0x2811;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_SPICYFISH_CONDITION;
    INFORMATION = PC_ITFO_SPICYFISH_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_SPICYFISH;
}

func int PC_ITFO_SPICYFISH_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[57]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_SPICYFISH_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c74;
    COOKINGMEALS_INFO = 0xbe55;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_HERBFISHSOUP(C_INFO) {
    NR = 0x2812;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_HERBFISHSOUP_CONDITION;
    INFORMATION = PC_ITFO_HERBFISHSOUP_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_HERBFISHSOUP;
}

func int PC_ITFO_HERBFISHSOUP_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[58]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_HERBFISHSOUP_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c76;
    COOKINGMEALS_INFO = 0xbe58;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_TROLLSOUP(C_INFO) {
    NR = 0x2813;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_TROLLSOUP_CONDITION;
    INFORMATION = PC_ITFO_TROLLSOUP_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_TROLLSOUP;
}

func int PC_ITFO_TROLLSOUP_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[59]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_TROLLSOUP_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c78;
    COOKINGMEALS_INFO = 0xbe5b;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_MARTHASTEW(C_INFO) {
    NR = 0x2814;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_MARTHASTEW_CONDITION;
    INFORMATION = PC_ITFO_MARTHASTEW_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_MARTHASTEW;
}

func int PC_ITFO_MARTHASTEW_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[60]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_MARTHASTEW_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c7a;
    COOKINGMEALS_INFO = 0xbe5e;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_WEEDSTEW(C_INFO) {
    NR = 0x2815;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_WEEDSTEW_CONDITION;
    INFORMATION = PC_ITFO_WEEDSTEW_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_WEEDSTEW;
}

func int PC_ITFO_WEEDSTEW_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[61]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_WEEDSTEW_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c7e;
    COOKINGMEALS_INFO = 0xbe61;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

instance PC_ITFO_MARTHASTEW_STR(C_INFO) {
    NR = 0x2816;
    NPC = 0xc3ab;
    CONDITION = PC_ITFO_MARTHASTEW_STR_CONDITION;
    INFORMATION = PC_ITFO_MARTHASTEW_STR_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = MEALNAME_MARTHASTEW_STR;
}

func int PC_ITFO_MARTHASTEW_STR_CONDITION() {
    if ((PLAYER_MOBSI_PRODUCTION) == (MOBSI_COOKING)) {
        if (((COOKINGMEALS_MODE) == (TRUE)) && ((PLAYER_TALENT_COOKING[62]) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void PC_ITFO_MARTHASTEW_STR_INFO() {
    COOKINGMEALS_INSTANCE = 0x8c7c;
    COOKINGMEALS_INFO = 0xbe64;
    PC_COOKINGMEALS_CHECKAMOUNTCHOICES();
}

func void COOKMEALS_REFRESHDIALOGS() {
    PC_ITFO_PICKLEDBEET.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c06);
    PC_ITFO_BEERBREAD.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c08);
    PC_ITFO_PUMPKINCOMPOTE.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c0a);
    PC_ITFO_HONEYCOOKIES.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c0c);
    PC_ITFO_FRIEDFISHSKINS.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c0e);
    PC_ITFO_SCAVENGERSHASHLIK.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c10);
    PC_ITFO_ROASTEDINSECTS.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c12);
    PC_ITFO_CABBAGESOUP.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c14);
    PC_ITFO_MUSHROOMCOTLET.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c16);
    PC_ITFO_DRYFRUITCOMPOTE.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c18);
    PC_ITFO_FISHVINEGAR.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c1a);
    PC_ITFO_MANAPERMSOUP.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c1c);
    PC_ITFO_SWEETBUN.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c1e);
    PC_ITFO_MUSHROOMSOUP.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c20);
    PC_ITFO_RIVERMIRTSOUP.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c22);
    PC_ITFO_SPEEDHERBOYSTERS.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c24);
    PC_ITFO_BOARSTEW.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c26);
    PC_ITFO_MEATMISHMASH.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c28);
    PC_ITFO_RATSTICK.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c2a);
    PC_ITFO_MULLEDWISP.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c2c);
    PC_ITFO_FISHCOTLET.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c2e);
    PC_ITFO_FISHFILLETPERM.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c30);
    PC_ITFO_POORBROTH.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c32);
    PC_ITFO_FISHPOT.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c34);
    PC_ITFO_HERBSTEW.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c36);
    PC_ITFO_MEATANDCHEESE.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c38);
    PC_ITFO_MEATANDBREAD.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c3a);
    PC_ITFO_MUSHROOMSTEW.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c3c);
    PC_ITFO_POORAPPLEPIE.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c3e);
    PC_ITFO_POORPATE.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c40);
    PC_ITFO_PICKLEDMUSHROOMS.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c42);
    PC_ITFO_BREADSOUP.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c44);
    PC_ITFO_SHEPARDROAST.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c46);
    PC_ITFO_POOREGGS.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c48);
    PC_ITFO_BEERFISH.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c4a);
    PC_ITFO_SPICYPIE.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c4c);
    PC_ITFO_VEGEPIE.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c4e);
    PC_ITFO_FATSTEW.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c50);
    PC_ITFO_BEARSTEW.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c53);
    PC_ITFO_HUNTERSPECIAL.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c56);
    PC_ITFO_SPEEDSTEW.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c58);
    PC_ITFO_SMOKEDHERBFISH.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c5a);
    PC_ITFO_MEATPACKS.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c5c);
    PC_ITFO_HERBMUSHROOMBREWING.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c5e);
    PC_ITFO_BERRYJAM.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c60);
    PC_ITFO_STRENGTHJAM.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c62);
    PC_ITFO_DEXDUMPLINGS.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c64);
    PC_ITFO_SIMPLEOYSTERS.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c66);
    PC_ITFO_BERRYCOMPOTE.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c68);
    PC_ITFO_RASPBERRYDRINK.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c6a);
    PC_ITFO_GRAPEJUICE.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c6c);
    PC_ITFO_RASPBERRYTINCTURE.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c6e);
    PC_ITFO_EXOTICDESSERT.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c70);
    PC_ITFO_APPLEPIE.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c72);
    PC_ITFO_SPICYFISH.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c74);
    PC_ITFO_HERBFISHSOUP.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c76);
    PC_ITFO_TROLLSOUP.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c78);
    PC_ITFO_MARTHASTEW.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c7a);
    PC_ITFO_WEEDSTEW.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c7e);
    PC_ITFO_MARTHASTEW_STR.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x8c7c);
}

