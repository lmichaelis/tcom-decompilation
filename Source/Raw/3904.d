var int ALLANCANTEACHUSCROSSBOW = 0;
var int ALLANCANTEACHUSHUNT = 0;
var int ALLANHUNTTEACHINFO = 0;
instance DIA_ALLAN_EXIT(C_INFO) {
    NPC = 0xcd11;
    NR = 999;
    CONDITION = DIA_ALLAN_EXIT_CONDITION;
    INFORMATION = DIA_ALLAN_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_ALLAN_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_ALLAN_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_ALLAN_HELLO(C_INFO) {
    NPC = 0xcd11;
    NR = 1;
    CONDITION = DIA_ALLAN_HELLO_CONDITION;
    INFORMATION = DIA_ALLAN_HELLO_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Are you a hunter?";
}

func int DIA_ALLAN_HELLO_CONDITION() {
    return TRUE;
}

func void DIA_ALLAN_HELLO_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Allan_Hello_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Allan_Hello_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Allan_Hello_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Allan_Hello_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Allan_Hello_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Allan_Hello_03_06");
}

instance DIA_ALLAN_CANYOUTEACH(C_INFO) {
    NPC = 0xcd11;
    NR = 15;
    CONDITION = DIA_ALLAN_CANYOUTEACH_CONDITION;
    INFORMATION = DIA_ALLAN_CANYOUTEACH_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Can you teach me something about hunting?";
}

func int DIA_ALLAN_CANYOUTEACH_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x12437)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ALLAN_CANYOUTEACH_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Allan_CanYouTeach_15_01");
    B_SAY(SELF, OTHER, "$SURE_V2");
    AI_OUTPUT(SELF, OTHER, "DIA_Allan_CanYouTeach_Gold_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Allan_CanYouTeach_Gold_03_03");
    ALLANCANTEACHUSCROSSBOW = TRUE;
    ALLANCANTEACHUSHUNT = TRUE;
    TEACHER_LOGENTRY_ALLAN();
}

var string ALLAN_PRINTS = "";
var int ALLAN_CURRENTCBLEVEL = 0;
instance DIA_ALLAN_TRAIN(C_INFO) {
    NPC = 0xcd11;
    NR = 7;
    CONDITION = DIA_ALLAN_TRAIN_CONDITION;
    INFORMATION = DIA_ALLAN_TRAIN_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "I want to train.";
}

func int DIA_ALLAN_TRAIN_CONDITION() {
    if ((ALLANCANTEACHUSCROSSBOW) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ALLAN_TRAIN_CHOICES() {
    ALLAN_GOLDCOST = 15;
    ALLAN_CURRENTCBLEVEL = OTHER.AIVAR[87];
    INFO_CLEARCHOICES(0x1243f);
    INFO_ADDCHOICE(0x1243f, DIALOG_BACK, 0x12444);
    INFO_ADDCHOICE(0x1243f, B_BUILDLEARNSTRING2(PRINT_LEARNCROSSBOW1, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 1), ALLAN_GOLDCOST), 0x12445);
    INFO_ADDCHOICE(0x1243f, B_BUILDLEARNSTRING2(PRINT_LEARNCROSSBOW5, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 5), (ALLAN_GOLDCOST) * (5)), 0x12446);
}

var int DIA_ALLAN_TRAIN_CHOICES.ALLAN_GOLDCOST = 0;
func void DIA_ALLAN_TRAIN_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Allan_TRAIN_15_00");
    if ((OTHER.AIVAR[87]) >= (60)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Allan_TRAIN_03_01");
        ALLANCANTEACHUSCROSSBOW = 2;
    };
    if ((OTHER.AIVAR[87]) < (60)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Allan_TRAIN_03_02");
        DIA_ALLAN_TRAIN_CHOICES();
    };
}

func void DIA_ALLAN_TRAIN_BACK() {
    INFO_CLEARCHOICES(0x1243f);
}

func void DIA_ALLAN_TRAIN_CROSSBOW1() {
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (ALLAN_PAYMENT1)) {
        if ((ALLAN_CURRENTCBLEVEL) < (OTHER.AIVAR[87])) {
            SND_PLAY(GELDBEUTEL);
            B_GIVEINVITEMS(OTHER, SELF, 0x859b, ALLAN_PAYMENT1);
            NPC_REMOVEINVITEMS(SELF, 0x859b, ALLAN_PAYMENT1);
        };
        B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_CROSSBOW, 1, 60);
        DIA_ALLAN_TRAIN_CHOICES();
    };
    if ((NPC_HASITEMS(OTHER, 0x859b)) < (ALLAN_PAYMENT1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Allan_Train_CROSSBOW1_03_01");
        ALLAN_PRINTS = CONCATSTRINGS(PRINT_RGOLD, INTTOSTRING(ALLAN_PAYMENT1));
        PRINTSCREEN(ALLAN_PRINTS, -(1), -(1), FONT_SCREEN, 2);
        DIA_ALLAN_TRAIN_CHOICES();
    };
}

func void DIA_ALLAN_TRAIN_CROSSBOW5() {
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (ALLAN_PAYMENT5)) {
        if ((ALLAN_CURRENTCBLEVEL) < (OTHER.AIVAR[87])) {
            B_GIVEINVITEMS(OTHER, SELF, 0x859b, ALLAN_PAYMENT5);
            SND_PLAY(GELDBEUTEL);
            NPC_REMOVEINVITEMS(SELF, 0x859b, ALLAN_PAYMENT5);
        };
        B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_CROSSBOW, 5, 60);
        DIA_ALLAN_TRAIN_CHOICES();
    };
    if ((NPC_HASITEMS(OTHER, 0x859b)) < (ALLAN_PAYMENT5)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Allan_Train_CROSSBOW5_03_01");
        ALLAN_PRINTS = CONCATSTRINGS(PRINT_RGOLD, INTTOSTRING(ALLAN_PAYMENT5));
        PRINTSCREEN(ALLAN_PRINTS, -(1), -(1), FONT_SCREEN, 2);
        DIA_ALLAN_TRAIN_CHOICES();
    };
}

instance DIA_ALLAN_TEACHHUNT(C_INFO) {
    NPC = 0xcd11;
    NR = 998;
    CONDITION = DIA_ALLAN_TEACHHUNT_CONDITION;
    INFORMATION = DIA_ALLAN_TEACHHUNT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Can you teach me something about hunting?";
}

func int DIA_ALLAN_TEACHHUNT_CONDITION() {
    if ((((ALLANCANTEACHUSHUNT) == (TRUE)) && ((ALLANHUNTTEACHINFO) < (2))) && ((PLAYER_TALENT_TAKEANIMALTROPHY[2]) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ALLAN_TEACHHUNT_CHOICES() {
    INFO_CLEARCHOICES(0x12447);
    INFO_ADDCHOICE(0x12447, DIALOG_BACK, 0x1244d);
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[0]) == (FALSE)) {
        INFO_ADDCHOICE(0x12447, B_BUILDLEARNSTRING2(PRINT_TEACHTEETH, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_TEETH), ALLAN_CLAWSTROPHY), 0x1244c);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[1]) == (FALSE)) {
        INFO_ADDCHOICE(0x12447, B_BUILDLEARNSTRING2(PRINT_TEACHCLAWS, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_CLAWS), ALLAN_TEETHTROPHY), 0x1244b);
    };
}

func void DIA_ALLAN_TEACHHUNT_INFO() {
    B_SAY(OTHER, SELF, "$MARVIN_CanYouTeachMeHunting");
    if (((PLAYER_TALENT_TAKEANIMALTROPHY[1]) == (TRUE)) && ((PLAYER_TALENT_TAKEANIMALTROPHY[0]) == (TRUE))) {
        B_SAY(SELF, OTHER, "$NoLearnYoureBetter");
        ALLANCANTEACHUSHUNT = 2;
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Allan_TeachHunt_03_02");
    DIA_ALLAN_TEACHHUNT_CHOICES();
}

func void DIA_ALLAN_TEACHHUNT_CLAWS() {
    AI_OUTPUT(OTHER, SELF, "DIA_Allan_TeachHunt_Claws_15_01");
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (ALLAN_CLAWSTROPHY)) {
        if ((PLAYER_TALENT_TAKEANIMALTROPHY[1]) == (TRUE)) {
            NPC_REMOVEINVITEMS(SELF, 0x859b, ALLAN_CLAWSTROPHY);
            AI_OUTPUT(SELF, OTHER, "DIA_Allan_TeachHunt_Claws_03_02");
            B_GIVEINVITEMS(OTHER, SELF, 0x859b, ALLAN_CLAWSTROPHY);
            AI_OUTPUT(SELF, OTHER, "DIA_Allan_TeachHunt_Claws_03_03");
            PRINTSCREEN(PRINT_LEARNTAKEANIMALTROPHYCLAWS, -(1), -(1), FONT_SCREEN, 2);
            ALLANHUNTTEACHINFO = (ALLANHUNTTEACHINFO) + (1);
        };
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Allan_TeachHunt_Claws_03_04");
    DIA_ALLAN_TEACHHUNT_CHOICES();
}

func void DIA_ALLAN_TEACHHUNT_TEETH() {
    AI_OUTPUT(OTHER, SELF, "DIA_Allan_TeachHunt_Teeth_15_01");
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (ALLAN_TEETHTROPHY)) {
        if ((PLAYER_TALENT_TAKEANIMALTROPHY[0]) == (TRUE)) {
            NPC_REMOVEINVITEMS(SELF, 0x859b, ALLAN_TEETHTROPHY);
            AI_OUTPUT(SELF, OTHER, "DIA_Allan_TeachHunt_Teeth_03_02");
            PRINTSCREEN(PRINT_LEARNTAKEANIMALTROPHYTEETH, -(1), -(1), FONT_SCREEN, 2);
            ALLANHUNTTEACHINFO = (ALLANHUNTTEACHINFO) + (1);
        };
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Allan_TeachHunt_Teeth_03_03");
    DIA_ALLAN_TEACHHUNT_CHOICES();
}

func void DIA_ALLAN_TEACHHUNT_BACK() {
    INFO_CLEARCHOICES(0x12447);
    if ((ALLANHUNTTEACHINFO) >= (2)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Allan_TeachHunt_BACK_03_01");
        ALLANCANTEACHUSHUNT = 2;
    };
    if (((PLAYER_TALENT_TAKEANIMALTROPHY[1]) == (TRUE)) && ((PLAYER_TALENT_TAKEANIMALTROPHY[0]) == (TRUE))) {
        B_SAY(SELF, OTHER, "$NoLearnYoureBetter");
        ALLANCANTEACHUSHUNT = 2;
    };
}

instance DIA_ALLAN_GOODBOW(C_INFO) {
    NPC = 0xcd11;
    NR = 42;
    CONDITION = DIA_ALLAN_GOODBOW_CONDITION;
    INFORMATION = DIA_ALLAN_GOODBOW_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Where can I get good hunting gear?";
}

func int DIA_ALLAN_GOODBOW_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x12437)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ALLAN_GOODBOW_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Allan_GoodBow_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Allan_GoodBow_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Allan_GoodBow_03_03");
}

instance DIA_ALLAN_AMBIENT(C_INFO) {
    NPC = 0xcd11;
    NR = 996;
    CONDITION = DIA_ALLAN_AMBIENT_CONDITION;
    INFORMATION = DIA_ALLAN_AMBIENT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "How are you doing?";
}

func int DIA_ALLAN_AMBIENT_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x12437)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ALLAN_AMBIENT_INFO() {
    B_SAY(OTHER, SELF, "$MARVIN_WhatNew2");
    if (((LOG_GETSTATUS(MIS_CQ002)) != (LOG_SUCCESS)) && ((LOG_GETSTATUS(MIS_SQ416)) != (LOG_RUNNING))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Allan_Ambient_03_02");
    };
    if (((LOG_GETSTATUS(MIS_CQ002)) == (LOG_SUCCESS)) && ((LOG_GETSTATUS(MIS_SQ416)) != (LOG_RUNNING))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Allan_Ambient_03_03");
    };
    if ((LOG_GETSTATUS(MIS_SQ416)) == (LOG_RUNNING)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Allan_Ambient_03_04");
    };
}

instance DIA_ALLAN_CQ002_HUNT(C_INFO) {
    NPC = 0xcd11;
    NR = 50;
    CONDITION = DIA_ALLAN_CQ002_HUNT_CONDITION;
    INFORMATION = DIA_ALLAN_CQ002_HUNT_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Frida told me to help you hunt.";
}

func int DIA_ALLAN_CQ002_HUNT_CONDITION() {
    if (((NPC_KNOWSINFO(OTHER, 0x12437)) && ((LOG_GETSTATUS(MIS_CQ002)) == (LOG_RUNNING))) && ((LOG_GETSTATUS(MIS_SQ416)) == (0))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ALLAN_CQ002_HUNT_INFO() {
    VLK_3025_ALLAN.AIVAR[15] = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Allan_CQ002_Hunt_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Allan_CQ002_Hunt_03_02");
    AI_LOGENTRY(TOPIC_CQ002, LOG_CQ002_ALLAN_LETSGO);
    AI_STOPPROCESSINFOS(SELF);
    NPC_EXCHANGEROUTINE(SELF, "CQ002_HUNT");
    CQ002_SPAWNMOBS();
}

instance DIA_ALLAN_CQ002_TRACE(C_INFO) {
    NPC = 0xcd11;
    NR = 51;
    CONDITION = DIA_ALLAN_CQ002_TRACE_CONDITION;
    INFORMATION = DIA_ALLAN_CQ002_TRACE_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_ALLAN_CQ002_TRACE_CONDITION() {
    if ((((NPC_KNOWSINFO(OTHER, 0x12454)) && ((NPC_GETDISTTOWP(SELF, "PART3_MOB_31")) <= (550))) && ((LOG_GETSTATUS(MIS_CQ002)) == (LOG_RUNNING))) && ((LOG_GETSTATUS(MIS_SQ416)) == (0))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ALLAN_CQ002_TRACE_INFO() {
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Allan_CQ002_Trace_03_01");
    AI_WAITTILLEND(SELF, OTHER);
    AI_TURNAWAY(SELF, OTHER);
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Allan_CQ002_Trace_03_02");
    AI_WAITTILLEND(SELF, OTHER);
    AI_PLAYANI(SELF, T_PLUNDER);
    AI_WAITTILLEND(SELF, OTHER);
    AI_TURNTONPC(SELF, OTHER);
    AI_OUTPUT(OTHER, SELF, "DIA_Allan_CQ002_Trace_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Allan_CQ002_Trace_03_04");
    AI_LOGENTRY(TOPIC_CQ002, LOG_CQ002_ALLAN_TRACE);
    AI_STOPPROCESSINFOS(SELF);
    NPC_EXCHANGEROUTINE(SELF, "CQ002_TRACE");
}

instance DIA_ALLAN_CQ002_FOUNDZIGMAR(C_INFO) {
    NPC = 0xcd11;
    NR = 1;
    CONDITION = DIA_ALLAN_CQ002_FOUNDZIGMAR_CONDITION;
    INFORMATION = DIA_ALLAN_CQ002_FOUNDZIGMAR_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_ALLAN_CQ002_FOUNDZIGMAR_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_CQ002)) == (LOG_RUNNING)) && ((NPC_GETDISTTOWP(SELF, "PART3_MOB_36")) <= (550))) && ((LOG_GETSTATUS(MIS_SQ416)) == (0))) {
        if (NPC_ISDEAD(BEAR_CQ002)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_ALLAN_CQ002_FOUNDZIGMAR_INFO() {
    VLK_3025_ALLAN.AIVAR[15] = FALSE;
    AI_STARTFACEANI(SELF, S_SAD, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Allan_CQ002_FoundZigmar_03_01");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Allan_CQ002_FoundZigmar_03_02");
    AI_LOGENTRY(TOPIC_CQ002, LOG_CQ002_ALLAN_HUNTDONE);
    AI_STOPPROCESSINFOS(SELF);
    NPC_EXCHANGEROUTINE(SELF, START);
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

instance DIA_ALLAN_SQ416_DRINK(C_INFO) {
    NPC = 0xcd11;
    NR = 1;
    CONDITION = DIA_ALLAN_SQ416_DRINK_CONDITION;
    INFORMATION = DIA_ALLAN_SQ416_DRINK_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_ALLAN_SQ416_DRINK_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ416)) == (LOG_RUNNING)) && ((SQ416_RAMSEYHOUSEMEETING) == (4))) {
        if ((((NPC_GETDISTTOWP(VLK_3025_ALLAN, VLK_3025_ALLAN.WP)) <= (500)) && ((NPC_GETDISTTOWP(SLD_11050_GERKE, SLD_11050_GERKE.WP)) <= (500))) && ((NPC_GETDISTTOWP(SLD_13491_RUDI, SLD_13491_RUDI.WP)) <= (500))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_ALLAN_SQ416_DRINK_INFO() {
    TRIA_INVITE(SLD_11050_GERKE);
    TRIA_INVITE(SLD_13491_RUDI);
    TRIA_START();
    TRIA_WAIT();
    TRIA_NEXT(VLK_3025_ALLAN);
    AI_OUTPUT(SELF, OTHER, "DIA_Allan_SQ416_Drink_03_01");
    CREATEINVITEMS(SELF, 0x8596, 1);
    B_GIVEINVITEMS(SELF, OTHER, 0x8596, 1);
    AI_OUTPUT(SELF, OTHER, "DIA_Allan_SQ416_Drink_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Allan_SQ416_Drink_03_03");
    B_USEFAKEALARMHORN();
    TRIA_WAIT();
    TRIA_NEXT(SLD_13491_RUDI);
    AI_OUTPUT(SELF, OTHER, "DIA_Allan_SQ416_Drink_03_04");
    TRIA_WAIT();
    TRIA_NEXT(SLD_11050_GERKE);
    AI_OUTPUT(SELF, OTHER, "DIA_Allan_SQ416_Drink_03_05");
    INFO_CLEARCHOICES(0x1245d);
    INFO_ADDCHOICE(0x1245d, "It must be something completely different.", 0x12469);
    INFO_ADDCHOICE(0x1245d, "Dragon snapper.", 0x12468);
    INFO_ADDCHOICE(0x1245d, "Shadowbeast.", 0x12467);
}

func void DIA_ALLAN_SQ416_DRINK_ALLAN_NEXT() {
    TRIA_WAIT();
    TRIA_NEXT(SLD_13491_RUDI);
    AI_OUTPUT(SELF, OTHER, "DIA_Allan_SQ416_Drink_Next_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Allan_SQ416_Drink_Next_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Allan_SQ416_Drink_Next_03_03");
    SQ416_DRINKBEER();
    TRIA_WAIT();
    TRIA_NEXT(VLK_3025_ALLAN);
    AI_TURNTONPC(SELF, SLD_13491_RUDI);
    AI_OUTPUT(SELF, OTHER, "DIA_Allan_SQ416_Drink_Next_03_04");
    SQ416_DRINKBEER();
    AI_TURNTONPC(SELF, OTHER);
    INFO_CLEARCHOICES(0x1245d);
    INFO_ADDCHOICE(0x1245d, "To the hunt! (drink)", 0x12461);
    INFO_ADDCHOICE(0x1245d, "I'm not going to drink before hunting.", 0x12462);
}

func void DIA_ALLAN_SQ416_DRINK_ALLAN_NEXT_YES() {
    B_GIVEPLAYERXP(XP_SQ416_DRINK);
    AI_OUTPUT(OTHER, SELF, "DIA_Allan_SQ416_Drink_Yes_15_01");
    SQ416_DRINKBEER_MARVIN();
    TRIA_WAIT();
    TRIA_NEXT(SLD_11050_GERKE);
    AI_OUTPUT(SELF, OTHER, "DIA_Allan_SQ416_Drink_Yes_03_02");
    SQ416_DRINKBEER();
    AI_OUTPUT(SELF, OTHER, "DIA_Allan_SQ416_Drink_Yes_03_03");
    TRIA_FINISH();
    AI_STOPLOOKAT(SELF);
    AI_STOPLOOKAT(OTHER);
    INFO_CLEARCHOICES(0x1245d);
    AI_FUNCTION(SELF, 0xf843);
    AI_STOPPROCESSINFOS(SELF);
    AI_LOGENTRY(TOPIC_SQ416, LOG_SQ416_ALLAN_DRINK);
}

func void DIA_ALLAN_SQ416_DRINK_ALLAN_NEXT_NO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Allan_SQ416_Drink_No_15_01");
    TRIA_WAIT();
    TRIA_NEXT(SLD_13491_RUDI);
    AI_TURNTONPC(SLD_13491_RUDI, OTHER);
    AI_OUTPUT(SELF, OTHER, "DIA_Allan_SQ416_Drink_No_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Allan_SQ416_Drink_No_03_03");
    AI_FUNCTION(SELF, 0xf842);
    AI_FUNCTION(SELF, 0xf865);
    INFO_CLEARCHOICES(0x1245d);
    INFO_ADDCHOICE(0x1245d, "All right, give me that beer.", 0x12463);
    INFO_ADDCHOICE(0x1245d, "I prefer to keep my mind fully sober.", 0x12464);
}

func void DIA_ALLAN_SQ416_DRINK_ALLAN_NEXT_NO_ALLRIGHT() {
    AI_OUTPUT(OTHER, SELF, "DIA_Allan_SQ416_Drink_Allright_15_01");
    DIA_ALLAN_SQ416_DRINK_ALLAN_NEXT_YES();
}

func void DIA_ALLAN_SQ416_DRINK_ALLAN_NEXT_NO_NOV2() {
    AI_OUTPUT(OTHER, SELF, "DIA_Allan_SQ416_Drink_NoV2_15_01");
    TRIA_WAIT();
    TRIA_NEXT(VLK_3025_ALLAN);
    AI_OUTPUT(SELF, OTHER, "DIA_Allan_SQ416_Drink_NoV2_03_02");
}

func void DIA_ALLAN_SQ416_DRINK_ALLAN_YES() {
    TRIA_WAIT();
    TRIA_NEXT(VLK_3025_ALLAN);
    AI_OUTPUT(SELF, OTHER, "DIA_Allan_SQ416_Drink_Allan_03_01");
    DIA_ALLAN_SQ416_DRINK_ALLAN_NEXT();
}

func void DIA_ALLAN_SQ416_DRINK_ALLAN_NO() {
    TRIA_WAIT();
    TRIA_NEXT(VLK_3025_ALLAN);
    AI_OUTPUT(SELF, OTHER, "DIA_Allan_SQ416_Drink_Allan_03_02");
    DIA_ALLAN_SQ416_DRINK_ALLAN_NEXT();
}

func void DIA_ALLAN_SQ416_DRINK_SHADOWBEAST() {
    AI_OUTPUT(OTHER, SELF, "DIA_Allan_SQ416_Drink_Shadowbeast_15_01");
    DIA_ALLAN_SQ416_DRINK_ALLAN_YES();
}

func void DIA_ALLAN_SQ416_DRINK_DRAGONSNAPPER() {
    AI_OUTPUT(OTHER, SELF, "DIA_Allan_SQ416_Drink_DragonSnapper_15_01");
    DIA_ALLAN_SQ416_DRINK_ALLAN_NO();
}

func void DIA_ALLAN_SQ416_DRINK_OTHER() {
    AI_OUTPUT(OTHER, SELF, "DIA_Allan_SQ416_Drink_Other_15_01");
    DIA_ALLAN_SQ416_DRINK_ALLAN_NO();
}

instance DIA_ALLAN_HUNTING_BASE(C_INFO) {
    NPC = 0xcd11;
    NR = 940;
    CONDITION = DIA_ALLAN_HUNTING_BASE_CONDITION;
    INFORMATION = DIA_ALLAN_HUNTING_BASE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = B_BUILDLEARNSTRING2(PRINT_LEARN_HUNTING_BASE, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_FUR), ALLAN_BASETROPHY);
}

func int DIA_ALLAN_HUNTING_BASE_CONDITION() {
    if (((ALLANCANTEACHUSHUNT) == (TRUE)) && ((PLAYER_TALENT_TAKEANIMALTROPHY[2]) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ALLAN_HUNTING_BASE_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Allan_Hunting_Base_15_01");
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (ALLAN_BASETROPHY)) {
        if ((PLAYER_TALENT_TAKEANIMALTROPHY[2]) == (TRUE)) {
            if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_SNEAK)) == (0)) {
                PRINTSCREEN(PRINT_LEARNSNEAK, -(1), YPOS_LEVELUP, FONT_SCREEN, 2);
                AI_OUTPUT(SELF, OTHER, "DIA_Allan_Base_Sneak_03_01");
                B_TEACHTHIEFTALENT(VLK_3025_ALLAN, HERO, NPC_TALENT_SNEAK, 1);
                AI_OUTPUT(SELF, OTHER, "DIA_Allan_Base_Sneak_03_02");
            };
            NPC_REMOVEINVITEMS(SELF, 0x859b, ALLAN_BASETROPHY);
            AI_OUTPUT(SELF, OTHER, "DIA_Allan_Hunting_Base_03_02");
            B_GIVEINVITEMS(OTHER, SELF, 0x859b, ALLAN_BASETROPHY);
            AI_OUTPUT(SELF, OTHER, "DIA_Allan_Hunting_Base_03_03");
            AI_OUTPUT(SELF, OTHER, "DIA_Allan_Hunting_Base_03_04");
            PRINTSCREEN(PRINT_LEARNTAKEANIMALTROPHY, -(1), -(1), FONT_SCREEN, 2);
        };
    };
    if ((NPC_HASITEMS(OTHER, 0x859b)) < (ALLAN_BASETROPHY)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Allan_Hunting_Base_03_05");
    };
}

instance DIA_ALLAN_PICKPOCKET(C_INFO) {
    NPC = 0xcd11;
    NR = 900;
    CONDITION = DIA_ALLAN_PICKPOCKET_CONDITION;
    INFORMATION = DIA_ALLAN_PICKPOCKET_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = PICKPOCKET_80;
}

func int DIA_ALLAN_PICKPOCKET_CONDITION() {
    if (((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) && ((SELF.AIVAR[6]) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ALLAN_PICKPOCKET_INFO() {
    INFO_CLEARCHOICES(0x1246d);
    INFO_ADDCHOICE(0x1246d, DIALOG_BACK, 0x12471);
    INFO_ADDCHOICE(0x1246d, DIALOG_PICKPOCKET, 0x12470);
}

func void DIA_ALLAN_PICKPOCKET_DOIT() {
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (2)) {
        CREATEINVITEMS(SELF, 0x8a16, 1);
        B_GIVEINVITEMS(SELF, OTHER, 0x8a16, 1);
        B_PICKPOCKET_AMBIENT_TIER_2();
        SELF.AIVAR[6] = TRUE;
        INFO_CLEARCHOICES(0x1246d);
    };
    AI_PLAYANI(HERO, T_CANNOTTAKE);
    PRINTSCREEN(PRINT_CANTPICKPOCKETTHISPERSON, -(1), -(1), FONT_SCREEN, 4);
    INFO_CLEARCHOICES(0x1246d);
}

func void DIA_ALLAN_PICKPOCKET_BACK() {
    INFO_CLEARCHOICES(0x1246d);
}

