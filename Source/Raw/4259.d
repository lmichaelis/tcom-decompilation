instance DIA_MARKUS_VZ_EXIT(C_INFO) {
    NPC = 0xe746;
    NR = 999;
    CONDITION = DIA_MARKUS_VZ_EXIT_CONDITION;
    INFORMATION = DIA_MARKUS_VZ_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_MARKUS_VZ_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_MARKUS_VZ_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_MARKUS_Q514_GOLD(C_INFO) {
    NPC = 0xe746;
    NR = 1;
    CONDITION = DIA_MARKUS_Q514_GOLD_CONDITION;
    INFORMATION = DIA_MARKUS_Q514_GOLD_INFO;
    PERMANENT = TRUE;
    IMPORTANT = TRUE;
}

func int DIA_MARKUS_Q514_GOLD_CONDITION() {
    if ((((Q514_TREASURY_EVENT) == (2)) && ((LOG_GETSTATUS(MIS_Q514)) == (LOG_RUNNING))) && (NPC_ISINSTATE(SELF, 0xf09f))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

var int MARKUSVZ_MADGOLD = 0;
func void DIA_MARKUS_Q514_GOLD_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Markus_Q514_Gold_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Markus_Q514_Gold_03_02");
    AI_STOPPROCESSINFOS(SELF);
    if ((MARKUSVZ_MADGOLD) == (FALSE)) {
        MARKUSVZ_MADGOLD = TRUE;
        AI_LOGENTRY(TOPIC_Q514, LOG_Q514_MARKUS_GOLD);
    };
}

instance DIA_MARKUS_VZ_CANTEACH(C_INFO) {
    NPC = 0xe746;
    NR = 1;
    CONDITION = DIA_MARKUS_VZ_CANTEACH_CONDITION;
    INFORMATION = DIA_MARKUS_VZ_CANTEACH_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Can you teach me something?";
}

func int DIA_MARKUS_VZ_CANTEACH_CONDITION() {
    if (((((MARKUS_VZ_NOMORE) == (FALSE)) && ((LOG_GETSTATUS(MIS_Q514)) == (LOG_RUNNING))) && ((Q514_CAMPISREADY) == (TRUE))) && ((Q514_TREASURY_EVENT) != (2))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_MARKUS_VZ_CANTEACH_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    B_SAY(OTHER, SELF, "$MARVIN_CanYouTeachMe");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Markus_VZ_Teach_03_01");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

var int MARKUS_VZ_NOMORE = 0;
var string MARKUS_VZ_PRINTS = "";
var int MARKUS_VZ_CURRENTBLEVEL = 0;
var int MARKUS_VZ_CURRENTDEXLEVEL = 0;
instance DIA_MARKUS_VZ_TEACH(C_INFO) {
    NPC = 0xe746;
    NR = 940;
    CONDITION = DIA_MARKUS_VZ_TEACH_CONDITION;
    INFORMATION = DIA_MARKUS_VZ_TEACH_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Teach me.";
}

func int DIA_MARKUS_VZ_TEACH_CONDITION() {
    if ((((((MARKUS_VZ_NOMORE) == (FALSE)) && ((LOG_GETSTATUS(MIS_Q514)) == (LOG_RUNNING))) && ((Q514_CAMPISREADY) == (TRUE))) && ((Q514_TREASURY_EVENT) != (2))) && (NPC_KNOWSINFO(OTHER, 0x153cc))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_MARKUS_VZ_TEACH_CHOICES() {
    MARKUS_VZ_GOLDCOST = 25;
    MARKUS_VZ_CURRENTBLEVEL = OTHER.HITCHANCE[3];
    MARKUS_VZ_CURRENTDEXLEVEL = OTHER.ATTRIBUTE[5];
    INFO_CLEARCHOICES(0x153d3);
    INFO_ADDCHOICE(0x153d3, DIALOG_BACK, 0x153d8);
    INFO_ADDCHOICE(0x153d3, B_BUILDLEARNSTRING2(PRINT_LEARNDEX1, B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 1), MARKUS_VZ_GOLDCOST), 0x153dc);
    INFO_ADDCHOICE(0x153d3, B_BUILDLEARNSTRING2(PRINT_LEARNDEX5, B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 5), (MARKUS_VZ_GOLDCOST) * (5)), 0x153db);
    if ((OTHER.ATTRIBUTE[5]) >= (200)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Markus_VZ_NoMore_03_01");
        MARKUS_VZ_NOMORE = TRUE;
    };
}

var int DIA_MARKUS_VZ_TEACH_CHOICES.MARKUS_VZ_GOLDCOST = 0;
func void DIA_MARKUS_VZ_TEACH_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Markus_VZ_Teach_15_00");
    DIA_MARKUS_VZ_TEACH_CHOICES();
}

func void DIA_MARKUS_VZ_TEACH_BACK() {
    INFO_CLEARCHOICES(0x153d3);
}

func void DIA_MARKUS_VZ_TEACH_BOW1() {
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (MARKUS_VZ_PAYMENT1)) {
        if ((MARKUS_VZ_CURRENTBLEVEL) < (OTHER.HITCHANCE[3])) {
            SND_PLAY(GELDBEUTEL);
            B_GIVEINVITEMS(OTHER, SELF, 0x859b, MARKUS_VZ_PAYMENT1);
        };
        B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_BOW, 1, 80);
        DIA_MARKUS_VZ_TEACH_CHOICES();
    };
    if ((NPC_HASITEMS(OTHER, 0x859b)) < (MARKUS_VZ_PAYMENT1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Markus_VZ_Teach_BOW1_03_01");
        MARKUS_VZ_PRINTS = CONCATSTRINGS(PRINT_RGOLD, INTTOSTRING(MARKUS_VZ_PAYMENT1));
        PRINTSCREEN(MARKUS_VZ_PRINTS, -(1), -(1), FONT_SCREEN, 2);
        DIA_MARKUS_VZ_TEACH_CHOICES();
    };
}

func void DIA_MARKUS_VZ_TEACH_BOW5() {
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (MARKUS_VZ_PAYMENT5)) {
        if ((MARKUS_VZ_CURRENTBLEVEL) < (OTHER.HITCHANCE[3])) {
            B_GIVEINVITEMS(OTHER, SELF, 0x859b, MARKUS_VZ_PAYMENT5);
            SND_PLAY(GELDBEUTEL);
        };
        B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_BOW, 5, 80);
        DIA_MARKUS_VZ_TEACH_CHOICES();
    };
    if ((NPC_HASITEMS(OTHER, 0x859b)) < (MARKUS_VZ_PAYMENT5)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Markus_VZ_Teach_BOW5_03_01");
        MARKUS_VZ_PRINTS = CONCATSTRINGS(PRINT_RGOLD, INTTOSTRING(MARKUS_VZ_PAYMENT5));
        PRINTSCREEN(MARKUS_VZ_PRINTS, -(1), -(1), FONT_SCREEN, 2);
        DIA_MARKUS_VZ_TEACH_CHOICES();
    };
}

func void DIA_MARKUS_VZ_TEACH_DEX5() {
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (MARKUS_VZ_PAYMENT5)) {
        if ((MARKUS_VZ_CURRENTDEXLEVEL) < (OTHER.ATTRIBUTE[5])) {
            B_GIVEINVITEMS(OTHER, SELF, 0x859b, MARKUS_VZ_PAYMENT5);
            SND_PLAY(GELDBEUTEL);
        };
        B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_DEXTERITY, 5, 200);
        DIA_MARKUS_VZ_TEACH_CHOICES();
    };
    if ((NPC_HASITEMS(OTHER, 0x859b)) < (MARKUS_VZ_PAYMENT5)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Markus_VZ_Teach_BOW5_03_01");
        MARKUS_VZ_PRINTS = CONCATSTRINGS(PRINT_RGOLD, INTTOSTRING(MARKUS_VZ_PAYMENT5));
        PRINTSCREEN(MARKUS_VZ_PRINTS, -(1), -(1), FONT_SCREEN, 2);
        DIA_MARKUS_VZ_TEACH_CHOICES();
    };
}

func void DIA_MARKUS_VZ_TEACH_DEX1() {
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (MARKUS_VZ_PAYMENT1)) {
        if ((MARKUS_VZ_CURRENTDEXLEVEL) < (OTHER.ATTRIBUTE[5])) {
            B_GIVEINVITEMS(OTHER, SELF, 0x859b, MARKUS_VZ_PAYMENT1);
            SND_PLAY(GELDBEUTEL);
        };
        B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_DEXTERITY, 1, 200);
        DIA_MARKUS_VZ_TEACH_CHOICES();
    };
    if ((NPC_HASITEMS(OTHER, 0x859b)) < (MARKUS_VZ_PAYMENT1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Markus_VZ_Teach_BOW5_03_01");
        MARKUS_VZ_PRINTS = CONCATSTRINGS(PRINT_RGOLD, INTTOSTRING(MARKUS_VZ_PAYMENT1));
        PRINTSCREEN(MARKUS_VZ_PRINTS, -(1), -(1), FONT_SCREEN, 2);
        DIA_MARKUS_VZ_TEACH_CHOICES();
    };
}

instance DIA_MARKUS_VZ_TEACHFLETCHERY(C_INFO) {
    NPC = 0xe746;
    NR = 930;
    CONDITION = DIA_MARKUS_VZ_TEACHFLETCHERY_CONDITION;
    INFORMATION = DIA_MARKUS_VZ_TEACHFLETCHERY_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = B_BUILDLEARNSTRING2(PRINT_LEARN_FLETCHERY1, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_FLETCHERY, 1), MARKUS_VZ_FLETCHERY1);
}

func int DIA_MARKUS_VZ_TEACHFLETCHERY_CONDITION() {
    if ((((((LOG_GETSTATUS(MIS_Q514)) == (LOG_RUNNING)) && ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_FLETCHERY)) == (0))) && ((Q514_CAMPISREADY) == (TRUE))) && ((Q514_TREASURY_EVENT) != (2))) && (NPC_KNOWSINFO(OTHER, 0x153cc))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_MARKUS_VZ_TEACHFLETCHERY_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Markus_VZ_TeachFletchery_15_01");
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (MARKUS_VZ_FLETCHERY1)) {
        if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_FLETCHERY)) == (1)) {
            NPC_REMOVEINVITEMS(SELF, 0x859b, MARKUS_VZ_FLETCHERY1);
            AI_OUTPUT(SELF, OTHER, "DIA_Markus_VZ_TeachFletchery_13_02");
            B_GIVEINVITEMS(OTHER, SELF, 0x859b, MARKUS_VZ_FLETCHERY1);
            AI_OUTPUT(SELF, OTHER, "DIA_Markus_VZ_TeachFletchery_03_03");
        };
    };
    B_SAY(SELF, OTHER, "$NOGOLD");
}

instance DIA_MARKUS_VZ_TEACHFLETCHERY2(C_INFO) {
    NPC = 0xe746;
    NR = 930;
    CONDITION = DIA_MARKUS_VZ_TEACHFLETCHERY2_CONDITION;
    INFORMATION = DIA_MARKUS_VZ_TEACHFLETCHERY2_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = B_BUILDLEARNSTRING2(PRINT_LEARN_FLETCHERY2, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_FLETCHERY, 2), MARKUS_VZ_FLETCHERY2);
}

func int DIA_MARKUS_VZ_TEACHFLETCHERY2_CONDITION() {
    if ((((((LOG_GETSTATUS(MIS_Q514)) == (LOG_RUNNING)) && ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_FLETCHERY)) == (1))) && ((Q514_CAMPISREADY) == (TRUE))) && ((Q514_TREASURY_EVENT) != (2))) && (NPC_KNOWSINFO(OTHER, 0x153cc))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_MARKUS_VZ_TEACHFLETCHERY2_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Markus_VZ_TeachFletchery2_15_01");
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (MARKUS_VZ_FLETCHERY2)) {
        if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_FLETCHERY)) == (2)) {
            NPC_REMOVEINVITEMS(SELF, 0x859b, MARKUS_VZ_FLETCHERY2);
            AI_OUTPUT(SELF, OTHER, "DIA_Markus_VZ_TeachFletchery2_03_02");
            B_GIVEINVITEMS(OTHER, SELF, 0x859b, MARKUS_VZ_FLETCHERY2);
            AI_OUTPUT(SELF, OTHER, "DIA_Markus_VZ_TeachFletchery2_03_03");
            AI_OUTPUT(SELF, OTHER, "DIA_Markus_VZ_TeachFletchery2_03_04");
        };
    };
    B_SAY(SELF, OTHER, "$NOGOLD");
}

instance DIA_MARKUS_VZ_AMBIENT(C_INFO) {
    NPC = 0xe746;
    NR = 998;
    CONDITION = DIA_MARKUS_VZ_AMBIENT_CONDITION;
    INFORMATION = DIA_MARKUS_VZ_AMBIENT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "How's the morale?";
}

func int DIA_MARKUS_VZ_AMBIENT_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q514)) == (LOG_RUNNING)) && ((Q514_TREASURY_EVENT) < (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_MARKUS_VZ_AMBIENT_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    B_SAY(OTHER, SELF, "$MARVIN_VolfzackMorale3");
    if ((Q514_CATACOMBS_GARGOYLE_FIRSTMEETING) == (2)) {
        AI_STARTFACEANI(SELF, S_THINK, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Markus_VZ_Ambient_03_03");
    };
    if ((Q514_CAMPISREADY) == (FALSE)) {
        AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Markus_VZ_Ambient_03_04");
    };
    if ((Q514_CAMPISREADY) == (TRUE)) {
        NPC_INITAMBIENTS(SELF, 2);
        if ((NPC_GETLASTAMBIENT(SELF)) == (1)) {
            AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
            AI_OUTPUT(SELF, OTHER, "DIA_Markus_VZ_Ambient_03_01");
        } else if ((NPC_GETLASTAMBIENT(SELF)) == (2)) {
            AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
            AI_OUTPUT(SELF, OTHER, "DIA_Markus_VZ_Ambient_03_02");
        } else if ((NPC_GETLASTAMBIENT(SELF)) == (3)) {
            AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
            AI_OUTPUT(SELF, OTHER, "DIA_Markus_VZ_Ambient_03_05");
        };
    };
    AI_RESETFACEANI(OTHER);
    AI_RESETFACEANI(SELF);
}

instance DIA_MARKUS_VZ_Q514_HELP(C_INFO) {
    NPC = 0xe746;
    NR = 1;
    CONDITION = DIA_MARKUS_VZ_Q514_HELP_CONDITION;
    INFORMATION = DIA_MARKUS_VZ_Q514_HELP_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Access to one of the rooms is blocked by a spiked corridor.";
}

func int DIA_MARKUS_VZ_Q514_HELP_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q514)) == (LOG_RUNNING)) && ((Q514_CHESS_TRAPROOM_LOGENTRY) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_MARKUS_VZ_Q514_HELP_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Markus_VZ_Q514_Help_15_01");
    AI_STARTFACEANI(SELF, S_THINK, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Markus_VZ_Q514_Help_03_02");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Markus_VZ_Q514_Help_03_03");
}

var int MARKUS_ALLHUNTVZ = 0;
instance DIA_MARKUS_HUNTINGVZ_SPECIAL(C_INFO) {
    NPC = 0xe746;
    NR = 1;
    CONDITION = DIA_MARKUS_HUNTINGVZ_SPECIAL_CONDITION;
    INFORMATION = DIA_MARKUS_HUNTINGVZ_SPECIAL_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Can you teach me something about hunting?";
}

func int DIA_MARKUS_HUNTINGVZ_SPECIAL_CONDITION() {
    if (((((((LOG_GETSTATUS(MIS_Q514)) == (LOG_RUNNING)) && ((Q514_CAMPISREADY) == (TRUE))) && ((Q514_TREASURY_EVENT) != (2))) && (NPC_KNOWSINFO(OTHER, 0x153cc))) && ((MARKUS_ALLHUNTVZ) == (FALSE))) && ((PLAYER_TALENT_TAKEANIMALTROPHY[2]) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_MARKUS_HUNTINGVZ_SPECIAL_CHOICES() {
    INFO_CLEARCHOICES(0x153ea);
    INFO_ADDCHOICE(0x153ea, DIALOG_BACK, 0x153ee);
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[8]) == (FALSE)) {
        INFO_ADDCHOICE(0x153ea, B_BUILDLEARNSTRING2(PRINT_TEACHMANDIBLES, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_MANDIBLES), MARKUS_VZ_MANDIBLESTROPHY), 0x153ef);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[17]) == (FALSE)) {
        INFO_ADDCHOICE(0x153ea, B_BUILDLEARNSTRING2(PRINT_TEACHSHELLS, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_SHELLS), MARKUS_VZ_SHELLSTROPHY), 0x153f0);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[3]) == (FALSE)) {
        INFO_ADDCHOICE(0x153ea, B_BUILDLEARNSTRING2(PRINT_TEACHHEART, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_HEART), MARKUS_VZ_HEARTTROPHY), 0x153f1);
    };
}

func void DIA_MARKUS_HUNTINGVZ_SPECIAL_INFO() {
    B_SAY(OTHER, SELF, "$MARVIN_CanYouTeachMeHunting");
    B_SAY(SELF, OTHER, "$SURE_V2");
    DIA_MARKUS_HUNTINGVZ_SPECIAL_CHOICES();
}

func void DIA_MARKUS_HUNTINGVZ_SPECIAL_BACK() {
    INFO_CLEARCHOICES(0x153ea);
    if ((((PLAYER_TALENT_TAKEANIMALTROPHY[8]) == (TRUE)) && ((PLAYER_TALENT_TAKEANIMALTROPHY[17]) == (TRUE))) && ((PLAYER_TALENT_TAKEANIMALTROPHY[3]) == (TRUE))) {
        MARKUS_ALLHUNTVZ = TRUE;
        B_SAY(SELF, OTHER, "$NoLearnYoureBetter");
    };
}

func void DIA_MARKUS_HUNTINGVZ_SPECIAL_MANDIBLES() {
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (MARKUS_VZ_MANDIBLESTROPHY)) {
        if ((PLAYER_TALENT_TAKEANIMALTROPHY[8]) == (TRUE)) {
            PRINTSCREEN(PRINT_LEARNTAKEANIMALTROPHYMANDIBLES, -(1), -(1), FONT_SCREEN, 2);
            B_SAY(SELF, OTHER, "$YouLearnedSomething");
        };
    };
    B_SAY(SELF, OTHER, "$NOGOLD");
    DIA_MARKUS_HUNTINGVZ_SPECIAL_CHOICES();
}

func void DIA_MARKUS_HUNTINGVZ_SPECIAL_SHELLS() {
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (MARKUS_VZ_SHELLSTROPHY)) {
        if ((PLAYER_TALENT_TAKEANIMALTROPHY[17]) == (TRUE)) {
            PRINTSCREEN(PRINT_LEARNTAKEANIMALTROPHYSHELLS, -(1), -(1), FONT_SCREEN, 2);
            B_SAY(SELF, OTHER, "$YouLearnedSomething");
        };
    };
    B_SAY(SELF, OTHER, "$NOGOLD");
    DIA_MARKUS_HUNTINGVZ_SPECIAL_CHOICES();
}

func void DIA_MARKUS_HUNTINGVZ_SPECIAL_HEART() {
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (MARKUS_VZ_HEARTTROPHY)) {
        if ((PLAYER_TALENT_TAKEANIMALTROPHY[3]) == (TRUE)) {
            PRINTSCREEN(PRINT_LEARNTAKEANIMALTROPHYHEART, -(1), -(1), FONT_SCREEN, 2);
            B_SAY(SELF, OTHER, "$YouLearnedSomething");
        };
    };
    B_SAY(SELF, OTHER, "$NOGOLD");
    DIA_MARKUS_HUNTINGVZ_SPECIAL_CHOICES();
}

