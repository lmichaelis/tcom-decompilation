instance DIA_HERSHLIK_EXIT(C_INFO) {
    NPC = 0xcd0a;
    NR = 999;
    CONDITION = DIA_HERSHLIK_EXIT_CONDITION;
    INFORMATION = DIA_HERSHLIK_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_HERSHLIK_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_HERSHLIK_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_HERSHLIK_WHO(C_INFO) {
    NPC = 0xcd0a;
    NR = 1;
    CONDITION = DIA_HERSHLIK_WHO_CONDITION;
    INFORMATION = DIA_HERSHLIK_WHO_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Who are you?";
}

func int DIA_HERSHLIK_WHO_CONDITION() {
    return TRUE;
}

func void DIA_HERSHLIK_WHO_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_Who_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_Who_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_Who_03_03");
    TRADER_LOGENTRY_HERSHLIK();
}

instance DIA_HERSHLIK_PQ104(C_INFO) {
    NPC = 0xcd0a;
    NR = 1;
    CONDITION = DIA_HERSHLIK_PQ104_CONDITION;
    INFORMATION = DIA_HERSHLIK_PQ104_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I'd like to work for you.";
}

func int DIA_HERSHLIK_PQ104_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 0x11fc1)) && ((WHONEEDPEON) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_HERSHLIK_PQ104_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_PQ104_15_00");
    AI_STARTFACEANI(SELF, S_THINK, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_02_01");
    if (((IAM_PEON) == (TRUE)) && (((PEON_SECONDTIME) == (0)) || ((PEON_SECONDTIME) == (2)))) {
        AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_PQ104_15_01");
    };
    AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_PQ104_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_02_03");
    AI_RESETFACEANI(SELF);
    INFO_CLEARCHOICES(0x11fc4);
    if (((NPC_GETTALENTSKILL(HERO, NPC_TALENT_ALCHEMY)) >= (1)) || ((PLAYER_TALENT_TAKEANIMALTROPHY[14]) == (TRUE))) {
        INFO_ADDCHOICE(0x11fc4, "Yes.", 0x11fc8);
    };
    INFO_ADDCHOICE(0x11fc4, "No.", 0x11fc9);
}

func void DIA_HERSHLIK_PQ104_END() {
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_End_02_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_End_02_02");
    LOG_CREATETOPIC(TOPIC_PQ104, LOG_MISSION);
    LOG_SETSTATUS(_@(MIS_PQ104), TOPIC_PQ104, LOG_RUNNING);
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_End_02_03");
    if (((IAM_PEON) == (TRUE)) && (((PEON_SECONDTIME) == (0)) || ((PEON_SECONDTIME) == (2)))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_End_02_04");
        AI_LOGENTRY(TOPIC_PQ104, LOG_PQ104_START);
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_End_02_05");
    AI_LOGENTRY(TOPIC_PQ104, LOG_PQ104_STARTPEON);
    INFO_CLEARCHOICES(0x11fc4);
}

func void DIA_HERSHLIK_PQ104_YES() {
    AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_PQ104_Yes_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_Yes_02_01");
    DIA_HERSHLIK_PQ104_END();
}

func void DIA_HERSHLIK_PQ104_NO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_PQ104_No_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_No_02_01");
    DIA_HERSHLIK_PQ104_END();
}

instance DIA_HERSHLIK_PQ104_MORE(C_INFO) {
    NPC = 0xcd0a;
    NR = 1;
    CONDITION = DIA_HERSHLIK_PQ104_MORE_CONDITION;
    INFORMATION = DIA_HERSHLIK_PQ104_MORE_INFO;
    PERMANENT = FALSE;
    IMPORTANT = FALSE;
    DESCRIPTION = DIALOG_ASKABOUTSEEDS;
}

func int DIA_HERSHLIK_PQ104_MORE_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x11fc4)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_HERSHLIK_PQ104_MORE_INFO() {
    INFO_CLEARCHOICES(0x11fca);
    INFO_ADDCHOICE(0x11fca, "Where should I look?", 0x11fcd);
}

func void DIA_HERSHLIK_PQ104_MORE_WHERE() {
    AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_PQ104_More_Where_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_More_Where_02_01");
    INFO_CLEARCHOICES(0x11fca);
    INFO_ADDCHOICE(0x11fca, "You want me to take it out of their mouths?", 0x11fce);
    INFO_ADDCHOICE(0x11fca, "What kind of animals are they?", 0x11fcf);
}

func void DIA_HERSHLIK_PQ104_MORE_WHERE1() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_SEEDS);
    AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_PQ104_More_Where1_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_More_Where1_02_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_More_Where1_02_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_More_Where1_02_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_More_Where1_02_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_More_Where1_02_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_More_Where1_02_06");
}

func void DIA_HERSHLIK_PQ104_MORE_WHERE2() {
    AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_PQ104_More_Where2_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_More_Where2_02_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_More_Where2_02_02");
    AI_LOGENTRY(TOPIC_PQ104, LOG_PQ104_SEED);
}

instance DIA_HERSHLIK_PQ104_SEEDS(C_INFO) {
    NPC = 0xcd0a;
    NR = 1;
    CONDITION = DIA_HERSHLIK_PQ104_SEEDS_CONDITION;
    INFORMATION = DIA_HERSHLIK_PQ104_SEEDS_INFO;
    PERMANENT = FALSE;
    IMPORTANT = FALSE;
    DESCRIPTION = "I collected the seeds you asked for.";
}

func int DIA_HERSHLIK_PQ104_SEEDS_CONDITION() {
    if ((((((NPC_KNOWSINFO(OTHER, 0x11fc4)) && ((NPC_HASITEMS(OTHER, 0x89ea)) >= (2))) && ((NPC_HASITEMS(OTHER, 0x89f1)) >= (2))) && ((NPC_HASITEMS(OTHER, 0x89ed)) >= (2))) && ((NPC_HASITEMS(OTHER, 0x89ee)) >= (2))) && ((LOG_GETSTATUS(MIS_PQ104)) == (LOG_RUNNING))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_HERSHLIK_PQ104_SEEDS_INFO() {
    B_GIVEINVITEMS(OTHER, SELF, 0x89ee, 2);
    AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_PQ104_Seeds_15_00");
    if (((IAM_PEON) == (TRUE)) && (((PEON_SECONDTIME) == (0)) || ((PEON_SECONDTIME) == (2)))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_Seeds_02_01");
        B_GIVEINVITEMS(SELF, OTHER, 0x859b, PQ104_REWARD);
    };
    B_GIVEINVITEMS(OTHER, SELF, 0x89ed, 2);
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_Seeds_02_02");
    B_GIVEINVITEMS(OTHER, SELF, 0x89f1, 2);
    AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_PQ104_Seeds_15_01");
    B_GIVEINVITEMS(OTHER, SELF, 0x89ea, 2);
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_Seeds_02_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_PQ104_Seeds_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_Seeds_02_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_Seeds_02_06");
    INFO_CLEARCHOICES(0x11fd0);
    INFO_ADDCHOICE(0x11fd0, "What's in it for me?", 0x11fd4);
    INFO_ADDCHOICE(0x11fd0, "I think I'll pass for now.", 0x11fd3);
}

func void DIA_HERSHLIK_PQ104_SEEDS_NO() {
    PQ104_ENDING = 2;
    AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_PQ104_Seeds_No_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_Seeds_No_02_01");
    if (((IAM_PEON) == (TRUE)) && (((PEON_SECONDTIME) == (0)) || ((PEON_SECONDTIME) == (2)))) {
        AI_LOGENTRY(TOPIC_PQ104, LOG_PQ104_GOTSEEDS);
    };
    AI_LOGENTRY(TOPIC_PQ104, LOG_PQ104_GOTSEEDSV2);
    PQ104_FINISHQUEST();
    INFO_CLEARCHOICES(0x11fd0);
    AI_STOPPROCESSINFOS(SELF);
}

func void DIA_HERSHLIK_PQ104_SEEDS_PRIZE() {
    AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_PQ104_Seeds_Prize_15_01");
    if (((IAM_PEON) == (TRUE)) && (((PEON_SECONDTIME) == (0)) || ((PEON_SECONDTIME) == (2)))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_Seeds_Prize_02_01");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_Seeds_Prize_02_02");
    INFO_ADDCHOICE(0x11fd0, "Sounds fair. Let's get on with it.", 0x11fd6);
}

var int PLANTINGWITHHERSHLIK = 0;
func void DIA_HERSHLIK_PQ104_SEEDS_OK() {
    SELF.AIVAR[15] = TRUE;
    PQ104_ENDING = 1;
    AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_PQ104_Seeds_Ok_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_Seeds_Ok_02_01");
    NPC_EXCHANGEROUTINE(SELF, "PQ104_SEEDS_GUIDE");
    PLANTINGWITHHERSHLIK = TRUE;
    AI_STOPPROCESSINFOS(SELF);
    AI_FUNCTION(SELF, 0x11fd7);
}

func void HERSHLIK_PREPARELANDTOSEED() {
    FF_APPLYONCEEXTGT(0xf509, 0, -(1));
}

instance DIA_HERSHLIK_PQ104_PLANTING(C_INFO) {
    NPC = 0xcd0a;
    NR = 1;
    CONDITION = DIA_HERSHLIK_PQ104_PLANTING_CONDITION;
    INFORMATION = DIA_HERSHLIK_PQ104_PLANTING_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_HERSHLIK_PQ104_PLANTING_CONDITION() {
    if (((NPC_KNOWSINFO(OTHER, 0x11fd0)) && ((PLANTINGWITHHERSHLIK) == (TRUE))) && ((NPC_GETDISTTOWP(SELF, "PARTM2_PATH_78")) <= (500))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_HERSHLIK_PQ104_PLANTING_INFO() {
    SELF.AIVAR[15] = FALSE;
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_Planting_02_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_Planting_02_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_Planting_02_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_Planting_02_04");
    B_GIVEINVITEMS(SELF, OTHER, 0x9113, 3);
    NPC_EXCHANGEROUTINE(SELF, "PQ104_SEEDS");
    AI_STOPPROCESSINFOS(SELF);
}

var int PQ104_WECANBEPEON = 0;
instance DIA_HERSHLIK_PQ104_PLANTINGSUCCESS(C_INFO) {
    NPC = 0xcd0a;
    NR = 1;
    CONDITION = DIA_HERSHLIK_PQ104_PLANTINGSUCCESS_CONDITION;
    INFORMATION = DIA_HERSHLIK_PQ104_PLANTINGSUCCESS_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_HERSHLIK_PQ104_PLANTINGSUCCESS_CONDITION() {
    if ((((NPC_KNOWSINFO(OTHER, 0x11fd8)) && (PQ104_FIELD1)) && (PQ104_FIELD2)) && (PQ104_FIELD3)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_HERSHLIK_PQ104_PLANTINGSUCCESS_INFO() {
    FF_APPLYONCEEXTGT(0xf509, 0, -(1));
    PQ104_WECANBEPEON = TRUE;
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_PlantingSuccess_02_01");
    if (((IAM_PEON) == (TRUE)) && (((PEON_SECONDTIME) == (0)) || ((PEON_SECONDTIME) == (2)))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_PlantingSuccess_02_02");
        AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_PlantingSuccess_02_03");
        AI_LOGENTRY(TOPIC_PQ104, LOG_PQ104_GARDEN);
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_PlantingSuccess_02_04");
    AI_LOGENTRY(TOPIC_PQ104, LOG_PQ104_GARDENV2);
    PQ104_HERSHLIKPLANTSLASTCHAPTER = KAPITEL;
    PQ104_FINISHQUEST();
    NPC_EXCHANGEROUTINE(SELF, START);
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_HERSHLIK_PQ104_PLANTSREADY(C_INFO) {
    NPC = 0xcd0a;
    NR = 1;
    CONDITION = DIA_HERSHLIK_PQ104_PLANTSREADY_CONDITION;
    INFORMATION = DIA_HERSHLIK_PQ104_PLANTSREADY_INFO;
    PERMANENT = TRUE;
    IMPORTANT = FALSE;
    DESCRIPTION = "Are the plants mature?";
}

func int DIA_HERSHLIK_PQ104_PLANTSREADY_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x11fdc)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_HERSHLIK_PQ104_PLANTSREADY_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_PQ104_PlantsReady_15_01");
    if ((PQ104_HERSHLIKPLANTSLASTCHAPTER) < (KAPITEL)) {
        CHAPTERMULTIPLIER = (KAPITEL) - (PQ104_HERSHLIKPLANTSLASTCHAPTER);
        AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_PlantsReady_02_01");
        AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_PlantsReady_02_02");
        B_GIVEINVITEMS(SELF, OTHER, 0x85e2, 10);
        PQ104_HERSHLIKPLANTSLASTCHAPTER = KAPITEL;
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ104_PlantsReady_02_03");
}

var int DIA_HERSHLIK_PQ104_PLANTSREADY_INFO.CHAPTERMULTIPLIER = 0;
instance DIA_HERSHLIK_IWANTTOBEPEON(C_INFO) {
    NPC = 0xcd0a;
    NR = 10;
    CONDITION = DIA_HERSHLIK_IWANTTOBEPEON_CONDITION;
    INFORMATION = DIA_HERSHLIK_IWANTTOBEPEON_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "I want to be your apprentice.";
}

func int DIA_HERSHLIK_IWANTTOBEPEON_CONDITION() {
    if (((PQ104_WECANBEPEON) == (TRUE)) && ((PEON_HERSHLIK) == (FALSE))) {
        if (((IAM_PEON) == (FALSE)) || ((PEON_SECONDTIME) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_HERSHLIK_IWANTTOBEPEON_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_IwanttobePeon_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_IwanttobePeon_03_02");
    INFO_CLEARCHOICES(0x11fe3);
    INFO_ADDCHOICE(0x11fe3, "I'll think about it some more.", 0x11fe6);
    INFO_ADDCHOICE(0x11fe3, "I'm sure.", 0x11fe7);
}

func void DIA_HERSHLIK_IWANTTOBEPEON_NOTSURE() {
    AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_IwanttobePeonNotSure_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_IwanttobePeonNotSure_03_02");
    INFO_CLEARCHOICES(0x11fe3);
}

func void DIA_HERSHLIK_IWANTTOBEPEON_YES() {
    AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_IwanttobePeonYes_15_01");
    if ((B_GETGREATESTPETZCRIME(SELF)) > (CRIME_NONE)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_IwanttobePeonYes_03_06");
        AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_IwanttobePeonYes_03_07");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_IwanttobePeonYes_03_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_IwanttobePeonYes_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_IwanttobePeonYes_03_05");
    B_GIVEPLAYERXP(XP_PEON_FINISH);
    AI_LOGENTRY(TOPIC_PQ104, LOG_PQ104_FINISH);
    LOG_SETSTATUS(_@(MIS_PQ104), TOPIC_PQ104, LOG_SUCCESS);
    IAM_PEON = TRUE;
    PEON_HERSHLIK = TRUE;
    if ((PEON_WHOFIRSTPEON) == (0)) {
        PEON_WHOFIRSTPEON = 3;
    };
    PEON_SECONDTIME = 2;
    INFO_CLEARCHOICES(0x11fe3);
}

var int HERSHLIK_MIL_SURPRISED = 0;
var int HERSHLIK_SLD_SURPRISED = 0;
var int PQ105_CANBESTARTED = 0;
var int ALCHEMY_INFO = 0;
instance DIA_HERSHLIK_HOWTOBEPEON(C_INFO) {
    NPC = 0xcd0a;
    NR = 10;
    CONDITION = DIA_HERSHLIK_HOWTOBEPEON_CONDITION;
    INFORMATION = DIA_HERSHLIK_HOWTOBEPEON_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "What are my responsibilities?";
}

func int DIA_HERSHLIK_HOWTOBEPEON_CONDITION() {
    if ((PEON_HERSHLIK) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_HERSHLIK_HOWTOBEPEON_CANTEACH() {
    LOG_CREATETOPIC(TOPIC_WORK_HERSHLIK, LOG_NOTE);
    AI_LOGENTRY(TOPIC_WORK_HERSHLIK, LOG_WORK_HERSHLIK_START);
    ALCHEMY_INFO = TRUE;
}

func void DIA_HERSHLIK_HOWTOBEPEON_GUIDE() {
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_HowToBePeon_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_HowToBePeon_03_03");
    if ((HERO.GUILD) == (GIL_MIL)) {
        HERSHLIK_MIL_SURPRISED = TRUE;
        AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_AlchemyInfo_03_02");
    };
    if ((HERO.GUILD) == (GIL_SLD)) {
        HERSHLIK_SLD_SURPRISED = TRUE;
        AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_AlchemyInfo_03_03");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_AlchemyInfo_03_01");
    DIA_HERSHLIK_HOWTOBEPEON_CANTEACH();
}

func void DIA_HERSHLIK_HOWTOBEPEON_SIDEQUEST() {
    if ((PQ105_CANBESTARTED) == (FALSE)) {
        PQ105_CANBESTARTED = TRUE;
        DIA_HERSHLIK_HOWTOBEPEON_GUIDE();
        AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_HowToBePeon_SideQuest_15_02");
        AI_RESETFACEANI(SELF);
        AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_HowToBePeon_SideQuest_03_03");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_HowToBePeon_SideQuest_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_HowToBePeon_SideQuest_03_05");
    AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_HowToBePeon_SideQuest_15_06");
    LOG_CREATETOPIC(TOPIC_PQ105, LOG_MISSION);
    LOG_SETSTATUS(_@(MIS_PQ105), TOPIC_PQ105, LOG_RUNNING);
    AI_LOGENTRY(TOPIC_PQ105, LOG_PQ105_START);
    WLD_INSERTNPC(0xc3dc, RESERVED_CONST_STRING_166);
    WLD_INSERTNPC(0xc3dc, RESERVED_CONST_STRING_167);
    WLD_INSERTNPC(0xc3dc, RESERVED_CONST_STRING_168);
    WLD_INSERTNPC(0xc3dc, RESERVED_CONST_STRING_169);
    WLD_INSERTNPC(0xc3dc, RESERVED_CONST_STRING_170);
    WLD_INSERTNPC(0xc3dc, RESERVED_CONST_STRING_171);
}

func void DIA_HERSHLIK_HOWTOBEPEON_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_HowToBePeon_15_01");
    if ((((KAPITEL) >= (3)) && ((LOG_GETSTATUS(MIS_PQ105)) == (0))) && ((PEON_SECONDTIME) == (FALSE))) {
        DIA_HERSHLIK_HOWTOBEPEON_SIDEQUEST();
    };
    PQ105_CANBESTARTED = TRUE;
    DIA_HERSHLIK_HOWTOBEPEON_GUIDE();
}

instance DIA_HERSHLIK_WHOAYOUMILITIA(C_INFO) {
    NPC = 0xcd0a;
    NR = 10;
    CONDITION = DIA_HERSHLIK_WHOAYOUMILITIA_CONDITION;
    INFORMATION = DIA_HERSHLIK_WHOAYOUMILITIA_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_HERSHLIK_WHOAYOUMILITIA_CONDITION() {
    if ((((((PEON_HERSHLIK) == (TRUE)) && ((HERSHLIK_MIL_SURPRISED) == (FALSE))) && ((HERO.GUILD) == (GIL_MIL))) && (NPC_KNOWSINFO(OTHER, 0x11fec))) && ((NPC_KNOWSINFO(OTHER, 0x11ffa)) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_HERSHLIK_CANTAKESIDEQUEST() {
    AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_WhoaYouMilitia_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_WhoaYouMilitia_03_04");
    DIA_HERSHLIK_HOWTOBEPEON_SIDEQUEST();
}

func void DIA_HERSHLIK_NOSIDEQUESTYET() {
    AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_WhoaYouAraxos_15_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_WhoaYouAraxos_03_09");
}

func void DIA_HERSHLIK_WHOAYOUMILITIA_INFO() {
    HERSHLIK_MIL_SURPRISED = TRUE;
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_WhoaYouMilitia_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_WhoaYouMilitia_03_02");
    AI_RESETFACEANI(SELF);
    if (((LOG_GETSTATUS(MIS_PQ105)) == (0)) && ((PEON_SECONDTIME) == (FALSE))) {
        if ((KAPITEL) >= (3)) {
            DIA_HERSHLIK_CANTAKESIDEQUEST();
        } else {
            DIA_HERSHLIK_NOSIDEQUESTYET();
            PQ105_CANBESTARTED = TRUE;
        };
    };
}

instance DIA_HERSHLIK_WHOAYOUARAXOS(C_INFO) {
    NPC = 0xcd0a;
    NR = 10;
    CONDITION = DIA_HERSHLIK_WHOAYOUARAXOS_CONDITION;
    INFORMATION = DIA_HERSHLIK_WHOAYOUARAXOS_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_HERSHLIK_WHOAYOUARAXOS_CONDITION() {
    if ((((((PEON_HERSHLIK) == (TRUE)) && ((HERSHLIK_SLD_SURPRISED) == (FALSE))) && ((HERO.GUILD) == (GIL_SLD))) && (NPC_KNOWSINFO(OTHER, 0x11fec))) && ((NPC_KNOWSINFO(OTHER, 0x11ffa)) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_HERSHLIK_WHOAYOUARAXOS_INFO() {
    HERSHLIK_SLD_SURPRISED = TRUE;
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_WhoaYouAraxos_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_WhoaYouAraxos_03_02");
    AI_RESETFACEANI(SELF);
    if (((LOG_GETSTATUS(MIS_PQ105)) == (0)) && ((PEON_SECONDTIME) == (FALSE))) {
        if ((KAPITEL) >= (3)) {
            DIA_HERSHLIK_CANTAKESIDEQUEST();
        } else {
            DIA_HERSHLIK_NOSIDEQUESTYET();
            PQ105_CANBESTARTED = TRUE;
        };
    };
}

instance DIA_HERSHLIK_PQ105_STARTING(C_INFO) {
    NPC = 0xcd0a;
    NR = 10;
    CONDITION = DIA_HERSHLIK_PQ105_STARTING_CONDITION;
    INFORMATION = DIA_HERSHLIK_PQ105_STARTING_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_HERSHLIK_PQ105_STARTING_CONDITION() {
    if ((((((PEON_HERSHLIK) == (TRUE)) && ((KAPITEL) >= (3))) && ((PQ105_CANBESTARTED) == (TRUE))) && ((LOG_GETSTATUS(MIS_PQ105)) == (0))) && ((PEON_SECONDTIME) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_HERSHLIK_PQ105_STARTING_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ105_Starting_03_01");
    DIA_HERSHLIK_HOWTOBEPEON_SIDEQUEST();
}

instance DIA_HERSHLIK_WHATPOTIONBRING(C_INFO) {
    NPC = 0xcd0a;
    NR = 10;
    CONDITION = DIA_HERSHLIK_WHATPOTIONBRING_CONDITION;
    INFORMATION = DIA_HERSHLIK_WHATPOTIONBRING_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "What concoctions are worth the most?";
}

func int DIA_HERSHLIK_WHATPOTIONBRING_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x11fec)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_HERSHLIK_WHATPOTIONBRING_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_WhatPotionBring_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_WhatPotionBring_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_WhatPotionBring_03_03");
}

instance DIA_HERSHLIK_IHAVEPOTION(C_INFO) {
    NPC = 0xcd0a;
    NR = 10;
    CONDITION = DIA_HERSHLIK_IHAVEPOTION_CONDITION;
    INFORMATION = DIA_HERSHLIK_IHAVEPOTION_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "I have some potions with me.";
}

func int DIA_HERSHLIK_IHAVEPOTION_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x11ffd)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

var int POTIONINSTANCE = 0;
var int POTIONVALUE = 0;
var int HERSHLIK_TRADE_POTION_AMOUNT = 0;
var int HERSHLIK_COUNTGOLD = 0;
var int HERSHLIK_COUNTALL = 0;
var int MAXMANA04VOL2 = 0;
var int MAXMANA03VOL2 = 0;
var int MAXMANA02VOL2 = 0;
var int MAXMANA01VOL2 = 0;
var int MAXMANA04VOL1 = 0;
var int MAXMANA03VOL1 = 0;
var int MAXMANA02VOL1 = 0;
var int MAXMANA01VOL1 = 0;
var int MAXHP04VOL2 = 0;
var int MAXHP03VOL2 = 0;
var int MAXHP02VOL2 = 0;
var int MAXHP01VOL2 = 0;
var int MAXHP04VOL1 = 0;
var int MAXHP03VOL1 = 0;
var int MAXHP02VOL1 = 0;
var int MAXHP01VOL1 = 0;
var int GOLDMANA04VOL2 = 0;
var int GOLDMANA03VOL2 = 0;
var int GOLDMANA02VOL2 = 0;
var int GOLDMANA01VOL2 = 0;
var int GOLDMANA04VOL1 = 0;
var int GOLDMANA03VOL1 = 0;
var int GOLDMANA02VOL1 = 0;
var int GOLDMANA01VOL1 = 0;
var int GOLDHP04VOL2 = 0;
var int GOLDHP03VOL2 = 0;
var int GOLDHP02VOL2 = 0;
var int GOLDHP01VOL2 = 0;
var int GOLDHP04VOL1 = 0;
var int GOLDHP03VOL1 = 0;
var int GOLDHP02VOL1 = 0;
var int GOLDHP01VOL1 = 0;
func void DIA_HERSHLIK_IHAVEPOTION_CHOICES() {
    MAXMANA04VOL2 = NPC_HASITEMS(HERO, 0x862e);
    MAXMANA03VOL2 = NPC_HASITEMS(HERO, 0x862b);
    MAXMANA02VOL2 = NPC_HASITEMS(HERO, 0x8625);
    MAXMANA01VOL2 = NPC_HASITEMS(HERO, 0x8620);
    MAXMANA04VOL1 = NPC_HASITEMS(HERO, 0x8390);
    MAXMANA03VOL1 = NPC_HASITEMS(HERO, 0x8628);
    MAXMANA02VOL1 = NPC_HASITEMS(HERO, 0x8623);
    MAXMANA01VOL1 = NPC_HASITEMS(HERO, 0x861e);
    MAXHP04VOL2 = NPC_HASITEMS(HERO, 0x8641);
    MAXHP03VOL2 = NPC_HASITEMS(HERO, 0x863f);
    MAXHP02VOL2 = NPC_HASITEMS(HERO, 0x863c);
    MAXHP01VOL2 = NPC_HASITEMS(HERO, 0x8639);
    MAXHP04VOL1 = NPC_HASITEMS(HERO, 0x838e);
    MAXHP03VOL1 = NPC_HASITEMS(HERO, 0x8635);
    MAXHP02VOL1 = NPC_HASITEMS(HERO, 0x8632);
    MAXHP01VOL1 = NPC_HASITEMS(HERO, 0x8630);
    GOLDMANA04VOL2 = 0;
    GOLDMANA03VOL2 = 0;
    GOLDMANA02VOL2 = 0;
    GOLDMANA01VOL2 = 0;
    GOLDMANA04VOL1 = 0;
    GOLDMANA03VOL1 = 0;
    GOLDMANA02VOL1 = 0;
    GOLDMANA01VOL1 = 0;
    GOLDHP04VOL2 = 0;
    GOLDHP03VOL2 = 0;
    GOLDHP02VOL2 = 0;
    GOLDHP01VOL2 = 0;
    GOLDHP04VOL1 = 0;
    GOLDHP03VOL1 = 0;
    GOLDHP02VOL1 = 0;
    GOLDHP01VOL1 = 0;
    HERSHLIK_COUNTALL = (((((((((((((((MAXMANA04VOL2) + (MAXMANA03VOL2)) + (MAXMANA02VOL2)) + (MAXMANA01VOL2)) + (MAXMANA04VOL1)) + (MAXMANA03VOL1)) + (MAXMANA02VOL1)) + (MAXMANA01VOL1)) + (MAXHP04VOL2)) + (MAXHP03VOL2)) + (MAXHP02VOL2)) + (MAXHP01VOL2)) + (MAXHP04VOL1)) + (MAXHP03VOL1)) + (MAXHP02VOL1)) + (MAXHP01VOL1);
    POTIONINSTANCE = -(1);
    POTIONVALUE = 0;
    INFO_CLEARCHOICES(0x12000);
    if ((NPC_HASITEMS(OTHER, 0x862e)) >= (1)) {
        INFO_ADDCHOICE(0x12000, POTIONNAME_MANA_04_VOL2, 0x12040);
    };
    if ((NPC_HASITEMS(OTHER, 0x862b)) >= (1)) {
        INFO_ADDCHOICE(0x12000, POTIONNAME_MANA_03_VOL2, 0x1203f);
    };
    if ((NPC_HASITEMS(OTHER, 0x8625)) >= (1)) {
        INFO_ADDCHOICE(0x12000, POTIONNAME_MANA_02_VOL2, 0x1203e);
    };
    if ((NPC_HASITEMS(OTHER, 0x8620)) >= (1)) {
        INFO_ADDCHOICE(0x12000, POTIONNAME_MANA_01_VOL2, 0x1203d);
    };
    if ((NPC_HASITEMS(OTHER, 0x8641)) >= (1)) {
        INFO_ADDCHOICE(0x12000, POTIONNAME_HEALTH_04_VOL2, 0x12048);
    };
    if ((NPC_HASITEMS(OTHER, 0x863f)) >= (1)) {
        INFO_ADDCHOICE(0x12000, POTIONNAME_HEALTH_03_VOL2, 0x12047);
    };
    if ((NPC_HASITEMS(OTHER, 0x863c)) >= (1)) {
        INFO_ADDCHOICE(0x12000, POTIONNAME_HEALTH_02_VOL2, 0x12046);
    };
    if ((NPC_HASITEMS(OTHER, 0x8639)) >= (1)) {
        INFO_ADDCHOICE(0x12000, POTIONNAME_HEALTH_01_VOL2, 0x12045);
    };
    if ((NPC_HASITEMS(OTHER, 0x8390)) >= (1)) {
        INFO_ADDCHOICE(0x12000, POTIONNAME_MANA_04, 0x1203c);
    };
    if ((NPC_HASITEMS(OTHER, 0x8628)) >= (1)) {
        INFO_ADDCHOICE(0x12000, POTIONNAME_MANA_03, 0x1203b);
    };
    if ((NPC_HASITEMS(OTHER, 0x8623)) >= (1)) {
        INFO_ADDCHOICE(0x12000, POTIONNAME_MANA_02, 0x1203a);
    };
    if ((NPC_HASITEMS(OTHER, 0x861e)) >= (1)) {
        INFO_ADDCHOICE(0x12000, POTIONNAME_MANA_01, 0x12039);
    };
    if ((NPC_HASITEMS(OTHER, 0x838e)) >= (1)) {
        INFO_ADDCHOICE(0x12000, POTIONNAME_HEALTH_04, 0x12044);
    };
    if ((NPC_HASITEMS(OTHER, 0x8635)) >= (1)) {
        INFO_ADDCHOICE(0x12000, POTIONNAME_HEALTH_03, 0x12043);
    };
    if ((NPC_HASITEMS(OTHER, 0x8632)) >= (1)) {
        INFO_ADDCHOICE(0x12000, POTIONNAME_HEALTH_02, 0x12042);
    };
    if ((NPC_HASITEMS(OTHER, 0x8630)) >= (1)) {
        INFO_ADDCHOICE(0x12000, POTIONNAME_HEALTH_01, 0x12041);
    };
    ALL_STRING_POTIONS = CS4(DIALOG_ALL, " (", I2S(HERSHLIK_COUNTALL), ")");
    INFO_ADDCHOICE(0x12000, ALL_STRING_POTIONS, 0x12029);
    INFO_ADDCHOICE(0x12000, DIALOG_BACK, 0x12038);
}

var string DIA_HERSHLIK_IHAVEPOTION_CHOICES.ALL_STRING_POTIONS = "";
func void DIA_HERSHLIK_IHAVEPOTION_EVERYTHING() {
    MAXMANA04VOL2 = NPC_HASITEMS(HERO, 0x862e);
    MAXMANA03VOL2 = NPC_HASITEMS(HERO, 0x862b);
    MAXMANA02VOL2 = NPC_HASITEMS(HERO, 0x8625);
    MAXMANA01VOL2 = NPC_HASITEMS(HERO, 0x8620);
    MAXMANA04VOL1 = NPC_HASITEMS(HERO, 0x8390);
    MAXMANA03VOL1 = NPC_HASITEMS(HERO, 0x8628);
    MAXMANA02VOL1 = NPC_HASITEMS(HERO, 0x8623);
    MAXMANA01VOL1 = NPC_HASITEMS(HERO, 0x861e);
    MAXHP04VOL2 = NPC_HASITEMS(HERO, 0x8641);
    MAXHP03VOL2 = NPC_HASITEMS(HERO, 0x863f);
    MAXHP02VOL2 = NPC_HASITEMS(HERO, 0x863c);
    MAXHP01VOL2 = NPC_HASITEMS(HERO, 0x8639);
    MAXHP04VOL1 = NPC_HASITEMS(HERO, 0x838e);
    MAXHP03VOL1 = NPC_HASITEMS(HERO, 0x8635);
    MAXHP02VOL1 = NPC_HASITEMS(HERO, 0x8632);
    MAXHP01VOL1 = NPC_HASITEMS(HERO, 0x8630);
    GOLDMANA04VOL2 = (VALUE_MANATRUNK) * (MAXMANA04VOL2);
    GOLDMANA03VOL2 = (VALUE_MANAELIXIER) * (MAXMANA03VOL2);
    GOLDMANA02VOL2 = (VALUE_MANAEXTRAKT) * (MAXMANA02VOL2);
    GOLDMANA01VOL2 = (VALUE_MANAESSENZ) * (MAXMANA01VOL2);
    GOLDMANA04VOL1 = (VALUE_MANATRUNK) * (MAXMANA04VOL1);
    GOLDMANA03VOL1 = (VALUE_MANAELIXIER) * (MAXMANA03VOL1);
    GOLDMANA02VOL1 = (VALUE_MANAEXTRAKT) * (MAXMANA02VOL1);
    GOLDMANA01VOL1 = (VALUE_MANAESSENZ) * (MAXMANA01VOL1);
    GOLDHP04VOL2 = (VALUE_HPTRUNK) * (MAXHP04VOL2);
    GOLDHP03VOL2 = (VALUE_HPELIXIER) * (MAXHP03VOL2);
    GOLDHP02VOL2 = (VALUE_HPEXTRAKT) * (MAXHP02VOL2);
    GOLDHP01VOL2 = (VALUE_HPESSENZ) * (MAXHP01VOL2);
    GOLDHP04VOL1 = (VALUE_HPTRUNK) * (MAXHP04VOL1);
    GOLDHP03VOL1 = (VALUE_HPELIXIER) * (MAXHP03VOL1);
    GOLDHP02VOL1 = (VALUE_HPEXTRAKT) * (MAXHP02VOL1);
    GOLDHP01VOL1 = (VALUE_HPESSENZ) * (MAXHP01VOL1);
    HERSHLIK_COUNTGOLD = (((((((((((((((GOLDHP01VOL1) + (GOLDHP02VOL1)) + (GOLDHP03VOL1)) + (GOLDHP04VOL1)) + (GOLDHP01VOL2)) + (GOLDHP02VOL2)) + (GOLDHP03VOL2)) + (GOLDHP04VOL2)) + (GOLDMANA01VOL1)) + (GOLDMANA02VOL1)) + (GOLDMANA03VOL1)) + (GOLDMANA04VOL1)) + (GOLDMANA01VOL2)) + (GOLDMANA02VOL2)) + (GOLDMANA03VOL2)) + (GOLDMANA04VOL2);
    if ((NPC_HASITEMS(OTHER, 0x8630)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8630, MAXHP01VOL1);
    };
    if ((NPC_HASITEMS(OTHER, 0x8632)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8632, MAXHP02VOL1);
    };
    if ((NPC_HASITEMS(OTHER, 0x8635)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8635, MAXHP03VOL1);
    };
    if ((NPC_HASITEMS(OTHER, 0x838e)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x838e, MAXHP04VOL1);
    };
    if ((NPC_HASITEMS(OTHER, 0x8639)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8639, MAXHP01VOL2);
    };
    if ((NPC_HASITEMS(OTHER, 0x863c)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x863c, MAXHP02VOL2);
    };
    if ((NPC_HASITEMS(OTHER, 0x863f)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x863f, MAXHP03VOL2);
    };
    if ((NPC_HASITEMS(OTHER, 0x8641)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8641, MAXHP04VOL2);
    };
    if ((NPC_HASITEMS(OTHER, 0x861e)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x861e, MAXMANA01VOL1);
    };
    if ((NPC_HASITEMS(OTHER, 0x8623)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8623, MAXMANA02VOL1);
    };
    if ((NPC_HASITEMS(OTHER, 0x8628)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8628, MAXMANA03VOL1);
    };
    if ((NPC_HASITEMS(OTHER, 0x8390)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8390, MAXMANA04VOL1);
    };
    if ((NPC_HASITEMS(OTHER, 0x8620)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8620, MAXMANA01VOL2);
    };
    if ((NPC_HASITEMS(OTHER, 0x8625)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8625, MAXMANA02VOL2);
    };
    if ((NPC_HASITEMS(OTHER, 0x862b)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x862b, MAXMANA03VOL2);
    };
    if ((NPC_HASITEMS(OTHER, 0x862e)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x862e, MAXMANA04VOL2);
    };
    AI_WAIT(SELF, 0x3f000000);
    AI_FUNCTION(SELF, 0x1202a);
    DIA_HERSHLIK_IHAVEPOTION_CHOICES();
}

func void HERSHLIK_SELLPOTIONS() {
    CREATEINVITEMS(VLK_3002_HERSHLIK, 0x859b, (HERSHLIK_COUNTGOLD) / (2));
    B_GIVEINVITEMS(VLK_3002_HERSHLIK, HERO, 0x859b, (HERSHLIK_COUNTGOLD) / (2));
}

func void DIA_HERSHLIK_IHAVEPOTION_AMMOUNT() {
    INFO_CLEARCHOICES(0x12000);
    MAX = NPC_HASITEMS(HERO, POTIONINSTANCE);
    ALL_STRING = CS4(DIALOG_ALL, " (", I2S(MAX), ")");
    INFO_ADDCHOICE(0x12000, ALL_STRING, 0x1202e);
    INFO_ADDCHOICE(0x12000, CHOICE_NUMBER_25, 0x12030);
    INFO_ADDCHOICE(0x12000, CHOICE_NUMBER_10, 0x12032);
    INFO_ADDCHOICE(0x12000, CHOICE_NUMBER_5, 0x12034);
    INFO_ADDCHOICE(0x12000, CHOICE_NUMBER_1, 0x12036);
    INFO_ADDCHOICE(0x12000, DIALOG_BACK, 0x12027);
}

var int DIA_HERSHLIK_IHAVEPOTION_AMMOUNT.MAX = 0;
var string DIA_HERSHLIK_IHAVEPOTION_AMMOUNT.ALL_STRING = "";
func void DIA_HERSHLIK_IHAVEPOTION_ALL() {
    if ((NPC_HASITEMS(OTHER, POTIONINSTANCE)) >= (1)) {
        MAX = NPC_HASITEMS(HERO, POTIONINSTANCE);
        NPC_REMOVEINVITEMS(SELF, POTIONINSTANCE, MAX);
        CREATEINVITEMS(SELF, 0x859b, ((MAX) * (POTIONVALUE)) / (2));
        B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((MAX) * (POTIONVALUE)) / (2));
        HERSHLIK_TRADE_POTION_AMOUNT = (HERSHLIK_TRADE_POTION_AMOUNT) + (((MAX) * (POTIONVALUE)) / (2));
        B_GIVEINVITEMS(OTHER, SELF, POTIONINSTANCE, MAX);
        DIA_HERSHLIK_IHAVEPOTION_CHOICES();
    };
    DIA_HERSHLIK_IHAVEPOTION_CHOICES();
}

var int DIA_HERSHLIK_IHAVEPOTION_ALL.MAX = 0;
func void DIA_HERSHLIK_IHAVEPOTION_25() {
    if ((NPC_HASITEMS(OTHER, POTIONINSTANCE)) >= (25)) {
        NPC_REMOVEINVITEMS(SELF, POTIONINSTANCE, 25);
        CREATEINVITEMS(SELF, 0x859b, ((25) * (POTIONVALUE)) / (2));
        B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((25) * (POTIONVALUE)) / (2));
        HERSHLIK_TRADE_POTION_AMOUNT = (HERSHLIK_TRADE_POTION_AMOUNT) + (((25) * (POTIONVALUE)) / (2));
        B_GIVEINVITEMS(OTHER, SELF, POTIONINSTANCE, 25);
        DIA_HERSHLIK_IHAVEPOTION_AMMOUNT();
    };
    if (((NPC_HASITEMS(OTHER, POTIONINSTANCE)) >= (1)) && ((NPC_HASITEMS(OTHER, POTIONINSTANCE)) < (25))) {
        MAX = NPC_HASITEMS(HERO, POTIONINSTANCE);
        NPC_REMOVEINVITEMS(SELF, POTIONINSTANCE, MAX);
        CREATEINVITEMS(SELF, 0x859b, ((MAX) * (POTIONVALUE)) / (2));
        B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((MAX) * (POTIONVALUE)) / (2));
        HERSHLIK_TRADE_POTION_AMOUNT = (HERSHLIK_TRADE_POTION_AMOUNT) + (((MAX) * (POTIONVALUE)) / (2));
        B_GIVEINVITEMS(OTHER, SELF, POTIONINSTANCE, MAX);
        DIA_HERSHLIK_IHAVEPOTION_AMMOUNT();
    };
    if ((NPC_HASITEMS(OTHER, POTIONINSTANCE)) == (0)) {
        DIA_HERSHLIK_IHAVEPOTION_CHOICES();
    };
}

var int DIA_HERSHLIK_IHAVEPOTION_25.MAX = 0;
func void DIA_HERSHLIK_IHAVEPOTION_10() {
    if ((NPC_HASITEMS(OTHER, POTIONINSTANCE)) >= (10)) {
        NPC_REMOVEINVITEMS(SELF, POTIONINSTANCE, 10);
        CREATEINVITEMS(SELF, 0x859b, ((10) * (POTIONVALUE)) / (2));
        B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((10) * (POTIONVALUE)) / (2));
        HERSHLIK_TRADE_POTION_AMOUNT = (HERSHLIK_TRADE_POTION_AMOUNT) + (((10) * (POTIONVALUE)) / (2));
        B_GIVEINVITEMS(OTHER, SELF, POTIONINSTANCE, 10);
        DIA_HERSHLIK_IHAVEPOTION_AMMOUNT();
    };
    if (((NPC_HASITEMS(OTHER, POTIONINSTANCE)) >= (1)) && ((NPC_HASITEMS(OTHER, POTIONINSTANCE)) < (10))) {
        MAX = NPC_HASITEMS(HERO, POTIONINSTANCE);
        NPC_REMOVEINVITEMS(SELF, POTIONINSTANCE, MAX);
        CREATEINVITEMS(SELF, 0x859b, ((MAX) * (POTIONVALUE)) / (2));
        B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((MAX) * (POTIONVALUE)) / (2));
        HERSHLIK_TRADE_POTION_AMOUNT = (HERSHLIK_TRADE_POTION_AMOUNT) + (((MAX) * (POTIONVALUE)) / (2));
        B_GIVEINVITEMS(OTHER, SELF, POTIONINSTANCE, MAX);
        DIA_HERSHLIK_IHAVEPOTION_AMMOUNT();
    };
    if ((NPC_HASITEMS(OTHER, POTIONINSTANCE)) == (0)) {
        DIA_HERSHLIK_IHAVEPOTION_CHOICES();
    };
}

var int DIA_HERSHLIK_IHAVEPOTION_10.MAX = 0;
func void DIA_HERSHLIK_IHAVEPOTION_5() {
    if ((NPC_HASITEMS(OTHER, POTIONINSTANCE)) >= (5)) {
        NPC_REMOVEINVITEMS(SELF, POTIONINSTANCE, 5);
        CREATEINVITEMS(SELF, 0x859b, ((5) * (POTIONVALUE)) / (2));
        B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((5) * (POTIONVALUE)) / (2));
        HERSHLIK_TRADE_POTION_AMOUNT = (HERSHLIK_TRADE_POTION_AMOUNT) + (((5) * (POTIONVALUE)) / (2));
        B_GIVEINVITEMS(OTHER, SELF, POTIONINSTANCE, 5);
        DIA_HERSHLIK_IHAVEPOTION_AMMOUNT();
    };
    if (((NPC_HASITEMS(OTHER, POTIONINSTANCE)) >= (1)) && ((NPC_HASITEMS(OTHER, POTIONINSTANCE)) < (5))) {
        MAX = NPC_HASITEMS(HERO, POTIONINSTANCE);
        NPC_REMOVEINVITEMS(SELF, POTIONINSTANCE, MAX);
        CREATEINVITEMS(SELF, 0x859b, ((MAX) * (POTIONVALUE)) / (2));
        B_GIVEINVITEMS(SELF, OTHER, 0x859b, ((MAX) * (POTIONVALUE)) / (2));
        HERSHLIK_TRADE_POTION_AMOUNT = (HERSHLIK_TRADE_POTION_AMOUNT) + (((MAX) * (POTIONVALUE)) / (2));
        B_GIVEINVITEMS(OTHER, SELF, POTIONINSTANCE, MAX);
        DIA_HERSHLIK_IHAVEPOTION_AMMOUNT();
    };
    if ((NPC_HASITEMS(OTHER, POTIONINSTANCE)) == (0)) {
        DIA_HERSHLIK_IHAVEPOTION_CHOICES();
    };
}

var int DIA_HERSHLIK_IHAVEPOTION_5.MAX = 0;
func void DIA_HERSHLIK_IHAVEPOTION_1() {
    if ((NPC_HASITEMS(OTHER, POTIONINSTANCE)) >= (1)) {
        NPC_REMOVEINVITEMS(SELF, POTIONINSTANCE, 1);
        CREATEINVITEMS(SELF, 0x859b, (POTIONVALUE) / (2));
        B_GIVEINVITEMS(SELF, OTHER, 0x859b, (POTIONVALUE) / (2));
        HERSHLIK_TRADE_POTION_AMOUNT = (HERSHLIK_TRADE_POTION_AMOUNT) + ((POTIONVALUE) / (2));
        B_GIVEINVITEMS(OTHER, SELF, POTIONINSTANCE, 1);
        DIA_HERSHLIK_IHAVEPOTION_AMMOUNT();
    };
    if ((NPC_HASITEMS(OTHER, POTIONINSTANCE)) == (0)) {
        DIA_HERSHLIK_IHAVEPOTION_CHOICES();
    };
}

func void DIA_HERSHLIK_IHAVEPOTION_INFO() {
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_IHavePotion_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_IHavePotion_03_02");
    AI_RESETFACEANI(SELF);
    DIA_HERSHLIK_IHAVEPOTION_CHOICES();
}

func void DIA_HERSHLIK_IHAVEPOTION_BACK() {
    if ((HERSHLIK_TRADE_POTION_AMOUNT) > (0)) {
        AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_Back_15_01");
    };
    if (((HERSHLIK_TRADE_POTION_AMOUNT) > (0)) && ((HERSHLIK_TRADE_POTION_AMOUNT) <= (300))) {
        AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_Back_03_02");
    };
    if (((HERSHLIK_TRADE_POTION_AMOUNT) > (300)) && ((HERSHLIK_TRADE_POTION_AMOUNT) <= (1000))) {
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_IHavePotion_Mana01One_03_01");
    };
    if ((HERSHLIK_TRADE_POTION_AMOUNT) > (1000)) {
        AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_IHavePotion_Mana01Five_03_01");
    };
    AI_RESETFACEANI(SELF);
    INFO_CLEARCHOICES(0x12000);
    HERSHLIK_TRADE_POTION_AMOUNT = 0;
}

func void DIA_HERSHLIK_IHAVEPOTION_MANA01() {
    POTIONINSTANCE = 0x861e;
    POTIONVALUE = VALUE_MANAESSENZ;
    DIA_HERSHLIK_IHAVEPOTION_AMMOUNT();
}

func void DIA_HERSHLIK_IHAVEPOTION_MANA02() {
    POTIONINSTANCE = 0x8623;
    POTIONVALUE = VALUE_MANAEXTRAKT;
    DIA_HERSHLIK_IHAVEPOTION_AMMOUNT();
}

func void DIA_HERSHLIK_IHAVEPOTION_MANA03() {
    POTIONINSTANCE = 0x8628;
    POTIONVALUE = VALUE_MANAELIXIER;
    DIA_HERSHLIK_IHAVEPOTION_AMMOUNT();
}

func void DIA_HERSHLIK_IHAVEPOTION_MANA04() {
    POTIONINSTANCE = 0x8390;
    POTIONVALUE = VALUE_MANATRUNK;
    DIA_HERSHLIK_IHAVEPOTION_AMMOUNT();
}

func void DIA_HERSHLIK_IHAVEPOTION_MANA01_VOL2() {
    POTIONINSTANCE = 0x8620;
    POTIONVALUE = VALUE_MANAESSENZ;
    DIA_HERSHLIK_IHAVEPOTION_AMMOUNT();
}

func void DIA_HERSHLIK_IHAVEPOTION_MANA02_VOL2() {
    POTIONINSTANCE = 0x8625;
    POTIONVALUE = VALUE_MANAEXTRAKT;
    DIA_HERSHLIK_IHAVEPOTION_AMMOUNT();
}

func void DIA_HERSHLIK_IHAVEPOTION_MANA03_VOL2() {
    POTIONINSTANCE = 0x862b;
    POTIONVALUE = VALUE_MANAELIXIER;
    DIA_HERSHLIK_IHAVEPOTION_AMMOUNT();
}

func void DIA_HERSHLIK_IHAVEPOTION_MANA04_VOL2() {
    POTIONINSTANCE = 0x862e;
    POTIONVALUE = VALUE_MANATRUNK;
    DIA_HERSHLIK_IHAVEPOTION_AMMOUNT();
}

func void DIA_HERSHLIK_IHAVEPOTION_HEALTH01() {
    POTIONINSTANCE = 0x8630;
    POTIONVALUE = VALUE_HPESSENZ;
    DIA_HERSHLIK_IHAVEPOTION_AMMOUNT();
}

func void DIA_HERSHLIK_IHAVEPOTION_HEALTH02() {
    POTIONINSTANCE = 0x8632;
    POTIONVALUE = VALUE_HPEXTRAKT;
    DIA_HERSHLIK_IHAVEPOTION_AMMOUNT();
}

func void DIA_HERSHLIK_IHAVEPOTION_HEALTH03() {
    POTIONINSTANCE = 0x8635;
    POTIONVALUE = VALUE_HPELIXIER;
    DIA_HERSHLIK_IHAVEPOTION_AMMOUNT();
}

func void DIA_HERSHLIK_IHAVEPOTION_HEALTH04() {
    POTIONINSTANCE = 0x838e;
    POTIONVALUE = VALUE_HPTRUNK;
    DIA_HERSHLIK_IHAVEPOTION_AMMOUNT();
}

func void DIA_HERSHLIK_IHAVEPOTION_HEALTH01_VOL2() {
    POTIONINSTANCE = 0x8639;
    POTIONVALUE = VALUE_HPESSENZ;
    DIA_HERSHLIK_IHAVEPOTION_AMMOUNT();
}

func void DIA_HERSHLIK_IHAVEPOTION_HEALTH02_VOL2() {
    POTIONINSTANCE = 0x863c;
    POTIONVALUE = VALUE_HPEXTRAKT;
    DIA_HERSHLIK_IHAVEPOTION_AMMOUNT();
}

func void DIA_HERSHLIK_IHAVEPOTION_HEALTH03_VOL2() {
    POTIONINSTANCE = 0x863f;
    POTIONVALUE = VALUE_HPELIXIER;
    DIA_HERSHLIK_IHAVEPOTION_AMMOUNT();
}

func void DIA_HERSHLIK_IHAVEPOTION_HEALTH04_VOL2() {
    POTIONINSTANCE = 0x8641;
    POTIONVALUE = VALUE_HPTRUNK;
    DIA_HERSHLIK_IHAVEPOTION_AMMOUNT();
}

instance DIA_HERSHLIK_TRADE(C_INFO) {
    NPC = 0xcd0a;
    NR = 950;
    CONDITION = DIA_HERSHLIK_TRADE_CONDITION;
    INFORMATION = DIA_HERSHLIK_TRADE_INFO;
    PERMANENT = TRUE;
    TRADE = TRUE;
    DESCRIPTION = "Show me your wares.";
}

func int DIA_HERSHLIK_TRADE_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x11fc1)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_HERSHLIK_TRADE_INFO() {
    NPC_INITAMBIENTS(SELF, 2);
    AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_TRADE_15_01");
    if ((NPC_GETLASTAMBIENT(SELF)) == (1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_TRADE_03_02");
    };
    if ((NPC_GETLASTAMBIENT(SELF)) == (2)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_TRADE_03_03");
    };
    B_GIVETRADEINV(SELF);
}

instance DIA_HERSHLIK_OSIPPOTION(C_INFO) {
    NPC = 0xcd0a;
    NR = 1;
    CONDITION = DIA_HERSHLIK_OSIPPOTION_CONDITION;
    INFORMATION = DIA_HERSHLIK_OSIPPOTION_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I need a digestive aid.";
}

func int DIA_HERSHLIK_OSIPPOTION_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_SQ305)) == (LOG_RUNNING)) && ((SQ305_OSIP_GOTPOTION) == (1))) && ((SQ305_OSIP_GOTPOTION) != (2))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_HERSHLIK_OSIPPOTION_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_OsipPotion_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_OsipPotion_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_OsipPotion_03_03");
    AI_LOGENTRY(TOPIC_SQ305, LOG_Q308_HERSHLIK_GOTPOTION);
    Q308_AVOID_RANDOM_TRAPS();
    SQ305_SPAWNHOMELESS();
}

instance DIA_HERSHLIK_PQ105_DONE(C_INFO) {
    NPC = 0xcd0a;
    NR = 1;
    CONDITION = DIA_HERSHLIK_PQ105_DONE_CONDITION;
    INFORMATION = DIA_HERSHLIK_PQ105_DONE_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I got the myrtle you wanted.";
}

func int DIA_HERSHLIK_PQ105_DONE_CONDITION() {
    if (((LOG_GETSTATUS(MIS_PQ105)) == (LOG_RUNNING)) && ((NPC_HASITEMS(OTHER, 0x9311)) >= (3))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_HERSHLIK_PQ105_DONE_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_PQ105_Done_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ105_Done_03_02");
    B_GIVEINVITEMS(OTHER, SELF, 0x9311, 3);
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ105_Done_03_03");
    if ((HERO.GUILD) == (GIL_MIL)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ105_Done_03_04");
    };
    if ((HERO.GUILD) == (GIL_SLD)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ105_Done_03_05");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ105_Done_03_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_PQ105_Done_03_07");
    CREATEINVITEMS(SELF, 0x859b, PQ105_REWARD);
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, PQ105_REWARD);
    LOG_SETSTATUS(_@(MIS_PQ105), TOPIC_PQ105, LOG_SUCCESS);
    AI_LOGENTRY(TOPIC_PQ105, LOG_PQ105_SUCCESS);
    B_GIVEPLAYERXP(XP_PQ105_FINISH);
}

instance DIA_HERSHLIK_TEACH_ALCHEMY(C_INFO) {
    NPC = 0xcd0a;
    NR = 7;
    CONDITION = DIA_HERSHLIK_TEACH_ALCHEMY_CONDITION;
    INFORMATION = DIA_HERSHLIK_TEACH_ALCHEMY_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = B_BUILDLEARNSTRING2(PRINT_LEARN_ALCHEMY1, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_ALCHEMY, 1), 0);
}

func int DIA_HERSHLIK_TEACH_ALCHEMY_CONDITION() {
    if (((ALCHEMY_INFO) == (TRUE)) && ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_ALCHEMY)) == (0))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_HERSHLIK_TEACH_ALCHEMY_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_teach_alchemy_15_00");
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_ALCHEMY)) == (1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_teach_alchemy_03_01");
        AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_teach_alchemy_03_02");
    };
    B_TEACHPLAYERTALENTALCHEMY(SELF, OTHER, 1);
}

instance DIA_HERSHLIK_TEACH_ALCHEMY2(C_INFO) {
    NPC = 0xcd0a;
    NR = 7;
    CONDITION = DIA_HERSHLIK_TEACH_ALCHEMY2_CONDITION;
    INFORMATION = DIA_HERSHLIK_TEACH_ALCHEMY2_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = B_BUILDLEARNSTRING2(PRINT_LEARN_ALCHEMY2, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_ALCHEMY, 2), 0);
}

func int DIA_HERSHLIK_TEACH_ALCHEMY2_CONDITION() {
    if (((ALCHEMY_INFO) == (TRUE)) && ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_ALCHEMY)) == (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_HERSHLIK_TEACH_ALCHEMY2_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_teach_alchemy2_15_00");
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_ALCHEMY)) == (2)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_teach_alchemy2_03_01");
        AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_teach_alchemy2_03_02");
    };
    B_TEACHPLAYERTALENTALCHEMY(SELF, OTHER, 2);
}

instance DIA_HERSHLIK_TEACH_ALCHEMY3(C_INFO) {
    NPC = 0xcd0a;
    NR = 7;
    CONDITION = DIA_HERSHLIK_TEACH_ALCHEMY3_CONDITION;
    INFORMATION = DIA_HERSHLIK_TEACH_ALCHEMY3_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = B_BUILDLEARNSTRING2(PRINT_LEARN_ALCHEMY3, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_ALCHEMY, 3), 0);
}

func int DIA_HERSHLIK_TEACH_ALCHEMY3_CONDITION() {
    if ((((ALCHEMY_INFO) == (TRUE)) && ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_ALCHEMY)) == (2))) && ((LOG_GETSTATUS(MIS_PQ105)) == (LOG_SUCCESS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_HERSHLIK_TEACH_ALCHEMY3_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_teach_alchemy3_15_00");
    ALCHEMY_FINISHTRAIN = TRUE;
    ALCHEMY_FINISHTRAIN_DAY = WLD_GETDAY();
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_ALCHEMY)) == (3)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_teach_alchemy3_03_01");
        AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_teach_alchemy3_03_02");
        AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_teach_alchemy3_03_03");
    };
    B_TEACHPLAYERTALENTALCHEMY(SELF, OTHER, 3);
}

instance DIA_HERSHLIK_Q505_HELP(C_INFO) {
    NPC = 0xcd0a;
    NR = 1;
    CONDITION = DIA_HERSHLIK_Q505_HELP_CONDITION;
    INFORMATION = DIA_HERSHLIK_Q505_HELP_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I'm going on a dangerous expedition, I'm going to need a lot of potions.";
}

func int DIA_HERSHLIK_Q505_HELP_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q505)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x13974))) {
        if ((PEON_HERSHLIK) == (TRUE)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_HERSHLIK_Q505_HELP_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Hershlik_Q505_Help_15_01");
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_Q505_Help_03_02");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_Q505_Help_03_03");
    CREATEINVITEMS(SELF, 0x92d3, 1);
    B_GIVEINVITEMS(SELF, OTHER, 0x92d3, 1);
    AI_RESETFACEANI(SELF);
}

instance DIA_HERSHLIK_FINISHPEON(C_INFO) {
    NPC = 0xcd0a;
    NR = 1;
    CONDITION = DIA_HERSHLIK_FINISHPEON_CONDITION;
    INFORMATION = DIA_HERSHLIK_FINISHPEON_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_HERSHLIK_FINISHPEON_CONDITION() {
    if ((((KAPITEL) >= (4)) && ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_ALCHEMY)) == (3))) && ((LOG_GETSTATUS(MIS_PQ105)) == (LOG_SUCCESS))) {
        if (((ALCHEMY_FINISHTRAIN) == (TRUE)) && ((ALCHEMY_FINISHTRAIN_DAY) <= ((WLD_GETDAY()) - (1)))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

var int HERSHLIK_FINISHPEON = 0;
var int HERSHLIK_FINISHPEON_DAY = 0;
func void DIA_HERSHLIK_FINISHPEON_INFO() {
    PEON_SECONDTIME = TRUE;
    HERSHLIK_FINISHPEON = TRUE;
    HERSHLIK_FINISHPEON_DAY = WLD_GETDAY();
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_FinishPeon_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_FinishPeon_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_FinishPeon_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_FinishPeon_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_FinishPeon_03_05");
    AI_RESETFACEANI(SELF);
    CREATEINVITEMS(SELF, 0x9bd0, 1);
    B_GIVEINVITEMS(SELF, OTHER, 0x9bd0, 1);
    LOG_CREATETOPIC(TOPIC_WORK_HERSHLIK, LOG_NOTE);
    AI_LOGENTRY(TOPIC_WORK_HERSHLIK, LOG_WORK_HERSHLIK_FINISH);
}

instance DIA_HERSHLIK_FINALPRESENT(C_INFO) {
    NPC = 0xcd0a;
    NR = 1;
    CONDITION = DIA_HERSHLIK_FINALPRESENT_CONDITION;
    INFORMATION = DIA_HERSHLIK_FINALPRESENT_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_HERSHLIK_FINALPRESENT_CONDITION() {
    if (((((KAPITEL) >= (5)) && ((HERSHLIK_FINISHPEON) == (TRUE))) && ((PEON_WHOFIRSTPEON) == (3))) && ((ALCHEMY_COUNTPERMPOTION) == (10))) {
        if ((HERSHLIK_FINISHPEON_DAY) <= ((WLD_GETDAY()) - (1))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_HERSHLIK_FINALPRESENT_INFO() {
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_FinalPresent_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_FinalPresent_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_FinalPresent_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_FinalPresent_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_FinalPresent_03_05");
    AI_RESETFACEANI(SELF);
    CREATEINVITEMS(SELF, 0x9373, 1);
    B_GIVEINVITEMS(SELF, OTHER, 0x9373, 1);
}

instance DIA_HERSHLIK_AMBIENT(C_INFO) {
    NPC = 0xcd0a;
    NR = 950;
    CONDITION = DIA_HERSHLIK_AMBIENT_CONDITION;
    INFORMATION = DIA_HERSHLIK_AMBIENT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "What's new?";
}

func int DIA_HERSHLIK_AMBIENT_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x11fc1)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_HERSHLIK_AMBIENT_INFO() {
    AI_STARTFACEANI(OTHER, S_SMILE, 1, -(1));
    B_SAY(OTHER, SELF, "$MARVIN_WhatNew");
    if ((((LOG_GETSTATUS(MIS_PQ104)) == (LOG_RUNNING)) || ((LOG_GETSTATUS(MIS_PQ105)) == (LOG_RUNNING))) || ((PEON_HERSHLIK) == (TRUE))) {
        NPC_INITAMBIENTS(SELF, 3);
    };
    NPC_INITAMBIENTS(SELF, 2);
    if ((NPC_GETLASTAMBIENT(SELF)) == (1)) {
        AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_Ambient_03_01");
        AI_STARTFACEANI(SELF, "S_ANGRY", 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_Ambient_03_02");
    };
    if ((NPC_GETLASTAMBIENT(SELF)) == (2)) {
        AI_STARTFACEANI(SELF, "S_SURPRISE", 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_Ambient_03_03");
        AI_STARTFACEANI(SELF, "S_ANGRY", 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_Ambient_03_04");
    };
    if ((NPC_GETLASTAMBIENT(SELF)) == (3)) {
        if (((LOG_GETSTATUS(MIS_PQ104)) == (LOG_RUNNING)) || ((LOG_GETSTATUS(MIS_PQ105)) == (LOG_RUNNING))) {
            AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
            AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_Ambient_03_05");
        } else if ((PEON_HERSHLIK) == (TRUE)) {
            AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
            AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_Ambient_03_06");
            AI_STARTFACEANI(SELF, "S_ANGRY", 1, -(1));
            AI_OUTPUT(SELF, OTHER, "DIA_Hershlik_Ambient_03_07");
        };
    };
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

instance DIA_HERSHLIK_CQ006_HELP(C_INFO) {
    NPC = 0xcd0a;
    NR = 1;
    CONDITION = DIA_HERSHLIK_CQ006_HELP_CONDITION;
    INFORMATION = DIA_HERSHLIK_CQ006_HELP_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Do you know anything about setting bones?";
}

func int DIA_HERSHLIK_CQ006_HELP_CONDITION() {
    if (((LOG_GETSTATUS(MIS_CQ006)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x1276d))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_HERSHLIK_CQ006_HELP_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 0, -(1));
    B_SAY(OTHER, SELF, "$CQ006_MARVIN_BONEHELP");
    AI_STARTFACEANI(SELF, S_ANGRY, 0, -(1));
    B_SAY(SELF, OTHER, "$DONTKNOW_TOPIC_ANGRY");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    AI_LOGENTRY(TOPIC_CQ006, LOG_CQ006_HERSHLIK_NOHELP);
    AI_FUNCTION(SELF, 0xf4f1);
}

instance DIA_HERSHLIK_PICKPOCKET(C_INFO) {
    NPC = 0xcd0a;
    NR = 900;
    CONDITION = DIA_HERSHLIK_PICKPOCKET_CONDITION;
    INFORMATION = DIA_HERSHLIK_PICKPOCKET_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = PICKPOCKET_80;
}

func int DIA_HERSHLIK_PICKPOCKET_CONDITION() {
    if (((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) && ((SELF.AIVAR[6]) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_HERSHLIK_PICKPOCKET_INFO() {
    INFO_CLEARCHOICES(0x1206c);
    INFO_ADDCHOICE(0x1206c, DIALOG_BACK, 0x12070);
    INFO_ADDCHOICE(0x1206c, DIALOG_PICKPOCKET, 0x1206f);
}

func void DIA_HERSHLIK_PICKPOCKET_DOIT() {
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) {
        CREATEINVITEMS(SELF, 0x85ec, 1);
        B_GIVEINVITEMS(SELF, OTHER, 0x85ec, 1);
        B_PICKPOCKET_AMBIENT_TIER_2();
        SELF.AIVAR[6] = TRUE;
        INFO_CLEARCHOICES(0x1206c);
    };
    AI_PLAYANI(HERO, T_CANNOTTAKE);
    PRINTSCREEN(PRINT_CANTPICKPOCKETTHISPERSON, -(1), -(1), FONT_SCREEN, 4);
    INFO_CLEARCHOICES(0x1206c);
}

func void DIA_HERSHLIK_PICKPOCKET_BACK() {
    INFO_CLEARCHOICES(0x1206c);
}

