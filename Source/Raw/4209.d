instance DIA_HELMUD_EXIT(C_INFO) {
    NPC = 0xdfc5;
    NR = 999;
    CONDITION = DIA_HELMUD_EXIT_CONDITION;
    INFORMATION = DIA_HELMUD_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_HELMUD_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_HELMUD_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_HELMUD_HELLO(C_INFO) {
    NPC = 0xdfc5;
    NR = 1;
    CONDITION = DIA_HELMUD_HELLO_CONDITION;
    INFORMATION = DIA_HELMUD_HELLO_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Who are you?";
}

func int DIA_HELMUD_HELLO_CONDITION() {
    return TRUE;
}

func void DIA_HELMUD_HELLO_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Helmud_HELLO_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Helmud_HELLO_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Helmud_HELLO_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Helmud_HELLO_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Helmud_HELLO_03_05");
    if ((((SQ101_SEARCHINGFORNIRKO) == (TRUE)) && ((LOG_GETSTATUS(MIS_SQ101)) == (LOG_RUNNING))) && ((SQ101_TALKEDWITHHELMUDABOUTNIRKO) == (FALSE))) {
        INFO_CLEARCHOICES(0x14dd9);
        INFO_ADDCHOICE(0x14dd9, "Actually, I'm looking for a man named Elco.", 0x14ddd);
    };
}

func void DIA_HELMUD_WHEREISNIRKO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Helmud_HELLO_Nirko_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Helmud_HELLO_Nirko_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Helmud_HELLO_Nirko_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Helmud_HELLO_Nirko_03_05");
    AI_OUTPUT(OTHER, SELF, "DIA_Helmud_HELLO_Nirko_15_06");
    SQ101_TALKEDWITHHELMUDABOUTNIRKO = TRUE;
    INFO_CLEARCHOICES(0x14dd9);
}

func void DIA_HELMUD_HELLO_NIRKO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Helmud_HELLO_Nirko_15_01");
    DIA_HELMUD_WHEREISNIRKO();
}

instance DIA_HELMUD_WORK(C_INFO) {
    NPC = 0xdfc5;
    NR = 2;
    CONDITION = DIA_HELMUD_WORK_CONDITION;
    INFORMATION = DIA_HELMUD_WORK_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "How's the work going?";
}

func int DIA_HELMUD_WORK_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x14dd9)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_HELMUD_WORK_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Helmud_Work_15_01");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Helmud_Work_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Helmud_Work_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Helmud_Work_03_05");
    AI_RESETFACEANI(SELF);
}

instance DIA_HELMUD_SQ117_START(C_INFO) {
    NPC = 0xdfc5;
    NR = 3;
    CONDITION = DIA_HELMUD_SQ117_START_CONDITION;
    INFORMATION = DIA_HELMUD_SQ117_START_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I'm looking to make some money. Maybe I could help you with something?";
}

func int DIA_HELMUD_SQ117_START_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x14dd9)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_HELMUD_SQ117_START_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Helmud_SQ117_Start_15_01");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Helmud_SQ117_Start_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Helmud_SQ117_Start_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Helmud_SQ117_Start_03_04");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Helmud_SQ117_Start_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Helmud_SQ117_Start_03_06");
    INFO_CLEARCHOICES(0x14de1);
    INFO_ADDCHOICE(0x14de1, "I'll take care of them. Where are they?", 0x14de6);
    INFO_ADDCHOICE(0x14de1, "You're on your own.", 0x14dea);
    INFO_ADDCHOICE(0x14de1, "It depends on what I get in return.", 0x14de7);
    INFO_ADDCHOICE(0x14de1, "You should ask hunters for help.", 0x14de8);
}

var int HELMUD_SQ117_TAKEQUEST = 0;
func void DIA_HELMUD_SQ117_STARTQUEST() {
    AI_RESETFACEANI(SELF);
    HELMUD_SQ117_TAKEQUEST = 0;
    AI_OUTPUT(SELF, OTHER, "DIA_Helmud_SQ117_Start_Where_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Helmud_SQ117_Start_Where_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Helmud_SQ117_Start_Where_03_05");
    LOG_CREATETOPIC(TOPIC_SQ117, LOG_MISSION);
    LOG_SETSTATUS(_@(MIS_SQ117), TOPIC_SQ117, LOG_RUNNING);
    AI_LOGENTRY(TOPIC_SQ117, LOG_SQ117_START);
    INFO_CLEARCHOICES(0x14de1);
    AI_STOPPROCESSINFOS(SELF);
}

func void DIA_HELMUD_SQ117_START_WHERE() {
    AI_OUTPUT(OTHER, SELF, "DIA_Helmud_SQ117_Start_Where_15_01");
    DIA_HELMUD_SQ117_STARTQUEST();
}

func void DIA_HELMUD_SQ117_START_REWARD() {
    AI_OUTPUT(OTHER, SELF, "DIA_Helmud_SQ117_Start_Reward_15_01");
    if (NPC_HASGUILDARMOREQUIPPED(OTHER, GIL_SLD)) {
        AI_STARTFACEANI(SELF, S_DOUBT, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Helmud_SQ117_Start_Reward_03_02");
        AI_OUTPUT(OTHER, SELF, "DIA_Helmud_SQ117_Start_Reward_15_03");
    };
    if (NPC_HASGUILDARMOREQUIPPED(OTHER, GIL_MIL)) {
        AI_STARTFACEANI(SELF, S_DOUBT, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Helmud_SQ117_Start_Reward_03_04");
        AI_OUTPUT(OTHER, SELF, "DIA_Helmud_SQ117_Start_Reward_15_05");
        AI_OUTPUT(SELF, OTHER, "DIA_Helmud_SQ117_Start_Reward_03_06");
    };
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Helmud_SQ117_Start_Reward_03_07");
    AI_OUTPUT(SELF, OTHER, "DIA_Helmud_SQ117_Start_Reward_03_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Helmud_SQ117_Start_Reward_03_09");
}

func void DIA_HELMUD_SQ117_START_HUNTERS() {
    SQ117_HELMUD_ASKHUNTERS = 1;
    AI_OUTPUT(OTHER, SELF, "DIA_Helmud_SQ117_Start_Hunters_15_01");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Helmud_SQ117_Start_Hunters_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Helmud_SQ117_Start_Hunters_03_05");
    AI_RESETFACEANI(SELF);
    if (NPC_KNOWSINFO(OTHER, 0x14d7b)) {
        INFO_ADDCHOICE(0x14de1, "The people of Wolf's Den didn't try to help you?", 0x14de9);
    };
}

func void DIA_HELMUD_SQ117_START_HUNTERS_ULRYK() {
    AI_OUTPUT(OTHER, SELF, "DIA_Helmud_SQ117_Start_Ulryk_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Helmud_SQ117_Start_Ulryk_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Helmud_SQ117_Start_Ulryk_15_03");
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Helmud_SQ117_Start_Ulryk_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Helmud_SQ117_Start_Ulryk_03_05");
    AI_RESETFACEANI(SELF);
}

func void DIA_HELMUD_SQ117_START_REFUSE() {
    HELMUD_SQ117_TAKEQUEST = 1;
    AI_OUTPUT(OTHER, SELF, "DIA_Helmud_SQ117_Start_Refuse_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Helmud_SQ117_Start_Refuse_03_02");
    if (NPC_HASGUILDARMOREQUIPPED(OTHER, GIL_MIL)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Helmud_SQ117_Start_Refuse_03_03");
    };
    if (NPC_HASGUILDARMOREQUIPPED(OTHER, GIL_SLD)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Helmud_SQ117_Start_Refuse_03_04");
    };
    INFO_CLEARCHOICES(0x14de1);
}

instance DIA_HELMUD_SQ117_TAKEQUEST(C_INFO) {
    NPC = 0xdfc5;
    NR = 1;
    CONDITION = DIA_HELMUD_SQ117_TAKEQUEST_CONDITION;
    INFORMATION = DIA_HELMUD_SQ117_TAKEQUEST_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I'll take care of those snappers.";
}

func int DIA_HELMUD_SQ117_TAKEQUEST_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 0x14de1)) && ((HELMUD_SQ117_TAKEQUEST) == (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_HELMUD_SQ117_TAKEQUEST_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Helmud_SQ117_TakeQuest_15_01");
    AI_STARTFACEANI(SELF, S_SURPRISE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Helmud_SQ117_TakeQuest_03_02");
    DIA_HELMUD_SQ117_STARTQUEST();
}

instance DIA_HELMUD_SQ117_FINISH(C_INFO) {
    NPC = 0xdfc5;
    NR = 1;
    CONDITION = DIA_HELMUD_SQ117_FINISH_CONDITION;
    INFORMATION = DIA_HELMUD_SQ117_FINISH_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "About those beasts...";
}

func int DIA_HELMUD_SQ117_FINISH_CONDITION() {
    if ((LOG_GETSTATUS(MIS_SQ117)) == (LOG_RUNNING)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_HELMUD_SQ117_FINISH_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Helmud_SQ117_Finish_15_01");
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Helmud_SQ117_Finish_03_02");
    if ((SQ117_ALLSNAPPERSDEAD) == (1)) {
        AI_OUTPUT(OTHER, SELF, "DIA_Helmud_SQ117_Finish_15_03");
        AI_OUTPUT(SELF, OTHER, "DIA_Helmud_SQ117_Finish_03_04");
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        AI_OUTPUT(OTHER, SELF, "DIA_Helmud_SQ117_Finish_15_05");
        AI_OUTPUT(SELF, OTHER, "DIA_Helmud_SQ117_Finish_03_06");
        if (NPC_HASGUILDARMOREQUIPPED(OTHER, GIL_MIL)) {
            AI_OUTPUT(SELF, OTHER, "DIA_Helmud_SQ117_Finish_03_07");
        } else if (NPC_HASGUILDARMOREQUIPPED(OTHER, GIL_SLD)) {
            AI_OUTPUT(SELF, OTHER, "DIA_Helmud_SQ117_Finish_03_08");
        };
        AI_OUTPUT(SELF, OTHER, "DIA_Helmud_SQ117_Finish_03_09");
        AI_OUTPUT(OTHER, SELF, "DIA_Helmud_SQ117_Finish_15_10");
        AI_STOPPROCESSINFOS(SELF);
        AI_RESETFACEANI(SELF);
        if ((HERO.LEVEL) < (10)) {
            AI_LOGENTRY(TOPIC_SQ117, LOG_SQ117_FINISH_V1);
        } else {
            AI_LOGENTRY(TOPIC_SQ117, LOG_SQ117_FINISH_V2);
        } else {
            LOG_SETSTATUS(_@(MIS_SQ117), TOPIC_SQ117, LOG_SUCCESS);
        } else {
            B_GIVEPLAYERXP(XP_SQ117_FINISH);
        } else {
            CREATEINVITEMS(SELF, 0x8c37, 1);
        } else {
            CREATEINVITEMS(SELF, 0x859b, SQ117_FINISH);
        } else {
            /* set_instance(0) */;
        };
    };
    AI_OUTPUT(OTHER, SELF, "DIA_Helmud_SQ117_Finish_15_11");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Helmud_SQ117_Finish_03_12");
    AI_RESETFACEANI(SELF);
}

instance DIA_HELMUD_NIRKO(C_INFO) {
    NPC = 0xdfc5;
    NR = 951;
    CONDITION = DIA_HELMUD_NIRKO_CONDITION;
    INFORMATION = DIA_HELMUD_NIRKO_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I'm looking for a man named Elco.";
}

func int DIA_HELMUD_NIRKO_CONDITION() {
    if ((((SQ101_SEARCHINGFORNIRKO) == (TRUE)) && ((LOG_GETSTATUS(MIS_SQ101)) == (LOG_RUNNING))) && ((SQ101_TALKEDWITHHELMUDABOUTNIRKO) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_HELMUD_NIRKO_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Helmud_Nirko_15_01");
    DIA_HELMUD_WHEREISNIRKO();
}

instance DIA_HELMUD_AMBIENT(C_INFO) {
    NPC = 0xdfc5;
    NR = 950;
    CONDITION = DIA_HELMUD_AMBIENT_CONDITION;
    INFORMATION = DIA_HELMUD_AMBIENT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "How are you doing?";
}

func int DIA_HELMUD_AMBIENT_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x14dd9)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_HELMUD_AMBIENT_INFO() {
    NPC_INITAMBIENTS(SELF, 3);
    AI_OUTPUT(OTHER, SELF, "DIA_Helmud_Ambient_15_01");
    if ((NPC_GETLASTAMBIENT(SELF)) == (1)) {
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Helmud_Ambient_03_02");
        AI_OUTPUT(SELF, OTHER, "DIA_Helmud_Ambient_03_03");
        AI_OUTPUT(OTHER, SELF, "DIA_Helmud_Ambient_15_04");
        AI_OUTPUT(SELF, OTHER, "DIA_Helmud_Ambient_03_05");
    };
    if ((NPC_GETLASTAMBIENT(SELF)) == (2)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Helmud_Ambient_03_06");
        AI_OUTPUT(SELF, OTHER, "DIA_Helmud_Ambient_03_07");
        AI_OUTPUT(SELF, OTHER, "DIA_Helmud_Ambient_03_08");
        AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
        AI_OUTPUT(OTHER, SELF, "DIA_Helmud_Ambient_15_09");
        AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Helmud_Ambient_03_10");
    };
    if ((NPC_GETLASTAMBIENT(SELF)) == (3)) {
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Helmud_Ambient_03_11");
        AI_OUTPUT(SELF, OTHER, "DIA_Helmud_Ambient_03_12");
        AI_OUTPUT(SELF, OTHER, "DIA_Helmud_Ambient_03_13");
    };
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

instance DIA_HELMUD_Q505_HELP(C_INFO) {
    NPC = 0xdfc5;
    NR = 1;
    CONDITION = DIA_HELMUD_Q505_HELP_CONDITION;
    INFORMATION = DIA_HELMUD_Q505_HELP_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Can I get some charcoal from you?";
}

func int DIA_HELMUD_Q505_HELP_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q505)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x13974))) {
        if ((LOG_GETSTATUS(MIS_SQ117)) == (LOG_SUCCESS)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_HELMUD_Q505_HELP_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Helmud_Q505_Help_15_01");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Helmud_Q505_Help_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Helmud_Q505_Help_03_03");
    CREATEINVITEMS(SELF, 0x92ca, 1);
    B_GIVEINVITEMS(SELF, OTHER, 0x92ca, 1);
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

instance DIA_HELMUD_BUYCOAL(C_INFO) {
    NPC = 0xdfc5;
    NR = 980;
    CONDITION = DIA_HELMUD_BUYCOAL_CONDITION;
    INFORMATION = DIA_HELMUD_BUYCOAL_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "I would like to buy charcoal.";
}

func int DIA_HELMUD_BUYCOAL_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x14dd9)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

var int HELMUD_COUNTBOUGHTCOAL = 0;
func void DIA_HELMUD_BUYCOAL_CHOICES() {
    COALCOST = VALUE_COAL;
    BUYCOAL_1 = CS4(DIALOG_BUYCOAL_1, " (", I2S(COALCOST), PRINT_SZ);
    DUMMYFUNCWITHSTRINGPARAMETER(" SZ)");
    BUYCOAL_5 = CS4(DIALOG_BUYCOAL_5, " (", I2S((COALCOST) * (5)), PRINT_SZ);
    DUMMYFUNCWITHSTRINGPARAMETER(" SZ)");
    BUYCOAL_1_SQ117 = CS4(DIALOG_BUYCOAL_1, " (", I2S((COALCOST) / (2)), PRINT_SZ);
    DUMMYFUNCWITHSTRINGPARAMETER(" SZ)");
    BUYCOAL_5_SQ117 = CS4(DIALOG_BUYCOAL_5, " (", I2S(((COALCOST) * (5)) / (2)), PRINT_SZ);
    DUMMYFUNCWITHSTRINGPARAMETER(" SZ)");
    INFO_CLEARCHOICES(0x14dfa);
    INFO_ADDCHOICE(0x14dfa, DIALOG_BACK, 0x14e07);
    if ((LOG_GETSTATUS(MIS_SQ117)) == (LOG_SUCCESS)) {
        INFO_ADDCHOICE(0x14dfa, BUYCOAL_5_SQ117, 0x14e06);
        INFO_ADDCHOICE(0x14dfa, BUYCOAL_1_SQ117, 0x14e05);
    };
    INFO_ADDCHOICE(0x14dfa, BUYCOAL_5, 0x14e06);
    INFO_ADDCHOICE(0x14dfa, BUYCOAL_1, 0x14e05);
}

var int DIA_HELMUD_BUYCOAL_CHOICES.COALCOST = 0;
var string DIA_HELMUD_BUYCOAL_CHOICES.BUYCOAL_1 = "";
var string DIA_HELMUD_BUYCOAL_CHOICES.BUYCOAL_5 = "";
var string DIA_HELMUD_BUYCOAL_CHOICES.BUYCOAL_1_SQ117 = "";
var string DIA_HELMUD_BUYCOAL_CHOICES.BUYCOAL_5_SQ117 = "";
func void DIA_HELMUD_BUYCOAL_INFO() {
    HELMUD_COUNTBOUGHTCOAL = 0;
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Helmud_BuyCoal_15_01");
    if (((LOG_GETSTATUS(MIS_SQ117)) == (LOG_SUCCESS)) && ((HELMUD_BUYCOALDISCOUNT) == (FALSE))) {
        HELMUD_BUYCOALDISCOUNT = TRUE;
        AI_OUTPUT(SELF, OTHER, "DIA_Helmud_BuyCoal_03_03");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Helmud_BuyCoal_03_02");
    DIA_HELMUD_BUYCOAL_CHOICES();
}

var int DIA_HELMUD_BUYCOAL_INFO.HELMUD_BUYCOALDISCOUNT = 0;
func void DIA_HELMUD_BUYCOAL_1() {
    if ((LOG_GETSTATUS(MIS_SQ117)) == (LOG_SUCCESS)) {
        if ((NPC_HASITEMS(OTHER, 0x859b)) >= ((VALUE_COAL) / (2))) {
            HELMUD_COUNTBOUGHTCOAL = (HELMUD_COUNTBOUGHTCOAL) + (1);
            NPC_REMOVEINVITEMS(SELF, 0x859b, (VALUE_COAL) / (2));
            CREATEINVITEMS(SELF, 0x85b4, 1);
        } else {
            B_SAY(SELF, OTHER, "$NOGOLD");
        } else {
            /* set_instance(0) */;
        };
    };
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (VALUE_COAL)) {
        HELMUD_COUNTBOUGHTCOAL = (HELMUD_COUNTBOUGHTCOAL) + (1);
        NPC_REMOVEINVITEMS(SELF, 0x859b, VALUE_COAL);
        CREATEINVITEMS(SELF, 0x85b4, 1);
    };
    B_SAY(SELF, OTHER, "$NOGOLD");
    DIA_HELMUD_BUYCOAL_CHOICES();
}

func void DIA_HELMUD_BUYCOAL_5() {
    if ((LOG_GETSTATUS(MIS_SQ117)) == (LOG_SUCCESS)) {
        if ((NPC_HASITEMS(OTHER, 0x859b)) >= (((VALUE_COAL) * (5)) / (2))) {
            HELMUD_COUNTBOUGHTCOAL = (HELMUD_COUNTBOUGHTCOAL) + (5);
            NPC_REMOVEINVITEMS(SELF, 0x859b, ((VALUE_COAL) * (5)) / (2));
            CREATEINVITEMS(SELF, 0x85b4, 5);
        } else {
            B_SAY(SELF, OTHER, "$NOGOLD");
        } else {
            /* set_instance(0) */;
        };
    };
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= ((VALUE_COAL) * (5))) {
        HELMUD_COUNTBOUGHTCOAL = (HELMUD_COUNTBOUGHTCOAL) + (5);
        NPC_REMOVEINVITEMS(SELF, 0x859b, ((VALUE_COAL) * (5)) / (2));
        CREATEINVITEMS(SELF, 0x85b4, 5);
    };
    B_SAY(SELF, OTHER, "$NOGOLD");
    DIA_HELMUD_BUYCOAL_CHOICES();
}

func void DIA_HELMUD_BUYCOAL_BACK() {
    if ((HELMUD_COUNTBOUGHTCOAL) == (0)) {
        AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Helmud_BuyCoal_03_04");
    };
    AI_RESETFACEANI(SELF);
    INFO_CLEARCHOICES(0x14dfa);
}

instance DIA_HELMUD_PICKPOCKET(C_INFO) {
    NPC = 0xdfc5;
    NR = 900;
    CONDITION = DIA_HELMUD_PICKPOCKET_CONDITION;
    INFORMATION = DIA_HELMUD_PICKPOCKET_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = PICKPOCKET_80;
}

func int DIA_HELMUD_PICKPOCKET_CONDITION() {
    if (((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) && ((SELF.AIVAR[6]) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_HELMUD_PICKPOCKET_INFO() {
    INFO_CLEARCHOICES(0x14e08);
    INFO_ADDCHOICE(0x14e08, DIALOG_BACK, 0x14e0c);
    INFO_ADDCHOICE(0x14e08, DIALOG_PICKPOCKET, 0x14e0b);
}

func void DIA_HELMUD_PICKPOCKET_DOIT() {
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (2)) {
        CREATEINVITEMS(SELF, 0x85b4, 4);
        B_GIVEINVITEMS(SELF, OTHER, 0x85b4, 4);
        B_PICKPOCKET_AMBIENT_TIER_2();
        SELF.AIVAR[6] = TRUE;
        INFO_CLEARCHOICES(0x14e08);
    };
    AI_PLAYANI(HERO, T_CANNOTTAKE);
    PRINTSCREEN(PRINT_CANTPICKPOCKETTHISPERSON, -(1), -(1), FONT_SCREEN, 4);
    INFO_CLEARCHOICES(0x14e08);
}

func void DIA_HELMUD_PICKPOCKET_BACK() {
    INFO_CLEARCHOICES(0x14e08);
}

