instance DIA_SILVESTR_EXIT(C_INFO) {
    NPC = 0xd88b;
    NR = 999;
    CONDITION = DIA_SILVESTR_EXIT_CONDITION;
    INFORMATION = DIA_SILVESTR_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_SILVESTR_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_SILVESTR_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

var int SILVESTR_FIGHTLEVEL = 0;
var int SILVESTRCANTEACHUSFIGHT = 0;
instance DIA_SILVESTR_TEACH(C_INFO) {
    NPC = 0xd88b;
    NR = 11;
    CONDITION = DIA_SILVESTR_TEACH_CONDITION;
    INFORMATION = DIA_SILVESTR_TEACH_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Teach me to fight!";
}

func int DIA_SILVESTR_TEACH_CONDITION() {
    if ((SILVESTRCANTEACHUSFIGHT) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

var int SILVESTR_GOLDCOST = 0;
func void DIA_SILVESTR_TEACH_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_Teach_15_01");
    SILVESTR_FIGHTLEVEL = OTHER.AIVAR[84];
    SILVESTR_GOLDCOST = 0;
    INFO_CLEARCHOICES(0x11185);
    INFO_ADDCHOICE(0x11185, DIALOG_BACK, 0x1118b);
    INFO_ADDCHOICE(0x11185, B_BUILDLEARNSTRING2(PRINT_LEARN1H1, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 1), SILVESTR_GOLDCOST), 0x11189);
    INFO_ADDCHOICE(0x11185, B_BUILDLEARNSTRING2(PRINT_LEARN1H5, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 5), (SILVESTR_GOLDCOST) * (5)), 0x1118a);
}

func void DIA_SILVESTR_TEACH_1H_1() {
    SILVESTR_GOLDCOST = 0;
    if (B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_1H, 1, 60)) {
        INFO_CLEARCHOICES(0x11185);
        INFO_ADDCHOICE(0x11185, DIALOG_BACK, 0x1118b);
        INFO_ADDCHOICE(0x11185, B_BUILDLEARNSTRING2(PRINT_LEARN1H1, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 1), SILVESTR_GOLDCOST), 0x11189);
        INFO_ADDCHOICE(0x11185, B_BUILDLEARNSTRING2(PRINT_LEARN1H5, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 5), (SILVESTR_GOLDCOST) * (5)), 0x1118a);
    };
}

func void DIA_SILVESTR_TEACH_1H_5() {
    SILVESTR_GOLDCOST = 0;
    if (B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_1H, 5, 60)) {
        INFO_CLEARCHOICES(0x11185);
        INFO_ADDCHOICE(0x11185, DIALOG_BACK, 0x1118b);
        INFO_ADDCHOICE(0x11185, B_BUILDLEARNSTRING2(PRINT_LEARN1H1, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 1), SILVESTR_GOLDCOST), 0x11189);
        INFO_ADDCHOICE(0x11185, B_BUILDLEARNSTRING2(PRINT_LEARN1H5, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 5), (SILVESTR_GOLDCOST) * (5)), 0x1118a);
    };
}

func void DIA_SILVESTR_TEACH_BACK() {
    if ((((OTHER.AIVAR[84]) > (SILVESTR_FIGHTLEVEL)) && ((OTHER.AIVAR[84]) <= (25))) && ((OTHER.AIVAR[84]) >= (10))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_Teach_101_02");
    };
    if ((((OTHER.AIVAR[84]) > (SILVESTR_FIGHTLEVEL)) && ((OTHER.AIVAR[84]) <= (45))) && ((OTHER.AIVAR[84]) >= (26))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_Teach_101_03");
    };
    if ((((OTHER.AIVAR[84]) > (SILVESTR_FIGHTLEVEL)) && ((OTHER.AIVAR[84]) <= (59))) && ((OTHER.AIVAR[84]) >= (27))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_Teach_101_04");
    };
    if (((OTHER.AIVAR[84]) > (SILVESTR_FIGHTLEVEL)) && ((OTHER.AIVAR[84]) == (60))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_Teach_101_05");
        SILVESTRCANTEACHUSFIGHT = FALSE;
    };
    INFO_CLEARCHOICES(0x11185);
}

instance DIA_SILVESTR_HELLO(C_INFO) {
    NPC = 0xd88b;
    NR = 1;
    CONDITION = DIA_SILVESTR_HELLO_CONDITION;
    INFORMATION = DIA_SILVESTR_HELLO_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Hello.";
}

func int DIA_SILVESTR_HELLO_CONDITION() {
    return TRUE;
}

func void DIA_SILVESTR_HELLO_INFO() {
    B_SAY(OTHER, SELF, "$MARVIN_Hello2");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_Hello_101_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_Hello_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_Hello_101_04");
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_Hello_15_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_Hello_101_06");
}

instance DIA_SILVESTR_CQ005_TENGRAL(C_INFO) {
    NPC = 0xd88b;
    NR = 2;
    CONDITION = DIA_SILVESTR_CQ005_TENGRAL_CONDITION;
    INFORMATION = DIA_SILVESTR_CQ005_TENGRAL_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I hear you're looking for an artifact?";
}

func int DIA_SILVESTR_CQ005_TENGRAL_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 0xff88)) && (NPC_KNOWSINFO(OTHER, 0x1118c))) {
        if ((LOG_GETSTATUS(MIS_CQ005)) == (LOG_RUNNING)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_SILVESTR_CQ005_TENGRAL_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_Tengral_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_Tengral_101_02");
    INFO_CLEARCHOICES(0x1118f);
    INFO_ADDCHOICE(0x1118f, "I am to assist you in this sacred duty.", 0x11193);
    INFO_ADDCHOICE(0x1118f, "That's exactly right.", 0x11192);
}

func void DIA_SILVESTR_CQ005_TENGRAL_YES() {
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_Tengral_Yes_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_Tengral_Yes_101_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_Tengral_Yes_101_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_Tengral_Yes_15_04");
    INFO_CLEARCHOICES(0x1118f);
}

func void DIA_SILVESTR_CQ005_TENGRAL_HELP() {
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_Tengral_Help_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_Tengral_Help_101_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_Tengral_Help_15_03");
    INFO_CLEARCHOICES(0x1118f);
}

instance DIA_SILVESTR_CQ005_NEED(C_INFO) {
    NPC = 0xd88b;
    NR = 3;
    CONDITION = DIA_SILVESTR_CQ005_NEED_CONDITION;
    INFORMATION = DIA_SILVESTR_CQ005_NEED_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Tell me what you're looking for specifically.";
}

func int DIA_SILVESTR_CQ005_NEED_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x1118f)) {
        if ((LOG_GETSTATUS(MIS_CQ005)) == (LOG_RUNNING)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_SILVESTR_CQ005_NEED_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_Need_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_Need_101_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_Need_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_Need_101_04");
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_Need_15_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_Need_101_06");
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_Need_15_07");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_Need_101_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_Need_101_09");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_Need_101_10");
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_Need_15_11");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_Need_101_12");
    AI_LOGENTRY(TOPIC_CQ005, LOG_CQ005_SILVESTR_NEEDARTIFACT);
}

instance DIA_SILVESTR_CQ005_EYEOFINNOS(C_INFO) {
    NPC = 0xd88b;
    NR = 10;
    CONDITION = DIA_SILVESTR_CQ005_EYEOFINNOS_CONDITION;
    INFORMATION = DIA_SILVESTR_CQ005_EYEOFINNOS_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I have something for you.";
}

func int DIA_SILVESTR_CQ005_EYEOFINNOS_CONDITION() {
    if ((NPC_HASITEMS(OTHER, 0x912f)) >= (1)) {
        if ((LOG_GETSTATUS(MIS_CQ005)) == (LOG_RUNNING)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_SILVESTR_CQ005_EYEOFINNOS_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_EyeOfInnos_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_EyeOfInnos_101_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_EyeOfInnos_15_03");
    B_GIVEINVITEMS(OTHER, SELF, 0x912f, 1);
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_EyeOfInnos_101_04");
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_EyeOfInnos_15_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_EyeOfInnos_101_06");
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_EyeOfInnos_15_07");
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_EyeOfInnos_15_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_EyeOfInnos_101_09");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_EyeOfInnos_101_10");
    CQ005_SILVESTRPRAYCHECK = TRUE;
    CQ005_SILVESTRPRAY = WLD_GETDAY();
    if ((LOG_GETSTATUS(MIS_Q202)) == (LOG_RUNNING)) {
        INFO_CLEARCHOICES(0x11197);
        INFO_ADDCHOICE(0x11197, "I'm in a bit of a hurry, I need to get references from respectable people in town.", 0x1119b);
    };
    AI_LOGENTRY(TOPIC_CQ005, LOG_CQ005_SILVESTR_EYEOFINNOS);
}

var int RUNAR_CQ005_TAKEDOC = 0;
func void DIA_SILVESTR_CQ005_EYEOFINNOS_NOTIME() {
    RUNAR_CQ005_TAKEDOC = 1;
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_NoTime_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_NoTime_101_02");
    B_USEFAKESCROLL();
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_NoTime_101_03");
    CREATEINVITEMS(SELF, 0x912e, 1);
    B_GIVEINVITEMS(SELF, OTHER, 0x912e, 1);
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_NoTime_15_04");
    NPC_EXCHANGEROUTINE(SELF, "CQ005_PRAY");
    AI_LOGENTRY(TOPIC_CQ005, LOG_CQ005_SILVESTR_EYEOFINNOS);
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_SILVESTR_CQ005_SCUM(C_INFO) {
    NPC = 0xd88b;
    NR = 2;
    CONDITION = DIA_SILVESTR_CQ005_SCUM_CONDITION;
    INFORMATION = DIA_SILVESTR_CQ005_SCUM_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_SILVESTR_CQ005_SCUM_CONDITION() {
    if ((((CQ005_SILVESTRPRAY) <= ((WLD_GETDAY()) - (1))) && ((CQ005_SILVESTRPRAYCHECK) == (TRUE))) && ((LOG_GETSTATUS(MIS_CQ005)) == (LOG_RUNNING))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_SILVESTR_CQ005_SCUM_INFO() {
    SQ313_HUUGDOOR();
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_Scum_101_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_Scum_101_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_Scum_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_Scum_101_04");
    INFO_CLEARCHOICES(0x1119c);
    if ((RUNAR_CQ005_TAKEDOC) == (1)) {
        if ((NPC_HASITEMS(OTHER, 0x912e)) >= (1)) {
            INFO_ADDCHOICE(0x1119c, "Here, your reference.", 0x111a1);
        };
        INFO_ADDCHOICE(0x1119c, "Unfortunately, I no longer have your reference with me...", 0x111a4);
    };
    INFO_ADDCHOICE(0x1119c, "Excuse me.", 0x111a3);
}

var int SILVESTRISMAD = 0;
func void DIA_SILVESTR_CQ005_SCUM_GORODERICH() {
    SILVESTRISMAD = TRUE;
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_NoPaper_101_04");
    CQ005_SILVESTRWENTTORODERICH = TRUE;
    CQ005_RODERICH_RTNCHECK = 1;
    NPC_EXCHANGEROUTINE(SELF, "CQ005_RODERICH");
    NPC_EXCHANGEROUTINE(MIL_4000_RODERICH, "CQ005_SMALLTALK");
    AI_LOGENTRY(TOPIC_CQ005, LOG_CQ005_SILVESTR_RODERICH);
    AI_STOPPROCESSINFOS(SELF);
}

func void DIA_SILVESTR_CQ005_SCUM_HERE() {
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_Here_15_01");
    NPC_REMOVEINVITEMS(SELF, 0x912e, 1);
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_Here_101_02");
    B_GIVEINVITEMS(OTHER, SELF, 0x912e, 1);
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_Here_101_03");
    DIA_SILVESTR_CQ005_SCUM_GORODERICH();
    CQ005_SILVESTRREWARDCHECK = TRUE;
    CQ005_SILVESTRREWARD = WLD_GETDAY();
}

func void DIA_SILVESTR_CQ005_SCUM_ANGRY() {
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_NoPaper_101_02");
    if ((RUNAR_CQ005_TAKEDOC) == (1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_NoPaper_101_03");
    };
    DIA_SILVESTR_CQ005_SCUM_GORODERICH();
}

func void DIA_SILVESTR_CQ005_SCUM_SORRY() {
    AI_OUTPUT(OTHER, SELF, "DIA_Gamal_Sewers_DirtyThief_Sorry_15_01");
    DIA_SILVESTR_CQ005_SCUM_ANGRY();
}

func void DIA_SILVESTR_CQ005_SCUM_NOPAPER() {
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_NoPaper_15_01");
    DIA_SILVESTR_CQ005_SCUM_ANGRY();
}

instance DIA_SILVESTR_CQ005_REWARD(C_INFO) {
    NPC = 0xd88b;
    NR = 1;
    CONDITION = DIA_SILVESTR_CQ005_REWARD_CONDITION;
    INFORMATION = DIA_SILVESTR_CQ005_REWARD_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_SILVESTR_CQ005_REWARD_CONDITION() {
    if ((((CQ005_SILVESTRREWARD) <= ((WLD_GETDAY()) - (1))) && ((CQ005_SILVESTRREWARDCHECK) == (TRUE))) && ((LOG_GETSTATUS(MIS_CQ005)) == (LOG_SUCCESS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void SILVESTR_CANTEACHYOU() {
    LOG_CREATETOPIC(TOPIC_CITYTEACHER, LOG_NOTE);
    AI_LOGENTRY(TOPIC_CITYTEACHER, LOG_TEACH_CITY_SILVESTR);
    SILVESTRCANTEACHUSFIGHT = TRUE;
}

func void DIA_SILVESTR_CQ005_REWARD_INFO() {
    if ((SILVESTRISMAD) == (TRUE)) {
        SILVESTRISMAD = FALSE;
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_Reward_101_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_Reward_101_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_Reward_101_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_Reward_101_04");
    SILVESTR_CANTEACHYOU();
}

instance DIA_SILVESTR_CQ005_RITUAL(C_INFO) {
    NPC = 0xd88b;
    NR = 15;
    CONDITION = DIA_SILVESTR_CQ005_RITUAL_CONDITION;
    INFORMATION = DIA_SILVESTR_CQ005_RITUAL_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I have news.";
}

func int DIA_SILVESTR_CQ005_RITUAL_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 0x1089a)) && ((LOG_GETSTATUS(MIS_CQ005)) == (LOG_RUNNING))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_SILVESTR_CQ005_RITUAL_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_Ritual_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_Ritual_101_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_Ritual_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_Ritual_101_04");
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_Ritual_15_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_Ritual_101_06");
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_Ritual_15_07");
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_Ritual_15_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_Ritual_101_09");
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_Ritual_15_10");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_Ritual_101_11");
    AI_LOGENTRY(TOPIC_CQ005, LOG_CQ005_SILVESTR_RITUAL);
    NPC_EXCHANGEROUTINE(SELF, "CQ005_WAIT_CHURCH");
}

instance DIA_SILVESTR_CQ005_LETSGO(C_INFO) {
    NPC = 0xd88b;
    NR = 16;
    CONDITION = DIA_SILVESTR_CQ005_LETSGO_CONDITION;
    INFORMATION = DIA_SILVESTR_CQ005_LETSGO_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Time to go.";
}

func int DIA_SILVESTR_CQ005_LETSGO_CONDITION() {
    if (((NPC_KNOWSINFO(OTHER, 0x111a9)) && (WLD_ISTIME(0, 0, 2, 0))) && ((LOG_GETSTATUS(MIS_CQ005)) == (LOG_RUNNING))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_SILVESTR_CQ005_LETSGO_INFO() {
    CQ005_REMOVEMONSTERS();
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_LetsGo_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_LetsGo_101_02");
    AI_STOPPROCESSINFOS(SELF);
    NPC_EXCHANGEROUTINE(SELF, "CQ005_GuideCity");
    CQ005_CHANGESILVESTRRTN = TRUE;
    SELF.AIVAR[15] = TRUE;
    WLD_INSERTNPC(0xd926, "PART1_PATH_46");
    WLD_INSERTNPC(0xd92a, "PART1_PATH_46");
    WLD_INSERTNPC(0xd92e, "PART1_PATH_46");
    WLD_INSERTNPC(0xd932, "PART1_PATH_46");
    AI_LOGENTRY(TOPIC_CQ005, LOG_CQ005_SILVESTR_LETSGO);
}

instance DIA_SILVESTR_CQ005_QUESTDONE(C_INFO) {
    NPC = 0xd88b;
    NR = 1;
    CONDITION = DIA_SILVESTR_CQ005_QUESTDONE_CONDITION;
    INFORMATION = DIA_SILVESTR_CQ005_QUESTDONE_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_SILVESTR_CQ005_QUESTDONE_CONDITION() {
    if ((((CQ005_FIGHTWITHTHUGS) == (4)) && ((LOG_GETSTATUS(MIS_CQ005)) == (LOG_RUNNING))) && (NPC_ISDEAD(NONE_6258_THUG))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_SILVESTR_CQ005_QUESTDONE_INFO() {
    SILVESTRISMAD = TRUE;
    SELF.AIVAR[15] = FALSE;
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_QuestDone_101_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_QuestDone_101_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_QuestDone_101_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_QuestDone_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_QuestDone_101_05");
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_QuestDone_15_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_QuestDone_101_07");
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_QuestDone_15_08");
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_QuestDone_15_09");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_QuestDone_101_10");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_QuestDone_101_11");
    AI_LOGENTRY(TOPIC_CQ005, LOG_CQ005_SILVESTR_AFTERFIGHT);
    NPC_EXCHANGEROUTINE(SELF, START);
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_SILVESTR_CQ005_HURT(C_INFO) {
    NPC = 0xd88b;
    NR = 10;
    CONDITION = DIA_SILVESTR_CQ005_HURT_CONDITION;
    INFORMATION = DIA_SILVESTR_CQ005_HURT_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Are you all right?";
}

func int DIA_SILVESTR_CQ005_HURT_CONDITION() {
    if (((LOG_GETSTATUS(MIS_CQ005)) == (LOG_SUCCESS)) && ((CQ005_FIGHTWITHTHUGS) == (4))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_SILVESTR_CQ005_HURT_INFO() {
    if ((SILVESTRISMAD) == (TRUE)) {
        SILVESTRISMAD = FALSE;
    };
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_Hurt_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_Hurt_101_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_Hurt_101_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_Hurt_101_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_Hurt_101_05");
    if ((CQ005_FIGHTWITHTHUGS_DAY) == ((WLD_GETDAY()) - (1))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_Hurt_101_06");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_Hurt_101_07");
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_Hurt_15_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_CQ005_Hurt_101_09");
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_CQ005_Hurt_15_10");
    SILVESTR_CANTEACHYOU();
}

instance DIA_SILVESTR_SQ313_PROBLEM(C_INFO) {
    NPC = 0xd88b;
    NR = 1;
    CONDITION = DIA_SILVESTR_SQ313_PROBLEM_CONDITION;
    INFORMATION = DIA_SILVESTR_SQ313_PROBLEM_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "The Archmage was interested in our recent adventures.";
}

func int DIA_SILVESTR_SQ313_PROBLEM_CONDITION() {
    if ((LOG_GETSTATUS(MIS_SQ313)) == (LOG_RUNNING)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_SILVESTR_SQ313_PROBLEM_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Silvestr_SQ313_Problem_15_01");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_SQ313_Problem_101_02");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_SQ313_Problem_101_03");
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_SILVESTR_PALADINS(C_INFO) {
    NPC = 0xd88b;
    NR = 1;
    CONDITION = DIA_SILVESTR_PALADINS_CONDITION;
    INFORMATION = DIA_SILVESTR_PALADINS_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "What can you tell me about paladins?";
}

func int DIA_SILVESTR_PALADINS_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x1118c)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_SILVESTR_PALADINS_INFO() {
    B_SAY(OTHER, SELF, "$MARVIN_TellMeAboutPaladins");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_Paladins_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_Paladins_03_02");
}

instance DIA_SILVESTR_KING(C_INFO) {
    NPC = 0xd88b;
    NR = 1;
    CONDITION = DIA_SILVESTR_KING_CONDITION;
    INFORMATION = DIA_SILVESTR_KING_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "What can you tell me about the King?";
}

func int DIA_SILVESTR_KING_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x1118c)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_SILVESTR_KING_INFO() {
    B_SAY(OTHER, SELF, "$MARVIN_TellMeAboutKing");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_King_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_King_03_02");
}

instance DIA_SILVESTR_AMBIENT(C_INFO) {
    NPC = 0xd88b;
    NR = 998;
    CONDITION = DIA_SILVESTR_AMBIENT_CONDITION;
    INFORMATION = DIA_SILVESTR_AMBIENT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "How's life?";
}

func int DIA_SILVESTR_AMBIENT_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x1118c)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_SILVESTR_AMBIENT_INFO() {
    B_SAY(OTHER, SELF, "$MARVIN_WhatNew5");
    if ((SILVESTRISMAD) == (TRUE)) {
        AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_Ambient_03_03");
        AI_STOPPROCESSINFOS(SELF);
    };
    if ((!(NPC_KNOWSINFO(OTHER, 0x1118f))) && (!(NPC_KNOWSINFO(OTHER, 0x111b2)))) {
        AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_Ambient_03_01");
    };
    if (((NPC_KNOWSINFO(OTHER, 0x1118f)) && (!(NPC_KNOWSINFO(OTHER, 0x1119c)))) && (!(NPC_KNOWSINFO(OTHER, 0x111b2)))) {
        AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_Ambient_03_02");
    };
    if (((NPC_KNOWSINFO(OTHER, 0x1119c)) && (!(NPC_KNOWSINFO(OTHER, 0x111a5)))) && (!(NPC_KNOWSINFO(OTHER, 0x111b2)))) {
        AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_Ambient_03_03");
        AI_STOPPROCESSINFOS(SELF);
    };
    if ((NPC_KNOWSINFO(OTHER, 0x111a5)) && (!(NPC_KNOWSINFO(OTHER, 0x111b2)))) {
        AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_Ambient_03_04");
    };
    if (NPC_KNOWSINFO(OTHER, 0x111b2)) {
        AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Silvestr_Ambient_03_05");
    };
    AI_RESETFACEANI(SELF);
}

instance DIA_SILVESTR_PICKPOCKET(C_INFO) {
    NPC = 0xd88b;
    NR = 900;
    CONDITION = DIA_SILVESTR_PICKPOCKET_CONDITION;
    INFORMATION = DIA_SILVESTR_PICKPOCKET_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = PICKPOCKET_80;
}

func int DIA_SILVESTR_PICKPOCKET_CONDITION() {
    if (((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) && ((SELF.AIVAR[6]) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_SILVESTR_PICKPOCKET_INFO() {
    INFO_CLEARCHOICES(0x111c1);
    INFO_ADDCHOICE(0x111c1, DIALOG_BACK, 0x111c5);
    INFO_ADDCHOICE(0x111c1, DIALOG_PICKPOCKET, 0x111c4);
}

func void DIA_SILVESTR_PICKPOCKET_DOIT() {
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (2)) {
        CREATEINVITEMS(SELF, 0x85b3, 1);
        B_GIVEINVITEMS(SELF, OTHER, 0x85b3, 1);
        B_PICKPOCKET_AMBIENT_TIER_2();
        SELF.AIVAR[6] = TRUE;
        INFO_CLEARCHOICES(0x111c1);
    };
    AI_PLAYANI(HERO, T_CANNOTTAKE);
    PRINTSCREEN(PRINT_CANTPICKPOCKETTHISPERSON, -(1), -(1), FONT_SCREEN, 4);
    INFO_CLEARCHOICES(0x111c1);
}

func void DIA_SILVESTR_PICKPOCKET_BACK() {
    INFO_CLEARCHOICES(0x111c1);
}

