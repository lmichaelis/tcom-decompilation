const int VALUE_ROTTENFISH = 3;
const int HP_ROTTENFISH = -15;
const int VALUE_RATMEATRAW = 3;
const int HP_RATMEATRAW = -5;
const int VALUE_RATMEAT = 5;
const int HP_RATMEAT = 5;
const int VALUE_BOARMEAT_RAW = 25;
const int HP_BOARMEAT_RAW = 10;
const int VALUE_BOARMEAT = 30;
const int HP_BOARMEAT = 20;
const int VALUE_SHEEPMEAT_RAW = 10;
const int HP_SHEEPMEAT_RAW = 5;
const int VALUE_SHEEPMEAT = 15;
const int HP_SHEEPMEAT = 15;
const int VALUE_MOLERATMEAT_RAW = 7;
const int HP_MOLERATMEAT_RAW = 5;
const int VALUE_MOLERATMEAT = 10;
const int HP_MOLERATMEAT = 15;
const int VALUE_WOLFMEAT_RAW = 6;
const int HP_WOLFMEAT_RAW = 3;
const int VALUE_WOLFMEAT = 9;
const int HP_WOLFMEAT = 10;
const int VALUE_SHADOWMEAT_RAW = 60;
const int HP_SHADOWMEAT_RAW = -10;
const int VALUE_SHADOWMEAT = 90;
const int HP_SHADOWMEAT = 15;
const int VALUE_SCAVENGERMEAT_RAW = 8;
const int HP_SCAVENGERMEAT_RAW = 5;
const int VALUE_SCAVENGERMEAT = 12;
const int HP_SCAVENGERMEAT = 15;
const int VALUE_TROLLMEAT_RAW = 100;
const int HP_TROLLMEAT_RAW = 20;
const int VALUE_TROLLMEAT = 150;
const int HP_TROLLMEAT = 150;
const int PERM_HP_TROLLMEAT = 1;
const int VALUE_BEARMEAT_RAW = 50;
const int HP_BEARMEAT_RAW = 20;
const int VALUE_BEARMEAT = 75;
const int HP_BEARMEAT = 75;
const int VALUE_CRABMEAT_RAW = 40;
const int HP_CRABMEAT_RAW = -10;
const int VALUE_CRABMEAT = 60;
const int HP_CRABMEAT = 35;
const int VALUE_DARKBEER = 9;
const int HP_DARKBEER = 10;
const int MANA_DARKBEER = 15;
const int HP_DARKBEER_SPECIAL = 10;
const int VALUE_PUMPKIN = 7;
const int VALUE_REDSTEW = 50;
const int HP_REDSTEW = 55;
const int BONUS_HP_REDSTEW = 2;
const int VALUE_BLUESTEW = 50;
const int MANA_BLUESTEW = 55;
const int BONUS_MANA_REDSTEW = 2;
const int VALUE_CABBAGE = 5;
const int VALUE_SCAVENGEREGG = 8;
const int HP_SCAVENGEREGG = 15;
const int VALUE_SOUTHERNFRUIT = 30;
const int HP_SOUTHERNFRUIT = 25;
const int VALUE_GRAPE = 4;
const int HP_GRAPE = 3;
const int MANA_GRAPE = 3;
const int VALUE_PARSLEY = 3;
const int MANA_PARSLEY = 6;
const int VALUE_CARROT = 3;
const int HP_CARROT = 5;
const int VALUE_GRAPE_TART = 14;
const int HP_GRAPE_TART = 40;
const int VALUE_SPIRIT = 60;
const int HP_SPIRIT = -20;
const int MANA_SPIRIT = 150;
const int VALUE_MOONSHINE = 40;
const int HP_MOONSHINE = -10;
const int MANA_MOONSHINE = 100;
const int VALUE_BERRYHERB = 4;
const int HP_BERRYHERB = 7;
const int VALUE_STARKA = 25;
const int HP_STARKA = 10;
const int MANA_STARKA = 70;
const int VALUE_WISP = 35;
const int HP_WISP = 30;
const int MANA_WISP = 30;
const int VALUE_SAILOR = 10;
const int HP_SAILOR = 10;
const int MANA_SAILOR = 20;
const int VALUE_WINEARRAZOL = 75;
const int HP_WINEARRAZOL = 25;
const int MANA_WINEARRAZOL = 120;
const int VALUE_SOUPHERB = 25;
const int HP_SOUPHERB = 40;
const int VALUE_LEGACYARRAZOL = 50;
const int HP_LEGACYARRAZOL = 30;
const int MANA_LEGACYARRAZOL = 90;
const int VALUE_DRIEDFRUIT = 30;
const int HP_DRIEDFRUIT = 10;
const int MANA_DRIEDFRUIT = 15;
const int VALUE_PEELEDBEET = 15;
const int VALUE_SQ114_HONEY = 35;
const int HPMAX_BEVINHONEY = 5;
const int STR_BEVINHONEY = 1;
const int VALUE_SQ224_HONEY = 50;
const int HP_ERGOHONEY = 30;
const int MANAMAX_ERGOHONEY = 2;
const int VALUE_WINEERNESO = 100;
const int HP_WINEERNESTO = 3;
const int HP_WINEERNESTO_HEAL = 70;
const int VALUE_OWBEER = 5;
const int HP_OWBEER = 5;
const int MANA_OWBEER = 7;
const int VALUE_BEER_02 = 12;
const int HP_BEER_02 = 10;
const int MANA_BEER_02 = 10;
const int VALUE_BEER_03 = 25;
const int HP_BEER_03 = 12;
const int MANA_BEER_03 = 8;
const int VALUE_WINE_ARAXOS = 15;
const int HP_WINE_ARAXOS = 2;
const int MANA_WINE_ARAXOS = 20;
const int VALUE_WINE_01 = 10;
const int VALUE_WINE_02 = 30;
const int HP_WINE_02 = 7;
const int MANA_WINE_02 = 35;
const int VALUE_SLAGERMEAT = 500;
const int VALUE_WEEDSTEW = 5;
const int HP_WEEDSTEW = 13;
const int VALUE_WINE_ERNESTO_STR = 550;
const int STR_WINE_ERNESTO = 1;
const int STR_MANA_WINE_ERNESTO = 40;
const int VALUE_WINE_ERNESTO_DEX = 550;
const int DEX_WINE_ERNESTO = 1;
const int DEX_MANA_WINE_ERNESTO = 40;
const int VALUE_WINE_ERNESTO_MANA = 550;
const int MANA_WINE_ERNESTO = 2;
const int MANA_MANA_WINE_ERNESTO = 55;
const int VALUE_WINE_ERNESTO_SPECIAL = 1500;
const int VALUE_WINEVALERIO = 35;
const int HP_WINEVALERIO = 25;
const int MANA_WINEVALERIO = 25;
func void FOOD_FORESTBERRYBONUS() {
    if ((SELF.ID) == (0)) {
        if (((FORESTBERRY_BONUS) >= (7)) && ((FORESTBERRY_BONUS) < (15))) {
            if ((FOOD_FORESTBERRYBONUS_PRINT1) == (FALSE)) {
                FOOD_FORESTBERRYBONUS_PRINT1 = TRUE;
                PRINT(PRINT_CARROT_EAT1);
            };
        } else if (((FORESTBERRY_BONUS) >= (15)) && ((FORESTBERRY_BONUS) < (25))) {
            if ((FOOD_FORESTBERRYBONUS_PRINT2) == (FALSE)) {
                FOOD_FORESTBERRYBONUS_PRINT2 = TRUE;
                PRINT(PRINT_CARROT_EAT2);
            };
        } else if ((FORESTBERRY_BONUS) >= (25)) {
            PRINT(PRINT_CARROT_EAT3);
            B_RAISEATTRIBUTE(SELF, ATR_DEXTERITY, 1);
            SND_PLAY("LevelUp");
            FORESTBERRY_BONUS = (FORESTBERRY_BONUS) - (25);
            FOOD_FORESTBERRYBONUS_PRINT1 = FALSE;
            FOOD_FORESTBERRYBONUS_PRINT2 = FALSE;
        };
    };
}

var int FOOD_FORESTBERRYBONUS.FOOD_FORESTBERRYBONUS_PRINT1 = 0;
var int FOOD_FORESTBERRYBONUS.FOOD_FORESTBERRYBONUS_PRINT2 = 0;
var int MEAL_APPLEPIE_CHECKBONUS = 0;
var int MEAL_BATSTEW_CHECKBONUS = 0;
var int MEAL_BEERFISH_CHECKBONUS = 0;
var int MEAL_BEERBREAD_CHECKBONUS = 0;
var int MEAL_BERRYCOMPOTE_CHECKBONUS = 0;
var int MEAL_BERRYJAM_CHECKBONUS = 0;
var int MEAL_BLUESTEW_CHECKBONUS = 0;
var int MEAL_BOARSTEW_CHECKBONUS = 0;
var int MEAL_BREADSOUP_CHECKBONUS = 0;
var int MEAL_CABBAGESOUP_CHECKBONUS = 0;
var int MEAL_DEXDUMPLINGS_CHECKBONUS = 0;
var int MEAL_DRYFRUITCOMPOTE_CHECKBONUS = 0;
var int MEAL_EXOTICDESSERT_CHECKBONUS = 0;
var int MEAL_FATSTEW_CHECKBONUS = 0;
var int MEAL_FISHCOTLET_CHECKBONUS = 0;
var int MEAL_FISHFILLETPERM_CHECKBONUS = 0;
var int MEAL_FISHPOT_CHECKBONUS = 0;
var int MEAL_FISHVINEGAR_CHECKBONUS = 0;
var int MEAL_FRIEDFISHSKINS_CHECKBONUS = 0;
var int MEAL_GRAPEJUICE_CHECKBONUS = 0;
var int MEAL_HERBFISHSOUP_CHECKBONUS = 0;
var int MEAL_HERBMUSHROOMBREWING_CHECKBONUS = 0;
var int MEAL_HERBSTEW_CHECKBONUS = 0;
var int MEAL_HONEYCOOKIES_CHECKBONUS = 0;
var int MEAL_HUNTERSPECIAL_CHECKBONUS = 0;
var int MEAL_MANAPERMSOUP_CHECKBONUS = 0;
var int MEAL_MARTHSOUP4_CHECKBONUS = 0;
var int MEAL_MARTHSOUP3_CHECKBONUS = 0;
var int MEAL_MARTHSOUP2_CHECKBONUS = 0;
var int MEAL_MARTHSOUP1_CHECKBONUS = 0;
var int MEAL_MEATANDBREAD_CHECKBONUS = 0;
var int MEAL_MEATANDCHEESE_CHECKBONUS = 0;
var int MEAL_MEATMISHMASH_CHECKBONUS = 0;
var int MEAL_MEATPACKS_CHECKBONUS = 0;
var int MEAL_MULLEDWISP_CHECKBONUS = 0;
var int MEAL_MUSHROOMCOTLET_CHECKBONUS = 0;
var int MEAL_MUSHROOMSOUP_CHECKBONUS = 0;
var int MEAL_MUSHROOMSTEW_CHECKBONUS = 0;
var int MEAL_PICKLEDBEET_CHECKBONUS = 0;
var int MEAL_PICKLEDMUSHROOMS_CHECKBONUS = 0;
var int MEAL_POORAPPLEPIE_CHECKBONUS = 0;
var int MEAL_POORBROTH_CHECKBONUS = 0;
var int MEAL_WEEDSTEW_CHECKBONUS = 0;
var int MEAL_POOREGGS_CHECKBONUS = 0;
var int MEAL_POORPATE_CHECKBONUS = 0;
var int MEAL_PUMPKINCOMPOTE_CHECKBONUS = 0;
var int MEAL_RASPBERRYDRINK_CHECKBONUS = 0;
var int MEAL_RASPBERRYTINCTURE_CHECKBONUS = 0;
var int MEAL_RATSTICK_CHECKBONUS = 0;
var int MEAL_REDSTEW_CHECKBONUS = 0;
var int MEAL_RIVERMIRTSOUP_CHECKBONUS = 0;
var int MEAL_ROASTEDINSECTS_CHECKBONUS = 0;
var int MEAL_SCAVENGERSHASHLIK_CHECKBONUS = 0;
var int MEAL_BEARSTEW_CHECKBONUS = 0;
var int MEAL_SHEPARDROAST_CHECKBONUS = 0;
var int MEAL_SIMPLEOYSTERS_CHECKBONUS = 0;
var int MEAL_SLAGERMEAT_CHECKBONUS = 0;
var int MEAL_SMOKEDHERBFISH_CHECKBONUS = 0;
var int MEAL_SPEEDHERBOYSTERS_CHECKBONUS = 0;
var int MEAL_SPEEDSTEW_CHECKBONUS = 0;
var int MEAL_SPICYFISH_CHECKBONUS = 0;
var int MEAL_SPICYPIE_CHECKBONUS = 0;
var int MEAL_STRENGTHJAM_CHECKBONUS = 0;
var int MEAL_SWEETBUN_CHECKBONUS = 0;
var int MEAL_TROLLSOUP_CHECKBONUS = 0;
var int MEAL_VEGEPIE_CHECKBONUS = 0;
var int MEAL_POINTSBONUS = 0;
func void FOOD_MEALSBONUS() {
    if ((SELF.ID) == (0)) {
        if ((MEAL_POINTSBONUS) >= (5)) {
            MEAL_POINTSBONUS = 0;
            HERO.ATTRIBUTE[1] = (HERO.ATTRIBUTE[1]) + (MEAL_BONUSTRY);
            MARVINTRANSFORMHP = (MARVINTRANSFORMHP) + (MEAL_BONUSTRY);
            CONCATTEXT = CONCATSTRINGS(PRINT_DIETP2, INTTOSTRING(MEAL_BONUSTRY));
            PRINTSCREEN(PRINT_DIETP1, -(1), 20, FONT_SCREEN, 4);
            PRINTSCREEN(CONCATTEXT, -(1), 25, FONT_SCREEN, 4);
        };
    };
}

const int FOOD_MEALSBONUS.MEAL_BONUSTRY = 5;
var string FOOD_MEALSBONUS.CONCATTEXT = "";
instance MEATTESTPACKET(C_ITEM) {
    NAME = "Meat Pack";
    MAINFLAG = ITEM_KAT_NONE;
    VISUAL = "ItMi_Packet.3ds";
    SCEMENAME = SCEME_MAPSEALED;
    ON_STATE[0] = USE_MEATTESTPACKET;
    MATERIAL = MAT_LEATHER;
    DESCRIPTION = NAME;
}

func void USE_MEATTESTPACKET() {
    CREATEINVITEMS(HERO, 0x8433, 10);
    CREATEINVITEMS(HERO, 0x8435, 10);
    CREATEINVITEMS(HERO, 0x8e33, 10);
    CREATEINVITEMS(HERO, 0x8e35, 10);
    CREATEINVITEMS(HERO, 0x8e39, 10);
    CREATEINVITEMS(HERO, 0x8e37, 10);
    CREATEINVITEMS(HERO, 0x8e3b, 10);
    CREATEINVITEMS(HERO, 0x8e3d, 10);
    CREATEINVITEMS(HERO, 0x8e41, 10);
    CREATEINVITEMS(HERO, 0x8e3f, 10);
    CREATEINVITEMS(HERO, 0x8e45, 10);
    CREATEINVITEMS(HERO, 0x8e43, 10);
    CREATEINVITEMS(HERO, 0x8e49, 10);
    CREATEINVITEMS(HERO, 0x8e47, 10);
    CREATEINVITEMS(HERO, 0x8e4d, 10);
    CREATEINVITEMS(HERO, 0x8e4b, 10);
    CREATEINVITEMS(HERO, 0x8e51, 10);
    CREATEINVITEMS(HERO, 0x8e4f, 10);
    CREATEINVITEMS(HERO, 0x8e55, 10);
    CREATEINVITEMS(HERO, 0x8e53, 10);
    CREATEINVITEMS(HERO, 0x8e59, 10);
    CREATEINVITEMS(HERO, 0x8e57, 10);
    SND_PLAY(GELDBEUTEL);
}

instance ITFO_GRAPE_TART(C_ITEM) {
    NAME = FOODNAME_GRAPE_TART;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_GRAPE_TART;
    VISUAL = "ItFo_Grape_Tart.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_FOODHUGE;
    ON_STATE[0] = USE_GRAPETART;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_GRAPE_TART_1;
    TEXT[2] = ITEMDESC_ITFO_GRAPE_TART_2;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_GRAPE_TART;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_GRAPE_TART;
}

func void USE_GRAPETART() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_GRAPE_TART);
}

instance ITFO_SOUPHERB(C_ITEM) {
    NAME = FOODNAME_SOUPHERB;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_SOUPHERB;
    VISUAL = "ITFO_STEW_04.3ds";
    MATERIAL = MAT_WOOD;
    SCEMENAME = SCEME_RICE;
    ON_STATE[0] = USE_SOUPHERB;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_SOUPHERB_1;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_SOUPHERB;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_SOUPHERB;
}

func void USE_SOUPHERB() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_SOUPHERB);
}

instance ITFO_STARKA(C_ITEM) {
    NAME = FOODNAME_STARK;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_STARKA;
    VISUAL = "KM_new_bottle_02.3ds";
    MATERIAL = MAT_GLAS;
    ON_STATE[0] = USESTARKA;
    DESCRIPTION = NAME;
    SCEMENAME = SCEME_POTIONFAST;
    TEXT[0] = ITEMDESC_ITFO_STARKA_1;
    TEXT[1] = ITEMDESC_ITFO_STARKA_2;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_STARKA;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MANA_STARKA;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_STARKA;
}

func void USESTARKA() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_STARKA);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MANA_STARKA);
}

instance ITFO_BERRY_HERB(C_ITEM) {
    NAME = FOODNAME_BERRY_HERB;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_BERRYHERB;
    VISUAL = "KM_raspberry.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_FOOD;
    ON_STATE[0] = USE_BERRYHERB;
    DESCRIPTION = NAME;
    TEXT[0] = FOODDESC_COOKINGCRAFTINGITEM;
    TEXT[1] = ITEMDESC_ITFO_BERRY_HERB_1;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_BERRYHERB;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_BERRYHERB;
}

func void USE_BERRYHERB() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_BERRYHERB);
    FORESTBERRY_BONUS = (FORESTBERRY_BONUS) + (1);
    FOOD_FORESTBERRYBONUS();
}

instance ITFO_SOUTHERNFRUIT(C_ITEM) {
    NAME = FOODNAME_SOUTHERNFRUIT;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_SOUTHERNFRUIT;
    VISUAL = "ItFo_SouthFruit.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_FOOD;
    ON_STATE[0] = USE_SOUTHERNFRUIT;
    DESCRIPTION = NAME;
    TEXT[0] = FOODDESC_COOKINGCRAFTINGITEM;
    TEXT[1] = ITEMDESC_ITFO_SOUTHERNFRUIT_1;
    TEXT[2] = ITEMDESC_ITFO_SOUTHERNFRUIT_2;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_SOUTHERNFRUIT;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_SOUTHERNFRUIT;
}

func void USE_SOUTHERNFRUIT() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_SOUTHERNFRUIT);
}

instance ITFO_GRAPE(C_ITEM) {
    NAME = FOODNAME_GRAPE;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_GRAPE;
    VISUAL = "ItFo_WineBerrys_01.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_FOOD;
    ON_STATE[0] = USE_GRAPE;
    DESCRIPTION = NAME;
    TEXT[0] = FOODDESC_COOKINGCRAFTINGITEM;
    TEXT[1] = ITEMDESC_ITFO_GRAPE_1;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_GRAPE;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MANA_GRAPE;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_GRAPE;
}

func void USE_GRAPE() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MANA_GRAPE);
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_GRAPE);
}

instance ITFO_OWBEER(C_ITEM) {
    NAME = FOODNAME_OWBEER;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_OWBEER;
    VISUAL = "ItFo_Beer_01.3DS";
    MATERIAL = MAT_GLAS;
    SCEMENAME = SCEME_POTIONFAST;
    ON_STATE[0] = USE_BEER;
    DESCRIPTION = NAME;
    TEXT[0] = FOODDESC_COOKINGCRAFTINGITEM;
    TEXT[1] = ITEMDESC_ITFO_OWBEER_1;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_OWBEER;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MANA_OWBEER;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_OWBEER;
}

instance ITFO_DARKBEER(C_ITEM) {
    NAME = FOODNAME_DARKBEER;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_DARKBEER;
    VISUAL = "KM_vob_darkbeer.3DS";
    MATERIAL = MAT_GLAS;
    SCEMENAME = SCEME_DARKBEER;
    ON_STATE[0] = USE_DARKBEER;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_DARKBEER_1;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_DARKBEER;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MANA_DARKBEER;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_DARKBEER;
}

func void USE_DARKBEER() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_DARKBEER);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MANA_DARKBEER);
}

instance ITFO_DARKBEER_SPECIAL(C_ITEM) {
    NAME = FOODNAME_DARKBEER_SPECIAL;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = (VALUE_DARKBEER) * (20);
    VISUAL = "KM_vob_darkbeer.3DS";
    MATERIAL = MAT_GLAS;
    SCEMENAME = SCEME_DARKBEER;
    ON_STATE[0] = USE_DARKBEER_SPECIAL;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_DARKBEER_1;
    TEXT[4] = NAME_BONUS_HPMAX;
    COUNT[4] = HP_DARKBEER_SPECIAL;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = (VALUE_DARKBEER) * (20);
}

func void USE_DARKBEER_SPECIAL() {
    B_RAISEATTRIBUTE(SELF, ATR_HITPOINTS_MAX, HP_DARKBEER_SPECIAL);
    MARVINTRANSFORMHP = (MARVINTRANSFORMHP) + (HP_DARKBEER_SPECIAL);
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_DARKBEER_SPECIAL);
}

instance ITFO_BEER_02(C_ITEM) {
    NAME = FOODNAME_BEER_02;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_BEER_02;
    VISUAL = "ItFo_Lakomy_Metal_Beer_Mug_Full_01.3DS";
    MATERIAL = MAT_GLAS;
    SCEMENAME = "STRONGBEER";
    ON_STATE[0] = USE_BEER_02;
    DESCRIPTION = NAME;
    TEXT[0] = FOODDESC_COOKINGCRAFTINGITEM;
    TEXT[1] = ITEMDESC_ITFO_BEER_02_1;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_BEER_02;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MANA_BEER_02;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_BEER_02;
}

func void USE_BEER_02() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_BEER_02);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MANA_BEER_02);
}

instance ITFO_WINE_ARAXOS(C_ITEM) {
    NAME = FOODNAME_WINE_ARAXOS;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_WINE_ARAXOS;
    VISUAL = "ItFo_Lakomy_Wine_Araxos_Labeled_01.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_POTIONFAST;
    ON_STATE[0] = USE_WINE_ARAXOS;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_WINE_ARAXOS_1;
    TEXT[1] = ITEMDESC_ITFO_WINE_ARAXOS_2;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_WINE_ARAXOS;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MANA_WINE_ARAXOS;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_WINE_ARAXOS;
}

func void USE_WINE_ARAXOS() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_WINE_ARAXOS);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MANA_WINE_ARAXOS);
}

instance ITFO_WINE_01(C_ITEM) {
    NAME = FOODNAME_WINE_01;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_WINE_01;
    VISUAL = "ItFo_Lakomy_Wine_01.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_POTIONFAST;
    ON_STATE[0] = USE_WINE_ARAXOS;
    DESCRIPTION = NAME;
    TEXT[0] = FOODDESC_COOKINGCRAFTINGITEM;
    TEXT[1] = ITEMDESC_ITFO_WINE_01_1;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_WINE_ARAXOS;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MANA_WINE_ARAXOS;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_WINE_01;
}

instance ITFO_WINE_02(C_ITEM) {
    NAME = FOODNAME_WINE_02;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_WINE_02;
    VISUAL = "ItFo_Lakomy_Wine_02.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_POTIONFAST;
    ON_STATE[0] = USE_WINE_022;
    DESCRIPTION = NAME;
    TEXT[0] = FOODDESC_COOKINGCRAFTINGITEM;
    TEXT[1] = ITEMDESC_ITFO_WINE_02_1;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_WINE_02;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MANA_WINE_02;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_WINE_02;
}

func void USE_WINE_022() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_WINE_02);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MANA_WINE_02);
}

instance ITFO_BEER_03(C_ITEM) {
    NAME = FOODNAME_BEER_03;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_BEER_03;
    VISUAL = "ItFo_Lakomy_Beer_01.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_POTIONFAST;
    ON_STATE[0] = USE_BEER_03;
    DESCRIPTION = NAME;
    TEXT[0] = FOODNAME_BEER_03_DESC1;
    TEXT[1] = FOODNAME_BEER_03_DESC2;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_BEER_03;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MANA_BEER_03;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_BEER_03;
}

func void USE_BEER_03() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_BEER_03);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MANA_BEER_03);
}

instance ITFO_PUMPKIN(C_ITEM) {
    NAME = FOODNAME_PUMPKIN;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_PUMPKIN;
    VISUAL = "KM_vob_pumpkin_01.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_NOTHING;
    DESCRIPTION = NAME;
    TEXT[0] = FOODDESC_COOKINGCRAFTINGITEM;
    TEXT[1] = ITEMDESC_ITFO_PUMPKIN_1;
    TEXT[2] = ITEMDESC_ITFO_PUMPKIN_2;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_PUMPKIN;
}

instance ITFO_CARROT(C_ITEM) {
    NAME = FOODNAME_CARROT;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_CARROT;
    VISUAL = "KM_vob_carrot.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_FOOD;
    ON_STATE[0] = USE_CARROT;
    DESCRIPTION = NAME;
    TEXT[0] = FOODDESC_COOKINGCRAFTINGITEM;
    TEXT[1] = FOODNAME_CARROT_DESC;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_CARROT;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_CARROT;
}

func void USE_CARROT() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_CARROT);
}

instance ITFO_PARSLEY(C_ITEM) {
    NAME = FOODNAME_PARSLEY;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_PARSLEY;
    VISUAL = "KM_vob_parsley.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_FOOD;
    ON_STATE[0] = USE_PARSLEY;
    DESCRIPTION = NAME;
    TEXT[0] = FOODDESC_COOKINGCRAFTINGITEM;
    TEXT[1] = ITEMDESC_ITFO_PARSLEY_1;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MANA_PARSLEY;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_CARROT;
}

func void USE_PARSLEY() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MANA_PARSLEY);
}

instance ITFO_CABBAGE(C_ITEM) {
    NAME = FOODNAME_CABBAGE;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_CABBAGE;
    VISUAL = "KM_vob_cabbage_01.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_NOTHING;
    DESCRIPTION = NAME;
    TEXT[0] = FOODDESC_COOKINGCRAFTINGITEM;
    TEXT[1] = ITEMDESC_ITFO_CABBAGE_1;
    TEXT[2] = ITEMDESC_ITFO_PUMPKIN_2;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_CABBAGE;
}

instance ITFO_SPIRIT(C_ITEM) {
    NAME = FOODNAME_SPIRIT;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_SPIRIT;
    VISUAL = "KM_new_bottle_02.3DS";
    MATERIAL = MAT_GLAS;
    SCEMENAME = SCEME_POTIONFAST;
    ON_STATE[0] = USE_SPIRITDRINK;
    DESCRIPTION = NAME;
    TEXT[0] = FOODDESC_COOKINGCRAFTINGITEM;
    TEXT[1] = ITEMDESC_ITFO_SPIRIT_1;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_SPIRIT;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MANA_SPIRIT;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_SPIRIT;
}

func void USE_SPIRITDRINK() {
    if ((SELF.ATTRIBUTE[0]) > (20)) {
        NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_SPIRIT);
    };
    SELF.ATTRIBUTE[0] = 5;
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MANA_SPIRIT);
}

instance ITFO_MOONSHINE(C_ITEM) {
    NAME = FOODNAME_MOONSHINE;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_MOONSHINE;
    VISUAL = "KM_new_bottle_02.3DS";
    MATERIAL = MAT_GLAS;
    SCEMENAME = SCEME_POTIONFAST;
    ON_STATE[0] = USE_MOONSHINEDRINK;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_MOONSHINE_1;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_MOONSHINE;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MANA_MOONSHINE;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_MOONSHINE;
}

func void USE_MOONSHINEDRINK() {
    if ((SELF.ATTRIBUTE[0]) > (20)) {
        NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_MOONSHINE);
    };
    SELF.ATTRIBUTE[0] = 5;
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MANA_MOONSHINE);
}

instance ITFO_WISP(C_ITEM) {
    NAME = FOODNAME_WISP;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_WISP;
    VISUAL = "ItFo_Lakomy_Bottle_01.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_POTIONFAST;
    ON_STATE[0] = USE_WISPDRINK;
    DESCRIPTION = NAME;
    TEXT[0] = FOODDESC_COOKINGCRAFTINGITEM;
    TEXT[1] = ITEMDESC_ITFO_WISP_1;
    TEXT[2] = ITEMDESC_ITFO_WISP_2;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_WISP;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MANA_WISP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_WISP;
}

func void USE_WISPDRINK() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_WISP);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MANA_WISP);
}

instance ITFO_SAILOR(C_ITEM) {
    NAME = FOODNAME_SAILOR;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_SAILOR;
    VISUAL = "KM_new_bottle_04.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_POTIONFAST;
    ON_STATE[0] = USE_SAILOR;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_SAILOR_1;
    TEXT[1] = ITEMDESC_ITFO_SAILOR_2;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_SAILOR;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MANA_SAILOR;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_SAILOR;
}

func void USE_SAILOR() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_SAILOR);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MANA_SAILOR);
}

instance ITFO_WINEARRAZOL(C_ITEM) {
    NAME = FOODNAME_WINEARRAZOL;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_WINEARRAZOL;
    VISUAL = "KM_new_bottle_13.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_POTIONFAST;
    ON_STATE[0] = USE_WINEARRAZOL;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_WINEARRAZOL_1;
    TEXT[1] = ITEMDESC_ITFO_WINEARRAZOL_2;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_WINEARRAZOL;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MANA_WINEARRAZOL;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_WINEARRAZOL;
}

func void USE_WINEARRAZOL() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_WINEARRAZOL);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MANA_WINEARRAZOL);
}

instance ITFO_LEGACYARRAZOL(C_ITEM) {
    NAME = FOODNAME_LEGACYARRAZOL;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_LEGACYARRAZOL;
    VISUAL = "KM_new_bottle_09.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_POTIONFAST;
    ON_STATE[0] = USE_LEGACYARRAZOL;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_LEGACYARRAZOL_1;
    TEXT[1] = ITEMDESC_ITFO_LEGACYARRAZOL_2;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_LEGACYARRAZOL;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MANA_LEGACYARRAZOL;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_LEGACYARRAZOL;
}

func void USE_LEGACYARRAZOL() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_LEGACYARRAZOL);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MANA_WINEARRAZOL);
}

instance ITFO_DRIEDFRUIT(C_ITEM) {
    NAME = FOODNAME_DRIEDFRUIT;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_DRIEDFRUIT;
    VISUAL = "ItFo_DriedFruit.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_PLATE;
    ON_STATE[0] = USE_DRIEDFRUIT;
    DESCRIPTION = NAME;
    TEXT[0] = FOODDESC_COOKINGCRAFTINGITEM;
    TEXT[1] = ITEMDESC_ITFO_DRIEDFRUIT_1;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_DRIEDFRUIT;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MANA_DRIEDFRUIT;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_DRIEDFRUIT;
}

func void USE_DRIEDFRUIT() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MANA_DRIEDFRUIT);
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_DRIEDFRUIT);
}

instance ITFO_SQ114_BEVINHONEY(C_ITEM) {
    NAME = FOODNAME_SQ114_BEVINHONEY;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_SQ114_HONEY;
    VISUAL = "ItFo_BevinHoney.3DS";
    MATERIAL = MAT_STONE;
    SCEMENAME = SCEME_PLATE;
    ON_STATE[0] = USE_SQ114_HONEY;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_SQ114_BEVINHONEY_1;
    TEXT[2] = ITEMDESC_ITFO_SQ114_BEVINHONEY_2;
    TEXT[3] = NAME_BONUS_STR;
    COUNT[3] = STR_BEVINHONEY;
    TEXT[4] = NAME_BONUS_HPMAX;
    COUNT[4] = HPMAX_BEVINHONEY;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_SQ114_HONEY() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS_MAX, HPMAX_BEVINHONEY);
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HPMAX_BEVINHONEY);
    MARVINTRANSFORMHP = (MARVINTRANSFORMHP) + (HPMAX_BEVINHONEY);
    NPC_CHANGEATTRIBUTE(SELF, ATR_STRENGTH, STR_BEVINHONEY);
    CONCATTEXT = CONCATSTRINGS(PRINT_LEARNHITPOINTS_MAX, INTTOSTRING(HPMAX_BEVINHONEY));
    PRINTSCREEN(CONCATTEXT, -(1), 45, FONT_SCREEN, 2);
    CONCATTEXT2 = CONCATSTRINGS(PRINT_LEARNSTR, INTTOSTRING(STR_BEVINHONEY));
    PRINTSCREEN(CONCATTEXT2, -(1), 55, FONT_SCREEN, 2);
}

var string USE_SQ114_HONEY.CONCATTEXT = "";
var string USE_SQ114_HONEY.CONCATTEXT2 = "";
instance ITFO_ROTTENFISH(C_ITEM) {
    NAME = FOODNAME_ROTTENFISH;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_ROTTENFISH;
    VISUAL = "ItFo_RottenFish.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_FOODHUGE;
    ON_STATE[0] = USE_ROTTENFISH;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_ROTTENFISH_1;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_ROTTENFISH;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_ROTTENFISH;
}

func void USE_ROTTENFISH() {
    if ((SELF.ATTRIBUTE[0]) > (15)) {
        NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_ROTTENFISH);
    };
    SELF.ATTRIBUTE[0] = 5;
}

instance ITAT_RATMEATRAW(C_ITEM) {
    NAME = FOODNAME_RATRAW;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_RATMEATRAW;
    VISUAL = "KM_meat_02.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MEAT;
    ON_STATE[0] = USE_RATMEATRAW;
    DESCRIPTION = NAME;
    TEXT[1] = FOODNAME_RATRAW_DESC1;
    TEXT[2] = FOODNAME_RATRAW_DESC2;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_RATMEATRAW;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_RATMEATRAW() {
    if ((SELF.ATTRIBUTE[0]) > (5)) {
        NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_RATMEATRAW);
    };
    SELF.ATTRIBUTE[0] = 5;
}

instance ITFO_ROASTEDRATMEAT(C_ITEM) {
    NAME = FOODNAME_RATFRIED;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_RATMEAT;
    VISUAL = "KM_cooked_meat_02.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MEAT;
    ON_STATE[0] = USE_RATMEAT;
    DESCRIPTION = NAME;
    TEXT[0] = FOODDESC_COOKINGCRAFTINGITEM;
    TEXT[1] = FOODNAME_RATFRIED_DESC;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_RATMEAT;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_RATMEAT() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_RATMEAT);
}

instance ITFO_BOAR_RAW(C_ITEM) {
    NAME = FOODNAME_BOARRAW;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_BOARMEAT_RAW;
    VISUAL = "KM_meat_09.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MEAT;
    ON_STATE[0] = USE_BOARMEAT_RAW;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_BOAR_RAW_1;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_BOARMEAT_RAW;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_BOARMEAT_RAW;
}

func void USE_BOARMEAT_RAW() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_BOARMEAT_RAW);
}

instance ITFO_BOAR(C_ITEM) {
    NAME = FOODNAME_BOARFRIED;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_BOARMEAT;
    VISUAL = "KM_cooked_meat_09.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MEAT;
    ON_STATE[0] = USE_BOARMEAT;
    DESCRIPTION = NAME;
    TEXT[0] = FOODDESC_COOKINGCRAFTINGITEM;
    TEXT[1] = ITEMDESC_ITFO_BOAR_RAW_1;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_BOARMEAT;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_BOARMEAT;
}

func void USE_BOARMEAT() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_BOARMEAT);
}

instance ITFO_SHEEP_RAW(C_ITEM) {
    NAME = FOODNAME_SHEEPRAW;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_SHEEPMEAT_RAW;
    VISUAL = "KM_meat_06.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MEAT;
    ON_STATE[0] = USE_SHEEPMEATRAW;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_SHEEP_RAW_1;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_SHEEPMEAT_RAW;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_SHEEPMEAT_RAW;
}

func void USE_SHEEPMEATRAW() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_SHEEPMEAT_RAW);
}

instance ITFO_SHEEPFRIED(C_ITEM) {
    NAME = FOODNAME_SHEEPFRIED;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_SHEEPMEAT;
    VISUAL = "KM_cooked_meat_06.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MEAT;
    ON_STATE[0] = USE_SHEEPMEAT;
    DESCRIPTION = NAME;
    TEXT[0] = FOODDESC_COOKINGCRAFTINGITEM;
    TEXT[1] = ITEMDESC_ITFO_SHEEP_RAW_1;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_SHEEPMEAT;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_SHEEPMEAT;
}

func void USE_SHEEPMEAT() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_SHEEPMEAT);
}

instance ITFO_MOLERATMEAT_RAW(C_ITEM) {
    NAME = FOODNAME_MOLERATRAW;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_MOLERATMEAT_RAW;
    VISUAL = "KM_meat_03.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MEAT;
    ON_STATE[0] = USE_MOLERATMEAT_RAW;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_MOLERATMEAT_RAW_1;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_MOLERATMEAT_RAW;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_MOLERATMEAT_RAW;
}

func void USE_MOLERATMEAT_RAW() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_MOLERATMEAT_RAW);
}

instance ITFO_MOLERATMEAT(C_ITEM) {
    NAME = FOODNAME_MOLERATFRIED;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_MOLERATMEAT;
    VISUAL = "KM_cooked_meat_03.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MEAT;
    ON_STATE[0] = USE_MOLERATMEAT;
    DESCRIPTION = NAME;
    TEXT[0] = FOODDESC_COOKINGCRAFTINGITEM;
    TEXT[1] = ITEMDESC_ITFO_MOLERATMEAT_RAW_1;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_MOLERATMEAT;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_MOLERATMEAT;
}

func void USE_MOLERATMEAT() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_MOLERATMEAT);
}

instance ITFO_WOLFMEAT_RAW(C_ITEM) {
    NAME = FOODNAME_WOLFRAW;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_WOLFMEAT_RAW;
    VISUAL = "KM_meat_04.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MEAT;
    ON_STATE[0] = USE_WOLFMEAT_RAW;
    DESCRIPTION = NAME;
    TEXT[0] = FOODDESC_COOKINGCRAFTINGITEM;
    TEXT[1] = ITEMDESC_ITFO_WOLFMEAT_RAW_1;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_WOLFMEAT_RAW;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_WOLFMEAT_RAW;
}

func void USE_WOLFMEAT_RAW() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_WOLFMEAT_RAW);
}

instance ITFO_WOLFMEAT(C_ITEM) {
    NAME = FOODNAME_WOLFFRIED;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_WOLFMEAT;
    VISUAL = "KM_cooked_meat_04.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MEAT;
    ON_STATE[0] = USE_WOLFMEAT;
    DESCRIPTION = NAME;
    TEXT[0] = FOODDESC_COOKINGCRAFTINGITEM;
    TEXT[1] = ITEMDESC_ITFO_WOLFMEAT_RAW_1;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_WOLFMEAT;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_WOLFMEAT;
}

func void USE_WOLFMEAT() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_WOLFMEAT);
}

instance ITFO_SHADOWMEAT_RAW(C_ITEM) {
    NAME = FOODNAME_SHADOWRAW;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_SHADOWMEAT_RAW;
    VISUAL = "KM_meat_08.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MEAT;
    ON_STATE[0] = USE_SHADOWMEAT_RAW;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_SHADOWMEAT_RAW_1;
    TEXT[2] = ITEMDESC_ITFO_SHADOWMEAT_RAW_2;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_SHADOWMEAT_RAW;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_SHADOWMEAT_RAW;
}

func void USE_SHADOWMEAT_RAW() {
    if ((SELF.ATTRIBUTE[0]) > (10)) {
        NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_SHADOWMEAT_RAW);
    };
    SELF.ATTRIBUTE[0] = 5;
}

instance ITFO_SHADOWMEAT(C_ITEM) {
    NAME = FOODNAME_SHADOWFRIED;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_SHADOWMEAT;
    VISUAL = "KM_cooked_meat_08.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MEAT;
    ON_STATE[0] = USE_SHADOWMEAT;
    DESCRIPTION = NAME;
    TEXT[0] = FOODDESC_COOKINGCRAFTINGITEM;
    TEXT[1] = ITEMDESC_ITFO_SHADOWMEAT_1;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_SHADOWMEAT;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_SHADOWMEAT;
}

func void USE_SHADOWMEAT() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_SHADOWMEAT);
}

instance ITFO_SCAVENGERMEAT_RAW(C_ITEM) {
    NAME = FOODNAME_SCAVENGERRAW;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_SCAVENGERMEAT_RAW;
    VISUAL = "KM_meat_10.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MEAT;
    ON_STATE[0] = USE_SCAVENGERMEAT_RAW;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_SCAVENGERMEAT_RAW_1;
    TEXT[2] = ITEMDESC_ITFO_SCAVENGERMEAT_RAW_2;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_SCAVENGERMEAT_RAW;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_SCAVENGERMEAT_RAW;
}

func void USE_SCAVENGERMEAT_RAW() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_SCAVENGERMEAT_RAW);
}

instance ITFO_SCAVENGERMEAT(C_ITEM) {
    NAME = FOODNAME_SCAVENGERFRIED;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_SCAVENGERMEAT;
    VISUAL = "KM_cooked_meat_10.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MEAT;
    ON_STATE[0] = USE_SCAVENGERMEAT;
    DESCRIPTION = NAME;
    TEXT[0] = FOODDESC_COOKINGCRAFTINGITEM;
    TEXT[1] = ITEMDESC_ITFO_SCAVENGERMEAT_RAW_1;
    TEXT[2] = ITEMDESC_ITFO_SCAVENGERMEAT_RAW_2;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_SCAVENGERMEAT;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_SCAVENGERMEAT;
}

func void USE_SCAVENGERMEAT() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_SCAVENGERMEAT);
}

instance ITFO_TROLLMEAT_RAW(C_ITEM) {
    NAME = FOODNAME_TROLLRAW;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_TROLLMEAT_RAW;
    VISUAL = "KM_meat_07.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MEAT;
    ON_STATE[0] = USE_TROLLMEAT_RAW;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_TROLLMEAT_RAW_1;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_TROLLMEAT_RAW;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_TROLLMEAT_RAW;
}

func void USE_TROLLMEAT_RAW() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_TROLLMEAT_RAW);
}

instance ITFO_TROLLMEAT(C_ITEM) {
    NAME = FOODNAME_TROLLFRIED;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_TROLLMEAT;
    VISUAL = "KM_cooked_meat_07.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MEAT;
    ON_STATE[0] = USE_TROLLMEAT;
    DESCRIPTION = NAME;
    TEXT[0] = FOODDESC_COOKINGCRAFTINGITEM;
    TEXT[1] = ITEMDESC_ITFO_TROLLMEAT_RAW_1;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_TROLLMEAT;
    TEXT[4] = NAME_BONUS_HPMAX;
    COUNT[4] = PERM_HP_TROLLMEAT;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_TROLLMEAT;
}

func void USE_TROLLMEAT() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_TROLLMEAT);
    B_RAISEATTRIBUTE(SELF, ATR_HITPOINTS_MAX, PERM_HP_TROLLMEAT);
}

instance ITFO_BEARRAW(C_ITEM) {
    NAME = FOODNAME_BEARRAW;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_BEARMEAT_RAW;
    VISUAL = "KM_meat_01.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MEAT;
    ON_STATE[0] = USE_BEARMEAT_RAW;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_BEARRAW_1;
    TEXT[2] = ITEMDESC_ITFO_BEARRAW_2;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_BEARMEAT_RAW;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_BEARMEAT_RAW;
}

func void USE_BEARMEAT_RAW() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_BEARMEAT_RAW);
}

instance ITFO_BEAR(C_ITEM) {
    NAME = FOODNAME_BEARFRIED;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_BEARMEAT;
    VISUAL = "KM_cooked_meat_01.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MEAT;
    ON_STATE[0] = USE_BEARMEAT;
    DESCRIPTION = NAME;
    TEXT[0] = FOODDESC_COOKINGCRAFTINGITEM;
    TEXT[1] = ITEMDESC_ITFO_BEARRAW_1;
    TEXT[2] = ITEMDESC_ITFO_BEARRAW_2;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_BEARMEAT;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_BEARMEAT;
}

func void USE_BEARMEAT() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_BEARMEAT);
}

instance ITFO_CRABRAW(C_ITEM) {
    NAME = FOODNAME_CRABRAW;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_CRABMEAT_RAW;
    VISUAL = "ItAt_CrawlerMandibles.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MEAT;
    ON_STATE[0] = USE_CRABMEAT_RAW;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_CRABRAW_1;
    TEXT[2] = ITEMDESC_ITFO_CRABRAW_2;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_CRABMEAT_RAW;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_CRABMEAT_RAW;
}

func void USE_CRABMEAT_RAW() {
    if ((SELF.ATTRIBUTE[0]) > (10)) {
        NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_CRABMEAT_RAW);
    };
    SELF.ATTRIBUTE[0] = 5;
}

instance ITFO_CRAB(C_ITEM) {
    NAME = FOODNAME_CRABFRIED;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_CRABMEAT;
    VISUAL = "ItAt_CrawlerMandibles.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MEAT;
    ON_STATE[0] = USE_CRABMEAT;
    DESCRIPTION = NAME;
    TEXT[0] = FOODDESC_COOKINGCRAFTINGITEM;
    TEXT[1] = ITEMDESC_ITFO_CRABRAW_1;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_CRABMEAT;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_CRABMEAT;
}

func void USE_CRABMEAT() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_CRABMEAT);
}

instance ITFO_SQ224_ERGOHONEY(C_ITEM) {
    NAME = FOODNAME_SQ224_ERGOHONEY;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_SQ224_HONEY;
    VISUAL = "ItFo_BevinHoney.3DS";
    MATERIAL = MAT_STONE;
    SCEMENAME = SCEME_PLATE;
    ON_STATE[0] = USE_SQ224_HONEY;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_SQ224_ERGOHONEY_1;
    TEXT[1] = ITEMDESC_ITFO_SQ224_ERGOHONEY_2;
    TEXT[3] = NAME_BONUS_MANAMAX;
    COUNT[3] = MANAMAX_ERGOHONEY;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_ERGOHONEY;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_SQ224_HONEY() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_ERGOHONEY);
    B_RAISEATTRIBUTE(SELF, ATR_MANA_MAX, MANAMAX_ERGOHONEY);
}

instance ITFO_WINEERNESTO(C_ITEM) {
    NAME = FOODNAME_WINEERNESTO;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_WINEERNESO;
    VISUAL = "KM_new_bottle_01.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_POTIONFAST;
    ON_STATE[0] = USE_WINEERNESTO;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_WINEERNESTO_1;
    TEXT[1] = ITEMDESC_ITFO_WINEERNESTO_2;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_WINEERNESTO_HEAL;
    TEXT[4] = NAME_BONUS_HPMAX;
    COUNT[4] = HP_WINEERNESTO;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_WINEERNESO;
}

func void USE_WINEERNESTO() {
    B_RAISEATTRIBUTE(SELF, ATR_HITPOINTS_MAX, HP_WINEERNESTO);
    MARVINTRANSFORMHP = (MARVINTRANSFORMHP) + (HP_WINEERNESTO);
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_WINEERNESTO_HEAL);
}

instance ITAT_SCAVENGEREGG(C_ITEM) {
    NAME = THROPHYNAME_SCAVENGEREGG;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_SCAVENGEREGG;
    VISUAL = "ItAt_ScavengerEgg.3ds";
    MATERIAL = MAT_LEATHER;
    DESCRIPTION = NAME;
    SCEMENAME = SCEME_FOODHUGE;
    ON_STATE[0] = USE_SCAVENGEREGG;
    TEXT[0] = FOODDESC_COOKINGCRAFTINGITEM;
    TEXT[1] = ITEMDESC_ITAT_SCAVENGEREGG_1;
    TEXT[2] = ITEMDESC_ITAT_SCAVENGEREGG_2;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_SCAVENGEREGG;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_SCAVENGEREGG() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_SCAVENGEREGG);
}

const int VALUE_PICKLEDBEET = 18;
const int HP_PICKLEDBEET = 50;
const int MP_PICKLEDBEET = 5;
const int VALUE_BEERBREAD = 27;
const int HP_BEERBREAD = 70;
const int VALUE_PUMPKINCOMPOTE = 23;
const int HP_PUMPKINCOMPOTE = 60;
const int MP_PUMPKINCOMPOTE = 15;
const int VALUE_HONEYCOOKIES = 19;
const int HP_HONEYCOOKIES = 40;
const int MP_HONEYCOOKIES = 20;
const int VALUE_FRIEDFISHSKINS = 11;
const int HP_FRIEDFISHSKINS = 40;
const int VALUE_SCAVENGERSHASHLIK = 32;
const int HP_SCAVENGERSHASHLIK = 100;
const int VALUE_ROASTEDINSECTS = 7;
const int HP_ROASTEDINSECTS = 25;
const int VALUE_CABBAGESOUP = 17;
const int HP_CABBAGESOUP = 55;
const int MP_CABBAGESOUP = 15;
const int VALUE_BADCABBAGESOUP = 1;
const int HP_BADCABBAGESOUP = -10;
const int VALUE_MUSHROOMCOTLET = 12;
const int HP_MUSHROOMCOTLET = 25;
const int MP_MUSHROOMCOTLET = 20;
const int VALUE_DRYFRUITCOMPOTE = 29;
const int HP_DRYFRUITCOMPOTE = 70;
const int MP_DRYFRUITCOMPOTE = 40;
const int VALUE_FISHVINEGAR = 30;
const int HP_FISHVINEGAR = 90;
const int VALUE_MANAPERMSOUP = 1500;
const int BONUS_MANA_MANAPERMSOUP = 3;
const int VALUE_SWEETBUN = 16;
const int HP_SWEETBUN = 45;
const int VALUE_MUSHROOMSOUP = 22;
const int HP_MUSHROOMSOUP = 65;
const int MP_MUSHROOMSOUP = 5;
const int VALUE_RIVERMIRTSOUP = 23;
const int HP_RIVERMIRTSOUP = 50;
const int MP_RIVERMIRTSOUP = 15;
const int VALUE_SPEEDHERBOYSTERS = 35;
const int HP_SPEEDHERBOYSTERS = 85;
const int MP_SPEEDHERBOYSTERS = 28;
const int VALUE_BOARSTEW = 60;
const int HP_BOARSTEW = 125;
const int BONUS_HP_BOARSTEW = 1;
const int VALUE_MEATMISHMASH = 13;
const int HP_MEATMISHMASH = 40;
const int VALUE_RATSTICK = 6;
const int HP_RATSTICK = 35;
const int VALUE_MULLEDWISP = 50;
const int HP_MULLEDWISP = 80;
const int MP_MULLEDWISP = 38;
const int VALUE_FISHCOTLET = 32;
const int HP_FISHCOTLET = 40;
const int MP_FISHCOTLET = 45;
const int VALUE_FISHFILLETPERM = 1500;
const int BONUS_HP_FISHFILLETPERM = 15;
const int VALUE_POORBROTH = 20;
const int HP_POORBROTH = 55;
const int VALUE_FISHPOT = 23;
const int HP_FISHPOT = 50;
const int MP_FISHPOT = 10;
const int VALUE_HERBSTEW = 25;
const int HP_HERBSTEW = 45;
const int MP_HERBSTEW = 25;
const int VALUE_MEATANDCHEESE = 26;
const int HP_MEATANDCHEESE = 55;
const int VALUE_MEATANDBREAD = 23;
const int HP_MEATANDBREAD = 50;
const int VALUE_MUSHROOMSTEW = 24;
const int HP_MUSHROOMSTEW = 60;
const int VALUE_POORAPPLEPIE = 30;
const int HP_POORAPPLEPIE = 80;
const int MP_POORAPPLEPIE = 10;
const int VALUE_POORPATE = 21;
const int HP_POORPATE = 65;
const int VALUE_PICKLEDMUSHROOMS = 35;
const int HP_PICKLEDMUSHROOMS = 25;
const int MP_PICKLEDMUSHROOMS = 55;
const int VALUE_BREADSOUP = 17;
const int HP_BREADSOUP = 40;
const int VALUE_SHEPARDROAST = 55;
const int HP_SHEPARDROAST = 120;
const int MP_SHEPARDROAST = 25;
const int VALUE_POOREGGS = 19;
const int HP_POOREGGS = 45;
const int VALUE_BEERFISH = 14;
const int HP_BEERFISH = 35;
const int MP_BEERFISH = 20;
const int VALUE_SPICYPIE = 31;
const int HP_SPICYPIE = 65;
const int VALUE_VEGEPIE = 22;
const int HP_VEGEPIE = 50;
const int VALUE_FATSTEW = 19;
const int HP_FATSTEW = 55;
const int MP_FATSTEW = 7;
const int VALUE_BEARSTEW = 100;
const int HP_BEARSTEW = 200;
const int BONUS_HP_BEARSTEW = 5;
const int VALUE_HUNTERSPECIAL = 17;
const int HP_HUNTERSPECIAL = 50;
const int VALUE_SPEEDSTEW = 45;
const int HP_SPEEDSTEW = 75;
const int DURATION_SPEEDSTEW = 150;
const int VALUE_SMOKEDHERBFISH = 16;
const int HP_SMOKEDHERBFISH = 40;
const int MP_SMOKEDHERBFISH = 5;
const int VALUE_MEATPACKS = 21;
const int HP_MEATPACKS = 55;
const int VALUE_HERBMUSHROOMBREWING = 65;
const int HP_HERBMUSHROOMBREWING = 130;
const int MP_HERBMUSHROOMBREWING = 50;
const int VALUE_BERRYJAM = 10;
const int HP_BERRYJAM = 20;
const int MP_BERRYJAM = 5;
const int VALUE_STRENGTHJAM = 1500;
const int HP_STRENGTHJAM = 500;
const int BONUS_STR_STRENGTHJAM = 3;
const int VALUE_DEXDUMPLINGS = 1500;
const int HP_DEXDUMPLINGS = 500;
const int MP_DEXDUMPLINGS = 200;
const int BONUS_DEX_DEXDUMPLINGS = 3;
const int VALUE_SIMPLEOYSTERS = 17;
const int HP_SIMPLEOYSTERS = 35;
const int MP_SIMPLEOYSTERS = 15;
const int VALUE_BERRYCOMPOTE = 12;
const int HP_BERRYCOMPOTE = 30;
const int VALUE_RASPBERRYDRINK = 21;
const int HP_RASPBERRYDRINK = 45;
const int MP_RASPBERRYDRINK = 8;
const int VALUE_GRAPEJUICE = 13;
const int HP_GRAPEJUICE = 28;
const int MP_GRAPEJUICE = 10;
const int VALUE_RASPBERRYTINCTURE = 45;
const int MP_RASPBERRYTINCTURE = 80;
const int VALUE_EXOTICDESSERT = 65;
const int HP_EXOTICDESSERT = 125;
const int MP_EXOTICDESSERT = 30;
const int VALUE_APPLEPIE = 33;
const int HP_APPLEPIE = 80;
const int VALUE_SPICYFISH = 30;
const int HP_SPICYFISH = 65;
const int VALUE_HERBFISHSOUP = 18;
const int HP_HERBFISHSOUP = 40;
const int MP_HERBFISHSOUP = 10;
const int VALUE_TROLLSOUP = 1400;
const int HP_TROLLSOUP = 1000;
const int BONUS_HP_TROLLSOUP = 3;
const int BONUS_DEF_TROLLSOUP = 3;
const int VALUE_BATSTEW = 50;
const int HP_BATSTEW = 33;
const int BONUS_BATSTEW = 1;
instance HAPPYMEAL(C_ITEM) {
    NAME = ITEMNAME_HAPPYMEAL;
    MAINFLAG = ITEM_KAT_NONE;
    VISUAL = "ItMi_Packet.3ds";
    SCEMENAME = SCEME_MAPSEALED;
    ON_STATE[0] = USE_HAPPYMEAL;
    MATERIAL = MAT_LEATHER;
    DESCRIPTION = NAME;
}

func void USE_HAPPYMEAL() {
    CREATEINVITEMS(HERO, 0x8efc, 1);
    CREATEINVITEMS(HERO, 0x8efe, 1);
    CREATEINVITEMS(HERO, 0x8f00, 1);
    CREATEINVITEMS(HERO, 0x8f02, 1);
    CREATEINVITEMS(HERO, 0x8f04, 1);
    CREATEINVITEMS(HERO, 0x8f06, 1);
    CREATEINVITEMS(HERO, 0x8f08, 1);
    CREATEINVITEMS(HERO, 0x8f0a, 1);
    CREATEINVITEMS(HERO, 0x8f0e, 1);
    CREATEINVITEMS(HERO, 0x8f10, 1);
    CREATEINVITEMS(HERO, 0x8f12, 1);
    CREATEINVITEMS(HERO, 0x8f14, 1);
    CREATEINVITEMS(HERO, 0x8f17, 1);
    CREATEINVITEMS(HERO, 0x8f19, 1);
    CREATEINVITEMS(HERO, 0x8f1b, 1);
    CREATEINVITEMS(HERO, 0x8f1d, 1);
    CREATEINVITEMS(HERO, 0x8f1f, 1);
    CREATEINVITEMS(HERO, 0x8f21, 1);
    CREATEINVITEMS(HERO, 0x8f23, 1);
    CREATEINVITEMS(HERO, 0x8f25, 1);
    CREATEINVITEMS(HERO, 0x8f27, 1);
    CREATEINVITEMS(HERO, 0x8f29, 1);
    CREATEINVITEMS(HERO, 0x8f2c, 1);
    CREATEINVITEMS(HERO, 0x8f2e, 1);
    CREATEINVITEMS(HERO, 0x8f30, 1);
    CREATEINVITEMS(HERO, 0x8f32, 1);
    CREATEINVITEMS(HERO, 0x8f34, 1);
    CREATEINVITEMS(HERO, 0x8f36, 1);
    CREATEINVITEMS(HERO, 0x8f38, 1);
    CREATEINVITEMS(HERO, 0x8f3a, 1);
    CREATEINVITEMS(HERO, 0x8f3c, 1);
    CREATEINVITEMS(HERO, 0x8f3e, 1);
    CREATEINVITEMS(HERO, 0x8f40, 1);
    CREATEINVITEMS(HERO, 0x8f42, 1);
    CREATEINVITEMS(HERO, 0x8f44, 1);
    CREATEINVITEMS(HERO, 0x8f46, 1);
    CREATEINVITEMS(HERO, 0x8f48, 1);
    CREATEINVITEMS(HERO, 0x8f4a, 1);
    CREATEINVITEMS(HERO, 0x8f4c, 1);
    CREATEINVITEMS(HERO, 0x8f4e, 1);
    CREATEINVITEMS(HERO, 0x8f50, 1);
    CREATEINVITEMS(HERO, 0x8f52, 1);
    CREATEINVITEMS(HERO, 0x8f54, 1);
    CREATEINVITEMS(HERO, 0x8f56, 1);
    CREATEINVITEMS(HERO, 0x8f58, 1);
    CREATEINVITEMS(HERO, 0x8f5a, 1);
    CREATEINVITEMS(HERO, 0x8f5c, 1);
    CREATEINVITEMS(HERO, 0x8f5e, 1);
    CREATEINVITEMS(HERO, 0x8f60, 1);
    CREATEINVITEMS(HERO, 0x8f62, 1);
    CREATEINVITEMS(HERO, 0x8f64, 1);
    CREATEINVITEMS(HERO, 0x8f66, 1);
    CREATEINVITEMS(HERO, 0x8f68, 1);
    CREATEINVITEMS(HERO, 0x8f6a, 1);
    CREATEINVITEMS(HERO, 0x8f6c, 1);
    CREATEINVITEMS(HERO, 0x8f6e, 1);
    CREATEINVITEMS(HERO, 0x8f70, 1);
}

instance ITFO_PICKLEDBEET(C_ITEM) {
    NAME = MEALNAME_PICKLEDBEET;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_PICKLEDBEET;
    VISUAL = "KM_ITFO_PickledTurnips.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_PLATE;
    ON_STATE[0] = USE_PICKLEDBEET;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_PICKLEDBEET_1;
    TEXT[1] = ITEMDESC_ITFO_PICKLEDBEET_2;
    TEXT[2] = ITEMDESC_ITFO_PICKLEDBEET_3;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_PICKLEDBEET;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MP_PICKLEDBEET;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_PICKLEDBEET() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_PICKLEDBEET);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MP_PICKLEDBEET);
    if ((MEAL_PICKLEDBEET_CHECKBONUS) == (FALSE)) {
        MEAL_PICKLEDBEET_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_BEERBREAD(C_ITEM) {
    NAME = MEALNAME_BEERBREAD;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_BEERBREAD;
    VISUAL = "ItFo_BeerBread.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_FOODHUGE;
    ON_STATE[0] = USE_BEERBREAD;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_BEERBREAD_1;
    TEXT[1] = ITEMDESC_ITFO_BEERBREAD_2;
    TEXT[2] = ITEMDESC_ITFO_BEERBREAD_3;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_BEERBREAD;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_BEERBREAD() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_BEERBREAD);
    if ((MEAL_BEERBREAD_CHECKBONUS) == (FALSE)) {
        MEAL_BEERBREAD_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_PUMPKINCOMPOTE(C_ITEM) {
    NAME = MEALNAME_PUMPKINCOMPOTE;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_PUMPKINCOMPOTE;
    VISUAL = "KM_new_bottle_09.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_POTIONFAST;
    ON_STATE[0] = USE_PUMPKINCOMPOTE;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_PUMPKINCOMPOTE_1;
    TEXT[1] = ITEMDESC_ITFO_PUMPKINCOMPOTE_2;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_PUMPKINCOMPOTE;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MP_PUMPKINCOMPOTE;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_PUMPKINCOMPOTE() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_PUMPKINCOMPOTE);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MP_PUMPKINCOMPOTE);
    if ((MEAL_PUMPKINCOMPOTE_CHECKBONUS) == (FALSE)) {
        MEAL_PUMPKINCOMPOTE_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_HONEYCOOKIES(C_ITEM) {
    NAME = MEALNAME_HONEYCOOKIES;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_HONEYCOOKIES;
    VISUAL = "ItFo_HoneyCookies.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_PLATE;
    ON_STATE[0] = USE_HONEYCOOKIES;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_HONEYCOOKIES_1;
    TEXT[1] = ITEMDESC_ITFO_HONEYCOOKIES_2;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_HONEYCOOKIES;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MP_HONEYCOOKIES;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_HONEYCOOKIES() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_HONEYCOOKIES);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MP_HONEYCOOKIES);
    if ((MEAL_HONEYCOOKIES_CHECKBONUS) == (FALSE)) {
        MEAL_HONEYCOOKIES_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_FRIEDFISHSKINS(C_ITEM) {
    NAME = MEALNAME_FRIEDFISHSKINS;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_FRIEDFISHSKINS;
    VISUAL = "ItFo_FriedFishSkins.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_PLATE;
    ON_STATE[0] = USE_FRIEDFISHSKINS;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_FRIEDFISHSKINS_1;
    TEXT[1] = ITEMDESC_ITFO_FRIEDFISHSKINS_2;
    TEXT[2] = ITEMDESC_ITFO_FRIEDFISHSKINS_3;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_FRIEDFISHSKINS;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_FRIEDFISHSKINS() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_FRIEDFISHSKINS);
    if ((MEAL_FRIEDFISHSKINS_CHECKBONUS) == (FALSE)) {
        MEAL_FRIEDFISHSKINS_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_SCAVENGERSHASHLIK(C_ITEM) {
    NAME = MEALNAME_SCAVENGERSHASHLIK;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_SCAVENGERSHASHLIK;
    VISUAL = "KM_ITFO_shashlik.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_RATSTICK;
    ON_STATE[0] = USE_SCAVENGERSHASHLIK;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_SCAVENGERSHASHLIK_1;
    TEXT[2] = ITEMDESC_ITFO_SCAVENGERSHASHLIK_2;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_SCAVENGERSHASHLIK;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_SCAVENGERSHASHLIK() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_SCAVENGERSHASHLIK);
    if ((MEAL_SCAVENGERSHASHLIK_CHECKBONUS) == (FALSE)) {
        MEAL_SCAVENGERSHASHLIK_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_ROASTEDINSECTS(C_ITEM) {
    NAME = MEALNAME_ROASTEDINSECTS;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_ROASTEDINSECTS;
    VISUAL = "KM_ITFO_meatbug.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_RATSTICK;
    ON_STATE[0] = USE_ROASTEDINSECTS;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_ROASTEDINSECTS_1;
    TEXT[1] = ITEMDESC_ITFO_ROASTEDINSECTS_2;
    TEXT[2] = ITEMDESC_ITFO_ROASTEDINSECTS_3;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_ROASTEDINSECTS;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_ROASTEDINSECTS() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_ROASTEDINSECTS);
    if ((MEAL_ROASTEDINSECTS_CHECKBONUS) == (FALSE)) {
        MEAL_ROASTEDINSECTS_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_CABBAGESOUP(C_ITEM) {
    NAME = MEALNAME_CABBAGESOUP;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_CABBAGESOUP;
    VISUAL = "KM_ITFO_soup01.3ds";
    MATERIAL = MAT_WOOD;
    SCEMENAME = SCEME_RICE;
    ON_STATE[0] = USE_ITFO_CABBAGESOUP;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_CABBAGESOUP_1;
    TEXT[2] = ITEMDESC_ITFO_CABBAGESOUP_2;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_CABBAGESOUP;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MP_CABBAGESOUP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_ITFO_CABBAGESOUP() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_CABBAGESOUP);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MP_CABBAGESOUP);
    if ((MEAL_CABBAGESOUP_CHECKBONUS) == (FALSE)) {
        MEAL_CABBAGESOUP_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_BADCABBAGESOUP(C_ITEM) {
    NAME = MEALNAME_CABBAGESOUP_BAD;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_BADCABBAGESOUP;
    VISUAL = "ItFo_CarrotSoup_bad.3ds";
    MATERIAL = MAT_WOOD;
    SCEMENAME = SCEME_RICE;
    ON_STATE[0] = USE_ITFO_BADCABBAGESOUP;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_BADCABBAGESOUP_1;
    TEXT[2] = ITEMDESC_ITFO_BADCABBAGESOUP_2;
    TEXT[3] = ITEMDESC_ITFO_BADCABBAGESOUP_3;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_ITFO_BADCABBAGESOUP() {
    if ((SELF.ATTRIBUTE[0]) > (11)) {
        NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_BADCABBAGESOUP);
    };
    AI_PLAYANI(SELF, "R_VOMIT_SUNDER");
    BADCABBAGESOUP_VOMIT = TRUE;
}

instance ITFO_MUSHROOMCOTLET(C_ITEM) {
    NAME = MEALNAME_MUSHROOMCOTLET;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_MUSHROOMCOTLET;
    VISUAL = "ItFo_MushroomCotlet.3ds";
    MATERIAL = MAT_WOOD;
    SCEMENAME = SCEME_PLATE;
    ON_STATE[0] = USE_ITFO_MUSHROOMCOTLET;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_MUSHROOMCOTLET_1;
    TEXT[1] = ITEMDESC_ITFO_MUSHROOMCOTLET_2;
    TEXT[2] = ITEMDESC_ITFO_MUSHROOMCOTLET_3;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_MUSHROOMCOTLET;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MP_MUSHROOMCOTLET;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_ITFO_MUSHROOMCOTLET() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_MUSHROOMCOTLET);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MP_MUSHROOMCOTLET);
    DUNKELPILZ_BONUS = (DUNKELPILZ_BONUS) + (2);
    FOOD_MUSHROOMBONUS();
    if ((MEAL_MUSHROOMCOTLET_CHECKBONUS) == (FALSE)) {
        MEAL_MUSHROOMCOTLET_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_DRYFRUITCOMPOTE(C_ITEM) {
    NAME = MEALNAME_DRYFRUITCOMPOTE;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_DRYFRUITCOMPOTE;
    VISUAL = "KM_ITFO_Grogbootle01.3ds";
    MATERIAL = MAT_WOOD;
    SCEMENAME = SCEME_POTIONFAST;
    ON_STATE[0] = USE_ITFO_DRYFRUITCOMPOTE;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_DRYFRUITCOMPOTE_1;
    TEXT[1] = ITEMDESC_ITFO_DRYFRUITCOMPOTE_2;
    TEXT[2] = ITEMDESC_ITFO_DRYFRUITCOMPOTE_3;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_DRYFRUITCOMPOTE;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MP_DRYFRUITCOMPOTE;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_ITFO_DRYFRUITCOMPOTE() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_DRYFRUITCOMPOTE);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MP_DRYFRUITCOMPOTE);
    if ((MEAL_DRYFRUITCOMPOTE_CHECKBONUS) == (FALSE)) {
        MEAL_DRYFRUITCOMPOTE_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_FISHVINEGAR(C_ITEM) {
    NAME = MEALNAME_FISHVINEGAR;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_FISHVINEGAR;
    VISUAL = "ItFo_FishSoup.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_RICE;
    ON_STATE[0] = USE_ITFO_FISHVINEGAR;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_FISHVINEGAR_1;
    TEXT[1] = ITEMDESC_ITFO_FISHVINEGAR_2;
    TEXT[2] = ITEMDESC_ITFO_FISHVINEGAR_3;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_FISHVINEGAR;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_ITFO_FISHVINEGAR() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_FISHVINEGAR);
    if ((MEAL_FISHVINEGAR_CHECKBONUS) == (FALSE)) {
        MEAL_FISHVINEGAR_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_MANAPERMSOUP(C_ITEM) {
    NAME = MEALNAME_MANAPERMSOUP;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_MANAPERMSOUP;
    VISUAL = "KM_ITFO_soup02.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_RICE;
    ON_STATE[0] = USE_ITFO_MANAPERMSOUP;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_MANAPERMSOUP_1;
    TEXT[2] = ITEMDESC_ITFO_MANAPERMSOUP_2;
    TEXT[4] = NAME_BONUS_MANAMAX;
    COUNT[4] = BONUS_MANA_MANAPERMSOUP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_ITFO_MANAPERMSOUP() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA_MAX, BONUS_MANA_MANAPERMSOUP);
    SELF.ATTRIBUTE[0] = SELF.ATTRIBUTE[1];
    SELF.ATTRIBUTE[2] = SELF.ATTRIBUTE[3];
    CONCATTEXT = CONCATSTRINGS(PRINT_LEARNMANA_MAX, INTTOSTRING(BONUS_MANA_MANAPERMSOUP));
    if ((MEAL_MANAPERMSOUP_CHECKBONUS) == (FALSE)) {
        MEAL_MANAPERMSOUP_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
    PRINTSCREEN(CONCATTEXT, -(1), 45, FONT_SCREEN, 2);
}

var string USE_ITFO_MANAPERMSOUP.CONCATTEXT = "";
instance ITFO_SWEETBUN(C_ITEM) {
    NAME = MEALNAME_SWEETBUN;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_SWEETBUN;
    VISUAL = "ItFo_SweetBun.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_FOODHUGE;
    ON_STATE[0] = USE_SWEETBUN;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_SWEETBUN_1;
    TEXT[1] = ITEMDESC_ITFO_SWEETBUN_2;
    TEXT[2] = ITEMDESC_ITFO_SWEETBUN_3;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_SWEETBUN;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_SWEETBUN() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_SWEETBUN);
    if ((MEAL_SWEETBUN_CHECKBONUS) == (FALSE)) {
        MEAL_SWEETBUN_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_MUSHROOMSOUP(C_ITEM) {
    NAME = MEALNAME_MUSHROOMSOUP;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_MUSHROOMSOUP;
    VISUAL = "ITFO_STEW_01.3ds";
    MATERIAL = MAT_WOOD;
    SCEMENAME = SCEME_RICE;
    ON_STATE[0] = USE_ITFO_MUSHROOMSOUP;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_MUSHROOMSOUP_1;
    TEXT[1] = ITEMDESC_ITFO_MUSHROOMSOUP_2;
    TEXT[2] = ITEMDESC_ITFO_MUSHROOMSOUP_3;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_MUSHROOMSOUP;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MP_MUSHROOMSOUP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_ITFO_MUSHROOMSOUP() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_MUSHROOMSOUP);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MP_MUSHROOMSOUP);
    if ((MEAL_MUSHROOMSOUP_CHECKBONUS) == (FALSE)) {
        MEAL_MUSHROOMSOUP_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_RIVERMIRTSOUP(C_ITEM) {
    NAME = MEALNAME_RIVERMIRTSOUP;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_RIVERMIRTSOUP;
    VISUAL = "ITFO_STEW_03.3DS";
    MATERIAL = MAT_WOOD;
    SCEMENAME = SCEME_RICE;
    ON_STATE[0] = USE_ITFO_RIVERMIRTSOUP;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_RIVERMIRTSOUP_1;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_RIVERMIRTSOUP;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MP_RIVERMIRTSOUP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_ITFO_RIVERMIRTSOUP() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_RIVERMIRTSOUP);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MP_RIVERMIRTSOUP);
    if ((MEAL_RIVERMIRTSOUP_CHECKBONUS) == (FALSE)) {
        MEAL_RIVERMIRTSOUP_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_SPEEDHERBOYSTERS(C_ITEM) {
    NAME = MEALNAME_SPEEDHERBOYSTERS;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_SPEEDHERBOYSTERS;
    VISUAL = "KM_ITFO_SeaFruit.3ds";
    MATERIAL = MAT_WOOD;
    SCEMENAME = SCEME_PLATE;
    ON_STATE[0] = USE_ITFO_SPEEDHERBOYSTERS;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_SPEEDHERBOYSTERS_1;
    TEXT[1] = ITEMDESC_ITFO_SPEEDHERBOYSTERS_2;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_SPEEDHERBOYSTERS;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MP_SPEEDHERBOYSTERS;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_ITFO_SPEEDHERBOYSTERS() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_SPEEDHERBOYSTERS);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MP_SPEEDHERBOYSTERS);
    if ((MEAL_SPEEDHERBOYSTERS_CHECKBONUS) == (FALSE)) {
        MEAL_SPEEDHERBOYSTERS_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_BOARSTEW(C_ITEM) {
    NAME = MEALNAME_BOARSTEW;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_BOARSTEW;
    VISUAL = "ITFO_STEW_02.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_RICE;
    ON_STATE[0] = USE_BOARSTEW;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_BOARSTEW_1;
    TEXT[1] = ITEMDESC_ITFO_BOARSTEW_2;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_BOARSTEW;
    TEXT[4] = NAME_BONUS_HPMAX;
    COUNT[4] = BONUS_HP_BOARSTEW;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_BOARSTEW() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_BOARSTEW);
    B_RAISEATTRIBUTE(SELF, ATR_HITPOINTS_MAX, BONUS_HP_BOARSTEW);
    MARVINTRANSFORMHP = (MARVINTRANSFORMHP) + (BONUS_HP_BOARSTEW);
    if ((MEAL_BOARSTEW_CHECKBONUS) == (FALSE)) {
        MEAL_BOARSTEW_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_MEATMISHMASH(C_ITEM) {
    NAME = MEALNAME_MEATMISHMASH;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_MEATMISHMASH;
    VISUAL = "ITFO_STEW_02.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_RICE;
    ON_STATE[0] = USE_MEATMISHMASH;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_MEATMISHMASH_1;
    TEXT[1] = ITEMDESC_ITFO_MEATMISHMASH_2;
    TEXT[2] = ITEMDESC_ITFO_MEATMISHMASH_3;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_MEATMISHMASH;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_MEATMISHMASH() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_MEATMISHMASH);
    if ((MEAL_MEATMISHMASH_CHECKBONUS) == (FALSE)) {
        MEAL_MEATMISHMASH_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_RATSTICK(C_ITEM) {
    NAME = MEALNAME_RATSTICK;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_RATSTICK;
    VISUAL = "KM_ITFO_shashlik.3ds";
    MATERIAL = MAT_WOOD;
    SCEMENAME = SCEME_RATSTICK;
    ON_STATE[0] = USE_ITFO_RATSTICK;
    DESCRIPTION = NAME;
    TEXT[1] = MEALNAME_RATSTICK_DESC1;
    TEXT[2] = MEALNAME_RATSTICK_DESC2;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_RATSTICK;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_ITFO_RATSTICK() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_RATSTICK);
    if ((MEAL_RATSTICK_CHECKBONUS) == (FALSE)) {
        MEAL_RATSTICK_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_MULLEDWISP(C_ITEM) {
    NAME = MEALNAME_MULLEDWISP;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_MULLEDWISP;
    VISUAL = "KM_ITFO_Grogbootle01.3ds";
    MATERIAL = MAT_WOOD;
    SCEMENAME = SCEME_POTIONFAST;
    ON_STATE[0] = USE_ITFO_MULLEDWISP;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_MULLEDWISP_1;
    TEXT[1] = ITEMDESC_ITFO_MULLEDWISP_2;
    TEXT[2] = ITEMDESC_ITFO_MULLEDWISP_3;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_MULLEDWISP;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MP_MULLEDWISP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_ITFO_MULLEDWISP() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_MULLEDWISP);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MP_MULLEDWISP);
    FORESTBERRY_BONUS = (FORESTBERRY_BONUS) + (4);
    FOOD_FORESTBERRYBONUS();
    if ((MEAL_MULLEDWISP_CHECKBONUS) == (FALSE)) {
        MEAL_MULLEDWISP_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_FISHCOTLET(C_ITEM) {
    NAME = MEALNAME_FISHCOTLET;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_FISHCOTLET;
    VISUAL = "ItFo_FishCotlet.3ds";
    MATERIAL = MAT_WOOD;
    SCEMENAME = SCEME_PLATE;
    ON_STATE[0] = USE_ITFO_FISHCOTLET;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_FISHCOTLET_1;
    TEXT[1] = ITEMDESC_ITFO_FISHCOTLET_2;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_FISHCOTLET;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MP_FISHCOTLET;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_ITFO_FISHCOTLET() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_FISHCOTLET);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MP_FISHCOTLET);
    if ((MEAL_FISHCOTLET_CHECKBONUS) == (FALSE)) {
        MEAL_FISHCOTLET_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_FISHFILLETPERM(C_ITEM) {
    NAME = MEALNAME_FISHFILLETPERM;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_FISHFILLETPERM;
    VISUAL = "ItFo_FishFilletPerm.3ds";
    MATERIAL = MAT_WOOD;
    SCEMENAME = SCEME_PLATE;
    ON_STATE[0] = USE_ITFO_FISHFILLETPERM;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_FISHFILLETPERM_1;
    TEXT[2] = ITEMDESC_ITFO_FISHFILLETPERM_2;
    TEXT[4] = NAME_BONUS_HPMAX;
    COUNT[4] = BONUS_HP_FISHFILLETPERM;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_ITFO_FISHFILLETPERM() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS_MAX, BONUS_HP_FISHFILLETPERM);
    MARVINTRANSFORMHP = (MARVINTRANSFORMHP) + (BONUS_HP_FISHFILLETPERM);
    CONCATTEXT = CONCATSTRINGS(PRINT_LEARNHITPOINTS_MAX, INTTOSTRING(BONUS_HP_FISHFILLETPERM));
    PRINTSCREEN(CONCATTEXT, -(1), 45, FONT_SCREEN, 3);
    SELF.ATTRIBUTE[0] = SELF.ATTRIBUTE[1];
    SELF.ATTRIBUTE[2] = SELF.ATTRIBUTE[3];
    if ((MEAL_FISHFILLETPERM_CHECKBONUS) == (FALSE)) {
        MEAL_FISHFILLETPERM_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

var string USE_ITFO_FISHFILLETPERM.CONCATTEXT = "";
instance ITFO_POORBROTH(C_ITEM) {
    NAME = MEALNAME_POORBROTH;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_POORBROTH;
    VISUAL = "KM_ITFO_soup01.3ds";
    MATERIAL = MAT_WOOD;
    SCEMENAME = SCEME_RICE;
    ON_STATE[0] = USE_ITFO_POORBROTH;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_POORBROTH_1;
    TEXT[2] = ITEMDESC_ITFO_POORBROTH_2;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_POORBROTH;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_ITFO_POORBROTH() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_POORBROTH);
    if ((MEAL_POORBROTH_CHECKBONUS) == (FALSE)) {
        MEAL_POORBROTH_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_FISHPOT(C_ITEM) {
    NAME = MEALNAME_FISHPOT;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_FISHPOT;
    VISUAL = "KM_ITFO_FoodPot.3ds";
    MATERIAL = MAT_WOOD;
    SCEMENAME = SCEME_BIGPOT;
    ON_STATE[0] = USE_FISHPOT;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_FISHPOT_1;
    TEXT[1] = ITEMDESC_ITFO_FISHPOT_2;
    TEXT[2] = ITEMDESC_ITFO_FISHPOT_3;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_FISHPOT;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MP_FISHPOT;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_FISHPOT() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_FISHPOT);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MP_FISHPOT);
    if ((MEAL_FISHPOT_CHECKBONUS) == (FALSE)) {
        MEAL_FISHPOT_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_HERBSTEW(C_ITEM) {
    NAME = MEALNAME_HERBSTEW;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_HERBSTEW;
    VISUAL = "ITFO_STEW_03.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_RICE;
    ON_STATE[0] = USE_HERBSTEW;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_HERBSTEW_1;
    TEXT[1] = ITEMDESC_ITFO_HERBSTEW_2;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_HERBSTEW;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MP_HERBSTEW;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_HERBSTEW() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_HERBSTEW);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MP_HERBSTEW);
    if ((MEAL_HERBSTEW_CHECKBONUS) == (FALSE)) {
        MEAL_HERBSTEW_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_MEATANDCHEESE(C_ITEM) {
    NAME = MEALNAME_MEATANDCHEESE;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_MEATANDCHEESE;
    VISUAL = "ItFo_MeatAndBread.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_FOODHUGE;
    ON_STATE[0] = USE_MEATANDCHEESE;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_MEATANDCHEESE_1;
    TEXT[2] = ITEMDESC_ITFO_MEATANDCHEESE_2;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_MEATANDCHEESE;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_MEATANDCHEESE() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_MEATANDCHEESE);
    if ((MEAL_MEATANDCHEESE_CHECKBONUS) == (FALSE)) {
        MEAL_MEATANDCHEESE_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_MEATANDBREAD(C_ITEM) {
    NAME = MEALNAME_MEATANDBREAD;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_MEATANDBREAD;
    VISUAL = "ItFo_MeatAndBread.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_FOODHUGE;
    ON_STATE[0] = USE_MEATANDBREAD;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_MEATANDBREAD_1;
    TEXT[2] = ITEMDESC_ITFO_MEATANDBREAD_2;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_MEATANDBREAD;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_MEATANDBREAD() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_MEATANDBREAD);
    if ((MEAL_MEATANDBREAD_CHECKBONUS) == (FALSE)) {
        MEAL_MEATANDBREAD_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_MUSHROOMSTEW(C_ITEM) {
    NAME = MEALNAME_MUSHROOMSTEW;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_MUSHROOMSTEW;
    VISUAL = "ITFO_STEW_04.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_RICE;
    ON_STATE[0] = USE_MUSHROOMSTEW;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_MUSHROOMSTEW_1;
    TEXT[1] = ITEMDESC_ITFO_MUSHROOMSTEW_2;
    TEXT[2] = ITEMDESC_ITFO_MUSHROOMSTEW_3;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_MUSHROOMSTEW;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_MUSHROOMSTEW() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_MUSHROOMSTEW);
    DUNKELPILZ_BONUS = (DUNKELPILZ_BONUS) + (1);
    FOOD_MUSHROOMBONUS();
    if ((MEAL_MUSHROOMSTEW_CHECKBONUS) == (FALSE)) {
        MEAL_MUSHROOMSTEW_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_POORAPPLEPIE(C_ITEM) {
    NAME = MEALNAME_POORAPPLEPIE;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_POORAPPLEPIE;
    VISUAL = "KM_ITFO_Pie01.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_FOODHUGE;
    ON_STATE[0] = USE_POORAPPLEPIE;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_POORAPPLEPIE_1;
    TEXT[1] = ITEMDESC_ITFO_POORAPPLEPIE_2;
    TEXT[2] = ITEMDESC_ITFO_POORAPPLEPIE_3;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_POORAPPLEPIE;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MP_POORAPPLEPIE;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_POORAPPLEPIE() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_POORAPPLEPIE);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MP_POORAPPLEPIE);
    APPLE_BONUS = (APPLE_BONUS) + (1);
    FOOD_APPLEBONUS();
    if ((MEAL_POORAPPLEPIE_CHECKBONUS) == (FALSE)) {
        MEAL_POORAPPLEPIE_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_POORPATE(C_ITEM) {
    NAME = MEALNAME_POORPATE;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_POORPATE;
    VISUAL = "KM_ITFO_oatmeal.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_PLATE;
    ON_STATE[0] = USE_POORPATE;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_POORPATE_1;
    TEXT[1] = ITEMDESC_ITFO_POORPATE_2;
    TEXT[2] = ITEMDESC_ITFO_POORPATE_3;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_POORPATE;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_POORPATE() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_POORPATE);
    if ((MEAL_POORPATE_CHECKBONUS) == (FALSE)) {
        MEAL_POORPATE_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_PICKLEDMUSHROOMS(C_ITEM) {
    NAME = MEALNAME_PICKLEDMUSHROOMS;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_PICKLEDMUSHROOMS;
    VISUAL = "KM_ITFO_mushrooms.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_PLATE;
    ON_STATE[0] = USE_PICKLEDMUSHROOMS;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_PICKLEDMUSHROOMS_1;
    TEXT[1] = ITEMDESC_ITFO_PICKLEDMUSHROOMS_2;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_PICKLEDMUSHROOMS;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MP_PICKLEDMUSHROOMS;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_PICKLEDMUSHROOMS() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_PICKLEDMUSHROOMS);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MP_PICKLEDMUSHROOMS);
    DUNKELPILZ_BONUS = (DUNKELPILZ_BONUS) + (2);
    FOOD_MUSHROOMBONUS();
    if ((MEAL_PICKLEDMUSHROOMS_CHECKBONUS) == (FALSE)) {
        MEAL_PICKLEDMUSHROOMS_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_BREADSOUP(C_ITEM) {
    NAME = MEALNAME_BREADSOUP;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_BREADSOUP;
    VISUAL = "KM_ITFO_soup01.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_RICE;
    ON_STATE[0] = USE_BREADSOUP;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_BREADSOUP_1;
    TEXT[2] = ITEMDESC_ITFO_BREADSOUP_2;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_BREADSOUP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_BREADSOUP() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_BREADSOUP);
    if ((MEAL_BREADSOUP_CHECKBONUS) == (FALSE)) {
        MEAL_BREADSOUP_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_SHEPARDROAST(C_ITEM) {
    NAME = MEALNAME_SHEPARDROAST;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_SHEPARDROAST;
    VISUAL = "ItFo_ShepardRoast.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_PLATE;
    ON_STATE[0] = USE_SHEPARDROAST;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_SHEPARDROAST_1;
    TEXT[1] = ITEMDESC_ITFO_SHEPARDROAST_2;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_SHEPARDROAST;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MP_SHEPARDROAST;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_SHEPARDROAST() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_SHEPARDROAST);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MP_SHEPARDROAST);
    if ((MEAL_SHEPARDROAST_CHECKBONUS) == (FALSE)) {
        MEAL_SHEPARDROAST_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_POOREGGS(C_ITEM) {
    NAME = MEALNAME_POOREGGS;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_POOREGGS;
    VISUAL = "KM_ITFO_ScrambledEggs.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_PLATE;
    ON_STATE[0] = USE_POOREGGS;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_POOREGGS_1;
    TEXT[1] = ITEMDESC_ITFO_POOREGGS_2;
    TEXT[2] = ITEMDESC_ITFO_POOREGGS_3;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_POOREGGS;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_POOREGGS() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_POOREGGS);
    if ((MEAL_POOREGGS_CHECKBONUS) == (FALSE)) {
        MEAL_POOREGGS_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_BEERFISH(C_ITEM) {
    NAME = MEALNAME_BEERFISH;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_BEERFISH;
    VISUAL = "ItFo_BeerFish.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_PLATE;
    ON_STATE[0] = USE_BEERFISH;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_BEERFISH_1;
    TEXT[1] = ITEMDESC_ITFO_BEERFISH_2;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_BEERFISH;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MP_BEERFISH;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_BEERFISH() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_BEERFISH);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MP_BEERFISH);
    if ((MEAL_BEERFISH_CHECKBONUS) == (FALSE)) {
        MEAL_BEERFISH_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_SPICYPIE(C_ITEM) {
    NAME = MEALNAME_SPICYPIE;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_SPICYPIE;
    VISUAL = "KM_ITFO_Pie02.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_FOODHUGE;
    ON_STATE[0] = USE_SPICYPIE;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_SPICYPIE_1;
    TEXT[2] = ITEMDESC_ITFO_SPICYPIE_2;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_SPICYPIE;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_SPICYPIE() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_SPICYPIE);
    if ((MEAL_SPICYPIE_CHECKBONUS) == (FALSE)) {
        MEAL_SPICYPIE_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_VEGEPIE(C_ITEM) {
    NAME = MEALNAME_VEGEPIE;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_VEGEPIE;
    VISUAL = "KM_ITFO_Pie02.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_FOODHUGE;
    ON_STATE[0] = USE_VEGEPIE;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_VEGEPIE_1;
    TEXT[1] = ITEMDESC_ITFO_VEGEPIE_2;
    TEXT[2] = ITEMDESC_ITFO_VEGEPIE_3;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_VEGEPIE;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_VEGEPIE() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_VEGEPIE);
    if ((MEAL_VEGEPIE_CHECKBONUS) == (FALSE)) {
        MEAL_VEGEPIE_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_FATSTEW(C_ITEM) {
    NAME = MEALNAME_FATSTEW;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_FATSTEW;
    VISUAL = "ITFO_STEW_02.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_RICE;
    ON_STATE[0] = USE_ITFO_FATSTEW;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_FATSTEW_1;
    TEXT[1] = ITEMDESC_ITFO_FATSTEW_2;
    TEXT[2] = ITEMDESC_ITFO_FATSTEW_3;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_FATSTEW;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MP_FATSTEW;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_ITFO_FATSTEW() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_FATSTEW);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, HP_FATSTEW);
    if ((MEAL_FATSTEW_CHECKBONUS) == (FALSE)) {
        MEAL_FATSTEW_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_BEARSTEW(C_ITEM) {
    NAME = MEALNAME_BEARSTEW;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_BEARSTEW;
    VISUAL = "ITFO_STEW_02.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_RICE;
    ON_STATE[0] = USE_BEARSTEW;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_BEARSTEW_1;
    TEXT[1] = ITEMDESC_ITFO_BEARSTEW_2;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_BEARSTEW;
    TEXT[4] = NAME_BONUS_HPMAX;
    COUNT[4] = BONUS_HP_BEARSTEW;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_BEARSTEW() {
    B_RAISEATTRIBUTE(SELF, ATR_HITPOINTS_MAX, BONUS_HP_BEARSTEW);
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_BEARSTEW);
    if ((MEAL_BEARSTEW_CHECKBONUS) == (FALSE)) {
        MEAL_BEARSTEW_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_HUNTERSPECIAL(C_ITEM) {
    NAME = MEALNAME_HUNTERSPECIAL;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_HUNTERSPECIAL;
    VISUAL = "ITFO_STEW_01.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_RICE;
    ON_STATE[0] = USE_HUNTERSPECIAL;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_HUNTERSPECIAL_1;
    TEXT[2] = ITEMDESC_ITFO_HUNTERSPECIAL_2;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_HUNTERSPECIAL;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_HUNTERSPECIAL() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_HUNTERSPECIAL);
    if ((MEAL_HUNTERSPECIAL_CHECKBONUS) == (FALSE)) {
        MEAL_HUNTERSPECIAL_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_SPEEDSTEW(C_ITEM) {
    NAME = MEALNAME_SPEEDSTEW;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_SPEEDSTEW;
    VISUAL = "ITFO_STEW_03.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_RICE;
    ON_STATE[0] = USE_SPEEDSTEW;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_SPEEDSTEW_1;
    TEXT[1] = ITEMDESC_ITFO_SPEEDSTEW_2;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_SPEEDSTEW;
    TEXT[4] = NAME_SEC_DURATION;
    COUNT[4] = DURATION_SPEEDSTEW;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_SPEEDSTEW() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_SPEEDSTEW);
    if ((MEAL_SPEEDSTEW_CHECKBONUS) == (FALSE)) {
        MEAL_SPEEDSTEW_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
    BUFF_APPLYEXT(SELF, 0x7ec6, (DURATION_SPEEDSTEW) * (1000), FALSE, TRUE);
}

instance ITFO_SMOKEDHERBFISH(C_ITEM) {
    NAME = MEALNAME_SMOKEDHERBFISH;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_SMOKEDHERBFISH;
    VISUAL = "KM_ITFO_Fish01.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_PLATE;
    ON_STATE[0] = USE_SMOKEDHERBFISH;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_SMOKEDHERBFISH_1;
    TEXT[1] = ITEMDESC_ITFO_SMOKEDHERBFISH_2;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_SMOKEDHERBFISH;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MP_SMOKEDHERBFISH;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_SMOKEDHERBFISH() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_SMOKEDHERBFISH);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MP_SMOKEDHERBFISH);
    if ((MEAL_SMOKEDHERBFISH_CHECKBONUS) == (FALSE)) {
        MEAL_SMOKEDHERBFISH_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_MEATPACKS(C_ITEM) {
    NAME = MEALNAME_MEATPACKS;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_MEATPACKS;
    VISUAL = "KM_ITFO_BreadMeatVegies.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_PLATE;
    ON_STATE[0] = USE_MEATPACKS;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_MEATPACKS_1;
    TEXT[2] = ITEMDESC_ITFO_MEATPACKS_2;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_MEATPACKS;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_MEATPACKS() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_MEATPACKS);
    if ((MEAL_MEATPACKS_CHECKBONUS) == (FALSE)) {
        MEAL_MEATPACKS_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_HERBMUSHROOMBREWING(C_ITEM) {
    NAME = MEALNAME_HERBMUSHROOMBREWING;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_HERBMUSHROOMBREWING;
    VISUAL = "KM_ITFO_FoodPot.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_BIGPOT;
    ON_STATE[0] = USE_HERBMUSHROOMBREWING;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_HERBMUSHROOMBREWING_1;
    TEXT[1] = ITEMDESC_ITFO_HERBMUSHROOMBREWING_2;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_HERBMUSHROOMBREWING;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MP_HERBMUSHROOMBREWING;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_HERBMUSHROOMBREWING() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_HERBMUSHROOMBREWING);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MP_HERBMUSHROOMBREWING);
    DUNKELPILZ_BONUS = (DUNKELPILZ_BONUS) + (2);
    FOOD_MUSHROOMBONUS();
    if ((MEAL_HERBMUSHROOMBREWING_CHECKBONUS) == (FALSE)) {
        MEAL_HERBMUSHROOMBREWING_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_BERRYJAM(C_ITEM) {
    NAME = MEALNAME_BERRYJAM;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_BERRYJAM;
    VISUAL = "KM_ITFO_Honeyjar01.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_PLATE;
    ON_STATE[0] = USE_BERRYJAM;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_BERRYJAM_1;
    TEXT[1] = ITEMDESC_ITFO_BERRYJAM_2;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_BERRYJAM;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MP_BERRYJAM;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_BERRYJAM() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_BERRYJAM);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MP_BERRYJAM);
    FORESTBERRY_BONUS = (FORESTBERRY_BONUS) + (1);
    FOOD_FORESTBERRYBONUS();
    if ((MEAL_BERRYJAM_CHECKBONUS) == (FALSE)) {
        MEAL_BERRYJAM_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_STRENGTHJAM(C_ITEM) {
    NAME = MEALNAME_STRENGTHJAM;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_STRENGTHJAM;
    VISUAL = "KM_ITFO_Honeyjar01.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_PLATE;
    ON_STATE[0] = USE_STRENGTHJAM;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_STRENGTHJAM_1;
    TEXT[1] = ITEMDESC_ITFO_STRENGTHJAM_2;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_STRENGTHJAM;
    TEXT[4] = NAME_BONUS_STR;
    COUNT[4] = BONUS_STR_STRENGTHJAM;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_STRENGTHJAM() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_STRENGTHJAM);
    B_RAISEATTRIBUTE(SELF, ATR_STRENGTH, BONUS_STR_STRENGTHJAM);
    if ((MEAL_STRENGTHJAM_CHECKBONUS) == (FALSE)) {
        MEAL_STRENGTHJAM_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_DEXDUMPLINGS(C_ITEM) {
    NAME = MEALNAME_DEXDUMPLINGS;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_DEXDUMPLINGS;
    VISUAL = "KM_ITFO_noodles.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_PLATE;
    ON_STATE[0] = USE_DEXDUMPLINGS;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_DEXDUMPLINGS_1;
    TEXT[1] = ITEMDESC_ITFO_DEXDUMPLINGS_2;
    TEXT[2] = NAME_BONUS_DEX;
    COUNT[2] = BONUS_DEX_DEXDUMPLINGS;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_DEXDUMPLINGS;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MP_DEXDUMPLINGS;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_DEXDUMPLINGS() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_DEXDUMPLINGS);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MP_DEXDUMPLINGS);
    B_RAISEATTRIBUTE(SELF, ATR_DEXTERITY, BONUS_DEX_DEXDUMPLINGS);
    if ((MEAL_DEXDUMPLINGS_CHECKBONUS) == (FALSE)) {
        MEAL_DEXDUMPLINGS_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_SIMPLEOYSTERS(C_ITEM) {
    NAME = MEALNAME_SIMPLEOYSTERS;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_SIMPLEOYSTERS;
    VISUAL = "KM_ITFO_SeaFruit.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_PLATE;
    ON_STATE[0] = USE_SIMPLEOYSTERS;
    DESCRIPTION = NAME;
    TEXT[0] = RESERVED_CONST_STRING_17;
    TEXT[1] = ITEMDESC_ITFO_SIMPLEOYSTERS_2;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_SIMPLEOYSTERS;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MP_SIMPLEOYSTERS;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_SIMPLEOYSTERS() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_SIMPLEOYSTERS);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MP_SIMPLEOYSTERS);
    if ((MEAL_SIMPLEOYSTERS_CHECKBONUS) == (FALSE)) {
        MEAL_SIMPLEOYSTERS_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_BERRYCOMPOTE(C_ITEM) {
    NAME = MEALNAME_BERRYCOMPOTE;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_BERRYCOMPOTE;
    VISUAL = "KM_new_bottle_01.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_POTIONFAST;
    ON_STATE[0] = USE_BERRYCOMPOTE;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_BERRYCOMPOTE_1;
    TEXT[2] = ITEMDESC_ITFO_BERRYCOMPOTE_2;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_BERRYCOMPOTE;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_BERRYCOMPOTE() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_BERRYCOMPOTE);
    if ((MEAL_BERRYCOMPOTE_CHECKBONUS) == (FALSE)) {
        MEAL_BERRYCOMPOTE_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_RASPBERRYDRINK(C_ITEM) {
    NAME = MEALNAME_RASPBERRYDRINK;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_RASPBERRYDRINK;
    VISUAL = "KM_new_bottle_10.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_POTIONFAST;
    ON_STATE[0] = USE_RASPBERRYDRINK;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_RASPBERRYDRINK_1;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_RASPBERRYDRINK;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MP_RASPBERRYDRINK;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_RASPBERRYDRINK() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_RASPBERRYDRINK);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MP_RASPBERRYDRINK);
    FORESTBERRY_BONUS = (FORESTBERRY_BONUS) + (1);
    FOOD_FORESTBERRYBONUS();
    if ((MEAL_RASPBERRYDRINK_CHECKBONUS) == (FALSE)) {
        MEAL_RASPBERRYDRINK_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_GRAPEJUICE(C_ITEM) {
    NAME = MEALNAME_GRAPEJUICE;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_GRAPEJUICE;
    VISUAL = "ItFo_Lakomy_Bottle_01.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_POTIONFAST;
    ON_STATE[0] = USE_GRAPEJUICE;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_GRAPEJUICE_1;
    TEXT[1] = ITEMDESC_ITFO_GRAPEJUICE_2;
    TEXT[2] = ITEMDESC_ITFO_GRAPEJUICE_3;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_GRAPEJUICE;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MP_GRAPEJUICE;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_GRAPEJUICE() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_GRAPEJUICE);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MP_GRAPEJUICE);
    if ((MEAL_GRAPEJUICE_CHECKBONUS) == (FALSE)) {
        MEAL_GRAPEJUICE_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_RASPBERRYTINCTURE(C_ITEM) {
    NAME = MEALNAME_RASPBERRYTINCTURE;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_RASPBERRYTINCTURE;
    VISUAL = "KM_new_bottle_12.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_POTIONFAST;
    ON_STATE[0] = USE_RASPBERRYTINCTURE;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_RASPBERRYTINCTURE_1;
    TEXT[2] = ITEMDESC_ITFO_RASPBERRYTINCTURE_2;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MP_RASPBERRYTINCTURE;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_RASPBERRYTINCTURE() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MP_RASPBERRYTINCTURE);
    FORESTBERRY_BONUS = (FORESTBERRY_BONUS) + (2);
    FOOD_FORESTBERRYBONUS();
    if ((MEAL_RASPBERRYTINCTURE_CHECKBONUS) == (FALSE)) {
        MEAL_RASPBERRYTINCTURE_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_EXOTICDESSERT(C_ITEM) {
    NAME = MEALNAME_EXOTICDESSERT;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_EXOTICDESSERT;
    VISUAL = "ItFo_ExoticDessert.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_FOODHUGE;
    ON_STATE[0] = USE_EXOTICDESSERT;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_EXOTICDESSERT_1;
    TEXT[1] = ITEMDESC_ITFO_EXOTICDESSERT_2;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_EXOTICDESSERT;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MP_EXOTICDESSERT;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_EXOTICDESSERT() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_EXOTICDESSERT);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MP_EXOTICDESSERT);
    if ((MEAL_EXOTICDESSERT_CHECKBONUS) == (FALSE)) {
        MEAL_EXOTICDESSERT_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_APPLEPIE(C_ITEM) {
    NAME = MEALNAME_APPLEPIE;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_APPLEPIE;
    VISUAL = "ItFo_ApplePie.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_FOODHUGE;
    ON_STATE[0] = USE_APPLEPIE;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_APPLEPIE_1;
    TEXT[1] = ITEMDESC_ITFO_APPLEPIE_2;
    TEXT[2] = ITEMDESC_ITFO_APPLEPIE_3;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_APPLEPIE;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_APPLEPIE() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_APPLEPIE);
    APPLE_BONUS = (APPLE_BONUS) + (5);
    FOOD_APPLEBONUS();
    if ((MEAL_APPLEPIE_CHECKBONUS) == (FALSE)) {
        MEAL_APPLEPIE_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_SPICYFISH(C_ITEM) {
    NAME = MEALNAME_SPICYFISH;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_SPICYFISH;
    VISUAL = "KM_ITFO_Fish01.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_PLATE;
    ON_STATE[0] = USE_SPICYFISH;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_SPICYFISH_1;
    TEXT[1] = ITEMDESC_ITFO_SPICYFISH_2;
    TEXT[2] = ITEMDESC_ITFO_SPICYFISH_3;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_SPICYFISH;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_SPICYFISH() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_SPICYFISH);
    if ((MEAL_SPICYFISH_CHECKBONUS) == (FALSE)) {
        MEAL_SPICYFISH_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_HERBFISHSOUP(C_ITEM) {
    NAME = MEALNAME_HERBFISHSOUP;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_HERBFISHSOUP;
    VISUAL = "KM_ITFO_soup01.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_RICE;
    ON_STATE[0] = USE_HERBFISHSOUP;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_HERBFISHSOUP_1;
    TEXT[1] = ITEMDESC_ITFO_HERBFISHSOUP_2;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_HERBFISHSOUP;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MP_HERBFISHSOUP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_HERBFISHSOUP() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_HERBFISHSOUP);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MP_HERBFISHSOUP);
    if ((MEAL_HERBFISHSOUP_CHECKBONUS) == (FALSE)) {
        MEAL_HERBFISHSOUP_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_TROLLSOUP(C_ITEM) {
    NAME = MEALNAME_TROLLSOUP;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_TROLLSOUP;
    VISUAL = "KM_ITFO_soup02.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_RICE;
    ON_STATE[0] = USE_TROLLSOUP;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_TROLLSOUP_1;
    TEXT[1] = ITEMDESC_ITFO_TROLLSOUP_2;
    TEXT[2] = NAME_BONUS_HP;
    COUNT[2] = HP_TROLLSOUP;
    TEXT[3] = NAME_PROT_WEAPONSALL;
    COUNT[3] = BONUS_DEF_TROLLSOUP;
    TEXT[4] = NAME_BONUS_HPMAX;
    COUNT[4] = BONUS_HP_TROLLSOUP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_TROLLSOUP() {
    HERO.ATTRIBUTE[1] = (HERO.ATTRIBUTE[1]) + (BONUS_HP_TROLLSOUP);
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_TROLLSOUP);
    MARVINTRANSFORMHP = (MARVINTRANSFORMHP) + (BONUS_HP_TROLLSOUP);
    SELF.PROTECTION[2] += BONUS_DEF_TROLLSOUP;
    SELF.PROTECTION[1] += BONUS_DEF_TROLLSOUP;
    SELF.PROTECTION[6] += BONUS_DEF_TROLLSOUP;
    CONCATTEXT = CONCATSTRINGS(PRINT_LEARNHITPOINTS_MAX, INTTOSTRING(BONUS_HP_TROLLSOUP));
    PRINTSCREEN(CONCATTEXT, -(1), 45, FONT_SCREEN, 2);
    CONCATTEXT2 = CONCATSTRINGS(PRINT_STONESKIN_INFOBONUS, INTTOSTRING(BONUS_DEF_TROLLSOUP));
    if ((MEAL_TROLLSOUP_CHECKBONUS) == (FALSE)) {
        MEAL_TROLLSOUP_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
    PRINTSCREEN(CONCATTEXT2, -(1), 55, FONT_SCREEN, 2);
}

var string USE_TROLLSOUP.CONCATTEXT = "";
var string USE_TROLLSOUP.CONCATTEXT2 = "";
instance ITFO_BATSTEW(C_ITEM) {
    NAME = FOODNAME_BATSTEW;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_BATSTEW;
    VISUAL = "ITFO_STEW_04.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_RICE;
    ON_STATE[0] = USE_BATSTEW;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_BATSTEW_1;
    TEXT[2] = ITEMDESC_ITFO_BATSTEW_2;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_BATSTEW;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_BATSTEW() {
    SND_PLAY("LevelUp");
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_BATSTEW);
    if ((SELF.ATTRIBUTE[4]) > (SELF.ATTRIBUTE[5])) {
        B_RAISEATTRIBUTE(SELF, ATR_STRENGTH, BONUS_BATSTEW);
    };
    if ((SELF.ATTRIBUTE[5]) > (SELF.ATTRIBUTE[4])) {
        B_RAISEATTRIBUTE(SELF, ATR_DEXTERITY, BONUS_BATSTEW);
    };
    BATSTEW_RND = HLP_RANDOM(1);
    if ((BATSTEW_RND) == (0)) {
        B_RAISEATTRIBUTE(SELF, ATR_STRENGTH, BONUS_BATSTEW);
    };
    B_RAISEATTRIBUTE(SELF, ATR_DEXTERITY, BONUS_BATSTEW);
    if ((MEAL_BATSTEW_CHECKBONUS) == (FALSE)) {
        MEAL_BATSTEW_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

var int USE_BATSTEW.BATSTEW_RND = 0;
instance ITFO_REDSTEW(C_ITEM) {
    NAME = FOODNAME_REDSTEW;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_REDSTEW;
    VISUAL = "ITFO_STEW_02.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_RICE;
    ON_STATE[0] = USE_REDSTEW;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_BATSTEW_1;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_REDSTEW;
    TEXT[4] = NAME_BONUS_HPMAX;
    COUNT[4] = BONUS_HP_REDSTEW;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_REDSTEW() {
    B_RAISEATTRIBUTE(SELF, ATR_HITPOINTS_MAX, BONUS_HP_REDSTEW);
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_REDSTEW);
    MARVINTRANSFORMHP = (MARVINTRANSFORMHP) + (BONUS_HP_REDSTEW);
    if ((MEAL_REDSTEW_CHECKBONUS) == (FALSE)) {
        MEAL_REDSTEW_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_BLUESTEW(C_ITEM) {
    NAME = FOODNAME_BLUESTEW;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_BLUESTEW;
    VISUAL = "ITFO_STEW_03.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_RICE;
    ON_STATE[0] = USE_BLUESTEW;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_BATSTEW_1;
    TEXT[3] = NAME_BONUS_MANA;
    COUNT[3] = MANA_BLUESTEW;
    TEXT[4] = NAME_BONUS_MANAMAX;
    COUNT[3] = BONUS_MANA_REDSTEW;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_BLUESTEW() {
    B_RAISEATTRIBUTE(SELF, ATR_MANA_MAX, BONUS_MANA_REDSTEW);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MANA_BLUESTEW);
    if ((MEAL_BLUESTEW_CHECKBONUS) == (FALSE)) {
        MEAL_BLUESTEW_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_SLAGERMEAT(C_ITEM) {
    NAME = FOODNAME_SLAGERMEAT;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_SLAGERMEAT;
    VISUAL = "ItFo_FishCotlet.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_PLATE;
    ON_STATE[0] = USE_SLAGERMEAT;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_SLAGERMEAT_1;
    TEXT[2] = ITEMDESC_ITFO_SLAGERMEAT_2;
    TEXT[4] = ITEMDESC_ITFO_SLAGERMEAT_3;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_SLAGERMEAT() {
    SELF.ATTRIBUTE[0] = SELF.ATTRIBUTE[1];
    SELF.ATTRIBUTE[2] = SELF.ATTRIBUTE[3];
    if ((MEAL_SLAGERMEAT_CHECKBONUS) == (FALSE)) {
        MEAL_SLAGERMEAT_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
    BUFF_APPLYEXT(SELF, 0x7eec, ((DURATION_POTION_TIMED) * (60)) * (1000), FALSE, TRUE);
}

instance ITFO_MARTHSOUP3(C_ITEM) {
    NAME = MEALNAME_MARTHASTEW;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = (VALUE_MARTHASTEW) * (2);
    VISUAL = "KM_ITFO_FoodPot.3ds";
    MATERIAL = MAT_WOOD;
    SCEMENAME = SCEME_BIGPOT;
    ON_STATE[0] = USE_MARTHSOUP3;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_MARTHSOUP3_1;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = (HP_MARTHASTEW) * (6);
    TEXT[5] = NAME_VALUE;
    COUNT[5] = (VALUE_MARTHASTEW) * (2);
}

func void USE_MARTHSOUP3() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, (HP_MARTHASTEW) * (6));
    if ((MEAL_MARTHSOUP3_CHECKBONUS) == (FALSE)) {
        MEAL_MARTHSOUP3_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_WEEDSTEW(C_ITEM) {
    NAME = MEALNAME_WEEDSTEW;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_WEEDSTEW;
    VISUAL = "KM_ITFO_soup01.3ds";
    MATERIAL = MAT_WOOD;
    SCEMENAME = SCEME_RICE;
    ON_STATE[0] = USE_ITFO_WEEDSTEW;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_WEEDSTEW_1;
    TEXT[1] = ITEMDESC_ITFO_WEEDSTEW_2;
    TEXT[2] = ITEMDESC_ITFO_WEEDSTEW_3;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = HP_WEEDSTEW;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
}

func void USE_ITFO_WEEDSTEW() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_WEEDSTEW);
    if ((MEAL_WEEDSTEW_CHECKBONUS) == (FALSE)) {
        MEAL_WEEDSTEW_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

const int STR_MARTHASTEW = 3;
instance ITFO_MARTHSOUP4(C_ITEM) {
    NAME = MEALNAME_MARTHASTEW_STR;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = (VALUE_MARTHASTEW) * (15);
    VISUAL = "KM_ITFO_FoodPot.3ds";
    MATERIAL = MAT_WOOD;
    SCEMENAME = SCEME_BIGPOT;
    ON_STATE[0] = USE_MARTHSOUP4;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_MARTHSOUP3_1;
    TEXT[1] = ITEMDESC_ITFO_MARTHSOUP4_2;
    TEXT[3] = NAME_BONUS_STR;
    COUNT[3] = STR_MARTHASTEW;
    TEXT[4] = NAME_BONUS_HP;
    COUNT[4] = (HP_MARTHASTEW) * (7);
    TEXT[5] = NAME_VALUE;
    COUNT[5] = (VALUE_MARTHASTEW) * (2);
}

func void USE_MARTHSOUP4() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, (HP_MARTHASTEW) * (7));
    B_RAISEATTRIBUTE(SELF, ATR_STRENGTH, STR_MARTHASTEW);
    if ((MEAL_MARTHSOUP4_CHECKBONUS) == (FALSE)) {
        MEAL_MARTHSOUP4_CHECKBONUS = TRUE;
        MEAL_POINTSBONUS = (MEAL_POINTSBONUS) + (1);
        FOOD_MEALSBONUS();
    };
}

instance ITFO_WINE_ERNESTO_STR(C_ITEM) {
    NAME = FOODNAME_WINE_ERNESTO_STR;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_WINE_ERNESTO_STR;
    VISUAL = "KM_new_bottle_10.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_POTIONFAST;
    ON_STATE[0] = USE_WINE_ERNESTO_STR;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_WINE_ERNESTO_STR_1;
    TEXT[1] = ITEMDESC_ITFO_WINE_ERNESTO_STR_2;
    TEXT[3] = NAME_BONUS_STR;
    COUNT[3] = STR_WINE_ERNESTO;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = STR_MANA_WINE_ERNESTO;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_WINE_ERNESTO_STR;
}

func void USE_WINE_ERNESTO_STR() {
    B_RAISEATTRIBUTE(SELF, ATR_STRENGTH, STR_WINE_ERNESTO);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, STR_MANA_WINE_ERNESTO);
}

instance ITFO_WINE_ERNESTO_DEX(C_ITEM) {
    NAME = FOODNAME_WINE_ERNESTO_DEX;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_WINE_ERNESTO_DEX;
    VISUAL = "KM_new_bottle_12.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_POTIONFAST;
    ON_STATE[0] = USE_WINE_ERNESTO_DEX;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_WINE_ERNESTO_DEX_1;
    TEXT[1] = ITEMDESC_ITFO_WINE_ERNESTO_DEX_2;
    TEXT[3] = NAME_BONUS_DEX;
    COUNT[3] = DEX_WINE_ERNESTO;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = DEX_MANA_WINE_ERNESTO;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_WINE_ERNESTO_DEX;
}

func void USE_WINE_ERNESTO_DEX() {
    B_RAISEATTRIBUTE(SELF, ATR_DEXTERITY, DEX_WINE_ERNESTO);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, DEX_MANA_WINE_ERNESTO);
}

instance ITFO_WINE_ERNESTO_MANA(C_ITEM) {
    NAME = FOODNAME_WINE_ERNESTO_MANA;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_WINE_ERNESTO_MANA;
    VISUAL = "KM_new_bottle_11.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_POTIONFAST;
    ON_STATE[0] = USE_WINE_ERNESTO_MANA;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_WINE_ERNESTO_MANA_1;
    TEXT[1] = ITEMDESC_ITFO_WINE_ERNESTO_MANA_2;
    TEXT[3] = NAME_BONUS_MANAMAX;
    COUNT[3] = MANA_WINE_ERNESTO;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MANA_MANA_WINE_ERNESTO;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_WINE_ERNESTO_MANA;
}

func void USE_WINE_ERNESTO_MANA() {
    B_RAISEATTRIBUTE(SELF, ATR_MANA_MAX, MANA_WINE_ERNESTO);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MANA_MANA_WINE_ERNESTO);
}

instance ITFO_WINE_ERNESTO_SPECIAL(C_ITEM) {
    NAME = FOODNAME_WINE_ERNESTO_SPECIAL;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_WINE_ERNESTO_SPECIAL;
    VISUAL = "KM_new_bottle_04.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_POTION;
    ON_STATE[0] = USE_WINE_ERNESTO_SPECIAL;
    DESCRIPTION = NAME;
    TEXT[0] = ITEMDESC_ITFO_WINE_ERNESTO_SPECIAL_1;
    TEXT[1] = NAME_BONUS_STR;
    COUNT[1] = STR_WINE_ERNESTO;
    TEXT[2] = NAME_BONUS_DEX;
    COUNT[2] = DEX_WINE_ERNESTO;
    TEXT[3] = NAME_BONUS_HPMAX;
    COUNT[3] = HP_WINEERNESTO;
    TEXT[4] = NAME_BONUS_MANAMAX;
    COUNT[4] = MANA_WINE_ERNESTO;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_WINE_ERNESTO_SPECIAL;
}

func void USE_WINE_ERNESTO_SPECIAL() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS_MAX, HP_WINEERNESTO);
    MARVINTRANSFORMHP = (MARVINTRANSFORMHP) + (HP_WINEERNESTO);
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_WINEERNESTO);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA_MAX, MANA_WINE_ERNESTO);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MANA_WINE_ERNESTO);
    NPC_CHANGEATTRIBUTE(SELF, ATR_STRENGTH, STR_WINE_ERNESTO);
    NPC_CHANGEATTRIBUTE(SELF, ATR_DEXTERITY, DEX_WINE_ERNESTO);
    CONCATTEXT = CONCATSTRINGS(PRINT_LEARNSTR, INTTOSTRING(STR_WINE_ERNESTO));
    PRINTSCREEN(CONCATTEXT, -(1), 40, FONT_SCREEN, 5);
    CONCATTEXT2 = CONCATSTRINGS(PRINT_LEARNDEX, INTTOSTRING(DEX_WINE_ERNESTO));
    PRINTSCREEN(CONCATTEXT2, -(1), 45, FONT_SCREEN, 5);
    CONCATTEXT3 = CONCATSTRINGS(PRINT_LEARNHITPOINTS_MAX, INTTOSTRING(HP_WINEERNESTO));
    PRINTSCREEN(CONCATTEXT3, -(1), 50, FONT_SCREEN, 5);
    CONCATTEXT4 = CONCATSTRINGS(PRINT_LEARNMANA_MAX, INTTOSTRING(MANA_WINE_ERNESTO));
    PRINTSCREEN(CONCATTEXT4, -(1), 55, FONT_SCREEN, 5);
    SND_PLAY("LevelUp");
}

var string USE_WINE_ERNESTO_SPECIAL.CONCATTEXT = "";
var string USE_WINE_ERNESTO_SPECIAL.CONCATTEXT2 = "";
var string USE_WINE_ERNESTO_SPECIAL.CONCATTEXT3 = "";
var string USE_WINE_ERNESTO_SPECIAL.CONCATTEXT4 = "";
instance ITFO_WINEVALERIO(C_ITEM) {
    NAME = FOODNAME_WINEVALERIO;
    MAINFLAG = ITEM_KAT_FOOD;
    FLAGS = ITEM_MULTI;
    VALUE = VALUE_WINEVALERIO;
    VISUAL = "KM_new_bottle_10.3DS";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_POTIONFAST;
    ON_STATE[0] = USE_WINEVALERIO;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITFO_WINEVALERIO_1;
    TEXT[3] = NAME_BONUS_HP;
    COUNT[3] = HP_WINEVALERIO;
    TEXT[4] = NAME_BONUS_MANA;
    COUNT[4] = MANA_WINEVALERIO;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE_WINEVALERIO;
}

func void USE_WINEVALERIO() {
    NPC_CHANGEATTRIBUTE(SELF, ATR_HITPOINTS, HP_WINEVALERIO);
    NPC_CHANGEATTRIBUTE(SELF, ATR_MANA, MANA_WINEVALERIO);
}

