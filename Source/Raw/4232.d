instance DIA_NIRKO_EXIT(C_INFO) {
    NPC = 0xdfc0;
    NR = 999;
    CONDITION = DIA_NIRKO_EXIT_CONDITION;
    INFORMATION = DIA_NIRKO_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_NIRKO_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_NIRKO_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_NIRKO_SQ101_HELLO(C_INFO) {
    NPC = 0xdfc0;
    NR = 1;
    CONDITION = DIA_NIRKO_SQ101_HELLO_CONDITION;
    INFORMATION = DIA_NIRKO_SQ101_HELLO_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Work break?";
}

func int DIA_NIRKO_SQ101_HELLO_CONDITION() {
    if ((LOG_GETSTATUS(MIS_SQ101)) == (LOG_RUNNING)) {
        if ((SQ101_SEARCHINGFORNIRKO) == (TRUE)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_NIRKO_SQ101_HELLO_INFO() {
    SQ101_SEARCHINGFORNIRKO = FALSE;
    AI_OUTPUT(OTHER, SELF, "DIA_Nirko_SQ101_Hello_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Nirko_SQ101_Hello_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Nirko_SQ101_Hello_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Nirko_SQ101_Hello_03_04");
    AI_OUTPUT(OTHER, SELF, "DIA_Nirko_SQ101_Hello_15_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Nirko_SQ101_Hello_03_06");
    B_STANDUP();
    AI_OUTPUT(SELF, OTHER, "DIA_Nirko_SQ101_Hello_03_07");
    INFO_CLEARCHOICES(0x1501d);
    INFO_ADDCHOICE(0x1501d, "I'll tell Knut you're hiding here.", 0x15022);
    INFO_ADDCHOICE(0x1501d, "You'll come back in kind or I'll make you.", 0x15021);
}

func void NIRKO_ARENAFIGHT() {
    SQ101_NIRKOFIGHT = 1;
    AI_OUTPUT(SELF, OTHER, "DIA_Nirko_SQ101_Hello_IWillFightYou_03_02");
    AI_STOPPROCESSINFOS(SELF);
    B_ATTACK(SELF, OTHER, AR_NONE, 1);
    SELF.AIVAR[45] = AF_RUNNING;
}

func void DIA_NIRKO_SQ101_HELLO_IWILLFIGHTYOU() {
    AI_OUTPUT(OTHER, SELF, "DIA_Nirko_SQ101_Hello_IWillFightYou_15_01");
    INFO_CLEARCHOICES(0x1501d);
    NIRKO_ARENAFIGHT();
}

func void DIA_NIRKO_SQ101_HELLO_IWILLTELLKNUT() {
    AI_OUTPUT(OTHER, SELF, "DIA_Nirko_SQ101_Hello_IWillTellKnut_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Nirko_SQ101_Hello_IWillTellKnut_03_02");
    INFO_ADDCHOICE(0x1501d, "You'll have to give me a really good reason.", 0x15023);
}

func void DIA_NIRKO_SQ101_HELLO_IWILLTELLKNUT_GIVEMESOMETHING() {
    AI_OUTPUT(OTHER, SELF, "DIA_Nirko_SQ101_Hello_GiveMeSomething_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Nirko_SQ101_Hello_GiveMeSomething_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Nirko_SQ101_Hello_GiveMeSomething_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Nirko_SQ101_Hello_GiveMeSomething_03_04");
    INFO_CLEARCHOICES(0x1501d);
    INFO_ADDCHOICE(0x1501d, "Your story doesn't convince me.", 0x15025);
    INFO_ADDCHOICE(0x1501d, "What do you propose then?", 0x15026);
}

func void DIA_NIRKO_SQ101_HELLO_FINISH() {
    INFO_CLEARCHOICES(0x1501d);
    AI_STOPPROCESSINFOS(SELF);
    AI_FUNCTION(SELF, 0xf37f);
}

func void DIA_NIRKO_SQ101_HELLO_IWILLTELLKNUT_GIVEMESOMETHING_COOLSTORYBRO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Nirko_SQ101_Hello_CoolStoryBro_15_01");
    DIA_NIRKO_SQ101_HELLO_IWILLFIGHTYOU();
}

func void DIA_NIRKO_SQ101_HELLO_IWILLTELLKNUT_GIVEMESOMETHING_WHATSYOUROFFER() {
    AI_OUTPUT(OTHER, SELF, "DIA_Nirko_SQ101_Hello_WhatsYourOffer_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Nirko_SQ101_Hello_WhatsYourOffer_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Nirko_SQ101_Hello_WhatsYourOffer_03_03");
    INFO_ADDCHOICE(0x1501d, "I think you could do with a little more effort.", 0x15027);
    INFO_ADDCHOICE(0x1501d, "Fine. Give me that amulet.", 0x15028);
}

func void DIA_NIRKO_SQ101_HELLO_IWILLTELLKNUT_GIVEMESOMETHING_WHATSYOUROFFER_REALLY() {
    AI_OUTPUT(OTHER, SELF, "DIA_Nirko_SQ101_Hello_Really_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Nirko_SQ101_Hello_Really_03_02");
    CREATEINVITEMS(SELF, 0x859b, SQ101_NIRKOGOLD);
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, SQ101_NIRKOGOLD);
}

func void DIA_NIRKO_SQ101_HELLO_IWILLTELLKNUT_GIVEMESOMETHING_WHATSYOUROFFER_GIVEMETHAT() {
    AI_OUTPUT(OTHER, SELF, "DIA_Nirko_SQ101_Hello_GiveMeThat_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Nirko_SQ101_Hello_GiveMeThat_03_02");
    CREATEINVITEMS(SELF, 0x90c6, 1);
    B_GIVEINVITEMS(SELF, OTHER, 0x90c6, 1);
    INFO_CLEARCHOICES(0x1501d);
    AI_STOPPROCESSINFOS(SELF);
    AI_LOGENTRY(TOPIC_SQ101, LOG_SQ101_NIRKO_AMULET);
}

instance DIA_NIRKO_AFTERFIGHT(C_INFO) {
    NPC = 0xdfc0;
    NR = 3;
    CONDITION = DIA_NIRKO_AFTERFIGHT_CONDITION;
    INFORMATION = DIA_NIRKO_AFTERFIGHT_INFO;
    PERMANENT = TRUE;
    IMPORTANT = TRUE;
}

func int DIA_NIRKO_AFTERFIGHT_CONDITION() {
    if ((LOG_GETSTATUS(MIS_SQ101)) == (LOG_RUNNING)) {
        if ((SQ101_NIRKOFIGHT) == (1)) {
            if (((SELF.AIVAR[64]) == (FALSE)) && ((SELF.AIVAR[0]) != (FIGHT_NONE))) {
                if ((SELF.AIVAR[45]) != (AF_NONE)) {
                    if (NPC_ISINSTATE(SELF, 0xf09f)) {
                        return TRUE;
                    };
                };
            };
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_NIRKO_AFTERFIGHT_INFO() {
    SELF.AIVAR[45] = AF_NONE;
    SELF.AIVAR[64] = TRUE;
    if ((SELF.AIVAR[0]) == (FIGHT_LOST)) {
        SQ101_NIRKOFIGHT = 2;
        AI_OUTPUT(SELF, OTHER, "DIA_Nirko_SQ101_NirkoLose_03_01");
        AI_LOGENTRY(TOPIC_SQ101, LOG_SQ101_NIRKO_AFTERFIGHT);
        DIA_NIRKO_SQ101_HELLO_FINISH();
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Nirko_SQ101_WantFightAgain_03_01");
    NIRKO_ARENAFIGHT();
}

instance DIA_NIRKO_PICKPOCKET(C_INFO) {
    NPC = 0xdfc0;
    NR = 900;
    CONDITION = DIA_NIRKO_PICKPOCKET_CONDITION;
    INFORMATION = DIA_NIRKO_PICKPOCKET_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = PICKPOCKET_40;
}

func int DIA_NIRKO_PICKPOCKET_CONDITION() {
    if (((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) && ((SELF.AIVAR[6]) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_NIRKO_PICKPOCKET_INFO() {
    INFO_CLEARCHOICES(0x1502c);
    INFO_ADDCHOICE(0x1502c, DIALOG_BACK, 0x15030);
    INFO_ADDCHOICE(0x1502c, DIALOG_PICKPOCKET, 0x1502f);
}

func void DIA_NIRKO_PICKPOCKET_DOIT() {
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) {
        B_PICKPOCKET_AMBIENT_TIER_1();
        SELF.AIVAR[6] = TRUE;
        INFO_CLEARCHOICES(0x1502c);
    };
    AI_PLAYANI(HERO, T_CANNOTTAKE);
    PRINTSCREEN(PRINT_CANTPICKPOCKETTHISPERSON, -(1), -(1), FONT_SCREEN, 4);
    INFO_CLEARCHOICES(0x1502c);
}

func void DIA_NIRKO_PICKPOCKET_BACK() {
    INFO_CLEARCHOICES(0x1502c);
}

