instance DIA_NOB_EXIT(C_INFO) {
    NPC = 0xe12d;
    NR = 999;
    CONDITION = DIA_NOB_EXIT_CONDITION;
    INFORMATION = DIA_NOB_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_NOB_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_NOB_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_NOB_HELLO(C_INFO) {
    NPC = 0xe12d;
    NR = 1;
    CONDITION = DIA_NOB_HELLO_CONDITION;
    INFORMATION = DIA_NOB_HELLO_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_NOB_HELLO_CONDITION() {
    if ((NPC_ISINSTATE(SELF, 0xf09f)) && ((NPC_GETDISTTOWP(SELF, "PART12_RAMSEYHOUSE_STOVE01")) <= (400))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_NOB_HELLO_INFO() {
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_HELLO_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_HELLO_03_04");
}

instance DIA_NOB_SQ115_START(C_INFO) {
    NPC = 0xe12d;
    NR = 2;
    CONDITION = DIA_NOB_SQ115_START_CONDITION;
    INFORMATION = DIA_NOB_SQ115_START_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I came to see what you were cooking.";
}

func int DIA_NOB_SQ115_START_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 0x15bf3)) && ((NPC_GETDISTTOWP(SELF, "PART12_RAMSEYHOUSE_STOVE01")) <= (400))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void NOB_SQ115_FIRE() {
    WLD_SENDTRIGGER("SQ115_MOVER_FIRE");
}

func void DIA_NOB_SQ115_START_INFO() {
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(OTHER, SELF, "DIA_Nob_SQ115_Start_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_Start_03_02");
    AI_FUNCTION(SELF, 0x15bf8);
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_Start_03_03");
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_Start_03_04");
    AI_WAITTILLEND(SELF, OTHER);
    AI_PLAYANI(SELF, T_SEARCH);
    AI_TURNAWAY(SELF, OTHER);
    AI_STARTFACEANI(SELF, T_HURT, 1, -(1));
    AI_PLAYANI(SELF, T_JUMPB);
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_Start_03_06");
    AI_WAITTILLEND(SELF, OTHER);
    AI_USEMOB(SELF, "STOVE", 1);
    AI_PLAYANIBS(SELF, "T_STOVE_RANDOM_1", BS_MOBINTERACT_INTERRUPT);
    AI_FUNCTION(SELF, 0x15bf8);
    AI_USEMOB(SELF, "STOVE", -(1));
    AI_TURNTONPC(SELF, OTHER);
    AI_STARTFACEANI(SELF, "S_HOSTILE", 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_Start_03_07");
    AI_OUTPUT(OTHER, SELF, "DIA_Nob_SQ115_Start_15_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_Start_03_09");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_Start_03_10");
    if ((NPC_ISINROUTINE(SELF, 0xe130)) == (FALSE)) {
        NPC_EXCHANGEROUTINE(SELF, RESERVED_CONST_STRING_64);
    };
    INFO_CLEARCHOICES(0x15bf6);
    INFO_ADDCHOICE(0x15bf6, "Maybe I could get you some new meat?", 0x15bfb);
    INFO_ADDCHOICE(0x15bf6, "Do you cook for Albyn?", 0x15bfa);
}

func void DIA_NOB_SQ115_START_ALBYN() {
    AI_OUTPUT(OTHER, SELF, "DIA_Nob_SQ115_Albyn_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_Albyn_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_Albyn_03_03");
}

func void DIA_NOB_SQ115_START_MEAT() {
    AI_OUTPUT(OTHER, SELF, "DIA_Nob_SQ115_Meat_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_Meat_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_Meat_03_03");
    INFO_CLEARCHOICES(0x15bf6);
    INFO_ADDCHOICE(0x15bf6, "You have nothing to lose.", 0x15bfd);
    INFO_ADDCHOICE(0x15bf6, "I'll hurry if you give me something in return.", 0x15bfe);
}

func void DIA_NOB_SQ115_STARTQUEST() {
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_StartQuest_03_01");
    LOG_CREATETOPIC(TOPIC_SQ115, LOG_MISSION);
    LOG_SETSTATUS(_@(MIS_SQ115), TOPIC_SQ115, LOG_RUNNING);
}

func void DIA_NOB_SQ115_START_MEAT_NOTHINGTOLOSE() {
    AI_OUTPUT(OTHER, SELF, "DIA_Nob_SQ115_NothingToLose_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_NothingToLose_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_NothingToLose_03_03");
    DIA_NOB_SQ115_STARTQUEST();
    AI_LOGENTRY(TOPIC_SQ115, LOG_SQ115_START_V1);
    INFO_CLEARCHOICES(0x15bf6);
}

func void DIA_NOB_SQ115_START_MEAT_REWARD() {
    AI_OUTPUT(OTHER, SELF, "DIA_Nob_SQ115_Reward_15_01");
    AI_STARTFACEANI(SELF, "S_HOSTILE", 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_Reward_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Nob_SQ115_Reward_15_03");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_Reward_03_04");
    INFO_CLEARCHOICES(0x15bf6);
    INFO_ADDCHOICE(0x15bf6, "A little gold always comes in handy.", 0x15bff);
    INFO_ADDCHOICE(0x15bf6, "Will you let me try that dish?", 0x15c00);
    INFO_ADDCHOICE(0x15bf6, "Will you share the recipe?", 0x15c01);
}

func void DIA_NOB_SQ115_START_MEAT_REWARD_GOLD() {
    AI_OUTPUT(OTHER, SELF, "DIA_Nob_SQ115_Gold_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_Gold_03_02");
    SQ115_NOBREWARD = 1;
    DIA_NOB_SQ115_STARTQUEST();
    AI_LOGENTRY(TOPIC_SQ115, LOG_SQ115_START_V2);
    INFO_CLEARCHOICES(0x15bf6);
}

func void DIA_NOB_SQ115_START_MEAT_REWARD_GIVEFOOD() {
    AI_OUTPUT(OTHER, SELF, "DIA_Nob_SQ115_GiveFood_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_GiveFood_03_03");
    SQ115_NOBREWARD = 2;
    DIA_NOB_SQ115_STARTQUEST();
    AI_LOGENTRY(TOPIC_SQ115, LOG_SQ115_START_V3);
    INFO_CLEARCHOICES(0x15bf6);
}

func void DIA_NOB_SQ115_START_MEAT_REWARD_TEACHME() {
    AI_OUTPUT(OTHER, SELF, "DIA_Nob_SQ115_Recipe_15_01");
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_Recipe_03_02");
    SQ115_NOBREWARD = 3;
    DIA_NOB_SQ115_STARTQUEST();
    AI_LOGENTRY(TOPIC_SQ115, LOG_SQ115_START_V4);
    INFO_CLEARCHOICES(0x15bf6);
}

instance DIA_NOB_WHO(C_INFO) {
    NPC = 0xe12d;
    NR = 1;
    CONDITION = DIA_NOB_WHO_CONDITION;
    INFORMATION = DIA_NOB_WHO_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Are you a cook?";
}

func int DIA_NOB_WHO_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 0x15bf3)) && (!(NPC_KNOWSINFO(OTHER, 0x15bf6)))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_NOB_WHO_INFO() {
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Nob_Who_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_Who_03_02");
    if ((NPC_HASITEMS(OTHER, 0x9aa1)) == (0)) {
        CREATEINVITEMS(SELF, 0x9aa1, 1);
    };
    AI_DRAWWEAPON(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_Who_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_Who_03_04");
    AI_REMOVEWEAPON(SELF);
}

instance DIA_NOB_SQ115_GOTSIRLOIN(C_INFO) {
    NPC = 0xe12d;
    NR = 1;
    CONDITION = DIA_NOB_SQ115_GOTSIRLOIN_CONDITION;
    INFORMATION = DIA_NOB_SQ115_GOTSIRLOIN_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = DIALOG_GIVEBOARMEAT;
}

func int DIA_NOB_SQ115_GOTSIRLOIN_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ115)) == (LOG_RUNNING)) && ((NPC_HASITEMS(OTHER, 0x8e37)) >= (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

var int SQ115_SIRLOINCOUNT = 0;
var int SQ115_WAITFORMEAL = 0;
var int SQ115_WAITFORMEAL_DAY = 0;
func void DIA_NOB_SQ115_FINISH() {
    B_GIVEPLAYERXP((SQ115_SIRLOINCOUNT) * (XP_SQ115_SIRLOIN));
    LOG_SETSTATUS(_@(MIS_SQ115), TOPIC_SQ115, LOG_SUCCESS);
    GIVEREPUTATION_SILBACH();
}

func void DIA_NOB_SQ115_TAKEIT() {
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_GotSirloin_03_05");
}

func void DIA_NOB_SQ115_GOTSIRLOIN_INFO() {
    MARVINCURRENTRAWSIRLOIN = NPC_HASITEMS(OTHER, 0x8e37);
    if ((NPC_HASITEMS(OTHER, 0x8e37)) >= (5)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x8e37, 5);
        SQ115_SIRLOINCOUNT = 5;
    };
    SQ115_SIRLOINCOUNT = MARVINCURRENTRAWSIRLOIN;
    B_GIVEINVITEMS(OTHER, SELF, 0x8e37, MARVINCURRENTRAWSIRLOIN);
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_GotSirloin_03_01");
    if ((SQ115_SIRLOINCOUNT) > (1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_GotSirloin_03_02");
    };
    AI_OUTPUT(OTHER, SELF, "DIA_Nob_SQ115_GotSirloin_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_GotSirloin_03_04");
    if ((SQ115_NOBREWARD) == (1)) {
        DIA_NOB_SQ115_TAKEIT();
        AI_OUTPUT(OTHER, SELF, "DIA_Nob_SQ115_GotSirloin_15_06");
        AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_GotSirloin_03_07");
        CREATEINVITEMS(SELF, 0x87b1, 1);
        B_GIVEINVITEMS(SELF, OTHER, 0x87b1, 1);
        AI_LOGENTRY(TOPIC_SQ115, LOG_SQ115_FINISH_V1);
        DIA_NOB_SQ115_FINISH();
    };
    if ((SQ115_NOBREWARD) == (2)) {
        SQ115_WAITFORMEAL = TRUE;
        SQ115_WAITFORMEAL_DAY = WLD_GETDAY();
        AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_GotSirloin_03_08");
        AI_OUTPUT(OTHER, SELF, "DIA_Nob_SQ115_GotSirloin_15_09");
        AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_GotSirloin_03_10");
        B_LOGENTRY(TOPIC_SQ115, LOG_SQ115_FINISH_V2);
        DIA_NOB_SQ115_FINISH();
    };
    if ((SQ115_NOBREWARD) == (3)) {
        CREATEINVITEMS(SELF, 0x8c27, 1);
        B_GIVEINVITEMS(SELF, OTHER, 0x8c27, 1);
        AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_GotSirloin_03_11");
        AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_GotSirloin_03_12");
        AI_OUTPUT(OTHER, SELF, "DIA_Nob_SQ115_GotSirloin_15_13");
        AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_GotSirloin_03_14");
        B_LOGENTRY(TOPIC_SQ115, LOG_SQ115_FINISH_V3);
        DIA_NOB_SQ115_FINISH();
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_GotSirloin_03_15");
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_GotSirloin_03_16");
    INFO_CLEARCHOICES(0x15c05);
    INFO_ADDCHOICE(0x15c05, "I was hoping for more.", 0x15c0e);
    INFO_ADDCHOICE(0x15c05, "A kind word always helps.", 0x15c0f);
}

var int DIA_NOB_SQ115_GOTSIRLOIN_INFO.MARVINCURRENTRAWSIRLOIN = 0;
func void DIA_NOB_SQ115_GOTSIRLOIN_MORE() {
    AI_OUTPUT(OTHER, SELF, "DIA_Nob_SQ115_GotSirloin_More_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_GotSirloin_More_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_GotSirloin_More_03_03");
    CREATEINVITEMS(SELF, 0x87af, 1);
    B_GIVEINVITEMS(SELF, OTHER, 0x87af, 1);
    INFO_CLEARCHOICES(0x15c05);
    AI_LOGENTRY(TOPIC_SQ115, LOG_SQ115_FINISH_V4);
    DIA_NOB_SQ115_FINISH();
}

func void DIA_NOB_SQ115_GOTSIRLOIN_GOOD() {
    AI_OUTPUT(OTHER, SELF, "DIA_Nob_SQ115_GotSirloin_Good_15_01");
    INFO_CLEARCHOICES(0x15c05);
    AI_LOGENTRY(TOPIC_SQ115, LOG_SQ115_FINISH_V5);
    DIA_NOB_SQ115_FINISH();
}

instance DIA_NOB_SQ115_MEAL(C_INFO) {
    NPC = 0xe12d;
    NR = 1;
    CONDITION = DIA_NOB_SQ115_MEAL_CONDITION;
    INFORMATION = DIA_NOB_SQ115_MEAL_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_NOB_SQ115_MEAL_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ115)) == (LOG_SUCCESS)) && ((SQ115_NOBREWARD) == (2))) {
        if (((SQ115_WAITFORMEAL) == (1)) && ((SQ115_WAITFORMEAL_DAY) <= ((WLD_GETDAY()) - (1)))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_NOB_SQ115_MEAL_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_Meal_03_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Nob_SQ115_Meal_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ115_Meal_03_03");
    CREATEINVITEMS(SELF, 0x8f1f, 1);
    B_GIVEINVITEMS(SELF, OTHER, 0x8f1f, 1);
}

instance DIA_NOB_SQ202(C_INFO) {
    NPC = 0xe12d;
    NR = 1;
    CONDITION = DIA_NOB_SQ202_CONDITION;
    INFORMATION = DIA_NOB_SQ202_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "You don't happen to need a supply of spices, do you?";
}

func int DIA_NOB_SQ202_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ202)) == (LOG_RUNNING)) && ((NPC_HASITEMS(OTHER, 0x9105)) >= (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_NOB_SQ202_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Nob_SQ202_15_01");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ202_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Nob_SQ202_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ202_03_06");
    B_STANDUP();
    B_USEFAKEBAG();
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ202_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ202_03_05");
    INFO_CLEARCHOICES(0x15c13);
    INFO_ADDCHOICE(0x15c13, "Please, take it.", 0x15c17);
    INFO_ADDCHOICE(0x15c13, "You won't get it for free.", 0x15c18);
}

func void DIA_NOB_SQ202_END() {
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ202_TakeIt_03_03");
    INFO_CLEARCHOICES(0x15c13);
    AI_STOPPROCESSINFOS(SELF);
    AI_RESETFACEANI(SELF);
}

func void DIA_NOB_SQ202_TAKEIT() {
    if ((ALBYN_DEBTS) >= (1)) {
        ALBYN_DEBTS = 0;
    };
    SQ202_PFEFFERSOLD = 1;
    AI_OUTPUT(OTHER, SELF, "DIA_Nob_SQ202_TakeIt_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ202_TakeIt_03_02");
    AI_LOGENTRY(TOPIC_SQ202, LOG_SQ202_NOB_SPICES_V1);
    B_GIVEPLAYERXP(XP_SQ202_NOBFREE);
    B_GIVEINVITEMS(OTHER, SELF, 0x9105, 1);
    DIA_NOB_SQ202_END();
}

func void DIA_NOB_SQ202_REWARD() {
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(OTHER, SELF, "DIA_Nob_SQ202_Reward_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ202_Reward_03_02");
    INFO_CLEARCHOICES(0x15c13);
    INFO_ADDCHOICE(0x15c13, "15 gold pieces.", 0x15c19);
    INFO_ADDCHOICE(0x15c13, "30 gold pieces.", 0x15c1a);
    INFO_ADDCHOICE(0x15c13, "60 gold pieces.", 0x15c1b);
}

func void DIA_NOB_SQ202_REWARD_15() {
    SQ202_PFEFFERSOLD = 2;
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Nob_SQ202_15_15_01");
    AI_WAITTILLEND(SELF, OTHER);
    B_SAY(SELF, OTHER, "$REWARD_CALM");
    DIA_NOB_SQ115_TAKEIT();
    B_GIVEINVITEMS(OTHER, SELF, 0x9105, 1);
    CREATEINVITEMS(SELF, 0x859b, SQ202_NOB_PRICEFORFOOD_V1);
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, SQ202_NOB_PRICEFORFOOD_V1);
    CREATEINVITEMS(SELF, 0x8e07, 1);
    B_GIVEINVITEMS(SELF, OTHER, 0x8e07, 1);
    CREATEINVITEMS(SELF, 0x8e2b, 2);
    B_GIVEINVITEMS(SELF, OTHER, 0x8e2b, 2);
    SQ202_EARNEDGOLD = (SQ202_EARNEDGOLD) + (SQ202_NOB_PRICEFORFOOD_V1);
    AI_LOGENTRY(TOPIC_SQ202, LOG_SQ202_NOB_SPICES_V2);
    DIA_NOB_SQ202_END();
}

func void DIA_NOB_SQ202_REWARD_30() {
    SQ202_PFEFFERSOLD = 2;
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Nob_SQ202_30_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ202_30_03_02");
    B_GIVEINVITEMS(OTHER, SELF, 0x9105, 1);
    CREATEINVITEMS(SELF, 0x859b, SQ202_NOB_PRICEFORFOOD_V2);
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, SQ202_NOB_PRICEFORFOOD_V2);
    SQ202_EARNEDGOLD = (SQ202_EARNEDGOLD) + (SQ202_NOB_PRICEFORFOOD_V2);
    AI_LOGENTRY(TOPIC_SQ202, LOG_SQ202_NOB_SPICES_V3);
    DIA_NOB_SQ202_END();
}

func void DIA_NOB_SQ202_REWARD_60() {
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Nob_SQ202_60_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ202_60_03_02");
    INFO_CLEARCHOICES(0x15c13);
    INFO_ADDCHOICE(0x15c13, "You have to pay for quality.", 0x15c1c);
    INFO_ADDCHOICE(0x15c13, "Albyn wouldn't forgive you for that.", 0x15c1d);
}

func void DIA_NOB_SQ202_REWARD_60_QUALITY() {
    SQ202_PFEFFERSOLD = 3;
    AI_OUTPUT(OTHER, SELF, "DIA_Nob_SQ202_Quality_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ202_Quality_03_02");
    AI_LOGENTRY(TOPIC_SQ202, LOG_SQ202_NOB_SPICES_V5);
    DIA_NOB_SQ202_END();
}

func void DIA_NOB_SQ202_REWARD_60_ALBYN() {
    SQ202_PFEFFERSOLD = 2;
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(OTHER, SELF, "DIA_Nob_SQ202_Albyn_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ202_Albyn_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Nob_SQ202_Albyn_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Nob_SQ202_Albyn_03_04");
    B_GIVEINVITEMS(OTHER, SELF, 0x9105, 1);
    CREATEINVITEMS(SELF, 0x859b, SQ202_NOB_PRICEFORFOOD_V3);
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, SQ202_NOB_PRICEFORFOOD_V3);
    SQ202_EARNEDGOLD = (SQ202_EARNEDGOLD) + (SQ202_NOB_PRICEFORFOOD_V3);
    AI_LOGENTRY(TOPIC_SQ202, LOG_SQ202_NOB_SPICES_V4);
    DIA_NOB_SQ202_END();
}

instance DIA_NOB_AMBIENT(C_INFO) {
    NPC = 0xe12d;
    NR = 2;
    CONDITION = DIA_NOB_AMBIENT_CONDITION;
    INFORMATION = DIA_NOB_AMBIENT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "How are you doing?";
}

func int DIA_NOB_AMBIENT_CONDITION() {
    if (((NPC_ISINSTATE(SELF, 0xf09f)) && (NPC_KNOWSINFO(OTHER, 0x15bf6))) && (NPC_KNOWSINFO(OTHER, 0x15c02))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_NOB_AMBIENT_INFO() {
    NPC_INITAMBIENTS(SELF, 2);
    AI_OUTPUT(OTHER, SELF, "DIA_Nob_Ambient_15_01");
    if ((NPC_GETLASTAMBIENT(SELF)) == (1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Nob_Ambient_03_02");
    };
    if ((NPC_GETLASTAMBIENT(SELF)) == (2)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Nob_Ambient_03_03");
        AI_OUTPUT(SELF, OTHER, "DIA_Nob_Ambient_03_04");
    };
}

instance DIA_NOB_SELLMEALS(C_INFO) {
    NPC = 0xe12d;
    NR = 700;
    CONDITION = DIA_NOB_SELLMEALS_CONDITION;
    INFORMATION = DIA_NOB_SELLMEALS_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "I have everything you need. (Sell dishes)";
}

func int DIA_NOB_SELLMEALS_CONDITION() {
    if ((NEWSBOARD_LOGENTRY_SILBACH_NOB) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

var int NOB_MEALINSTANCE = 0;
var int NOB_MEALVALUE = 0;
var int NOB_CHECKMEAL_PICKLEDBEET = 0;
var int NOB_CHECKMEAL_BEERBREAD = 0;
var int NOB_CHECKMEAL_PUMPKINCOMPOTE = 0;
var int NOB_CHECKMEAL_HONEYCOOKIES = 0;
var int NOB_CHECKMEAL_FRIEDFISHSKINS = 0;
var int NOB_CHECKMEAL_SCAVENGERSHASHLIK = 0;
var int NOB_CHECKMEAL_ROASTEDINSECTS = 0;
var int NOB_CHECKMEAL_CABBAGESOUP = 0;
var int NOB_CHECKMEAL_MUSHROOMCOTLET = 0;
var int NOB_CHECKMEAL_DRYFRUITCOMPOTE = 0;
var int NOB_CHECKMEAL_FISHVINEGAR = 0;
var int NOB_CHECKMEAL_MANAPERMSOUP = 0;
var int NOB_CHECKMEAL_SWEETBUN = 0;
var int NOB_CHECKMEAL_MUSHROOMSOUP = 0;
var int NOB_CHECKMEAL_RIVERMIRTSOUP = 0;
var int NOB_CHECKMEAL_SPEEDHERBOYSTERS = 0;
var int NOB_CHECKMEAL_BOARSTEW = 0;
var int NOB_CHECKMEAL_MEATMISHMASH = 0;
var int NOB_CHECKMEAL_RATSTICK = 0;
var int NOB_CHECKMEAL_MULLEDWISP = 0;
var int NOB_CHECKMEAL_FISHCOTLET = 0;
var int NOB_CHECKMEAL_FISHFILLETPERM = 0;
var int NOB_CHECKMEAL_POORBROTH = 0;
var int NOB_CHECKMEAL_WEEDSTEW = 0;
var int NOB_CHECKMEAL_FISHPOT = 0;
var int NOB_CHECKMEAL_HERBSTEW = 0;
var int NOB_CHECKMEAL_MEATANDCHEESE = 0;
var int NOB_CHECKMEAL_MEATANDBREAD = 0;
var int NOB_CHECKMEAL_MUSHROOMSTEW = 0;
var int NOB_CHECKMEAL_POORAPPLEPIE = 0;
var int NOB_CHECKMEAL_POORPATE = 0;
var int NOB_CHECKMEAL_PICKLEDMUSHROOMS = 0;
var int NOB_CHECKMEAL_BREADSOUP = 0;
var int NOB_CHECKMEAL_SHEPARDROAST = 0;
var int NOB_CHECKMEAL_POOREGGS = 0;
var int NOB_CHECKMEAL_BEERFISH = 0;
var int NOB_CHECKMEAL_SPICYPIE = 0;
var int NOB_CHECKMEAL_VEGEPIE = 0;
var int NOB_CHECKMEAL_FATSTEW = 0;
var int NOB_CHECKMEAL_BEARSTEW = 0;
var int NOB_CHECKMEAL_HUNTERSPECIAL = 0;
var int NOB_CHECKMEAL_SPEEDSTEW = 0;
var int NOB_CHECKMEAL_SMOKEDHERBFISH = 0;
var int NOB_CHECKMEAL_MEATPACKS = 0;
var int NOB_CHECKMEAL_HERBMUSHROOMBREWING = 0;
var int NOB_CHECKMEAL_BERRYJAM = 0;
var int NOB_CHECKMEAL_STRENGTHJAM = 0;
var int NOB_CHECKMEAL_DEXDUMPLINGS = 0;
var int NOB_CHECKMEAL_SIMPLEOYSTERS = 0;
var int NOB_CHECKMEAL_BERRYCOMPOTE = 0;
var int NOB_CHECKMEAL_RASPBERRYDRINK = 0;
var int NOB_CHECKMEAL_GRAPEJUICE = 0;
var int NOB_CHECKMEAL_RASPBERRYTINCTURE = 0;
var int NOB_CHECKMEAL_EXOTICDESSERT = 0;
var int NOB_CHECKMEAL_APPLEPIE = 0;
var int NOB_CHECKMEAL_SPICYFISH = 0;
var int NOB_CHECKMEAL_HERBFISHSOUP = 0;
var int NOB_CHECKMEAL_TROLLSOUP = 0;
var int NOB_CHECKMEAL_MARTHASTEW = 0;
var int NOB_CHECKMEAL_MARTHASTEW_STR = 0;
func void DIA_NOB_SELLMEALS_CHOICES() {
    NOB_MEALINSTANCE = -(1);
    NOB_MEALVALUE = 0;
    INFO_CLEARCHOICES(0x15c21);
    INFO_ADDCHOICE(0x15c21, DIALOG_BACK, 0x15c62);
    if (((NPC_HASITEMS(OTHER, 0x8efc)) >= (1)) && ((NOB_CHECKMEAL_PICKLEDBEET) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_PICKLEDBEET, 0x15c65);
    };
    if (((NPC_HASITEMS(OTHER, 0x8efe)) >= (1)) && ((NOB_CHECKMEAL_BEERBREAD) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_BEERBREAD, 0x15c66);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f00)) >= (1)) && ((NOB_CHECKMEAL_PUMPKINCOMPOTE) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_PUMPKINCOMPOTE, 0x15c67);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f02)) >= (1)) && ((NOB_CHECKMEAL_HONEYCOOKIES) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_HONEYCOOKIES, 0x15c68);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f04)) >= (1)) && ((NOB_CHECKMEAL_FRIEDFISHSKINS) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_FRIEDFISHSKINS, 0x15c69);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f06)) >= (1)) && ((NOB_CHECKMEAL_SCAVENGERSHASHLIK) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_SCAVENGERSHASHLIK, 0x15c6a);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f08)) >= (1)) && ((NOB_CHECKMEAL_ROASTEDINSECTS) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_ROASTEDINSECTS, 0x15c6b);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f0a)) >= (1)) && ((NOB_CHECKMEAL_CABBAGESOUP) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_CABBAGESOUP, 0x15c6c);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f0e)) >= (1)) && ((NOB_CHECKMEAL_MUSHROOMCOTLET) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_MUSHROOMCOTLET, 0x15c6d);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f10)) >= (1)) && ((NOB_CHECKMEAL_DRYFRUITCOMPOTE) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_DRYFRUITCOMPOTE, 0x15c6e);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f12)) >= (1)) && ((NOB_CHECKMEAL_FISHVINEGAR) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_FISHVINEGAR, 0x15c6f);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f17)) >= (1)) && ((NOB_CHECKMEAL_SWEETBUN) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_SWEETBUN, 0x15c71);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f19)) >= (1)) && ((NOB_CHECKMEAL_MUSHROOMSOUP) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_MUSHROOMSOUP, 0x15c72);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f1b)) >= (1)) && ((NOB_CHECKMEAL_RIVERMIRTSOUP) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_RIVERMIRTSOUP, 0x15c73);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f1d)) >= (1)) && ((NOB_CHECKMEAL_SPEEDHERBOYSTERS) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_SPEEDHERBOYSTERS, 0x15c75);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f1f)) >= (1)) && ((NOB_CHECKMEAL_BOARSTEW) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_BOARSTEW, 0x15c76);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f21)) >= (1)) && ((NOB_CHECKMEAL_MEATMISHMASH) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_MEATMISHMASH, 0x15c77);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f23)) >= (1)) && ((NOB_CHECKMEAL_RATSTICK) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_RATSTICK, 0x15c78);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f25)) >= (1)) && ((NOB_CHECKMEAL_MULLEDWISP) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_MULLEDWISP, 0x15c79);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f27)) >= (1)) && ((NOB_CHECKMEAL_FISHCOTLET) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_FISHCOTLET, 0x15c7a);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f2c)) >= (1)) && ((NOB_CHECKMEAL_POORBROTH) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_POORBROTH, 0x15c7c);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f7f)) >= (1)) && ((NOB_CHECKMEAL_WEEDSTEW) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_WEEDSTEW, 0x15c74);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f2e)) >= (1)) && ((NOB_CHECKMEAL_FISHPOT) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_FISHPOT, 0x15c7d);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f30)) >= (1)) && ((NOB_CHECKMEAL_HERBSTEW) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_HERBSTEW, 0x15c7e);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f32)) >= (1)) && ((NOB_CHECKMEAL_MEATANDCHEESE) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_MEATANDCHEESE, 0x15c7f);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f34)) >= (1)) && ((NOB_CHECKMEAL_MEATANDBREAD) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_MEATANDBREAD, 0x15c80);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f36)) >= (1)) && ((NOB_CHECKMEAL_MUSHROOMSTEW) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_MUSHROOMSTEW, 0x15c81);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f38)) >= (1)) && ((NOB_CHECKMEAL_POORAPPLEPIE) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_POORAPPLEPIE, 0x15c82);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f3a)) >= (1)) && ((NOB_CHECKMEAL_POORPATE) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_POORPATE, 0x15c83);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f3c)) >= (1)) && ((NOB_CHECKMEAL_PICKLEDMUSHROOMS) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_PICKLEDMUSHROOMS, 0x15c84);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f3e)) >= (1)) && ((NOB_CHECKMEAL_BREADSOUP) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_BREADSOUP, 0x15c85);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f40)) >= (1)) && ((NOB_CHECKMEAL_SHEPARDROAST) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_SHEPARDROAST, 0x15c86);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f42)) >= (1)) && ((NOB_CHECKMEAL_POOREGGS) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_POOREGGS, 0x15c87);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f44)) >= (1)) && ((NOB_CHECKMEAL_BEERFISH) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_BEERFISH, 0x15c88);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f46)) >= (1)) && ((NOB_CHECKMEAL_SPICYPIE) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_SPICYPIE, 0x15c89);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f48)) >= (1)) && ((NOB_CHECKMEAL_VEGEPIE) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_VEGEPIE, 0x15c8a);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f4c)) >= (1)) && ((NOB_CHECKMEAL_BEARSTEW) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_BEARSTEW, 0x15c8c);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f4a)) >= (1)) && ((NOB_CHECKMEAL_FATSTEW) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_FATSTEW, 0x15c8b);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f4e)) >= (1)) && ((NOB_CHECKMEAL_HUNTERSPECIAL) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_HUNTERSPECIAL, 0x15c8d);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f50)) >= (1)) && ((NOB_CHECKMEAL_SPEEDSTEW) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_SPEEDSTEW, 0x15c8e);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f52)) >= (1)) && ((NOB_CHECKMEAL_SMOKEDHERBFISH) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_SMOKEDHERBFISH, 0x15c8f);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f54)) >= (1)) && ((NOB_CHECKMEAL_MEATPACKS) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_MEATPACKS, 0x15c90);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f56)) >= (1)) && ((NOB_CHECKMEAL_HERBMUSHROOMBREWING) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_HERBMUSHROOMBREWING, 0x15c91);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f58)) >= (1)) && ((NOB_CHECKMEAL_BERRYJAM) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_BERRYJAM, 0x15c92);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f5e)) >= (1)) && ((NOB_CHECKMEAL_SIMPLEOYSTERS) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_SIMPLEOYSTERS, 0x15c95);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f60)) >= (1)) && ((NOB_CHECKMEAL_BERRYCOMPOTE) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_BERRYCOMPOTE, 0x15c96);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f62)) >= (1)) && ((NOB_CHECKMEAL_RASPBERRYDRINK) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_RASPBERRYDRINK, 0x15c97);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f64)) >= (1)) && ((NOB_CHECKMEAL_GRAPEJUICE) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_GRAPEJUICE, 0x15c98);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f66)) >= (1)) && ((NOB_CHECKMEAL_RASPBERRYTINCTURE) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_RASPBERRYTINCTURE, 0x15c99);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f68)) >= (1)) && ((NOB_CHECKMEAL_EXOTICDESSERT) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_EXOTICDESSERT, 0x15c9a);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f6a)) >= (1)) && ((NOB_CHECKMEAL_APPLEPIE) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_APPLEPIE, 0x15c9b);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f6c)) >= (1)) && ((NOB_CHECKMEAL_SPICYFISH) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_SPICYFISH, 0x15c9c);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f6e)) >= (1)) && ((NOB_CHECKMEAL_HERBFISHSOUP) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_HERBFISHSOUP, 0x15c9d);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f7d)) >= (1)) && ((NOB_CHECKMEAL_MARTHASTEW) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_MARTHASTEW, 0x15c9f);
    };
    if (((NPC_HASITEMS(OTHER, 0x8f82)) >= (1)) && ((NOB_CHECKMEAL_MARTHASTEW_STR) == (FALSE))) {
        INFO_ADDCHOICE(0x15c21, MEALNAME_MARTHASTEW_STR, 0x15ca0);
    };
}

func void DIA_NOB_SELLMEALS_BACK() {
    INFO_CLEARCHOICES(0x15c21);
}

func void DIA_NOB_SELLMEALS_INFO() {
    B_SAY(OTHER, SELF, "$MARVIN_GiveItem3");
    DIA_NOB_SELLMEALS_CHOICES();
}

func void DIA_NOB_SELLMEALS_GIVEGOLD() {
    if ((NPC_HASITEMS(OTHER, NOB_MEALINSTANCE)) >= (1)) {
        NPC_REMOVEINVITEMS(SELF, NOB_MEALINSTANCE, 1);
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        B_GIVEINVITEMS(OTHER, SELF, NOB_MEALINSTANCE, 1);
        B_SAY(SELF, OTHER, "$REWARD_CALM");
        AI_RESETFACEANI(SELF);
        CREATEINVITEMS(SELF, 0x859b, NOB_MEALVALUE);
        B_GIVEINVITEMS(SELF, OTHER, 0x859b, NOB_MEALVALUE);
        DIA_NOB_SELLMEALS_CHOICES();
    };
    B_SAY(SELF, OTHER, "$NOITEMS");
    DIA_NOB_SELLMEALS_CHOICES();
}

func void DIA_NOB_SELLMEALS_PICKLEDBEET() {
    NOB_MEALINSTANCE = 0x8efc;
    NOB_MEALVALUE = VALUE_PICKLEDBEET;
    NOB_CHECKMEAL_PICKLEDBEET = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_BEERBREAD() {
    NOB_MEALINSTANCE = 0x8efe;
    NOB_MEALVALUE = VALUE_BEERBREAD;
    NOB_CHECKMEAL_BEERBREAD = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_PUMPKINCOMPOTE() {
    NOB_MEALINSTANCE = 0x8f00;
    NOB_MEALVALUE = VALUE_PUMPKINCOMPOTE;
    NOB_CHECKMEAL_PUMPKINCOMPOTE = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_HONEYCOOKIES() {
    NOB_MEALINSTANCE = 0x8f02;
    NOB_MEALVALUE = VALUE_HONEYCOOKIES;
    NOB_CHECKMEAL_HONEYCOOKIES = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_FRIEDFISHSKINS() {
    NOB_MEALINSTANCE = 0x8f04;
    NOB_MEALVALUE = VALUE_FRIEDFISHSKINS;
    NOB_CHECKMEAL_FRIEDFISHSKINS = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_SCAVENGERSHASHLIK() {
    NOB_MEALINSTANCE = 0x8f06;
    NOB_MEALVALUE = VALUE_SCAVENGERSHASHLIK;
    NOB_CHECKMEAL_SCAVENGERSHASHLIK = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_ROASTEDINSECTS() {
    NOB_MEALINSTANCE = 0x8f08;
    NOB_MEALVALUE = VALUE_ROASTEDINSECTS;
    NOB_CHECKMEAL_ROASTEDINSECTS = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_CABBAGESOUP() {
    NOB_MEALINSTANCE = 0x8f0a;
    NOB_MEALVALUE = VALUE_CABBAGESOUP;
    NOB_CHECKMEAL_CABBAGESOUP = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_MUSHROOMCOTLET() {
    NOB_MEALINSTANCE = 0x8f0e;
    NOB_MEALVALUE = VALUE_MUSHROOMCOTLET;
    NOB_CHECKMEAL_MUSHROOMCOTLET = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_DRYFRUITCOMPOTE() {
    NOB_MEALINSTANCE = 0x8f10;
    NOB_MEALVALUE = VALUE_DRYFRUITCOMPOTE;
    NOB_CHECKMEAL_DRYFRUITCOMPOTE = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_FISHVINEGAR() {
    NOB_MEALINSTANCE = 0x8f12;
    NOB_MEALVALUE = VALUE_FISHVINEGAR;
    NOB_CHECKMEAL_FISHVINEGAR = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_MANAPERMSOUP() {
    NOB_MEALINSTANCE = 0x8f14;
    NOB_MEALVALUE = VALUE_MANAPERMSOUP;
    NOB_CHECKMEAL_MANAPERMSOUP = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_SWEETBUN() {
    NOB_MEALINSTANCE = 0x8f17;
    NOB_MEALVALUE = VALUE_SWEETBUN;
    NOB_CHECKMEAL_SWEETBUN = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_MUSHROOMSOUP() {
    NOB_MEALINSTANCE = 0x8f19;
    NOB_MEALVALUE = VALUE_MUSHROOMSOUP;
    NOB_CHECKMEAL_MUSHROOMSOUP = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_RIVERMIRTSOUP() {
    NOB_MEALINSTANCE = 0x8f1b;
    NOB_MEALVALUE = VALUE_RIVERMIRTSOUP;
    NOB_CHECKMEAL_RIVERMIRTSOUP = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_WEEDSTEW() {
    NOB_MEALINSTANCE = 0x8f7f;
    NOB_MEALVALUE = VALUE_WEEDSTEW;
    NOB_CHECKMEAL_WEEDSTEW = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_SPEEDHERBOYSTERS() {
    NOB_MEALINSTANCE = 0x8f1d;
    NOB_MEALVALUE = VALUE_SPEEDHERBOYSTERS;
    NOB_CHECKMEAL_SPEEDHERBOYSTERS = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_BOARSTEW() {
    NOB_MEALINSTANCE = 0x8f1f;
    NOB_MEALVALUE = VALUE_BOARSTEW;
    NOB_CHECKMEAL_BOARSTEW = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_MEATMISHMASH() {
    NOB_MEALINSTANCE = 0x8f21;
    NOB_MEALVALUE = VALUE_MEATMISHMASH;
    NOB_CHECKMEAL_MEATMISHMASH = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_RATSTICK() {
    NOB_MEALINSTANCE = 0x8f23;
    NOB_MEALVALUE = VALUE_RATSTICK;
    NOB_CHECKMEAL_RATSTICK = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_MULLEDWISP() {
    NOB_MEALINSTANCE = 0x8f25;
    NOB_MEALVALUE = VALUE_MULLEDWISP;
    NOB_CHECKMEAL_MULLEDWISP = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_FISHCOTLET() {
    NOB_MEALINSTANCE = 0x8f27;
    NOB_MEALVALUE = VALUE_FISHCOTLET;
    NOB_CHECKMEAL_FISHCOTLET = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_FISHFILLETPERM() {
    NOB_MEALINSTANCE = 0x8f29;
    NOB_MEALVALUE = VALUE_FISHFILLETPERM;
    NOB_CHECKMEAL_FISHFILLETPERM = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_POORBROTH() {
    NOB_MEALINSTANCE = 0x8f2c;
    NOB_MEALVALUE = VALUE_POORBROTH;
    NOB_CHECKMEAL_POORBROTH = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_FISHPOT() {
    NOB_MEALINSTANCE = 0x8f2e;
    NOB_MEALVALUE = VALUE_FISHPOT;
    NOB_CHECKMEAL_FISHPOT = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_HERBSTEW() {
    NOB_MEALINSTANCE = 0x8f30;
    NOB_MEALVALUE = VALUE_HERBSTEW;
    NOB_CHECKMEAL_HERBSTEW = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_MEATANDCHEESE() {
    NOB_MEALINSTANCE = 0x8f32;
    NOB_MEALVALUE = VALUE_MEATANDCHEESE;
    NOB_CHECKMEAL_MEATANDCHEESE = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_MEATANDBREAD() {
    NOB_MEALINSTANCE = 0x8f34;
    NOB_MEALVALUE = VALUE_MEATANDBREAD;
    NOB_CHECKMEAL_MEATANDBREAD = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_MUSHROOMSTEW() {
    NOB_MEALINSTANCE = 0x8f36;
    NOB_MEALVALUE = VALUE_MUSHROOMSTEW;
    NOB_CHECKMEAL_MUSHROOMSTEW = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_POORAPPLEPIE() {
    NOB_MEALINSTANCE = 0x8f38;
    NOB_MEALVALUE = VALUE_POORAPPLEPIE;
    NOB_CHECKMEAL_POORAPPLEPIE = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_POORPATE() {
    NOB_MEALINSTANCE = 0x8f3a;
    NOB_MEALVALUE = VALUE_POORPATE;
    NOB_CHECKMEAL_POORPATE = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_PICKLEDMUSHROOMS() {
    NOB_MEALINSTANCE = 0x8f3c;
    NOB_MEALVALUE = VALUE_PICKLEDMUSHROOMS;
    NOB_CHECKMEAL_PICKLEDMUSHROOMS = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_BREADSOUP() {
    NOB_MEALINSTANCE = 0x8f3e;
    NOB_MEALVALUE = VALUE_BREADSOUP;
    NOB_CHECKMEAL_BREADSOUP = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_SHEPARDROAST() {
    NOB_MEALINSTANCE = 0x8f40;
    NOB_MEALVALUE = VALUE_SHEPARDROAST;
    NOB_CHECKMEAL_SHEPARDROAST = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_POOREGGS() {
    NOB_MEALINSTANCE = 0x8f42;
    NOB_MEALVALUE = VALUE_POOREGGS;
    NOB_CHECKMEAL_POOREGGS = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_BEERFISH() {
    NOB_MEALINSTANCE = 0x8f44;
    NOB_MEALVALUE = VALUE_BEERFISH;
    NOB_CHECKMEAL_BEERFISH = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_SPICYPIE() {
    NOB_MEALINSTANCE = 0x8f46;
    NOB_MEALVALUE = VALUE_SPICYPIE;
    NOB_CHECKMEAL_SPICYPIE = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_VEGEPIE() {
    NOB_MEALINSTANCE = 0x8f48;
    NOB_MEALVALUE = VALUE_VEGEPIE;
    NOB_CHECKMEAL_VEGEPIE = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_FATSTEW() {
    NOB_MEALINSTANCE = 0x8f4a;
    NOB_MEALVALUE = VALUE_FATSTEW;
    NOB_CHECKMEAL_FATSTEW = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_BEARSTEW() {
    NOB_MEALINSTANCE = 0x8f4c;
    NOB_MEALVALUE = VALUE_BEARSTEW;
    NOB_CHECKMEAL_BEARSTEW = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_HUNTERSPECIAL() {
    NOB_MEALINSTANCE = 0x8f4e;
    NOB_MEALVALUE = VALUE_HUNTERSPECIAL;
    NOB_CHECKMEAL_HUNTERSPECIAL = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_SPEEDSTEW() {
    NOB_MEALINSTANCE = 0x8f50;
    NOB_MEALVALUE = VALUE_SPEEDSTEW;
    NOB_CHECKMEAL_SPEEDSTEW = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_SMOKEDHERBFISH() {
    NOB_MEALINSTANCE = 0x8f52;
    NOB_MEALVALUE = VALUE_SMOKEDHERBFISH;
    NOB_CHECKMEAL_SMOKEDHERBFISH = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_MEATPACKS() {
    NOB_MEALINSTANCE = 0x8f54;
    NOB_MEALVALUE = VALUE_MEATPACKS;
    NOB_CHECKMEAL_MEATPACKS = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_HERBMUSHROOMBREWING() {
    NOB_MEALINSTANCE = 0x8f56;
    NOB_MEALVALUE = VALUE_HERBMUSHROOMBREWING;
    NOB_CHECKMEAL_HERBMUSHROOMBREWING = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_BERRYJAM() {
    NOB_MEALINSTANCE = 0x8f58;
    NOB_MEALVALUE = VALUE_BERRYJAM;
    NOB_CHECKMEAL_BERRYJAM = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_STRENGTHJAM() {
    NOB_MEALINSTANCE = 0x8f5a;
    NOB_MEALVALUE = VALUE_STRENGTHJAM;
    NOB_CHECKMEAL_STRENGTHJAM = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_DEXDUMPLINGS() {
    NOB_MEALINSTANCE = 0x8f5c;
    NOB_MEALVALUE = VALUE_DEXDUMPLINGS;
    NOB_CHECKMEAL_DEXDUMPLINGS = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_SIMPLEOYSTERS() {
    NOB_MEALINSTANCE = 0x8f5e;
    NOB_MEALVALUE = VALUE_SIMPLEOYSTERS;
    NOB_CHECKMEAL_SIMPLEOYSTERS = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_BERRYCOMPOTE() {
    NOB_MEALINSTANCE = 0x8f60;
    NOB_MEALVALUE = VALUE_BERRYCOMPOTE;
    NOB_CHECKMEAL_BERRYCOMPOTE = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_RASPBERRYDRINK() {
    NOB_MEALINSTANCE = 0x8f62;
    NOB_MEALVALUE = VALUE_RASPBERRYDRINK;
    NOB_CHECKMEAL_RASPBERRYDRINK = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_GRAPEJUICE() {
    NOB_MEALINSTANCE = 0x8f64;
    NOB_MEALVALUE = VALUE_GRAPEJUICE;
    NOB_CHECKMEAL_GRAPEJUICE = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_RASPBERRYTINCTURE() {
    NOB_MEALINSTANCE = 0x8f66;
    NOB_MEALVALUE = VALUE_RASPBERRYTINCTURE;
    NOB_CHECKMEAL_RASPBERRYTINCTURE = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_EXOTICDESSERT() {
    NOB_MEALINSTANCE = 0x8f68;
    NOB_MEALVALUE = VALUE_EXOTICDESSERT;
    NOB_CHECKMEAL_EXOTICDESSERT = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_APPLEPIE() {
    NOB_MEALINSTANCE = 0x8f6a;
    NOB_MEALVALUE = VALUE_APPLEPIE;
    NOB_CHECKMEAL_APPLEPIE = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_SPICYFISH() {
    NOB_MEALINSTANCE = 0x8f6c;
    NOB_MEALVALUE = VALUE_SPICYFISH;
    NOB_CHECKMEAL_SPICYFISH = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_HERBFISHSOUP() {
    NOB_MEALINSTANCE = 0x8f6e;
    NOB_MEALVALUE = VALUE_HERBFISHSOUP;
    NOB_CHECKMEAL_HERBFISHSOUP = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_TROLLSOUP() {
    NOB_MEALINSTANCE = 0x8f70;
    NOB_MEALVALUE = VALUE_TROLLSOUP;
    NOB_CHECKMEAL_TROLLSOUP = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_MARTHASTEW() {
    NOB_MEALINSTANCE = 0x8f7d;
    NOB_MEALVALUE = (VALUE_MARTHASTEW) * (2);
    NOB_CHECKMEAL_MARTHASTEW = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

func void DIA_NOB_SELLMEALS_MARTHASTEW_STR() {
    NOB_MEALINSTANCE = 0x8f82;
    NOB_MEALVALUE = (VALUE_MARTHASTEW) * (15);
    NOB_CHECKMEAL_MARTHASTEW_STR = TRUE;
    DIA_NOB_SELLMEALS_GIVEGOLD();
}

instance DIA_NOB_PICKPOCKET(C_INFO) {
    NPC = 0xe12d;
    NR = 900;
    CONDITION = DIA_NOB_PICKPOCKET_CONDITION;
    INFORMATION = DIA_NOB_PICKPOCKET_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = PICKPOCKET_40_FEMALE;
}

func int DIA_NOB_PICKPOCKET_CONDITION() {
    if (((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) && ((SELF.AIVAR[6]) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_NOB_PICKPOCKET_INFO() {
    INFO_CLEARCHOICES(0x15ca1);
    INFO_ADDCHOICE(0x15ca1, DIALOG_BACK, 0x15ca5);
    INFO_ADDCHOICE(0x15ca1, DIALOG_PICKPOCKET, 0x15ca4);
}

func void DIA_NOB_PICKPOCKET_DOIT() {
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) {
        CREATEINVITEMS(SELF, 0x8e4b, 2);
        B_GIVEINVITEMS(SELF, OTHER, 0x8e4b, 2);
        B_PICKPOCKET_AMBIENT_TIER_1();
        SELF.AIVAR[6] = TRUE;
        INFO_CLEARCHOICES(0x15ca1);
    };
    AI_PLAYANI(HERO, T_CANNOTTAKE);
    PRINTSCREEN(PRINT_CANTPICKPOCKETTHISPERSON, -(1), -(1), FONT_SCREEN, 4);
    INFO_CLEARCHOICES(0x15ca1);
}

func void DIA_NOB_PICKPOCKET_BACK() {
    INFO_CLEARCHOICES(0x15ca1);
}

