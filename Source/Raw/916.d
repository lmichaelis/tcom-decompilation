var int STANBODY_ANIMRESET = 0;
func void STANBODY_S1() {
    HER = HLP_GETNPC(0xc3ab);
    if ((HLP_GETINSTANCEID(SELF)) == (HLP_GETINSTANCEID(HER))) {
        STANBODY_ANIMRESET = FALSE;
        SELF.AIVAR[4] = TRUE;
        PLAYER_MOBSI_PRODUCTION = MOBSI_STANBODY;
        AI_PROCESSINFOS(HER);
    };
}

instance STANBODY_S1.HER(C_NPC)
func int PC_STANBODY_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_STANBODY)) && (NPC_KNOWSINFO(OTHER, 0x14910))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

instance PC_STANBODY_AUTOEND(C_INFO) {
    NPC = 0xc3ab;
    NR = 999;
    CONDITION = PC_STANBODY_AUTOEND_CONDITION;
    INFORMATION = PC_STANBODY_AUTOEND_INFO;
    PERMANENT = TRUE;
    IMPORTANT = TRUE;
}

func int PC_STANBODY_AUTOEND_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_STANBODY)) && (!(NPC_KNOWSINFO(OTHER, 0x14910)))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_STANBODY_AUTOEND_INFO() {
    B_ENDPRODUCTIONDIALOG();
}

instance PC_STANBODY_END(C_INFO) {
    NPC = 0xc3ab;
    NR = 999;
    CONDITION = PC_STANBODY_CONDITION;
    INFORMATION = PC_STANBODY_END_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDINSPECTION;
}

func void PC_STANBODY_END_INFO() {
    if ((STANBODY_ANIMRESET) == (TRUE)) {
        AI_PLAYANI(OTHER, "T_CHESTSMALL_S0_2_STAND");
    };
    B_ENDPRODUCTIONDIALOG();
}

instance PC_STANBODY_CHECKBODY(C_INFO) {
    NPC = 0xc3ab;
    CONDITION = PC_STANBODY_CONDITION;
    INFORMATION = PC_STANBODY_CHECKBODY_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = DIALOG_CHECKCORPSE;
}

func void PC_STANBODY_CHECKBODY_INFO() {
    STANBODY_ANIMRESET = TRUE;
    AI_PLAYANI(OTHER, "T_CHESTSMALL_S0_2_STAND");
    AI_PLAYANI(OTHER, T_PLUNDER);
    AI_OUTPUT(OTHER, SELF, "DIA_StanBody_CheckBody_15_01");
    AI_OUTPUT(OTHER, SELF, "DIA_StanBody_CheckBody_15_02");
    AI_PLAYANI(OTHER, "T_CHESTSMALL_STAND_2_S0");
    B_LOGENTRY(TOPIC_Q303, LOG_Q303_CHECKSTANBODY);
}

instance PC_STANBODY_CHECKTHROAT(C_INFO) {
    NPC = 0xc3ab;
    CONDITION = PC_STANBODY_CONDITION;
    INFORMATION = PC_STANBODY_CHECKTHROAT_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = DIALOG_CHECKGULLET;
}

func void PC_STANBODY_CHECKTHROAT_INFO() {
    STANBODY_ANIMRESET = TRUE;
    AI_PLAYANI(OTHER, "T_CHESTSMALL_S0_2_STAND");
    AI_PLAYANI(OTHER, T_PLUNDER);
    AI_OUTPUT(OTHER, SELF, "DIA_StanBody_CheckThroat_15_01");
    AI_OUTPUT(OTHER, SELF, "DIA_StanBody_CheckThroat_15_02");
    AI_OUTPUT(OTHER, SELF, "DIA_StanBody_CheckThroat_15_03");
    AI_PLAYANI(OTHER, "T_CHESTSMALL_STAND_2_S0");
    B_LOGENTRY(TOPIC_Q303, LOG_Q303_CHECKSTANTHROAT);
}

instance PC_STANBODY_CHECKPOCKETS(C_INFO) {
    NPC = 0xc3ab;
    CONDITION = PC_STANBODY_CONDITION;
    INFORMATION = PC_STANBODY_CHECKPOCKETS_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = DIALOG_CHECKPOCKET;
}

func void PC_STANBODY_CHECKPOCKETS_INFO() {
    STANBODY_ANIMRESET = TRUE;
    AI_PLAYANI(OTHER, "T_CHESTSMALL_S0_2_STAND");
    AI_PLAYANI(OTHER, T_PLUNDER);
    AI_OUTPUT(OTHER, SELF, "DIA_StanBody_CheckPockets_15_01");
    AI_OUTPUT(OTHER, SELF, "DIA_StanBody_CheckPockets_15_02");
    AI_PLAYANI(OTHER, "T_CHESTSMALL_STAND_2_S0");
}

instance PC_STANBODY_CHECKFLOOR(C_INFO) {
    NPC = 0xc3ab;
    CONDITION = PC_STANBODY_CHECKFLOOR_CONDITION;
    INFORMATION = PC_STANBODY_CHECKFLOOR_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = DIALOG_CHECKFLOORUNDERBODY;
}

func int PC_STANBODY_CHECKFLOOR_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_STANBODY)) && (NPC_KNOWSINFO(OTHER, 0xbf23))) && (NPC_KNOWSINFO(OTHER, 0xbf21))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_STANBODY_CHECKFLOOR_INFO() {
    STANBODY_ANIMRESET = TRUE;
    AI_PLAYANI(OTHER, "T_CHESTSMALL_S0_2_STAND");
    AI_PLAYANI(OTHER, T_PLUNDER);
    AI_OUTPUT(OTHER, SELF, "DIA_StanBody_CheckFloor_15_01");
    AI_OUTPUT(OTHER, SELF, "DIA_StanBody_CheckFloor_15_02");
    AI_PLAYANI(OTHER, "T_CHESTSMALL_STAND_2_S0");
}

instance PC_STANBODY_CHECKFOOD(C_INFO) {
    NPC = 0xc3ab;
    CONDITION = PC_STANBODY_CHECKFOOD_CONDITION;
    INFORMATION = PC_STANBODY_CHECKFOOD_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = DIALOG_SMELLSTEW;
}

func int PC_STANBODY_CHECKFOOD_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_STANBODY)) && (NPC_KNOWSINFO(OTHER, 0xbf25))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_STANBODY_CHECKFOOD_INFO() {
    Q303_TAKESTANSTEW = TRUE;
    CHANGEVOBCOLLISION("KM_OSCARINN_STEW", FALSE, FALSE, FALSE, FALSE);
    STANBODY_ANIMRESET = TRUE;
    AI_PLAYANI(OTHER, "T_CHESTSMALL_S0_2_STAND");
    B_MARVIN_USESTANSTEW_START();
    AI_PLAYANI(OTHER, "R_CHECKSTEW_SNIFF");
    B_MARVIN_USESTANSTEW_END();
    AI_OUTPUT(OTHER, SELF, "DIA_StanBody_CheckFood_15_01");
    AI_OUTPUT(OTHER, SELF, "DIA_StanBody_CheckFood_15_02");
    AI_OUTPUT(OTHER, SELF, "DIA_StanBody_CheckFood_15_03");
    CREATEINVITEMS(SELF, 0x9237, 1);
    B_LOGENTRY(TOPIC_Q303, LOG_Q303_CHECKSTANSTEW);
    if (NPC_KNOWSINFO(OTHER, 0x14623)) {
        B_LOGENTRY(TOPIC_Q303, LOG_Q303_STEWANDHIERRO);
    };
    B_LOGENTRY(TOPIC_Q303, LOG_Q303_STEWANDWHO);
    NPC_REMOVEINVITEMS(HERO, 0x8d21, NPC_HASITEMS(HERO, 0x8d21));
    B_ENDPRODUCTIONDIALOG();
}

