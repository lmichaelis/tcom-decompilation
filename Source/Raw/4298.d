var int BASTIAN_SQ202_INFORMATION = 0;
instance DIA_BASTIAN_EXIT(C_INFO) {
    NPC = 0xe0d1;
    NR = 999;
    CONDITION = DIA_BASTIAN_EXIT_CONDITION;
    INFORMATION = DIA_BASTIAN_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_BASTIAN_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_BASTIAN_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_BASTIAN_TRADE(C_INFO) {
    NPC = 0xe0d1;
    NR = 870;
    CONDITION = DIA_BASTIAN_TRADE_CONDITION;
    INFORMATION = DIA_BASTIAN_TRADE_INFO;
    PERMANENT = TRUE;
    TRADE = TRUE;
    DESCRIPTION = "Show me your wares.";
}

func int DIA_BASTIAN_TRADE_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x15898)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BASTIAN_TRADE_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_Trade_15_01");
    TRADER_LOGENTRY_BASTIAN();
    B_GIVETRADEINV(SELF);
}

instance DIA_BASTIAN_HELLO(C_INFO) {
    NPC = 0xe0d1;
    NR = 1;
    CONDITION = DIA_BASTIAN_HELLO_CONDITION;
    INFORMATION = DIA_BASTIAN_HELLO_INFO;
    DESCRIPTION = "Do you get visitors here often?";
}

func int DIA_BASTIAN_HELLO_CONDITION() {
    return TRUE;
}

func void DIA_BASTIAN_HELLO_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_Hello_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_Hello_704_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_Hello_704_02");
}

instance DIA_BASTIAN_BEER(C_INFO) {
    NPC = 0xe0d1;
    NR = 1;
    CONDITION = DIA_BASTIAN_BEER_CONDITION;
    INFORMATION = DIA_BASTIAN_BEER_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Do you have anything to drink?";
}

func int DIA_BASTIAN_BEER_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 0x15898)) && ((KAPITEL) < (3))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BASTIAN_BEER_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_Beer_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_Beer_704_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_Beer_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_Beer_704_03");
    CREATEINVITEMS(SELF, 0x84c0, 1);
    B_GIVEINVITEMS(SELF, OTHER, 0x84c0, 1);
}

instance DIA_BASTIAN_AMBIENT2(C_INFO) {
    NPC = 0xe0d1;
    NR = 850;
    CONDITION = DIA_BASTIAN_AMBIENT2_CONDITION;
    INFORMATION = DIA_BASTIAN_AMBIENT2_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "How's business going?";
}

func int DIA_BASTIAN_AMBIENT2_CONDITION() {
    if (((NPC_ISINSTATE(SELF, 0xf09f)) && (NPC_KNOWSINFO(OTHER, 0x15898))) && ((KAPITEL) < (3))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BASTIAN_AMBIENT2_INFO() {
    NPC_INITAMBIENTS(SELF, 1);
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_Ambient2_15_00");
    if ((NPC_GETLASTAMBIENT(SELF)) == (1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Bastian_Ambient2_13_01");
        AI_OUTPUT(SELF, OTHER, "DIA_Bastian_Ambient2_13_02");
    };
}

instance DIA_BASTIAN_Q104_JORNHELP(C_INFO) {
    NPC = 0xe0d1;
    NR = 1;
    CONDITION = DIA_BASTIAN_Q104_JORNHELP_CONDITION;
    INFORMATION = DIA_BASTIAN_Q104_JORNHELP_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "You got a job for my brother?";
}

func int DIA_BASTIAN_Q104_JORNHELP_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q104)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x15742))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BASTIAN_Q104_JORNHELP_INFO() {
    PRINTD("Jorn gotowy, naliczono punkt!");
    Q104_REFUGEESFORWORK = (Q104_REFUGEESFORWORK) + (1);
    if (((Q104_REFUGEESFORWORK) >= (3)) && ((Q104_REFUGEESENTRY) == (FALSE))) {
        AI_LOGENTRY(TOPIC_Q104, LOG_Q104_THATSENOUGH);
    };
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_Q104_JornHelp_15_01");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_Q104_JornHelp_704_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_Q104_JornHelp_704_03");
    AI_LOGENTRY(TOPIC_Q104, LOG_Q104_BASTIAN_JORNHELP);
    B_STARTOTHERROUTINE(NONE_1_JORN, "Q104_WORK");
    NPC_REFRESH(NONE_1_JORN);
    B_STARTOTHERROUTINE(BAU_701_KURT, START);
    NPC_REFRESH(BAU_701_KURT);
}

instance DIA_BASTIAN_SQ101_START(C_INFO) {
    NPC = 0xe0d1;
    NR = 1;
    CONDITION = DIA_BASTIAN_SQ101_START_CONDITION;
    INFORMATION = DIA_BASTIAN_SQ101_START_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Do you have any jobs for me?";
}

func int DIA_BASTIAN_SQ101_START_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x15898)) {
        if (((LOG_GETSTATUS(MIS_Q104)) == (LOG_SUCCESS)) || ((LOG_GETSTATUS(MIS_Q104)) == (LOG_RUNNING))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_BASTIAN_SQ101_START_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ101_Start_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ101_Start_704_07");
    B_STANDUP();
    AI_STARTFACEANI(SELF, S_THINK, 1, -(1));
    AI_PLAYANI(SELF, R_SCRATCHHEAD);
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ101_Start_704_19");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ101_Start_704_20");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ101_Start_704_21");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ101_Start_704_22");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ101_Start_704_23");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ101_Start_704_24");
    INFO_CLEARCHOICES(0x158a4);
    INFO_ADDCHOICE(0x158a4, "All right, that's all I needed to know.", 0x158aa);
    INFO_ADDCHOICE(0x158a4, "Where can I find the woodcutters' camp?", 0x158a7);
    INFO_ADDCHOICE(0x158a4, "What's the fastest way I can get to that tower?", 0x158a8);
    INFO_ADDCHOICE(0x158a4, "How much wood do you need?", 0x158a9);
}

func void DIA_BASTIAN_SQ101_START_WHEREISCAMP() {
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ101_Start_WhereIsCamp_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ101_Start_WhereIsCamp_704_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ101_Start_WhereIsCamp_704_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ101_Start_WhereIsCamp_704_04");
}

func void DIA_BASTIAN_SQ101_START_ROUTEFORTOWER() {
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ101_Start_RouteForTower_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ101_Start_RouteForTower_704_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ101_Start_RouteForTower_704_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ101_Start_RouteForTower_704_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ101_Start_RouteForTower_704_05");
}

func void DIA_BASTIAN_SQ101_START_HOWMUCHWOOD() {
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ101_Start_HowMuchWood_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ101_Start_HowMuchWood_704_02");
}

func void DIA_BASTIAN_SQ101_START_QUESTSTART() {
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ101_Start_QuestStart_15_01");
    if ((KAPITEL) <= (2)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ101_Start_QuestStart_704_02");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ101_Start_QuestStart_704_03");
    LOG_CREATETOPIC(TOPIC_SQ101, LOG_MISSION);
    LOG_SETSTATUS(_@(MIS_SQ101), TOPIC_SQ101, LOG_RUNNING);
    AI_LOGENTRY(TOPIC_SQ101, LOG_SQ101_START);
    INFO_CLEARCHOICES(0x158a4);
    SQ101_PREPARECORPSE();
    WLD_INSERTNPC(0xc610, "FP_ROAM_PART15_SQ101_SCAVENGER");
}

instance DIA_BASTIAN_SQ101_FINISH(C_INFO) {
    NPC = 0xe0d1;
    NR = 15;
    CONDITION = DIA_BASTIAN_SQ101_FINISH_CONDITION;
    INFORMATION = DIA_BASTIAN_SQ101_FINISH_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I managed to get the wood you asked for.";
}

func int DIA_BASTIAN_SQ101_FINISH_CONDITION() {
    if ((LOG_GETSTATUS(MIS_SQ101)) == (LOG_RUNNING)) {
        if (((NPC_HASITEMS(OTHER, 0x90c3)) >= (1)) || ((NPC_HASITEMS(OTHER, 0x90c5)) >= (1))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_BASTIAN_SQ101_FINISH_INFO() {
    MARVINCURRENTWOODPACK = NPC_HASITEMS(OTHER, 0x90c3);
    MARVINCURRENTWOODPACKCUTTERS = NPC_HASITEMS(OTHER, 0x90c5);
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ101_Finish_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ101_Finish_704_02");
    if (NPC_KNOWSINFO(OTHER, 0x15130)) {
        AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ101_Finish_15_03");
        AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ101_Finish_704_04");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ101_Finish_704_05");
    AI_LOGENTRY(TOPIC_SQ101, LOG_SQ101_FINISH);
    LOG_SETSTATUS(_@(MIS_SQ101), TOPIC_SQ101, LOG_SUCCESS);
    SQ101_PREPARECORPSE();
    SQ101_CALMDOWNGUARDS();
    if ((NPC_HASITEMS(OTHER, 0x90c3)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x90c3, MARVINCURRENTWOODPACK);
        NPC_REMOVEINVITEMS(SELF, 0x90c3, MARVINCURRENTWOODPACK);
    };
    if ((NPC_HASITEMS(OTHER, 0x90c5)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x90c5, MARVINCURRENTWOODPACKCUTTERS);
        NPC_REMOVEINVITEMS(SELF, 0x90c5, MARVINCURRENTWOODPACKCUTTERS);
    };
    MOB_CHANGEFOCUSNAME("SQ101_LEVER", "MOBNAME_NOTHING");
    B_GIVEPLAYERXP((XP_SQ101_BASTIANGOTWOOD) * ((MARVINCURRENTWOODPACK) + (MARVINCURRENTWOODPACKCUTTERS)));
    CREATEINVITEMS(SELF, 0x859b, (SQ101_BASTIANREWARD) * ((MARVINCURRENTWOODPACK) + (MARVINCURRENTWOODPACKCUTTERS)));
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, (SQ101_BASTIANREWARD) * ((MARVINCURRENTWOODPACK) + (MARVINCURRENTWOODPACKCUTTERS)));
    GIVEREPUTATION_SILBACH();
}

var int DIA_BASTIAN_SQ101_FINISH_INFO.MARVINCURRENTWOODPACK = 0;
var int DIA_BASTIAN_SQ101_FINISH_INFO.MARVINCURRENTWOODPACKCUTTERS = 0;
instance DIA_BASTIAN_SQ102_START(C_INFO) {
    NPC = 0xe0d1;
    NR = 7;
    CONDITION = DIA_BASTIAN_SQ102_START_CONDITION;
    INFORMATION = DIA_BASTIAN_SQ102_START_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Is there anything else to do?";
}

func int DIA_BASTIAN_SQ102_START_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 0x158a4)) && ((LOG_GETSTATUS(MIS_SQ101)) == (LOG_SUCCESS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BASTIAN_SQ102_START_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ102_Start_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ102_Start_704_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ102_Start_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ102_Start_704_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ102_Start_704_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ102_Start_704_06");
    INFO_CLEARCHOICES(0x158b0);
    INFO_ADDCHOICE(0x158b0, "Where can I find Otho?", 0x158b3);
    INFO_ADDCHOICE(0x158b0, "That's enough for me. I'll be back soon.", 0x158b4);
}

func void DIA_BASTIAN_SQ102_START_WHERE() {
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ102_Start_Where_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ102_Start_Where_704_02");
}

func void DIA_BASTIAN_SQ102_START_OKAY() {
    INFO_CLEARCHOICES(0x158b0);
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ102_Start_Okay_15_01");
    SQ102_SPAWNSHIT();
    LOG_CREATETOPIC(TOPIC_SQ102, LOG_MISSION);
    LOG_SETSTATUS(_@(MIS_SQ102), TOPIC_SQ102, LOG_RUNNING);
    AI_LOGENTRY(TOPIC_SQ102, LOG_SQ102_START);
}

instance DIA_BASTIAN_SQ102_FINISH_RASCO(C_INFO) {
    NPC = 0xe0d1;
    NR = 1;
    CONDITION = DIA_BASTIAN_SQ102_FINISH_RASCO_CONDITION;
    INFORMATION = DIA_BASTIAN_SQ102_FINISH_RASCO_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_BASTIAN_SQ102_FINISH_RASCO_CONDITION() {
    if ((NPC_ISINSTATE(SELF, 0xf09f)) && ((SQ102_HELPRASCOWITHSHIT) == (2))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void BASTIAN_SQ102_FINISH() {
    NPC_EXCHANGEROUTINE(NONE_11048_HENKER, START);
    if (NPC_KNOWSINFO(HERO, 0x15bf6)) {
        NPC_EXCHANGEROUTINE(BAU_729_NOB, RESERVED_CONST_STRING_64);
    };
    NPC_EXCHANGEROUTINE(BAU_729_NOB, START);
    LOG_SETSTATUS(_@(MIS_SQ102), TOPIC_SQ102, LOG_SUCCESS);
    GIVEREPUTATION_SILBACH();
}

func void DIA_BASTIAN_SQ102_FINISH_RASCO_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ102_Finish_Rasco_704_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ102_Finish_Rasco_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ102_Finish_Rasco_704_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ102_Finish_Rasco_704_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ102_Finish_Rasco_704_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ102_Finish_Rasco_704_06");
    if ((SQ213_LUTZ_CHANGERTNSILBACH) == (TRUE)) {
        B_STARTOTHERROUTINE(BAU_722_RASCO, "SQ410");
        NPC_REFRESH(BAU_722_RASCO);
    };
    B_STARTOTHERROUTINE(BAU_722_RASCO, START);
    NPC_REFRESH(BAU_722_RASCO);
    SQ102_RASCOBEDMOVER();
    AI_LOGENTRY(TOPIC_SQ102, LOG_SQ102_FINISH_RASCO);
    BASTIAN_SQ102_FINISH();
    B_GIVEPLAYERXP(XP_SQ102_FINISH_RASCO);
    CREATEINVITEMS(SELF, 0x859b, SQ102_BASTIANREWARD);
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, SQ102_BASTIANREWARD);
}

instance DIA_BASTIAN_SQ102_FINISH_OTH(C_INFO) {
    NPC = 0xe0d1;
    NR = 2;
    CONDITION = DIA_BASTIAN_SQ102_FINISH_OTH_CONDITION;
    INFORMATION = DIA_BASTIAN_SQ102_FINISH_OTH_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I helped the shepherd with his problem.";
}

func int DIA_BASTIAN_SQ102_FINISH_OTH_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x15bd5)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BASTIAN_SQ102_FINISH_OTH_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ102_Finish_Oth_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ102_Finish_Oth_704_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ102_Finish_Oth_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ102_Finish_Oth_704_04");
    AI_LOGENTRY(TOPIC_SQ102, LOG_SQ102_FINISH_OTH);
    BASTIAN_SQ102_FINISH();
    B_GIVEPLAYERXP(XP_SQ102_FINISH_OTH);
    CREATEINVITEMS(SELF, 0x859b, SQ102_BASTIANREWARD);
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, SQ102_BASTIANREWARD);
}

instance DIA_BASTIAN_WHEREISJORN(C_INFO) {
    NPC = 0xe0d1;
    NR = 20;
    CONDITION = DIA_BASTIAN_WHEREISJORN_CONDITION;
    INFORMATION = DIA_BASTIAN_WHEREISJORN_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Has anyone from outside the village looked in here lately?";
}

func int DIA_BASTIAN_WHEREISJORN_CONDITION() {
    if (((NPC_KNOWSINFO(OTHER, 0x1575a)) && ((LOG_GETSTATUS(MIS_GQ001)) == (LOG_RUNNING))) && (!(NPC_KNOWSINFO(OTHER, 0x1577f)))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BASTIAN_WHEREISJORN_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_WhereIsJorn_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_WhereIsJorn_704_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_WhereIsJorn_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_WhereIsJorn_704_04");
    INFO_CLEARCHOICES(0x158bc);
    INFO_ADDCHOICE(0x158bc, "Tell me more about this merchant.", 0x158bf);
    INFO_ADDCHOICE(0x158bc, "My brother's missing. Do you know anything about it?", 0x158c1);
}

func void DIA_BASTIAN_WHEREISJORN_WHO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_WhereIsJorn_Who_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_WhereIsJorn_Who_704_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_WhereIsJorn_Who_704_03");
    BASTIANTOLDABOUTFREDRIKSTRADE = TRUE;
    GQ001_BASTIANINFORMATIONJORN = (GQ001_BASTIANINFORMATIONJORN) + (1);
    if ((GQ001_BASTIANINFORMATIONJORN) >= (3)) {
        AI_OUTPUT(OTHER, SELF, "DIA_Bastian_WhereIsJorn_Who_15_04");
        INFO_CLEARCHOICES(0x158bc);
        AI_STOPPROCESSINFOS(SELF);
    };
    INFO_ADDCHOICE(0x158bc, "Where can I find her?", 0x158c0);
}

func void DIA_BASTIAN_WHEREISJORN_WHO_WHERE() {
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_WhereIsJorn_Where_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_WhereIsJorn_Where_704_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_WhereIsJorn_Where_704_03");
    GQ001_BASTIANINFORMATIONJORN = (GQ001_BASTIANINFORMATIONJORN) + (1);
    if ((GQ001_BASTIANINFORMATIONJORN) >= (3)) {
        AI_OUTPUT(OTHER, SELF, "DIA_Bastian_WhereIsJorn_Who_15_04");
        INFO_CLEARCHOICES(0x158bc);
        AI_STOPPROCESSINFOS(SELF);
    };
}

func void DIA_BASTIAN_WHEREISJORN_JORNLOST() {
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_WhereIsJorn_JornLost_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_WhereIsJorn_JornLost_704_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_WhereIsJorn_JornLost_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_WhereIsJorn_JornLost_704_04");
    GQ001_BASTIANINFORMATIONJORN = (GQ001_BASTIANINFORMATIONJORN) + (1);
    if ((GQ001_BASTIANINFORMATIONJORN) >= (3)) {
        AI_OUTPUT(OTHER, SELF, "DIA_Bastian_WhereIsJorn_Who_15_04");
        INFO_CLEARCHOICES(0x158bc);
        AI_STOPPROCESSINFOS(SELF);
    };
}

instance DIA_BASTIAN_FAQ001_SUNDER(C_INFO) {
    NPC = 0xe0d1;
    NR = 1;
    CONDITION = DIA_BASTIAN_FAQ001_SUNDER_CONDITION;
    INFORMATION = DIA_BASTIAN_FAQ001_SUNDER_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I need something to sober Sunder up. Any ideas?";
}

func int DIA_BASTIAN_FAQ001_SUNDER_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x116fc)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BASTIAN_FAQ001_SUNDER_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_FAQ001_Sunder_15_01");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_FAQ001_Sunder_704_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_FAQ001_Sunder_704_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_FAQ001_Sunder_704_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_FAQ001_Sunder_704_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_FAQ001_Sunder_704_06");
    AI_WAITTILLEND(OTHER, SELF);
    AI_WAITTILLEND(SELF, OTHER);
    AI_STOPLOOKAT(SELF);
    B_STANDUP();
    CREATEINVITEM(SELF, 0x8cbb);
    AI_USEITEMTOSTATE(SELF, 0x8cbb, 1);
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_FAQ001_Sunder_15_07");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_FAQ001_Sunder_704_08");
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_FAQ001_Sunder_15_09");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_FAQ001_Sunder_704_10");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_FAQ001_Sunder_704_11");
    AI_WAITTILLEND(OTHER, SELF);
    AI_WAITTILLEND(SELF, OTHER);
    AI_USEITEMTOSTATE(SELF, 0x8cbb, -(1));
    AI_LOOKATNPC(SELF, OTHER);
    CREATEINVITEMS(SELF, 0x913b, 1);
    B_GIVEINVITEMS(SELF, OTHER, 0x913b, 1);
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_FAQ001_Sunder_704_12");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_FAQ001_Sunder_704_13");
    AI_STOPLOOKAT(SELF);
}

instance DIA_BASTIAN_Q205(C_INFO) {
    NPC = 0xe0d1;
    NR = 1;
    CONDITION = DIA_BASTIAN_Q205_CONDITION;
    INFORMATION = DIA_BASTIAN_Q205_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Have you been visited by city guards lately?";
}

func int DIA_BASTIAN_Q205_CONDITION() {
    if ((LOG_GETSTATUS(MIS_Q205)) == (LOG_RUNNING)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BASTIAN_Q205_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_Q205_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_Q205_704_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_Q205_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_Q205_704_04");
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_Q205_15_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_Q205_704_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_Q205_704_07");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_Q205_704_08");
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_Q205_15_09");
    AI_LOGENTRY(TOPIC_Q205, LOG_Q205_BASTIAN);
}

instance DIA_BASTIAN_SQ202(C_INFO) {
    NPC = 0xe0d1;
    NR = 1;
    CONDITION = DIA_BASTIAN_SQ202_CONDITION;
    INFORMATION = DIA_BASTIAN_SQ202_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Have you seen Petra anywhere?";
}

func int DIA_BASTIAN_SQ202_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ202)) == (LOG_RUNNING)) && ((SQ202_FARMERKNOWFREDRIK) == (3))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BASTIAN_SQ202_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ202_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ202_704_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ202_704_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ202_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ202_704_05");
    INFO_CLEARCHOICES(0x158c8);
    INFO_ADDCHOICE(0x158c8, "Did she say anything?", 0x158cc);
    INFO_ADDCHOICE(0x158c8, "Which way did she run?", 0x158cd);
}

func void DIA_BASTIAN_SQ202_SOMETHING_NOIDEA() {
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ202_NoIdea_704_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ202_NoIdea_704_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ202_NoIdea_704_03");
    AI_LOGENTRY(TOPIC_SQ202, LOG_SQ202_FAILED_V4);
    LOG_SETSTATUS(_@(MIS_SQ202), TOPIC_SQ202, LOG_FAILED);
    B_STARTOTHERROUTINE(BAU_11012_FARMER, START);
    B_STARTOTHERROUTINE(MIL_707_HARRY, START);
    INFO_CLEARCHOICES(0x158c8);
}

func void DIA_BASTIAN_SQ202_SOMETHING() {
    BASTIAN_SQ202_INFORMATION = (BASTIAN_SQ202_INFORMATION) + (1);
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ202_Something_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ202_Something_704_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ202_Something_704_03");
    if ((BASTIAN_SQ202_INFORMATION) == (2)) {
        DIA_BASTIAN_SQ202_SOMETHING_NOIDEA();
    };
}

func void DIA_BASTIAN_SQ202_WHERE() {
    BASTIAN_SQ202_INFORMATION = (BASTIAN_SQ202_INFORMATION) + (1);
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ202_Where_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ202_Where_704_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ202_Where_704_03");
    if ((BASTIAN_SQ202_INFORMATION) == (2)) {
        DIA_BASTIAN_SQ202_SOMETHING_NOIDEA();
    };
}

instance DIA_BASTIAN_SQ213(C_INFO) {
    NPC = 0xe0d1;
    NR = 1;
    CONDITION = DIA_BASTIAN_SQ213_CONDITION;
    INFORMATION = DIA_BASTIAN_SQ213_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "You know how to impress a woman?";
}

func int DIA_BASTIAN_SQ213_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 0x15865)) && ((LOG_GETSTATUS(MIS_SQ213)) == (LOG_RUNNING))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BASTIAN_SQ213_INFO() {
    SQ213_BASTIANGOLD = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ213_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ213_704_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ213_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ213_704_04");
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ213_15_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ213_704_07");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ213_704_08");
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ213_15_09");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ213_704_10");
    if ((SQ213_VIKTORWAY) == (1)) {
        AI_LOGENTRY(TOPIC_SQ213, LOG_SQ213_BASTIANVICTORWAYV1);
    };
    AI_LOGENTRY(TOPIC_SQ213, LOG_SQ213_BASTIANVICTORWAYV2);
    INFO_CLEARCHOICES(0x158ce);
    INFO_ADDCHOICE(0x158ce, "I already know the place. What about the food?", 0x158d1);
    INFO_ADDCHOICE(0x158ce, "You were talking about wine. Which do you think would be best?", 0x158d4);
    INFO_ADDCHOICE(0x158ce, "Is music really necessary?", 0x158d5);
}

func void DIA_BASTIAN_SQ213_FOOD() {
    SQ213_BASTIANFOOD = TRUE;
    SQ213_BASTIANINFORMATION = (SQ213_BASTIANINFORMATION) + (1);
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ213_Food_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ213_Food_704_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ213_Food_704_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ213_Food_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ213_Food_704_05");
    if ((SQ213_BASTIANINFORMATION) == (3)) {
        AI_LOGENTRY(TOPIC_SQ213, LOG_SQ213_BASTIANINFOALL);
    };
    INFO_CLEARCHOICES(0x158ce);
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (MIST_BASTIAN_BASKETOFFOOD)) {
        INFO_ADDCHOICE(0x158ce, "Let it be. (Give 25 GP)", 0x158d2);
    };
    INFO_ADDCHOICE(0x158ce, "I don't have that much.", 0x158d3);
}

func void DIA_BASTIAN_SQ213_FOOD_GOLD() {
    SQ213_BASTIANGOLD = FALSE;
    SQ213_BASTIANBOUGHTFOOD = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ213_Gold_15_01");
    B_GIVEINVITEMS(OTHER, SELF, 0x859b, MIST_BASTIAN_BASKETOFFOOD);
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ213_Gold_704_02");
    INFO_CLEARCHOICES(0x158ce);
    AI_LOGENTRY(TOPIC_SQ213, LOG_SQ213_BASKETBUY);
}

func void DIA_BASTIAN_SQ213_FOOD_NOGOLD() {
    SQ213_BASTIANGOLD = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ213_NoGold_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ213_NoGold_704_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ213_NoGold_704_03");
    INFO_CLEARCHOICES(0x158ce);
}

func void DIA_BASTIAN_SQ213_VINE() {
    SQ213_BASTIANVINE = TRUE;
    SQ213_BASTIANINFORMATION = (SQ213_BASTIANINFORMATION) + (1);
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ213_Vine_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ213_Vine_704_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ213_Vine_704_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ213_Vine_704_04");
    AI_LOGENTRY(TOPIC_SQ213, LOG_SQ213_BASTIANALCOHOL);
    if ((SQ213_BASTIANINFORMATION) == (3)) {
        AI_LOGENTRY(TOPIC_SQ213, LOG_SQ213_BASTIANINFOALL);
    };
}

func void DIA_BASTIAN_SQ213_MUSIC() {
    SQ213_BASTIANMUSIC = TRUE;
    SQ213_BASTIANINFORMATION = (SQ213_BASTIANINFORMATION) + (1);
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ213_Music_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ213_Music_704_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ213_Music_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ213_Music_704_04");
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ213_Music_15_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ213_Music_704_06");
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ213_Music_15_07");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ213_Music_704_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ213_Music_704_09");
    AI_LOGENTRY(TOPIC_SQ213, LOG_SQ213_BASTIANINFOMUSIC);
    if ((SQ213_BASTIANINFORMATION) == (3)) {
        AI_LOGENTRY(TOPIC_SQ213, LOG_SQ213_BASTIANINFOALL);
    };
}

instance DIA_BASTIAN_TAKEGOLD(C_INFO) {
    NPC = 0xe0d1;
    NR = 2;
    CONDITION = DIA_BASTIAN_TAKEGOLD_CONDITION;
    INFORMATION = DIA_BASTIAN_TAKEGOLD_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Please, here is the money for the basket. (25 GP)";
}

func int DIA_BASTIAN_TAKEGOLD_CONDITION() {
    if ((((((NPC_HASITEMS(OTHER, 0x859b)) >= (MIST_BASTIAN_BASKETOFFOOD)) && (NPC_KNOWSINFO(OTHER, 0x158ce))) && ((LOG_GETSTATUS(MIS_SQ213)) == (LOG_RUNNING))) && ((SQ213_BASTIANGOLD) == (TRUE))) && ((SQ213_BASTIANBOUGHTFOOD) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BASTIAN_TAKEGOLD_INFO() {
    DIA_BASTIAN_SQ213_FOOD_GOLD();
}

instance DIA_BASTIAN_MUSICASK(C_INFO) {
    NPC = 0xe0d1;
    NR = 1;
    CONDITION = DIA_BASTIAN_MUSICASK_CONDITION;
    INFORMATION = DIA_BASTIAN_MUSICASK_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Is music really necessary?";
}

func int DIA_BASTIAN_MUSICASK_CONDITION() {
    if (((NPC_KNOWSINFO(OTHER, 0x158ce)) && ((LOG_GETSTATUS(MIS_SQ213)) == (LOG_RUNNING))) && ((SQ213_BASTIANMUSIC) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BASTIAN_MUSICASK_INFO() {
    DIA_BASTIAN_SQ213_MUSIC();
}

instance DIA_BASTIAN_VINEASK(C_INFO) {
    NPC = 0xe0d1;
    NR = 2;
    CONDITION = DIA_BASTIAN_VINEASK_CONDITION;
    INFORMATION = DIA_BASTIAN_VINEASK_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "You were talking about wine. Which do you think would be best?";
}

func int DIA_BASTIAN_VINEASK_CONDITION() {
    if (((NPC_KNOWSINFO(OTHER, 0x158ce)) && ((LOG_GETSTATUS(MIS_SQ213)) == (LOG_RUNNING))) && ((SQ213_BASTIANVINE) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BASTIAN_VINEASK_INFO() {
    DIA_BASTIAN_SQ213_VINE();
}

instance DIA_BASTIAN_SQ213FOODTAKE(C_INFO) {
    NPC = 0xe0d1;
    NR = 1;
    CONDITION = DIA_BASTIAN_SQ213FOODTAKE_CONDITION;
    INFORMATION = DIA_BASTIAN_SQ213FOODTAKE_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I came to pick up the food basket.";
}

func int DIA_BASTIAN_SQ213FOODTAKE_CONDITION() {
    if (((NPC_KNOWSINFO(OTHER, 0x10639)) && ((LOG_GETSTATUS(MIS_SQ213)) == (LOG_RUNNING))) && ((NPC_KNOWSINFO(OTHER, 0x10640)) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BASTIAN_SQ213FOODTAKE_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ213FoodTake_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ213FoodTake_704_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ213FoodTake_704_03");
    B_SAY(OTHER, SELF, "$MARVIN_Thanks2");
    CREATEINVITEMS(SELF, 0x922d, 1);
    B_GIVEINVITEMS(SELF, OTHER, 0x922d, 1);
    AI_LOGENTRY(TOPIC_SQ213, LOG_SQ213_BASKETREADY);
}

instance DIA_BASTIAN_SQ410_MARTHA(C_INFO) {
    NPC = 0xe0d1;
    NR = 1;
    CONDITION = DIA_BASTIAN_SQ410_MARTHA_CONDITION;
    INFORMATION = DIA_BASTIAN_SQ410_MARTHA_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Martha's in the mood as usual!";
}

func int DIA_BASTIAN_SQ410_MARTHA_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_SQ410)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x10654))) && (NPC_KNOWSINFO(OTHER, 0x15879))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BASTIAN_SQ410_MARTHA_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ410_Martha_15_01");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_STARTFACEANI(OTHER, S_SURPRISE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ410_Martha_704_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ410_Martha_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ410_Martha_704_04");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

instance DIA_BASTIAN_SQ410_VICTOR(C_INFO) {
    NPC = 0xe0d1;
    NR = 1;
    CONDITION = DIA_BASTIAN_SQ410_VICTOR_CONDITION;
    INFORMATION = DIA_BASTIAN_SQ410_VICTOR_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "And what does Viktor have to do with this?";
}

func int DIA_BASTIAN_SQ410_VICTOR_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ410)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x158e2))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BASTIAN_SQ410_VICTOR_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ410_Victor_15_01");
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ410_Victor_704_02");
    AI_STARTFACEANI(OTHER, S_SERIOUS, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ410_Victor_15_04");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ410_Victor_704_05");
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ410_Victor_15_06");
    AI_STARTFACEANI(SELF, S_SURPRISE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ410_Victor_704_07");
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ410_Victor_15_08");
    AI_RESETFACEANI(SELF);
    AI_LOGENTRY(TOPIC_SQ410, LOG_SQ410_BASTIAN_VIKTORSAD);
}

instance DIA_BASTIAN_SQ410_LUTZGONE(C_INFO) {
    NPC = 0xe0d1;
    NR = 1;
    CONDITION = DIA_BASTIAN_SQ410_LUTZGONE_CONDITION;
    INFORMATION = DIA_BASTIAN_SQ410_LUTZGONE_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Lutz has left Silbach.";
}

func int DIA_BASTIAN_SQ410_LUTZGONE_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ410)) == (LOG_SUCCESS)) && (NPC_KNOWSINFO(OTHER, 0x10660))) {
        return TRUE;
    };
    if (NPC_KNOWSINFO(OTHER, 0x10664)) {
        if (((LOG_GETSTATUS(MIS_SQ410)) == (LOG_RUNNING)) || ((LOG_GETSTATUS(MIS_SQ410)) == (LOG_SUCCESS))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_BASTIAN_SQ410_LUTZGONE_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ410_LutzGone_15_01");
    if ((SQ410_ENDING_V2) >= (1)) {
        AI_STARTFACEANI(SELF, S_SURPRISE, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ410_LutzGone_704_02");
    };
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ410_LutzGone_704_03");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ410_LutzGone_704_04");
    if ((SQ410_ENDING_V2) >= (1)) {
        AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ410_LutzGone_15_05");
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ410_LutzGone_704_06");
    };
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ410_LutzGone_15_07");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ410_LutzGone_704_08");
    AI_RESETFACEANI(SELF);
}

instance DIA_BASTIAN_SQ416_EVERYONE(C_INFO) {
    NPC = 0xe0d1;
    NR = 1;
    CONDITION = DIA_BASTIAN_SQ416_EVERYONE_CONDITION;
    INFORMATION = DIA_BASTIAN_SQ416_EVERYONE_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_BASTIAN_SQ416_EVERYONE_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ416)) == (LOG_RUNNING)) && ((SQ416_RAMSEYHOUSEMEETING) == (4))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BASTIAN_SQ416_EVERYONE_INFO() {
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ416_Everyone_704_01");
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_BASTIAN_SQ416_LATE(C_INFO) {
    NPC = 0xe0d1;
    NR = 1;
    CONDITION = DIA_BASTIAN_SQ416_LATE_CONDITION;
    INFORMATION = DIA_BASTIAN_SQ416_LATE_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_BASTIAN_SQ416_LATE_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ416)) == (LOG_RUNNING)) && ((SQ416_HUNTERSSLEEP) == (2))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BASTIAN_SQ416_LATE_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ416_Late_704_01");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ416_Late_704_02");
    AI_LOGENTRY(TOPIC_SQ416, LOG_SQ416_BASTIAN_LATE);
    NPC_EXCHANGEROUTINE(SELF, START);
}

instance DIA_BASTIAN_SQ416_FREEDRINK(C_INFO) {
    NPC = 0xe0d1;
    NR = 1;
    CONDITION = DIA_BASTIAN_SQ416_FREEDRINK_CONDITION;
    INFORMATION = DIA_BASTIAN_SQ416_FREEDRINK_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Ramsey said I could drink at his expense.";
}

func int DIA_BASTIAN_SQ416_FREEDRINK_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ416)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x10cff))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BASTIAN_SQ416_FREEDRINK_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Bastian_SQ416_FreeDrink_15_01");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_SQ416_FreeDrink_704_02");
    AI_STOPPROCESSINFOS(SELF);
    AI_FUNCTION(SELF, 0xf84c);
}

instance DIA_BASTIAN_Q505_HELP(C_INFO) {
    NPC = 0xe0d1;
    NR = 1;
    CONDITION = DIA_BASTIAN_Q505_HELP_CONDITION;
    INFORMATION = DIA_BASTIAN_Q505_HELP_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Can I buy some provisions from you?";
}

func int DIA_BASTIAN_Q505_HELP_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q505)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x13974))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BASTIAN_Q505_HELP_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    B_SAY(OTHER, SELF, "$Q505_MARVIN_BUYFOOD");
    if (((LOG_GETSTATUS(MIS_SQ101)) == (LOG_SUCCESS)) && ((LOG_GETSTATUS(MIS_SQ102)) == (LOG_SUCCESS))) {
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Bastian_Q505_Help_03_02");
        AI_OUTPUT(SELF, OTHER, "DIA_Bastian_Q505_Help_03_03");
        CREATEINVITEMS(SELF, 0x92c1, 1);
    };
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Bastian_Q505_Help_03_04");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

instance DIA_BASTIAN_PICKPOCKET(C_INFO) {
    NPC = 0xe0d1;
    NR = 900;
    CONDITION = DIA_BASTIAN_PICKPOCKET_CONDITION;
    INFORMATION = DIA_BASTIAN_PICKPOCKET_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = PICKPOCKET_40;
}

func int DIA_BASTIAN_PICKPOCKET_CONDITION() {
    if (((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) && ((SELF.AIVAR[6]) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BASTIAN_PICKPOCKET_INFO() {
    INFO_CLEARCHOICES(0x158f7);
    INFO_ADDCHOICE(0x158f7, DIALOG_BACK, 0x158fb);
    INFO_ADDCHOICE(0x158f7, DIALOG_PICKPOCKET, 0x158fa);
}

func void DIA_BASTIAN_PICKPOCKET_DOIT() {
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) {
        CREATEINVITEMS(SELF, 0x8c92, 1);
        B_GIVEINVITEMS(SELF, OTHER, 0x8c92, 1);
        B_PICKPOCKET_AMBIENT_TIER_1();
        SELF.AIVAR[6] = TRUE;
        INFO_CLEARCHOICES(0x158f7);
    };
    AI_PLAYANI(HERO, T_CANNOTTAKE);
    PRINTSCREEN(PRINT_CANTPICKPOCKETTHISPERSON, -(1), -(1), FONT_SCREEN, 4);
    INFO_CLEARCHOICES(0x158f7);
}

func void DIA_BASTIAN_PICKPOCKET_BACK() {
    INFO_CLEARCHOICES(0x158f7);
}

instance DIA_BASTIAN_SELLEGGS(C_INFO) {
    NPC = 0xe0d1;
    NR = 890;
    CONDITION = DIA_BASTIAN_SELLEGGS_CONDITION;
    INFORMATION = DIA_BASTIAN_SELLEGGS_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "I have everything you need. (Sell the scavenger eggs)";
}

var int BASTIANNEEDEGG_ENOUGH = 0;
var int BASTIANNEEDEGG_COUNT = 0;
func int DIA_BASTIAN_SELLEGGS_CONDITION() {
    if (((SILBACH_BASTIANEGGS) == (TRUE)) && ((BASTIANNEEDEGG_ENOUGH) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

var int BASTIAN_EGGINSTANCE = 0;
var int BASTIAN_EGGVALUE = 0;
func void DIA_BASTIAN_SELLEGGS_CHOICES() {
    BASTIAN_EGGINSTANCE = 0x8e5f;
    BASTIAN_EGGVALUE = VALUE_SCAVENGEREGG;
    INFO_CLEARCHOICES(0x158fc);
    MAX = NPC_HASITEMS(HERO, BASTIAN_EGGINSTANCE);
    ALL_STRING = CS4(DIALOG_ALL, " (", I2S(MAX), ")");
    INFO_ADDCHOICE(0x158fc, ALL_STRING, 0x15907);
    INFO_ADDCHOICE(0x158fc, CHOICE_NUMBER_5, 0x15909);
    INFO_ADDCHOICE(0x158fc, CHOICE_NUMBER_1, 0x1590b);
    INFO_ADDCHOICE(0x158fc, DIALOG_BACK, 0x15906);
}

var int DIA_BASTIAN_SELLEGGS_CHOICES.MAX = 0;
var string DIA_BASTIAN_SELLEGGS_CHOICES.ALL_STRING = "";
func void DIA_BASTIAN_SELLEGGS_INFO() {
    B_SAY(OTHER, SELF, "$MARVIN_GiveItem3");
    DIA_BASTIAN_SELLEGGS_CHOICES();
}

func void DIA_BASTIAN_SELLEGGS_BACK() {
    BASTIAN_EGGINSTANCE = -(1);
    BASTIAN_EGGVALUE = 0;
    INFO_CLEARCHOICES(0x158fc);
}

func void DIA_BASTIAN_SELLEGGS_ALL() {
    if ((NPC_HASITEMS(OTHER, BASTIAN_EGGINSTANCE)) >= (1)) {
        MAX = NPC_HASITEMS(HERO, BASTIAN_EGGINSTANCE);
        B_GIVEINVITEMS(OTHER, SELF, BASTIAN_EGGINSTANCE, MAX);
        CREATEINVITEMS(SELF, 0x859b, (MAX) * (BASTIAN_EGGVALUE));
        B_GIVEINVITEMS(SELF, OTHER, 0x859b, (MAX) * (BASTIAN_EGGVALUE));
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        B_SAY(SELF, OTHER, "$REWARD_CALM");
        AI_RESETFACEANI(SELF);
        if ((BASTIAN_EGGINSTANCE) == (0x8e5f)) {
            BASTIANNEEDEGG_COUNT = (BASTIANNEEDEGG_COUNT) + (MAX);
            if ((BASTIANNEEDEGG_COUNT) >= (12)) {
                BASTIANNEEDEGG_ENOUGH = TRUE;
                if ((BASTIANNEEDEGG_COUNT) > (12)) {
                    AI_FUNCTION(SELF, 0x1590c);
                };
            };
        };
        if (((BASTIAN_EGGINSTANCE) == (0x8e5f)) && ((BASTIANNEEDEGG_ENOUGH) == (FALSE))) {
            DIA_BASTIAN_SELLEGGS_CHOICES();
        } else {
            DIA_BASTIAN_SELLEGGS_BACK();
        } else {
            /* set_instance(0) */;
        };
    };
    DIA_BASTIAN_SELLEGGS_BACK();
    B_SAY(SELF, OTHER, "$NOITEMS");
}

var int DIA_BASTIAN_SELLEGGS_ALL.MAX = 0;
func void DIA_BASTIAN_SELLEGGS_5() {
    if ((NPC_HASITEMS(OTHER, BASTIAN_EGGINSTANCE)) >= (5)) {
        B_GIVEINVITEMS(OTHER, SELF, BASTIAN_EGGINSTANCE, 5);
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        B_SAY(SELF, OTHER, "$REWARD_CALM");
        AI_RESETFACEANI(SELF);
        CREATEINVITEMS(SELF, 0x859b, (5) * (BASTIAN_EGGVALUE));
        if ((BASTIAN_EGGINSTANCE) == (0x8e5f)) {
            BASTIANNEEDEGG_COUNT = (BASTIANNEEDEGG_COUNT) + (5);
            if ((BASTIANNEEDEGG_COUNT) >= (12)) {
                BASTIANNEEDEGG_ENOUGH = TRUE;
                if ((BASTIANNEEDEGG_COUNT) > (12)) {
                    AI_FUNCTION(SELF, 0x1590c);
                };
            };
        };
        if (((BASTIAN_EGGINSTANCE) == (0x8e5f)) && ((BASTIANNEEDEGG_ENOUGH) == (FALSE))) {
            DIA_BASTIAN_SELLEGGS_CHOICES();
        } else {
            DIA_BASTIAN_SELLEGGS_BACK();
        } else {
            /* set_instance(0) */;
        };
    };
    if (((NPC_HASITEMS(OTHER, BASTIAN_EGGINSTANCE)) >= (1)) && ((NPC_HASITEMS(OTHER, BASTIAN_EGGINSTANCE)) < (5))) {
        MAX = NPC_HASITEMS(HERO, BASTIAN_EGGINSTANCE);
        B_GIVEINVITEMS(OTHER, SELF, BASTIAN_EGGINSTANCE, MAX);
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        B_SAY(SELF, OTHER, "$REWARD_CALM");
        AI_RESETFACEANI(SELF);
        CREATEINVITEMS(SELF, 0x859b, (MAX) * (BASTIAN_EGGVALUE));
        if ((BASTIAN_EGGINSTANCE) == (0x8e5f)) {
            BASTIANNEEDEGG_COUNT = (BASTIANNEEDEGG_COUNT) + (MAX);
            if ((BASTIANNEEDEGG_COUNT) >= (12)) {
                BASTIANNEEDEGG_ENOUGH = TRUE;
                if ((BASTIANNEEDEGG_COUNT) > (12)) {
                    AI_FUNCTION(SELF, 0x1590c);
                };
            };
        };
        if (((BASTIAN_EGGINSTANCE) == (0x8e5f)) && ((BASTIANNEEDEGG_ENOUGH) == (FALSE))) {
            DIA_BASTIAN_SELLEGGS_CHOICES();
        } else {
            DIA_BASTIAN_SELLEGGS_BACK();
        } else {
            /* set_instance(0) */;
        };
    };
    if ((NPC_HASITEMS(OTHER, BASTIAN_EGGINSTANCE)) == (0)) {
        DIA_BASTIAN_SELLEGGS_BACK();
        B_SAY(SELF, OTHER, "$NOITEMS");
    };
}

var int DIA_BASTIAN_SELLEGGS_5.MAX = 0;
func void DIA_BASTIAN_SELLEGGS_1() {
    if ((NPC_HASITEMS(OTHER, BASTIAN_EGGINSTANCE)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, BASTIAN_EGGINSTANCE, 1);
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        B_SAY(SELF, OTHER, "$REWARD_CALM");
        AI_RESETFACEANI(SELF);
        CREATEINVITEMS(SELF, 0x859b, BASTIAN_EGGVALUE);
        if ((BASTIAN_EGGINSTANCE) == (0x8e5f)) {
            BASTIANNEEDEGG_COUNT = (BASTIANNEEDEGG_COUNT) + (1);
            if ((BASTIANNEEDEGG_COUNT) >= (12)) {
                BASTIANNEEDEGG_ENOUGH = TRUE;
                if ((BASTIANNEEDEGG_COUNT) > (12)) {
                    AI_FUNCTION(SELF, 0x1590c);
                };
            };
        };
        if (((BASTIAN_EGGINSTANCE) == (0x8e5f)) && ((BASTIANNEEDEGG_ENOUGH) == (FALSE))) {
            DIA_BASTIAN_SELLEGGS_CHOICES();
        } else {
            DIA_BASTIAN_SELLEGGS_BACK();
        } else {
            /* set_instance(0) */;
        };
    };
    if ((NPC_HASITEMS(OTHER, BASTIAN_EGGINSTANCE)) == (0)) {
        DIA_BASTIAN_SELLEGGS_BACK();
        B_SAY(SELF, OTHER, "$NOITEMS");
    };
}

func void BASTIAN_GIVEBACKSTUFF_EGGS() {
    NPC_REMOVEINVITEMS(BAU_704_BASTIAN, 0x859b, (VALUE_SCAVENGEREGG) * ((BASTIANNEEDEGG_COUNT) - (12)));
    PRINTSCREENS(PRINT_BASTIANPLANTS, -(1), -(1), FONT_SCREENSMALL, 4);
    B_GIVEINVITEMS(HERO, BAU_704_BASTIAN, 0x859b, (VALUE_SCAVENGEREGG) * ((BASTIANNEEDEGG_COUNT) - (12)));
}

