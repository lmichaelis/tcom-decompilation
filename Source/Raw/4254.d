instance DIA_RIORDIAN_VZ_EXIT(C_INFO) {
    NPC = 0xe700;
    NR = 999;
    CONDITION = DIA_RIORDIAN_VZ_EXIT_CONDITION;
    INFORMATION = DIA_RIORDIAN_VZ_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_RIORDIAN_VZ_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_RIORDIAN_VZ_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_RIORDIAN_Q514_HELLO(C_INFO) {
    NPC = 0xe700;
    NR = 1;
    CONDITION = DIA_RIORDIAN_Q514_HELLO_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q514_HELLO_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_RIORDIAN_Q514_HELLO_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_Q514)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x15441))) && ((Q514_CRAWLER_FINISH) == (0))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_Q514_HELLO_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Hello_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Hello_03_02");
    AI_LOGENTRY(TOPIC_Q514, LOG_Q514_RIORDIAN_CAMPREADY);
}

instance DIA_RIORDIAN_Q514_IDEA(C_INFO) {
    NPC = 0xe700;
    NR = 1;
    CONDITION = DIA_RIORDIAN_Q514_IDEA_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q514_IDEA_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Any ideas on where to start looking for a Peacemaker?";
}

func int DIA_RIORDIAN_Q514_IDEA_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_Q514)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x152e4))) && ((Q514_CRAWLER_FINISH) == (0))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_Q514_IDEA_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q514_Idea_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Idea_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Idea_03_03");
}

instance DIA_RIORDIAN_Q514_FINALLY(C_INFO) {
    NPC = 0xe700;
    NR = 1;
    CONDITION = DIA_RIORDIAN_Q514_FINALLY_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q514_FINALLY_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_RIORDIAN_Q514_FINALLY_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q514)) == (LOG_RUNNING)) && ((Q514_CRAWLER_FINISH) == (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_Q514_FINALLY_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Finally_03_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q514_Finally_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Finally_03_03");
    INFO_CLEARCHOICES(0x152ea);
    INFO_ADDCHOICE(0x152ea, "It won't be necessary. They're dead.", 0x152f6);
    INFO_ADDCHOICE(0x152ea, "I've met them, but I'm the only one who made it back here.", 0x152f7);
}

func void DIA_RIORDIAN_Q514_FINALLY_END() {
    if ((Q514_TELLRIORDIANFOUNDSWORD) == (1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Finally_End_03_01");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Finally_No_03_03");
    AI_STOPLOOKAT(SELF);
    INFO_CLEARCHOICES(0x152ea);
}

var int RIORDIANVZ_WHODIES_KESSEL = 0;
var int RIORDIANVZ_WHODIES_MARKUS = 0;
var int RIORDIANVZ_WHODIES_DACK = 0;
var int RIORDIANVZ_WHODIES_COUNT = 0;
func void DIA_RIORDIAN_Q514_FINALLY_SWORD() {
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Finally_Sword_03_01");
    INFO_CLEARCHOICES(0x152ea);
    if ((RIORDIANVZ_WHODIES_KESSEL) == (FALSE)) {
        INFO_ADDCHOICE(0x152ea, "I'm sorry, Riordan. The tomb was empty.", 0x152fd);
    };
    INFO_ADDCHOICE(0x152ea, "Not only were the legends of death and suffering true. I found the Peacemaker.", 0x152fe);
}

func void DIA_RIORDIAN_Q514_FINALLY_NEXT2() {
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Finally_Next2_03_01");
    if ((RIORDIANVZ_WHODIES_COUNT) >= (1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Finally_Next2_03_02");
    };
    DIA_RIORDIAN_Q514_FINALLY_SWORD();
}

func void DIA_RIORDIAN_Q514_FINALLY_CHOICES() {
    INFO_CLEARCHOICES(0x152ea);
    if ((((RIORDIANVZ_WHODIES_KESSEL) == (TRUE)) || ((RIORDIANVZ_WHODIES_MARKUS) == (TRUE))) || ((RIORDIANVZ_WHODIES_DACK) == (TRUE))) {
        INFO_ADDCHOICE(0x152ea, "I haven't met anyone else.", 0x152fc);
    };
    if ((RIORDIANVZ_WHODIES_DACK) == (FALSE)) {
        INFO_ADDCHOICE(0x152ea, "Duster and I were trying to get through the crawler tunnels.", 0x152fb);
    };
    if ((RIORDIANVZ_WHODIES_MARKUS) == (FALSE)) {
        INFO_ADDCHOICE(0x152ea, "Markus throw himself at the heap of gold in the vault.", 0x152fa);
    };
    if ((RIORDIANVZ_WHODIES_KESSEL) == (FALSE)) {
        INFO_ADDCHOICE(0x152ea, "Kessel lost his temper.", 0x152f9);
    };
}

func void DIA_RIORDIAN_Q514_FINALLY_ONLYME_NEXT() {
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Finally_Next_03_01");
    DIA_RIORDIAN_Q514_FINALLY_CHOICES();
}

func void DIA_RIORDIAN_Q514_FINALLY_DEAD() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q514_Finally_Dead_15_01");
    DIA_RIORDIAN_Q514_FINALLY_ONLYME_NEXT();
}

func void DIA_RIORDIAN_Q514_FINALLY_ONLYME() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q514_Finally_OnlyMe_15_01");
    DIA_RIORDIAN_Q514_FINALLY_ONLYME_NEXT();
}

func void DIA_RIORDIAN_Q514_FINALLY_ANYMORE() {
    RIORDIANVZ_WHODIES_COUNT = (RIORDIANVZ_WHODIES_COUNT) + (1);
    if ((RIORDIANVZ_WHODIES_COUNT) == (1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Finally_AnyMore_03_01");
    };
    if ((RIORDIANVZ_WHODIES_COUNT) == (2)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Finally_AnyMore_03_02");
    };
    if ((RIORDIANVZ_WHODIES_COUNT) == (3)) {
        DIA_RIORDIAN_Q514_FINALLY_NEXT2();
    };
    DIA_RIORDIAN_Q514_FINALLY_CHOICES();
}

func void DIA_RIORDIAN_Q514_FINALLY_ONLYME_NEXT_KESSEL() {
    RIORDIANVZ_WHODIES_KESSEL = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q514_Finally_Kessel_15_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q514_Finally_Kessel_15_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q514_Finally_Kessel_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Finally_Kessel_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Finally_Kessel_03_05");
    DIA_RIORDIAN_Q514_FINALLY_ANYMORE();
}

func void DIA_RIORDIAN_Q514_FINALLY_ONLYME_NEXT_MARKUS() {
    RIORDIANVZ_WHODIES_MARKUS = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q514_Finally_Markus_15_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q514_Finally_Markus_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Finally_Markus_03_03");
    DIA_RIORDIAN_Q514_FINALLY_ANYMORE();
}

func void DIA_RIORDIAN_Q514_FINALLY_ONLYME_NEXT_DACK() {
    RIORDIANVZ_WHODIES_DACK = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q514_Finally_Dack_15_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q514_Finally_Dack_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Finally_Dack_03_03");
    DIA_RIORDIAN_Q514_FINALLY_ANYMORE();
}

func void DIA_RIORDIAN_Q514_FINALLY_ONLYME_NEXT_ALL() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q514_Finally_All_15_01");
    DIA_RIORDIAN_Q514_FINALLY_NEXT2();
}

func void DIA_RIORDIAN_Q514_FINALLY_ONLYME_NEXT_ALL_NEXT2_SWORD_NO() {
    Q514_TELLRIORDIANFOUNDSWORD = 2;
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q514_Finally_No_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Finally_No_03_02");
    AI_LOGENTRY(TOPIC_Q514, LOG_Q514_RIORDIAN_SWORD_LIE);
    DIA_RIORDIAN_Q514_FINALLY_END();
}

func void DIA_RIORDIAN_Q514_FINALLY_ONLYME_NEXT_ALL_NEXT2_SWORD_YES() {
    Q514_TELLRIORDIANFOUNDSWORD = 1;
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q514_Finally_Yes_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Finally_Yes_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Finally_Yes_03_03");
    INFO_CLEARCHOICES(0x152ea);
    INFO_ADDCHOICE(0x152ea, "(Don't show)", 0x15300);
    if ((NPC_HASITEMS(OTHER, 0x9a2a)) >= (1)) {
        INFO_ADDCHOICE(0x152ea, "(Show)", 0x152ff);
    };
}

func void DIA_RIORDIAN_Q514_FINALLY_ONLYME_NEXT_ALL_NEXT2_SWORD_YES_SHOW() {
    AI_SETWALKMODE(SELF, NPC_RUN);
    AI_STOPLOOKAT(SELF);
    B_GIVEINVITEMS(OTHER, SELF, 0x9a2a, 1);
    CREATEINVITEMS(SELF, 0x8cf2, 1);
    AI_USEITEMTOSTATE(SELF, 0x8cf2, 1);
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q514_Finally_Show_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Finally_Show_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Finally_Show_03_03");
    AI_USEITEMTOSTATE(SELF, 0x8cf2, -(1));
    B_GIVEINVITEMS(SELF, OTHER, 0x9a2a, 1);
    AI_LOOKATNPC(SELF, OTHER);
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Finally_Show_03_04");
    DIA_RIORDIAN_Q514_FINALLY_END();
}

func void DIA_RIORDIAN_Q514_FINALLY_ONLYME_NEXT_ALL_NEXT2_SWORD_YES_DONTSHOW() {
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Finally_DontShow_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Finally_DontShow_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Finally_DontShow_03_03");
    DIA_RIORDIAN_Q514_FINALLY_END();
}

instance DIA_RIORDIAN_Q514_WHATHAPPEND(C_INFO) {
    NPC = 0xe700;
    NR = 1;
    CONDITION = DIA_RIORDIAN_Q514_WHATHAPPEND_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q514_WHATHAPPEND_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "What happened in my absence?";
}

func int DIA_RIORDIAN_Q514_WHATHAPPEND_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q514)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x152ea))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_Q514_WHATHAPPEND_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q514_WhatHappend_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_WhatHappend_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_WhatHappend_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_WhatHappend_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_WhatHappend_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_WhatHappend_03_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_WhatHappend_03_07");
    if ((Q514_TELLRIORDIANFOUNDSWORD) == (1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_WhatHappend_03_09");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_WhatHappend_03_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_WhatHappend_03_10");
}

instance DIA_RIORDIAN_Q514_GOLEMS(C_INFO) {
    NPC = 0xe700;
    NR = 2;
    CONDITION = DIA_RIORDIAN_Q514_GOLEMS_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q514_GOLEMS_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "In the west wing, boulders lying on the ground suddenly came to life.";
}

func int DIA_RIORDIAN_Q514_GOLEMS_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_Q514)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x152ea))) && (!(NPC_KNOWSINFO(OTHER, 0x15307)))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_Q514_GOLEMS_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q514_Golems_15_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q514_Golems_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Golems_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Golems_03_04");
}

instance DIA_RIORDIAN_Q514_PREPARELEAVE(C_INFO) {
    NPC = 0xe700;
    NR = 1;
    CONDITION = DIA_RIORDIAN_Q514_PREPARELEAVE_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q514_PREPARELEAVE_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Let's go. There's no time to waste.";
}

func int DIA_RIORDIAN_Q514_PREPARELEAVE_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q514)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x15301))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_Q514_PREPARELEAVE_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q514_PrepareLeave_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_PrepareLeave_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_PrepareLeave_03_03");
    AI_LOGENTRY(TOPIC_Q514, LOG_Q514_RIORDIAN_SWORD_FINISH);
    AI_STOPPROCESSINFOS(SELF);
    NPC_EXCHANGEROUTINE(SELF, "CAMP");
    B_STARTOTHERROUTINE(SLD_13784_VARIN_VZ, RESERVED_CONST_STRING_73);
    TELEPORTNPCTOWP(0xe7d0, SLD_13784_VARIN_VZ.WP);
    AI_TELEPORTALWAYS(SLD_13784_VARIN_VZ, SLD_13784_VARIN_VZ.WP, TRUE);
    NPC_REFRESH(SLD_13784_VARIN_VZ);
}

instance DIA_RIORDIAN_Q514_LEAVE(C_INFO) {
    NPC = 0xe700;
    NR = 1;
    CONDITION = DIA_RIORDIAN_Q514_LEAVE_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q514_LEAVE_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_RIORDIAN_Q514_LEAVE_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q514)) == (LOG_RUNNING)) && ((Q514_FINISHVOLFZACKE) == (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_Q514_LEAVE_INFO() {
    NPC_REMOVEINVITEMS(HERO, 0x8cf4, NPC_HASITEMS(HERO, 0x8cf4));
    B_GIVEPLAYERXP(XP_Q514_FINISHEVENT);
    if ((Q514_TELLRIORDIANFOUNDSWORD) == (1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Leave_03_01");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Leave_03_02");
    INFO_CLEARCHOICES(0x1530a);
    INFO_ADDCHOICE(0x1530a, "Let's go.", 0x1530e);
    INFO_ADDCHOICE(0x1530a, "What about Kessel? Are you going to leave him here like this?", 0x1530d);
}

func void DIA_RIORDIAN_Q514_LEAVE_KESSEL() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q514_Leave_Kessel_15_01");
    if (NPC_KNOWSINFO(OTHER, 0x15597)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Leave_Kessel_03_02_A");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Leave_Kessel_03_02_B");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Leave_Kessel_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Leave_Kessel_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_Leave_Kessel_03_05");
}

func void DIA_RIORDIAN_Q514_LEAVE_GO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q514_Leave_Go_15_01");
    AI_WAITTILLEND(SELF, OTHER);
    NPC_EXCHANGEROUTINE(SELF, FOLLOW);
    INFO_CLEARCHOICES(0x1530a);
    AI_STOPPROCESSINFOS(SELF);
    AI_LOGENTRY(TOPIC_Q514, LOG_Q514_RIORDIAN_LEAVE);
}

instance DIA_RIORDIAN_VZ_TEACH(C_INFO) {
    NPC = 0xe700;
    NR = 10;
    CONDITION = DIA_RIORDIAN_VZ_TEACH_CONDITION;
    INFORMATION = DIA_RIORDIAN_VZ_TEACH_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = B_BUILDLEARNSTRING2(PRINT_LEARN_ALCHEMY1, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_ALCHEMY, 1), 0);
}

func int DIA_RIORDIAN_VZ_TEACH_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_Q514)) == (LOG_RUNNING)) && ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_ALCHEMY)) == (0))) && ((Q514_CAMPISREADY) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_VZ_TEACH_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_VZ_teach_15_00");
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_ALCHEMY)) == (1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_VZ_teach_03_01");
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_VZ_teach_03_02");
    };
    B_TEACHPLAYERTALENTALCHEMY(SELF, OTHER, 1);
}

instance DIA_RIORDIAN_VZ_TEACH2(C_INFO) {
    NPC = 0xe700;
    NR = 10;
    CONDITION = DIA_RIORDIAN_VZ_TEACH2_CONDITION;
    INFORMATION = DIA_RIORDIAN_VZ_TEACH2_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = B_BUILDLEARNSTRING2(PRINT_LEARN_ALCHEMY2, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_ALCHEMY, 2), 0);
}

func int DIA_RIORDIAN_VZ_TEACH2_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_Q514)) == (LOG_RUNNING)) && ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_ALCHEMY)) == (1))) && ((Q514_CAMPISREADY) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_VZ_TEACH2_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_VZ_teach2_15_00");
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_ALCHEMY)) == (2)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_VZ_teach2_03_01");
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_VZ_teach2_03_02");
    };
    B_TEACHPLAYERTALENTALCHEMY(SELF, OTHER, 2);
}

instance DIA_RIORDIAN_VZ_AMBIENT(C_INFO) {
    NPC = 0xe700;
    NR = 950;
    CONDITION = DIA_RIORDIAN_VZ_AMBIENT_CONDITION;
    INFORMATION = DIA_RIORDIAN_VZ_AMBIENT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "How do you stand being in this cursed place?";
}

func int DIA_RIORDIAN_VZ_AMBIENT_CONDITION() {
    if ((Q514_VOLFZACKEBRIDGE_CUTSCENE) >= (2)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_VZ_AMBIENT_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    B_SAY(OTHER, SELF, "$MARVIN_VolfzackMorale1");
    if ((Q514_FINISHVOLFZACKE) == (1)) {
        AI_STARTFACEANI(SELF, "S_SAD", 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_VZ_Ambient_03_08");
    };
    if ((Q514_CATACOMBS_GARGOYLE_FIRSTMEETING) == (2)) {
        AI_STARTFACEANI(SELF, "S_TIRED", 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_VZ_Ambient_03_07");
    };
    if ((Q514_CAMPISREADY) == (FALSE)) {
        AI_STARTFACEANI(SELF, "S_SAD", 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_VZ_Ambient_03_05");
    };
    if ((Q514_CAMPISREADY) == (TRUE)) {
        NPC_INITAMBIENTS(SELF, 3);
        if ((NPC_GETLASTAMBIENT(SELF)) == (1)) {
            AI_STARTFACEANI(SELF, "S_TIRED", 1, -(1));
            AI_OUTPUT(SELF, OTHER, "DIA_Riordian_VZ_Ambient_03_03");
            AI_OUTPUT(SELF, OTHER, "DIA_Riordian_VZ_Ambient_03_04");
        } else if ((NPC_GETLASTAMBIENT(SELF)) == (2)) {
            AI_STARTFACEANI(SELF, "S_SURPRISE", 1, -(1));
            AI_OUTPUT(SELF, OTHER, "DIA_Riordian_VZ_Ambient_03_01");
            AI_STARTFACEANI(SELF, "S_TIRED", 1, -(1));
            AI_OUTPUT(SELF, OTHER, "DIA_Riordian_VZ_Ambient_03_02");
        } else if ((NPC_GETLASTAMBIENT(SELF)) == (3)) {
            AI_STARTFACEANI(SELF, "S_TIRED", 1, -(1));
            AI_OUTPUT(SELF, OTHER, "DIA_Riordian_VZ_Ambient_03_06");
        };
    };
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

instance DIA_RIORDIAN_VZ_Q514_WHY(C_INFO) {
    NPC = 0xe700;
    NR = 1;
    CONDITION = DIA_RIORDIAN_VZ_Q514_WHY_CONDITION;
    INFORMATION = DIA_RIORDIAN_VZ_Q514_WHY_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Why does this place look like a catacomb and a residential fortress at the same time?";
}

func int DIA_RIORDIAN_VZ_Q514_WHY_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_Q514)) == (LOG_RUNNING)) && ((Q514_CHESS_FINISH) == (TRUE))) && ((Q514_CRAWLER_FINISH) == (0))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_VZ_Q514_WHY_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_VZ_Q514_Why_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_VZ_Q514_Why_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_VZ_Q514_Why_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_VZ_Q514_Why_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_VZ_Q514_Why_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_VZ_Q514_Why_03_06");
    AI_RESETFACEANI(OTHER);
}

instance DIA_RIORDIAN_VZ_Q514_PROBLEM(C_INFO) {
    NPC = 0xe700;
    NR = 1;
    CONDITION = DIA_RIORDIAN_VZ_Q514_PROBLEM_CONDITION;
    INFORMATION = DIA_RIORDIAN_VZ_Q514_PROBLEM_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "I've come across a riddle...";
}

func int DIA_RIORDIAN_VZ_Q514_PROBLEM_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_Q514)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x15441))) && ((Q514_CRAWLER_FINISH) == (0))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

var int RIORDIAN_VZ_Q514_PROBLEM_SWORD = 0;
var int RIORDIAN_VZ_Q514_PROBLEM_SECONDGATE = 0;
var int RIORDIAN_VZ_Q514_PROBLEM_STONEPLATE = 0;
var int RIORDIAN_VZ_Q514_PROBLEM_TOUCHPLATE = 0;
var int RIORDIAN_VZ_Q514_PROBLEM_COLORS = 0;
func void DIA_RIORDIAN_VZ_Q514_PROBLEM_CHOICES() {
    INFO_CLEARCHOICES(0x1531b);
    INFO_ADDCHOICE(0x1531b, DIALOG_BACK, 0x15324);
    if (((Q514_GARGOYLECHAMBER_CLOSEDGATELOGENTRY) == (FALSE)) && ((Q514_SECONDGATEOPENED) == (FALSE))) {
        if ((RIORDIAN_VZ_Q514_PROBLEM_SECONDGATE) == (FALSE)) {
            INFO_ADDCHOICE(0x1531b, "At the end of the great hall is another great door.", 0x15325);
        };
    };
    if ((RIORDIAN_VZ_Q514_PROBLEM_SWORD) == (FALSE)) {
        if (((NPC_HASITEMS(OTHER, 0x9aba)) >= (1)) || ((NPC_HASITEMS(OTHER, 0x9abb)) >= (1))) {
            INFO_ADDCHOICE(0x1531b, "I found this strange sword.", 0x15326);
        };
    };
    if ((RIORDIAN_VZ_Q514_PROBLEM_STONEPLATE) == (FALSE)) {
        if (((Q514_PUZZLECHAMBER_ENTER_LOGENTRY) == (TRUE)) && ((Q514_PUZZLECHAMBER_FINISH) == (FALSE))) {
            INFO_ADDCHOICE(0x1531b, "I found stone pedestals.", 0x15327);
        };
    };
    if ((RIORDIAN_VZ_Q514_PROBLEM_TOUCHPLATE) == (FALSE)) {
        if (((Q514_CHESSCHAMBER_BUTTONPUZZLE) == (TRUE)) && ((Q514_CHESS_FINISH) == (FALSE))) {
            INFO_ADDCHOICE(0x1531b, "In the throne room, the floor moves when I stand on it.", 0x15328);
        };
    };
    if ((RIORDIAN_VZ_Q514_PROBLEM_COLORS) == (FALSE)) {
        if ((Q514_TRAP04_COLORS) == (1)) {
            if (((NPC_HASITEMS(OTHER, 0x8a70)) == (0)) && ((NPC_KNOWSINFO(OTHER, 0x1529f)) == (FALSE))) {
                INFO_ADDCHOICE(0x1531b, "I reached the room with the colored switches.", 0x15329);
            };
        };
    };
}

func void DIA_RIORDIAN_VZ_Q514_PROBLEM_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_VZ_Q514_Problem_15_01");
    DIA_RIORDIAN_VZ_Q514_PROBLEM_CHOICES();
}

func void DIA_RIORDIAN_VZ_Q514_PROBLEM_BACK() {
    INFO_CLEARCHOICES(0x1531b);
}

func void DIA_RIORDIAN_VZ_Q514_PROBLEM_SECONDGATE() {
    RIORDIAN_VZ_Q514_PROBLEM_SECONDGATE = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_VZ_Q514_Problem_SecondGate_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_VZ_Q514_Problem_SecondGate_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_VZ_Q514_Problem_SecondGate_03_03");
    DIA_RIORDIAN_VZ_Q514_PROBLEM_CHOICES();
}

func void DIA_RIORDIAN_VZ_Q514_PROBLEM_SWORD() {
    RIORDIAN_VZ_Q514_PROBLEM_SWORD = TRUE;
    AI_SETWALKMODE(SELF, NPC_RUN);
    AI_STOPLOOKAT(SELF);
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_VZ_Q514_Problem_Sword_15_01");
    if ((NPC_HASITEMS(OTHER, 0x9aba)) >= (1)) {
    };
    if ((NPC_HASITEMS(OTHER, 0x9abb)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x9abb, 1);
    };
    CREATEINVITEMS(SELF, 0x8d1d, 1);
    AI_USEITEMTOSTATE(SELF, 0x8d1d, 1);
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_VZ_Q514_Problem_Sword_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_VZ_Q514_Problem_Sword_03_03");
    AI_USEITEMTOSTATE(SELF, 0x8d1d, -(1));
    if ((NPC_HASITEMS(SELF, 0x9aba)) >= (1)) {
    };
    if ((NPC_HASITEMS(SELF, 0x9abb)) >= (1)) {
        B_GIVEINVITEMS(SELF, OTHER, 0x9abb, 1);
    };
    MOB_CHANGEFOCUSNAME("VZ_SECONDGATE_SWORD_02", "MOBNAME_SWITCH_USESWORD");
    DIA_RIORDIAN_VZ_Q514_PROBLEM_CHOICES();
    MOB_CHANGEFOCUSNAME("VZ_SECONDGATE_SWORD_01", "MOBNAME_SWITCH_USESWORD");
}

func void DIA_RIORDIAN_VZ_Q514_PROBLEM_STONEPLATE() {
    RIORDIAN_VZ_Q514_PROBLEM_STONEPLATE = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_VZ_Q514_Problem_Stoneplate_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_VZ_Q514_Problem_Stoneplate_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_VZ_Q514_Problem_Stoneplate_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_VZ_Q514_Problem_Stoneplate_03_04");
    DIA_RIORDIAN_VZ_Q514_PROBLEM_CHOICES();
}

func void DIA_RIORDIAN_VZ_Q514_PROBLEM_TOUCHPLATE() {
    RIORDIAN_VZ_Q514_PROBLEM_TOUCHPLATE = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_VZ_Q514_Problem_Touchplate_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_VZ_Q514_Problem_Touchplate_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_VZ_Q514_Problem_Touchplate_03_03");
    DIA_RIORDIAN_VZ_Q514_PROBLEM_CHOICES();
}

func void DIA_RIORDIAN_VZ_Q514_PROBLEM_COLORS() {
    RIORDIAN_VZ_Q514_PROBLEM_COLORS = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_VZ_Q514_Problem_Colors_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_VZ_Q514_Problem_Colors_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_VZ_Q514_Problem_Colors_03_03");
    DIA_RIORDIAN_VZ_Q514_PROBLEM_CHOICES();
}

var int RIORDIANVZCURRENTMANALEVEL = 0;
var int RIORDIANVZ_CANTTEACH = 0;
instance DIA_RIORDIAN_TEACH(C_INFO) {
    NPC = 0xe700;
    NR = 99;
    CONDITION = DIA_RIORDIAN_TEACH_CONDITION;
    INFORMATION = DIA_RIORDIAN_TEACH_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Teach me.";
}

func int DIA_RIORDIAN_TEACH_CONDITION() {
    if (((NPC_KNOWSINFO(OTHER, 0x15441)) && (!(NPC_KNOWSINFO(OTHER, 0x1544e)))) && ((RIORDIANVZ_CANTTEACH) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_TEACH_CHOICES() {
    RIORDIAN_GOLDCOST = 0;
    RIORDIANVZCURRENTMANALEVEL = OTHER.AIVAR[83];
    INFO_CLEARCHOICES(0x1532c);
    INFO_ADDCHOICE(0x1532c, DIALOG_BACK, 0x15331);
    INFO_ADDCHOICE(0x1532c, B_BUILDLEARNSTRING2(PRINT_LEARNMANA1, B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 1), RIORDIAN_GOLDCOST), 0x15332);
    INFO_ADDCHOICE(0x1532c, B_BUILDLEARNSTRING2(PRINT_LEARNMANA5, B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 5), (RIORDIAN_GOLDCOST) * (5)), 0x15333);
}

var int DIA_RIORDIAN_TEACH_CHOICES.RIORDIAN_GOLDCOST = 0;
func void DIA_RIORDIAN_TEACH_INFO() {
    B_SAY(OTHER, SELF, "$MARVIN_TeachMe");
    if ((SQ504_JOINEDWATERCIRCLE) == (FALSE)) {
        if ((OTHER.AIVAR[83]) < (120)) {
            DIA_RIORDIAN_TEACH_CHOICES();
        } else {
            B_SAY(SELF, OTHER, "$NoLearnOverPersonalMAX");
            RIORDIANVZ_CANTTEACH = TRUE;
        } else {
            /* set_instance(0) */;
        };
    };
    if ((SQ504_JOINEDWATERCIRCLE) == (TRUE)) {
        if ((OTHER.AIVAR[83]) < (200)) {
            DIA_RIORDIAN_TEACH_CHOICES();
        } else {
            B_SAY(SELF, OTHER, "$NoLearnYoureBetter");
            RIORDIANVZ_CANTTEACH = TRUE;
        };
    };
}

func void DIA_RIORDIAN_TEACH_BACK() {
    INFO_CLEARCHOICES(0x1532c);
}

func void DIA_RIORDIAN_TEACH1() {
    if ((SQ504_JOINEDWATERCIRCLE) == (FALSE)) {
        if ((RIORDIANVZCURRENTMANALEVEL) < (OTHER.AIVAR[83])) {
            B_SAY(SELF, OTHER, "$YouLearnedSomething");
        };
    };
    if ((SQ504_JOINEDWATERCIRCLE) == (TRUE)) {
        if ((RIORDIANVZCURRENTMANALEVEL) < (OTHER.AIVAR[83])) {
            B_SAY(SELF, OTHER, "$YouLearnedSomething");
        };
    };
    DIA_RIORDIAN_TEACH_CHOICES();
}

func void DIA_RIORDIAN_TEACH5() {
    if ((SQ504_JOINEDWATERCIRCLE) == (FALSE)) {
        if ((RIORDIANVZCURRENTMANALEVEL) < (OTHER.AIVAR[83])) {
            B_SAY(SELF, OTHER, "$YouLearnedSomething");
        };
    };
    if ((SQ504_JOINEDWATERCIRCLE) == (TRUE)) {
        if ((RIORDIANVZCURRENTMANALEVEL) < (OTHER.AIVAR[83])) {
            B_SAY(SELF, OTHER, "$YouLearnedSomething");
        };
    };
    DIA_RIORDIAN_TEACH_CHOICES();
}

instance DIA_RIORDIAN_VZ_TEACHMECIRCLE(C_INFO) {
    NPC = 0xe700;
    NR = 50;
    CONDITION = DIA_RIORDIAN_VZ_TEACHMECIRCLE_CONDITION;
    INFORMATION = DIA_RIORDIAN_VZ_TEACHMECIRCLE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Teach me about magic...";
}

func int DIA_RIORDIAN_VZ_TEACHMECIRCLE_CONDITION() {
    if (((NPC_KNOWSINFO(OTHER, 0x15441)) && ((NPC_KNOWSINFO(OTHER, 0x1544e)) == (FALSE))) && ((SQ504_JOINEDWATERCIRCLE) == (TRUE))) {
        if (((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_MAGE)) == (4)) && ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_SCROLLWRITING)) == (1))) {
            return FALSE;
        };
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_VZ_TEACHMECIRCLE_CHOICES() {
    INFO_CLEARCHOICES(0x15334);
    INFO_ADDCHOICE(0x15334, DIALOG_BACK, 0x15338);
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_SCROLLWRITING)) == (0)) {
        INFO_ADDCHOICE(0x15334, B_BUILDLEARNSTRING2(PRINT_LEARN_MAGICSCROLL, 5, 0), 0x1533d);
    };
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_MAGE)) == (0)) {
        INFO_ADDCHOICE(0x15334, B_BUILDLEARNSTRING2(PRINT_LEARN_CIRCLE1, (CIRCLEKOSTEN_01) - ((CIRCLEKOSTEN_BOOK) * (MARVIN_MAGELEARNING_TIER1)), 0), 0x15339);
    };
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_MAGE)) == (1)) {
        INFO_ADDCHOICE(0x15334, B_BUILDLEARNSTRING2(PRINT_LEARN_CIRCLE2, (CIRCLEKOSTEN_02) - ((CIRCLEKOSTEN_BOOK) * (MARVIN_MAGELEARNING_TIER2)), 0), 0x1533a);
    };
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_MAGE)) == (2)) {
        INFO_ADDCHOICE(0x15334, B_BUILDLEARNSTRING2(PRINT_LEARN_CIRCLE3, (CIRCLEKOSTEN_03) - ((CIRCLEKOSTEN_BOOK) * (MARVIN_MAGELEARNING_TIER3)), 0), 0x1533b);
    };
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_MAGE)) == (3)) {
        INFO_ADDCHOICE(0x15334, B_BUILDLEARNSTRING2(PRINT_LEARN_CIRCLE4, (CIRCLEKOSTEN_04) - ((CIRCLEKOSTEN_BOOK) * (MARVIN_MAGELEARNING_TIER4)), 0), 0x1533c);
    };
}

func void DIA_RIORDIAN_VZ_TEACHMECIRCLE_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_TeachMeCircle_15_01");
    DIA_RIORDIAN_VZ_TEACHMECIRCLE_CHOICES();
}

func void DIA_RIORDIAN_TEACHMECIRCLE_VZ_BACK() {
    INFO_CLEARCHOICES(0x15334);
}

func void DIA_RIORDIAN_TEACHMECIRCLE_VZ_TIER1() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_TeachMeCircle_Tier1_15_01");
    if ((HERO.LP) >= ((CIRCLEKOSTEN_01) - ((CIRCLEKOSTEN_BOOK) * (MARVIN_MAGELEARNING_TIER1)))) {
        HERO.LP = (HERO.LP) - ((CIRCLEKOSTEN_01) - ((CIRCLEKOSTEN_BOOK) * (MARVIN_MAGELEARNING_TIER1)));
        LOG_CREATETOPIC(TOPIC_MAGIC, LOG_NOTE);
        B_LOGENTRY(TOPIC_MAGIC, LOG_MAGIC_CIRCLES);
        PRINTSCREEN(PRINT_LEARNCIRCLE_1, -(1), -(1), FONT_SCREEN, 2);
        NPC_SETTALENTSKILL(HERO, NPC_TALENT_MAGE, 1);
        LOG_CREATETOPIC(TOPIC_MAGIC, LOG_NOTE);
        B_LOGENTRY(TOPIC_MAGIC, LOG_CIRCLETIER1_VOLFZACKE);
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_TeachMeCircle_Tier1_03_02");
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_TeachMeCircle_Tier1_03_03");
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_TeachMeCircle_Tier1_03_04");
    };
    PRINTSCREEN(PRINT_NOTENOUGHLP, -(1), -(1), FONT_SCREEN, 2);
    B_SAY(SELF, OTHER, "$NOLEARNNOPOINTS");
    DIA_RIORDIAN_VZ_TEACHMECIRCLE_CHOICES();
}

func void DIA_RIORDIAN_TEACHMECIRCLE_VZ_TIER2() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_TeachMeCircle_Tier2_15_01");
    if ((HERO.LP) >= ((CIRCLEKOSTEN_02) - ((CIRCLEKOSTEN_BOOK) * (MARVIN_MAGELEARNING_TIER2)))) {
        HERO.LP = (HERO.LP) - ((CIRCLEKOSTEN_02) - ((CIRCLEKOSTEN_BOOK) * (MARVIN_MAGELEARNING_TIER2)));
        PRINTSCREEN(PRINT_LEARNCIRCLE_2, -(1), -(1), FONT_SCREEN, 2);
        NPC_SETTALENTSKILL(HERO, NPC_TALENT_MAGE, 2);
        LOG_CREATETOPIC(TOPIC_MAGIC, LOG_NOTE);
        B_LOGENTRY(TOPIC_MAGIC, LOG_CIRCLETIER2_VOLFZACKE);
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_TeachMeCircle_Tier2_03_02");
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_TeachMeCircle_Tier2_03_03");
    };
    PRINTSCREEN(PRINT_NOTENOUGHLP, -(1), -(1), FONT_SCREEN, 2);
    B_SAY(SELF, OTHER, "$NOLEARNNOPOINTS");
    DIA_RIORDIAN_VZ_TEACHMECIRCLE_CHOICES();
}

func void DIA_RIORDIAN_TEACHMECIRCLE_VZ_TIER3() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_TeachMeCircle_Tier3_15_01");
    if ((HERO.LP) >= ((CIRCLEKOSTEN_03) - ((CIRCLEKOSTEN_BOOK) * (MARVIN_MAGELEARNING_TIER3)))) {
        HERO.LP = (HERO.LP) - ((CIRCLEKOSTEN_03) - ((CIRCLEKOSTEN_BOOK) * (MARVIN_MAGELEARNING_TIER3)));
        PRINTSCREEN(PRINT_LEARNCIRCLE_3, -(1), -(1), FONT_SCREEN, 2);
        NPC_SETTALENTSKILL(HERO, NPC_TALENT_MAGE, 3);
        LOG_CREATETOPIC(TOPIC_MAGIC, LOG_NOTE);
        B_LOGENTRY(TOPIC_MAGIC, LOG_CIRCLETIER3_VOLFZACKE);
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_TeachMeCircle_Tier3_03_02");
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_TeachMeCircle_Tier3_03_03");
    };
    PRINTSCREEN(PRINT_NOTENOUGHLP, -(1), -(1), FONT_SCREEN, 2);
    B_SAY(SELF, OTHER, "$NOLEARNNOPOINTS");
    DIA_RIORDIAN_VZ_TEACHMECIRCLE_CHOICES();
}

func void DIA_RIORDIAN_TEACHMECIRCLE_VZ_TIER4() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_TeachMeCircle_Tier4_15_01");
    if ((HERO.LP) >= ((CIRCLEKOSTEN_04) - ((CIRCLEKOSTEN_BOOK) * (MARVIN_MAGELEARNING_TIER4)))) {
        HERO.LP = (HERO.LP) - ((CIRCLEKOSTEN_04) - ((CIRCLEKOSTEN_BOOK) * (MARVIN_MAGELEARNING_TIER4)));
        BUFF_APPLYORREFRESH(HERO, 0x7f0d);
        NPC_SETTALENTSKILL(HERO, NPC_TALENT_MAGE, 4);
        PRINTSCREEN(PRINT_LEARNCIRCLE_4, -(1), -(1), FONT_SCREEN, 2);
        LOG_CREATETOPIC(TOPIC_MAGIC, LOG_NOTE);
        B_LOGENTRY(TOPIC_MAGIC, LOG_CIRCLETIER4_VOLFZACKE);
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_TeachMeCircle_Tier4_03_02");
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_TeachMeCircle_Tier4_03_03");
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_TeachMeCircle_Tier4_03_04");
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_TeachMeCircle_Tier4_03_05");
    };
    PRINTSCREEN(PRINT_NOTENOUGHLP, -(1), -(1), FONT_SCREEN, 2);
    B_SAY(SELF, OTHER, "$NOLEARNNOPOINTS");
    DIA_RIORDIAN_VZ_TEACHMECIRCLE_CHOICES();
}

func void DIA_RIORDIAN_TEACHMECIRCLE_VZ_SCROLL() {
    if ((HERO.LP) >= (5)) {
        HERO.LP = (HERO.LP) - (5);
        NPC_SETTALENTSKILL(HERO, NPC_TALENT_SCROLLWRITING, 1);
        PRINTSCREEN(PRINT_LEARNMAGICSCROLL, -(1), -(1), FONT_SCREEN, 2);
        SND_PLAY("LEVELUP");
        LOG_CREATETOPIC(TOPIC_SCROLLS, LOG_NOTE);
        AI_LOGENTRY(TOPIC_SCROLLS, LOG_MAGIC_LEARNEDSCROLLSVOLFZACKE);
        B_SAY(SELF, OTHER, "$YouLearnedSomething");
    };
    PRINTSCREEN(PRINT_NOTENOUGHLP, -(1), -(1), FONT_SCREEN, 2);
    B_SAY(SELF, OTHER, "$NoLearnNoPoints");
    DIA_RIORDIAN_VZ_TEACHMECIRCLE_CHOICES();
}

