instance DIA_WORKER_EXIT(C_INFO) {
    NPC = 0xd819;
    NR = 999;
    CONDITION = DIA_WORKER_EXIT_CONDITION;
    INFORMATION = DIA_WORKER_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_WORKER_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_WORKER_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_WORKER_BUSY(C_INFO) {
    NPC = 0xd5d6;
    NR = 1;
    CONDITION = DIA_WORKER_BUSY_CONDITION;
    INFORMATION = DIA_WORKER_BUSY_INFO;
    PERMANENT = TRUE;
    IMPORTANT = TRUE;
}

func int DIA_WORKER_BUSY_CONDITION() {
    if (((((LOG_GETSTATUS(MIS_SQ309)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x1274d))) && ((NPC_KNOWSINFO(OTHER, 0x12d2a)) == (FALSE))) && ((NPC_KNOWSINFO(OTHER, 0x12821)) == (FALSE))) {
        return FALSE;
    };
    if (NPC_ISINSTATE(SELF, 0xf09f)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_WORKER_BUSY_INFO() {
    DIA_IMBUSY_CALM();
}

instance DIA_WORKER_INWORK(C_INFO) {
    NPC = 0xd819;
    NR = 1;
    CONDITION = DIA_WORKER_INWORK_CONDITION;
    INFORMATION = DIA_WORKER_INWORK_INFO;
    PERMANENT = TRUE;
    IMPORTANT = TRUE;
}

func int DIA_WORKER_INWORK_CONDITION() {
    if (((((LOG_GETSTATUS(MIS_SQ309)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x1274d))) && ((NPC_KNOWSINFO(OTHER, 0x12d2a)) == (FALSE))) && (NPC_ISINSTATE(SELF, 0xf09f))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_WORKER_INWORK_INFO() {
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Worker_InWork_03_01");
    if (((((LOG_GETSTATUS(MIS_SQ309)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x1274d))) && ((NPC_KNOWSINFO(OTHER, 0x12d2a)) == (FALSE))) && ((SQ309_LOGENTRYWORKER) == (FALSE))) {
        AI_LOGENTRY(TOPIC_SQ309, LOG_SQ309_WORKER_NOINFO);
        SQ309_LOGENTRYWORKER = TRUE;
    };
    AI_RESETFACEANI(SELF);
    AI_STOPPROCESSINFOS(SELF);
    AI_FUNCTION(SELF, 0xf3b1);
}

