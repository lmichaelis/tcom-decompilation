instance DIA_DACK_EXIT(C_INFO) {
    NPC = 0xd4e3;
    NR = 999;
    CONDITION = DIA_DACK_EXIT_CONDITION;
    INFORMATION = DIA_DACK_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_DACK_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_DACK_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_DACK_HELLO(C_INFO) {
    NPC = 0xd4e3;
    NR = 1;
    CONDITION = DIA_DACK_HELLO_CONDITION;
    INFORMATION = DIA_DACK_HELLO_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "What are you doing here?";
}

func int DIA_DACK_HELLO_CONDITION() {
    return TRUE;
}

func void DIA_DACK_HELLO_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Dack_Hello_15_01");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Dack_Hello_03_02");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Dack_Hello_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Dack_Hello_03_04");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Dack_Hello_03_05");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    TRADER_LOGENTRY_DACK();
}

instance DIA_DACK_SQ203_FINISH(C_INFO) {
    NPC = 0xd4e3;
    NR = 1;
    CONDITION = DIA_DACK_SQ203_FINISH_CONDITION;
    INFORMATION = DIA_DACK_SQ203_FINISH_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Knut sent me to give you his offer.";
}

func int DIA_DACK_SQ203_FINISH_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_SQ203)) == (LOG_RUNNING)) && ((NPC_HASITEMS(OTHER, 0x9111)) >= (1))) && (NPC_KNOWSINFO(OTHER, 0x11827))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_DACK_SQ203_FINISH_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Dack_SQ203_Finish_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Dack_SQ203_Finish_03_02");
    NPC_REMOVEINVITEMS(SELF, 0x9111, 1);
    B_STANDUP();
    B_GIVEINVITEMS(OTHER, SELF, 0x9111, 1);
    B_USEFAKESCROLL();
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Dack_SQ203_Finish_03_03");
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Dack_SQ203_Finish_03_04");
    AI_STARTFACEANI(SELF, "S_THINK", 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Dack_SQ203_Finish_03_05");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Dack_SQ203_Finish_03_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Dack_SQ203_Finish_03_07");
    AI_RESETFACEANI(SELF);
    AI_LOGENTRY(TOPIC_SQ203, LOG_SQ203_FINISH);
    LOG_SETSTATUS(_@(MIS_SQ203), TOPIC_SQ203, LOG_SUCCESS);
    B_GIVEPLAYERXP(XP_SQ203_FINISH);
    CREATEINVITEMS(SELF, 0x859b, SQ203_REWARD);
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, SQ203_REWARD);
}

instance DIA_DACK_AMBIENT(C_INFO) {
    NPC = 0xd4e3;
    NR = 950;
    CONDITION = DIA_DACK_AMBIENT_CONDITION;
    INFORMATION = DIA_DACK_AMBIENT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "How are you doing?";
}

func int DIA_DACK_AMBIENT_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x11827)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

var int DACK_WANTTOSEESON = 0;
func void DIA_DACK_AMBIENT_INFO() {
    if ((NPC_KNOWSINFO(OTHER, 0x1183e)) == (FALSE)) {
        NPC_INITAMBIENTS(SELF, 2);
    };
    NPC_INITAMBIENTS(SELF, 1);
    B_SAY(OTHER, SELF, "$MARVIN_HowAreYou");
    if ((NPC_GETLASTAMBIENT(SELF)) == (1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Dack_Ambient_03_02");
    };
    if ((NPC_GETLASTAMBIENT(SELF)) == (2)) {
        if ((DACK_WANTTOSEESON) == (FALSE)) {
            DACK_WANTTOSEESON = TRUE;
        };
        AI_OUTPUT(SELF, OTHER, "DIA_Dack_Ambient_03_01");
    };
}

instance DIA_DACK_CANYOUTEACH(C_INFO) {
    NPC = 0xd4e3;
    NR = 100;
    CONDITION = DIA_DACK_CANYOUTEACH_CONDITION;
    INFORMATION = DIA_DACK_CANYOUTEACH_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Can you teach me something?";
}

func int DIA_DACK_CANYOUTEACH_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x11827)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_DACK_CANYOUTEACH_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Dack_CanYouTeach_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Dack_CanYouTeach_03_02");
    TEACHER_LOGENTRY_DACK();
}

instance DIA_DACK_TEACH(C_INFO) {
    NPC = 0xd4e3;
    NR = 100;
    CONDITION = DIA_DACK_TEACH_CONDITION;
    INFORMATION = DIA_DACK_TEACH_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Teach me.";
}

var int DACK_CANTEACHYOU = 0;
func int DIA_DACK_TEACH_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 0x11831)) && ((DACK_CANTEACHYOU) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_DACK_TEACH_CHOICES() {
    INFO_CLEARCHOICES(0x11834);
    INFO_ADDCHOICE(0x11834, DIALOG_BACK, 0x1183b);
    if ((HERO_HACKCHANCE) <= (85)) {
        INFO_ADDCHOICE(0x11834, B_BUILDLEARNSTRING2(PRINT_LEARN_MINE5, 0, DACK_PAYMENT2), 0x1183d);
    };
    if ((HERO_HACKCHANCE) <= (89)) {
        INFO_ADDCHOICE(0x11834, B_BUILDLEARNSTRING2(PRINT_LEARN_MINE1, 0, DACK_PAYMENT1), 0x1183c);
    };
}

var string DACK_PRINTS = "";
func void DIA_DACK_TEACH_CHECKLEVEL() {
    if ((HERO_HACKCHANCE) >= (90)) {
        DACK_CANTEACHYOU = TRUE;
        B_SAY(SELF, OTHER, "$NoLearnYoureBetter");
        INFO_CLEARCHOICES(0x11834);
    };
    DIA_DACK_TEACH_CHOICES();
}

func void DIA_DACK_TEACH_INFO() {
    B_SAY(OTHER, SELF, "$MARVIN_TeachMe");
    DIA_DACK_TEACH_CHOICES();
}

func void DIA_DACK_TEACH_BACK() {
    INFO_CLEARCHOICES(0x11834);
}

func void DIA_DACK_TEACH_1POINTS() {
    if ((HERO_HACKCHANCE) == (100)) {
        B_SAY(SELF, OTHER, "$NoLearnOverPersonalMAX");
    };
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (DACK_PAYMENT1)) {
        if ((HERO_HACKCHANCE) < (100)) {
            B_UPGRADE_HERO_HACKCHANCE(1);
        };
    };
    B_SAY(SELF, OTHER, "$NOGOLD");
    DACK_PRINTS = CONCATSTRINGS(PRINT_RGOLD, INTTOSTRING(DACK_PAYMENT1));
    PRINTSCREEN(DACK_PRINTS, -(1), -(1), FONT_SCREEN, 2);
    DIA_DACK_TEACH_CHECKLEVEL();
}

func void DIA_DACK_TEACH_5POINTS() {
    if ((HERO_HACKCHANCE) == (100)) {
        B_SAY(SELF, OTHER, "$NoLearnOverPersonalMAX");
    };
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (DACK_PAYMENT2)) {
        if ((HERO_HACKCHANCE) < (95)) {
            B_UPGRADE_HERO_HACKCHANCE(5);
        } else {
            B_UPGRADE_HERO_HACKCHANCE((100) - (HERO_HACKCHANCE));
        } else {
            /* set_instance(0) */;
        };
    };
    B_SAY(SELF, OTHER, "$NOGOLD");
    DACK_PRINTS = CONCATSTRINGS(PRINT_RGOLD, INTTOSTRING(DACK_PAYMENT2));
    PRINTSCREEN(DACK_PRINTS, -(1), -(1), FONT_SCREEN, 2);
    DIA_DACK_TEACH_CHECKLEVEL();
}

instance DIA_DACK_SON(C_INFO) {
    NPC = 0xd4e3;
    NR = 1;
    CONDITION = DIA_DACK_SON_CONDITION;
    INFORMATION = DIA_DACK_SON_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I met your son.";
}

func int DIA_DACK_SON_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x13d50)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_DACK_SON_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Dack_Son_15_01");
    AI_STARTFACEANI(SELF, S_SURPRISE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Dack_Son_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Dack_Son_15_03");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Dack_Son_03_04");
    AI_RESETFACEANI(SELF);
    B_GIVEPLAYERXP(XP_FORALISFINE);
}

instance DIA_DACK_PICKPOCKET(C_INFO) {
    NPC = 0xd4e3;
    NR = 900;
    CONDITION = DIA_DACK_PICKPOCKET_CONDITION;
    INFORMATION = DIA_DACK_PICKPOCKET_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = PICKPOCKET_120;
}

func int DIA_DACK_PICKPOCKET_CONDITION() {
    if (((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) && ((SELF.AIVAR[6]) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_DACK_PICKPOCKET_INFO() {
    INFO_CLEARCHOICES(0x11841);
    INFO_ADDCHOICE(0x11841, DIALOG_BACK, 0x11845);
    INFO_ADDCHOICE(0x11841, DIALOG_PICKPOCKET, 0x11844);
}

func void DIA_DACK_PICKPOCKET_DOIT() {
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (3)) {
        CREATEINVITEMS(SELF, 0x84d0, 4);
        B_GIVEINVITEMS(SELF, OTHER, 0x84d0, 4);
        B_PICKPOCKET_AMBIENT_TIER_3();
        SELF.AIVAR[6] = TRUE;
        INFO_CLEARCHOICES(0x11841);
    };
    AI_PLAYANI(HERO, T_CANNOTTAKE);
    PRINTSCREEN(PRINT_CANTPICKPOCKETTHISPERSON, -(1), -(1), FONT_SCREEN, 4);
    INFO_CLEARCHOICES(0x11841);
}

func void DIA_DACK_PICKPOCKET_BACK() {
    INFO_CLEARCHOICES(0x11841);
}

