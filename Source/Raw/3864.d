instance DIA_TESPI_EXIT(C_INFO) {
    NPC = 0xd094;
    NR = 999;
    CONDITION = DIA_TESPI_EXIT_CONDITION;
    INFORMATION = DIA_TESPI_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_TESPI_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_TESPI_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_TESPI_QM202_JOB(C_INFO) {
    NPC = 0xd094;
    NR = 1;
    CONDITION = DIA_TESPI_QM202_JOB_CONDITION;
    INFORMATION = DIA_TESPI_QM202_JOB_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Aren't you looking for a job?";
}

func int DIA_TESPI_QM202_JOB_CONDITION() {
    if (((LOG_GETSTATUS(MIS_QM202)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x10490))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_TESPI_QM202_JOB_INFO() {
    QM202_RECRUITSCOUNTDIALOGUE = (QM202_RECRUITSCOUNTDIALOGUE) + (1);
    AI_OUTPUT(OTHER, SELF, "DIA_Tespi_QM202_Job_15_01");
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Job_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Tespi_QM202_Job_15_03");
    if (NPC_HASGUILDARMOREQUIPPED(OTHER, GIL_MIL)) {
        AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Job_03_04");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Job_03_05");
    AI_OUTPUT(OTHER, SELF, "DIA_Tespi_QM202_Job_15_06");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Job_03_07");
    AI_OUTPUT(OTHER, SELF, "DIA_Tespi_QM202_Job_15_08");
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Job_03_09");
    INFO_CLEARCHOICES(0x11d00);
    INFO_ADDCHOICE(0x11d00, "(Speak only positively)", 0x11d04);
    INFO_ADDCHOICE(0x11d00, "(Speak frankly)", 0x11d05);
}

func void DIA_TESPI_QM202_JOB_NEXT() {
    AI_RESETFACEANI(OTHER);
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Job_Good_03_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Job_Good_03_09");
    AI_RESETFACEANI(SELF);
    INFO_CLEARCHOICES(0x11d00);
    AI_STOPPROCESSINFOS(SELF);
    AI_LOGENTRY(TOPIC_QM202, LOG_QM202_TESPI_DIALOGUE);
}

func void DIA_TESPI_QM202_JOB_GOOD() {
    QM202_TESPI_DIALOGUE = 1;
    AI_STARTFACEANI(OTHER, S_SMUG, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Tespi_QM202_Job_Good_15_01");
    AI_STARTFACEANI(SELF, S_SURPRISE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Job_Good_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Tespi_QM202_Job_Good_15_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Tespi_QM202_Job_Good_15_04");
    AI_STARTFACEANI(SELF, S_THINK, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Job_Good_03_05");
    AI_OUTPUT(OTHER, SELF, "DIA_Tespi_QM202_Job_Good_15_06");
    AI_OUTPUT(OTHER, SELF, "DIA_Tespi_QM202_Job_Good_15_07");
    DIA_TESPI_QM202_JOB_NEXT();
}

func void DIA_TESPI_QM202_JOB_TRUTH() {
    QM202_TESPI_DIALOGUE = 2;
    AI_STARTFACEANI(OTHER, S_SMILE, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Tespi_QM202_Job_Truth_15_01");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Job_Truth_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Tespi_QM202_Job_Truth_15_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Tespi_QM202_Job_Truth_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Job_Truth_03_05");
    AI_OUTPUT(OTHER, SELF, "DIA_Tespi_QM202_Job_Truth_15_06");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Job_Truth_03_07");
    AI_OUTPUT(OTHER, SELF, "DIA_Tespi_QM202_Job_Truth_15_08");
    DIA_TESPI_QM202_JOB_NEXT();
}

instance DIA_TESPI_QM202_TRUTH(C_INFO) {
    NPC = 0xd094;
    NR = 1;
    CONDITION = DIA_TESPI_QM202_TRUTH_CONDITION;
    INFORMATION = DIA_TESPI_QM202_TRUTH_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_TESPI_QM202_TRUTH_CONDITION() {
    if (((LOG_GETSTATUS(MIS_QM202)) == (LOG_RUNNING)) && ((QM202_LEAVEINN) == (2))) {
        if (((NPC_GETDISTTONPC(HERO, VLK_13510_TESPI)) <= (500)) && ((NPC_GETDISTTONPC(HERO, MIL_4017_ARWID)) <= (500))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_TESPI_QM202_TRUTH_INFO() {
    TRIA_INVITE(MIL_4017_ARWID);
    TRIA_STARTEXT(FALSE);
    AI_TURNTONPC(OTHER, VLK_13510_TESPI);
    AI_TURNTONPC(MIL_4017_ARWID, VLK_13510_TESPI);
    AI_TURNTONPC(SELF, OTHER);
    AI_LOOKATNPC(OTHER, SELF);
    AI_STOPLOOKAT(SELF);
    if ((QM202_TESPI_DIALOGUE) == (1)) {
        TRIA_WAIT();
        TRIA_NEXT(VLK_13510_TESPI);
        AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Truth_03_01");
        if ((QM202_ARWIDDECISION) == (1)) {
            TRIA_WAIT();
            TRIA_NEXT(MIL_4017_ARWID);
            AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Truth_03_02");
            AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Truth_03_03");
            TRIA_WAIT();
            TRIA_NEXT(VLK_13510_TESPI);
            AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Truth_03_04");
        } else {
            TRIA_WAIT();
            TRIA_NEXT(MIL_4017_ARWID);
            AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Truth_03_05");
            AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Truth_03_06");
            TRIA_WAIT();
            TRIA_NEXT(VLK_13510_TESPI);
            AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Truth_03_07");
        } else {
            /* set_instance(0) */;
        };
    };
    TRIA_WAIT();
    TRIA_NEXT(VLK_13510_TESPI);
    AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Truth_03_08");
    if ((QM202_ARWIDDECISION) == (1)) {
        TRIA_WAIT();
        TRIA_NEXT(MIL_4017_ARWID);
        AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Truth_03_09");
        AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Truth_03_10");
        TRIA_WAIT();
        TRIA_NEXT(VLK_13510_TESPI);
        AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Truth_03_11");
    };
    TRIA_WAIT();
    TRIA_NEXT(MIL_4017_ARWID);
    AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Truth_03_12");
    AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Truth_03_13");
    TRIA_WAIT();
    TRIA_NEXT(VLK_13510_TESPI);
    AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Truth_03_14");
    TRIA_WAIT();
    TRIA_NEXT(VLK_13510_TESPI);
    AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Truth_03_15");
    AI_OUTPUT(OTHER, SELF, "DIA_Tespi_QM202_Truth_15_16");
    AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Truth_03_17");
    AI_OUTPUT(OTHER, SELF, "DIA_Tespi_QM202_Truth_15_18");
    AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Truth_03_19");
    INFO_CLEARCHOICES(0x11d06);
    INFO_ADDCHOICE(0x11d06, "We won't do it.", 0x11d0a);
    INFO_ADDCHOICE(0x11d06, "Just get us there, we'll take care of the rest.", 0x11d0b);
}

func void DIA_TESPI_QM202_TRUTH_NEXT() {
    INFO_CLEARCHOICES(0x11d06);
    TRIA_FINISH();
    AI_STOPLOOKAT(SELF);
    AI_STOPLOOKAT(OTHER);
    AI_STOPPROCESSINFOS(SELF);
    if ((QM202_HELPTESPI) == (1)) {
        SELF.AIVAR[15] = TRUE;
        AI_LOGENTRY(TOPIC_QM202, LOG_QM202_TESPI_HELP);
        AI_FUNCTION(SELF, 0xf60a);
    };
    AI_FUNCTION(SELF, 0xf609);
}

func void DIA_TESPI_QM202_TRUTH_NO() {
    QM202_HELPTESPI = 2;
    AI_OUTPUT(OTHER, SELF, "DIA_Tespi_QM202_Truth_No_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Truth_No_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Truth_No_03_03");
    DIA_TESPI_QM202_TRUTH_NEXT();
}

func void DIA_TESPI_QM202_TRUTH_YES() {
    QM202_HELPTESPI = 1;
    AI_OUTPUT(OTHER, SELF, "DIA_Tespi_QM202_Truth_Yes_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Truth_Yes_03_02");
    if ((((((QM202_TESPI_DIALOGUE) == (1)) && ((QM202_ARWIDDECISION) != (1))) || (((QM202_TESPI_DIALOGUE) != (1)) && ((QM202_ARWIDDECISION) == (1)))) || (((QM202_TESPI_DIALOGUE) == (2)) && ((QM202_ARWIDDECISION) != (2)))) || (((QM202_TESPI_DIALOGUE) != (2)) && ((QM202_ARWIDDECISION) == (2)))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Truth_Yes_03_03");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Truth_Yes_03_04");
    DIA_TESPI_QM202_TRUTH_NEXT();
}

instance DIA_TESPI_QM202_FILED(C_INFO) {
    NPC = 0xd094;
    NR = 1;
    CONDITION = DIA_TESPI_QM202_FILED_CONDITION;
    INFORMATION = DIA_TESPI_QM202_FILED_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_TESPI_QM202_FILED_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_QM202)) == (LOG_RUNNING)) && ((NPC_GETDISTTOWP(SELF, "PART2_PATH_21")) < (500))) && ((QM202_HELPTESPI) == (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_TESPI_QM202_FILED_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Filed_03_01");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Tespi_QM202_Filed_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_Filed_03_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Tespi_QM202_Filed_15_04");
    AI_STOPPROCESSINFOS(SELF);
    AI_FUNCTION(SELF, 0xf60b);
}

instance DIA_TESPI_QM202_FIELDCLEAR(C_INFO) {
    NPC = 0xd094;
    NR = 1;
    CONDITION = DIA_TESPI_QM202_FIELDCLEAR_CONDITION;
    INFORMATION = DIA_TESPI_QM202_FIELDCLEAR_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_TESPI_QM202_FIELDCLEAR_CONDITION() {
    if (((LOG_GETSTATUS(MIS_QM202)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x1049a))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_TESPI_QM202_FIELDCLEAR_INFO() {
    SELF.AIVAR[15] = FALSE;
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_FieldClear_03_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Tespi_QM202_FieldClear_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_FieldClear_03_03");
    AI_STARTFACEANI(OTHER, S_SMILE, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Tespi_QM202_FieldClear_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Tespi_QM202_FieldClear_03_05");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    AI_STOPPROCESSINFOS(SELF);
    NPC_EXCHANGEROUTINE(SELF, START);
}

instance DIA_TESPI_NOTSURE(C_INFO) {
    NPC = 0xd094;
    NR = 1;
    CONDITION = DIA_TESPI_NOTSURE_CONDITION;
    INFORMATION = DIA_TESPI_NOTSURE_INFO;
    PERMANENT = TRUE;
    IMPORTANT = TRUE;
}

func int DIA_TESPI_NOTSURE_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 0x11d0f)) && (NPC_ISINSTATE(SELF, 0xf09f))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_TESPI_NOTSURE_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Tespi_NotSure_09_01");
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_TESPI_PICKPOCKET(C_INFO) {
    NPC = 0xd094;
    NR = 900;
    CONDITION = DIA_TESPI_PICKPOCKET_CONDITION;
    INFORMATION = DIA_TESPI_PICKPOCKET_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = PICKPOCKET_40;
}

func int DIA_TESPI_PICKPOCKET_CONDITION() {
    if (((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) && ((SELF.AIVAR[6]) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_TESPI_PICKPOCKET_INFO() {
    INFO_CLEARCHOICES(0x11d15);
    INFO_ADDCHOICE(0x11d15, DIALOG_BACK, 0x11d19);
    INFO_ADDCHOICE(0x11d15, DIALOG_PICKPOCKET, 0x11d18);
}

func void DIA_TESPI_PICKPOCKET_DOIT() {
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) {
        B_PICKPOCKET_AMBIENT_TIER_1();
        SELF.AIVAR[6] = TRUE;
        INFO_CLEARCHOICES(0x11d15);
    };
    AI_PLAYANI(HERO, T_CANNOTTAKE);
    PRINTSCREEN(PRINT_CANTPICKPOCKETTHISPERSON, -(1), -(1), FONT_SCREEN, 4);
    INFO_CLEARCHOICES(0x11d15);
}

func void DIA_TESPI_PICKPOCKET_BACK() {
    INFO_CLEARCHOICES(0x11d15);
}

