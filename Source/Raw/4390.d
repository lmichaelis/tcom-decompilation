instance DIA_FABIO_Q102_AFTERFIGHT_WOOD(C_INFO) {
    NPC = 0xc938;
    NR = 1;
    CONDITION = DIA_FABIO_Q102_AFTERFIGHT_WOOD_CONDITION;
    INFORMATION = DIA_FABIO_Q102_AFTERFIGHT_WOOD_INFO;
    PERMANENT = TRUE;
    IMPORTANT = TRUE;
}

func int DIA_FABIO_Q102_AFTERFIGHT_WOOD_CONDITION() {
    if (((FABIOWOODFIGHT) && (NPC_ISINSTATE(SELF, 0xf09f))) && ((LOG_GETSTATUS(MIS_Q102)) == (LOG_RUNNING))) {
        if (((SELF.AIVAR[64]) == (FALSE)) && ((SELF.AIVAR[0]) != (FIGHT_NONE))) {
            if ((SELF.AIVAR[45]) != (AF_NONE)) {
                return TRUE;
            };
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_FABIO_Q102_AFTERFIGHT_WOOD_INFO() {
    SELF.AIVAR[15] = TRUE;
    B_HEALNPC_SELF();
    if (((SELF.AIVAR[0]) == (FIGHT_LOST)) || ((Q101_FABIOFIGHT) == (1))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q102_AfterFight_Wood_05_01");
        AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q102_AfterFight_Wood_15_02");
        AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q102_AfterFight_Wood_05_03");
        AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q102_AfterFight_Wood_05_04");
        AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q102_AfterFight_Wood_05_05");
        Q102_FABIOGATHERWOOD = TRUE;
        Q102_FABIOGIVEMEAT = TRUE;
        RNG_FUCKFABIO = (RNG_FUCKFABIO) + (1);
        NPC_EXCHANGEROUTINE(NONE_5_FABIO, "Brushwood");
        MDL_APPLYOVERLAYMDS(SELF, HUMANSPOCKETWALKMDS);
    };
    if (((SELF.AIVAR[0]) == (FIGHT_WON)) || ((Q101_FABIOFIGHT) == (-(1)))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q102_AfterFight_Wood_05_06");
        AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q102_AfterFight_Wood_05_07");
    };
    AI_STOPPROCESSINFOS(SELF);
    Q101_FABIOAFTERFIGHT = TRUE;
    SELF.AIVAR[45] = AF_NONE;
    (SELF.AIVAR[64]) == (TRUE);
}

instance TRIA_FABIO_Q102_JORNTRIALOG(C_INFO) {
    NPC = 0xc938;
    NR = 1;
    CONDITION = TRIA_FABIO_Q102_JORNTRIALOG_CONDITION;
    INFORMATION = TRIA_FABIO_Q102_JORNTRIALOG_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int TRIA_FABIO_Q102_JORNTRIALOG_CONDITION() {
    if ((NPC_GETDISTTOWP(NONE_1_JORN, "PART_13_NAV_11")) <= (500)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void TRIA_FABIO_CHANGECAMERA_01() {
    WLD_SENDTRIGGER("KM_TRIALOG_01");
    WLD_SENDUNTRIGGER("KM_TRIALOG");
    TELEPORTNPCTOWP(0xc8ef, NONE_5_FABIO.WP);
    TELEPORTNPCTOWP(0xc938, NONE_1_JORN.WP);
    TELEPORTNPCTOWP(0x71b, "PART_13_NAV_10");
}

func void TRIA_FABIO_CHANGECAMERA_02() {
    WLD_SENDTRIGGER("KM_TRIALOG_02");
    WLD_SENDUNTRIGGER("KM_TRIALOG_01");
}

func void TRIA_FABIO_CHANGECAMERA_03() {
    WLD_SENDTRIGGER("KM_TRIALOG_03");
    WLD_SENDUNTRIGGER("KM_TRIALOG_02");
}

func void TRIA_FABIO_CHANGECAMERA_04() {
    WLD_SENDTRIGGER("KM_TRIALOG_04");
    WLD_SENDUNTRIGGER("KM_TRIALOG_03");
    WLD_SENDUNTRIGGER("KM_TRIALOG_05");
    WLD_SENDUNTRIGGER("KM_TRIALOG_07");
    WLD_SENDUNTRIGGER("KM_TRIALOG_06");
    WLD_SENDUNTRIGGER("KM_TRIALOG_08");
}

func void TRIA_FABIO_CHANGECAMERA_05() {
    WLD_SENDTRIGGER("KM_TRIALOG_05");
    WLD_SENDUNTRIGGER("KM_TRIALOG_03");
    WLD_SENDUNTRIGGER("KM_TRIALOG_04");
    WLD_SENDUNTRIGGER("KM_TRIALOG_07");
    WLD_SENDUNTRIGGER("KM_TRIALOG_06");
    WLD_SENDUNTRIGGER("KM_TRIALOG_08");
}

func void TRIA_FABIO_CHANGECAMERA_06() {
    WLD_SENDTRIGGER("KM_TRIALOG_07");
    WLD_SENDUNTRIGGER("KM_TRIALOG_03");
    WLD_SENDUNTRIGGER("KM_TRIALOG_04");
    WLD_SENDUNTRIGGER("KM_TRIALOG_05");
    WLD_SENDUNTRIGGER("KM_TRIALOG_06");
    WLD_SENDUNTRIGGER("KM_TRIALOG_08");
}

func void TRIA_FABIO_CHANGECAMERA_07() {
    WLD_SENDTRIGGER("KM_TRIALOG_06");
    WLD_SENDUNTRIGGER("KM_TRIALOG_07");
}

func void TRIA_FABIO_CHANGECAMERA_08() {
    WLD_SENDTRIGGER("KM_TRIALOG_08");
    WLD_SENDUNTRIGGER("KM_TRIALOG_03");
    WLD_SENDUNTRIGGER("KM_TRIALOG_04");
    WLD_SENDUNTRIGGER("KM_TRIALOG_05");
    WLD_SENDUNTRIGGER("KM_TRIALOG_06");
}

func void TRIA_FABIO_CHANGECAMERA_09() {
    WLD_SENDTRIGGER("KM_TRIALOG_09");
    WLD_SENDUNTRIGGER("KM_TRIALOG_03");
    WLD_SENDUNTRIGGER("KM_TRIALOG_04");
    WLD_SENDUNTRIGGER("KM_TRIALOG_05");
    WLD_SENDUNTRIGGER("KM_TRIALOG_06");
    WLD_SENDUNTRIGGER("KM_TRIALOG_08");
}

func void TRIA_FABIO_CHANGECAMERA_10() {
    WLD_SENDTRIGGER("KM_TRIALOG_10");
    WLD_SENDUNTRIGGER("KM_TRIALOG_09");
}

func void TRIA_FABIO_CHANGECAMERA_UNLOCKALL() {
    FF_APPLYONCEEXT(0x16426, 75, 4);
}

func void TRIA_FABIO_CHANGECAMERA_UNLOCKALL_APPLY() {
    TRIA_FABIO_CHANGECAMERA_UNLOCKALL_COUNT = (TRIA_FABIO_CHANGECAMERA_UNLOCKALL_COUNT) + (1);
    if ((TRIA_FABIO_CHANGECAMERA_UNLOCKALL_COUNT) == (4)) {
        TRIA_FABIO_CHANGECAMERA_UNLOCKALL_COUNT = 0;
        WLD_SENDUNTRIGGER("KM_TRIALOG");
        WLD_SENDUNTRIGGER("KM_TRIALOG_01");
        WLD_SENDUNTRIGGER("KM_TRIALOG_02");
        WLD_SENDUNTRIGGER("KM_TRIALOG_03");
        WLD_SENDUNTRIGGER("KM_TRIALOG_04");
        WLD_SENDUNTRIGGER("KM_TRIALOG_05");
        WLD_SENDUNTRIGGER("KM_TRIALOG_06");
        WLD_SENDUNTRIGGER("KM_TRIALOG_07");
        WLD_SENDUNTRIGGER("KM_TRIALOG_08");
        WLD_SENDUNTRIGGER("KM_TRIALOG_09");
        WLD_SENDUNTRIGGER("KM_TRIALOG_10");
        DIACAM_ENABLE();
        if ((NPC_HASEQUIPPEDMELEEWEAPON(NONE_5_FABIO)) == (FALSE)) {
            CREATEINVITEMS(NONE_5_FABIO, 0x84d0, 1);
            AI_EQUIPBESTMELEEWEAPON(NONE_5_FABIO);
        };
    };
}

var int TRIA_FABIO_CHANGECAMERA_UNLOCKALL_APPLY.TRIA_FABIO_CHANGECAMERA_UNLOCKALL_COUNT = 0;
func void TRIA_FABIO_Q102_JORNTRIALOG_INFO() {
    B_HEALNPC_SELF();
    Q102_JORNDISTANCELIMIT = FALSE;
    DIACAM_DISABLE();
    WLD_SENDTRIGGER("KM_TRIALOG");
    TRIA_INVITE(NONE_1_JORN);
    TRIA_START();
    AI_LOOKATNPC(OTHER, SELF);
    AI_LOOKATNPC(SELF, OTHER);
    AI_TURNTONPC(NONE_1_JORN, SELF);
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_JornTrialog_05_01");
    TRIA_NEXT(NONE_1_JORN);
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_JornTrialog_01_02");
    TRIA_NEXT(NONE_5_FABIO);
    AI_FUNCTION(SELF, 0x1641b);
    AI_TURNTONPC(SELF, HERO);
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_JornTrialog_05_03");
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_JornTrialog_05_04");
    TRIA_NEXT(NONE_1_JORN);
    AI_FUNCTION(SELF, 0x1641c);
    AI_TURNTONPC(SELF, HERO);
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_JornTrialog_01_05");
    TRIA_NEXT(NONE_5_FABIO);
    AI_FUNCTION(SELF, 0x1641d);
    AI_TURNTONPC(SELF, NONE_1_JORN);
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_JornTrialog_05_06");
    TRIA_NEXT(NONE_1_JORN);
    AI_TURNTONPC(SELF, NONE_1_JORN);
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_JornTrialog_01_07");
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_JornTrialog_01_08");
    TRIA_NEXT(NONE_5_FABIO);
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_JornTrialog_05_09");
    TRIA_NEXT(NONE_1_JORN);
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_JornTrialog_05_10");
    TRIA_NEXT(NONE_5_FABIO);
    AI_WAITTILLEND(NONE_1_JORN, SELF);
    AI_TURNTONPC(SELF, HERO);
    AI_TURNTONPC(NONE_1_JORN, HERO);
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_JornTrialog_05_11");
    INFO_CLEARCHOICES(0x16419);
    INFO_ADDCHOICE(0x16419, "Are you sure you remember the way to the village?", 0x16430);
    INFO_ADDCHOICE(0x16419, "What condition are the survivors in?", 0x16431);
    INFO_ADDCHOICE(0x16419, "Maybe we can find this village?", 0x16432);
    INFO_ADDCHOICE(0x16419, "Will we be safe in the cave?", 0x16433);
}

func void TRIA_FABIO_Q102_JORNTRIALOG_FINISH() {
    TRIA_FINISH();
    AI_STOPLOOKAT(SELF);
    AI_STOPLOOKAT(OTHER);
    AI_FUNCTION(SELF, 0xf253);
    AI_STOPPROCESSINFOS(SELF);
    AI_FUNCTION(SELF, 0x16425);
}

func void TRIA_FABIO_Q102_JORNTRIALOG_QUESTION_GOWITHFABIO() {
    Q102_FABIOCHOSEN = TRUE;
    TRIA_NEXT(NONE_1_JORN);
    AI_OUTPUT(OTHER, SELF, "TRIA_Fabio_Q102_JornTrialog_QuestionEnd_15_10");
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_JornTrialog_QuestionEnd_01_11");
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_JornTrialog_QuestionEnd_01_12");
    AI_LOGENTRY(TOPIC_Q102, LOG_Q102_GOWITHFABIO);
    TRIA_FABIO_Q102_JORNTRIALOG_FINISH();
}

func void TRIA_FABIO_Q102_JORNTRIALOG_QUESTION_GOWITHJORN() {
    Q102_JORNCHOSEN = TRUE;
    RNG_FUCKFABIO = (RNG_FUCKFABIO) + (1);
    AI_OUTPUT(OTHER, SELF, "TRIA_Fabio_Q102_JornTrialog_QuestionEnd_15_06");
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_JornTrialog_QuestionEnd_01_07");
    AI_TURNAWAY(SELF, OTHER);
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_JornTrialog_QuestionEnd_01_08");
    AI_WAIT(SELF, 0x3f4ccccd);
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_JornTrialog_QuestionEnd_01_09");
    AI_LOGENTRY(TOPIC_Q102, LOG_Q102_GOWITHJORN);
    TRIA_FABIO_Q102_JORNTRIALOG_FINISH();
}

func void TRIA_FABIO_Q102_JORNTRIALOG_QUESTION_END_NEXT() {
    TRIA_NEXT(NONE_5_FABIO);
    AI_FUNCTION(SELF, 0x16423);
    AI_OUTPUT(OTHER, SELF, "TRIA_Fabio_Q102_JornTrialog_QuestionEnd_15_01");
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_JornTrialog_QuestionEnd_05_02");
    AI_FUNCTION(SELF, 0x16424);
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_JornTrialog_QuestionEnd_05_03");
    TRIA_NEXT(NONE_1_JORN);
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_JornTrialog_QuestionEnd_01_05");
    INFO_CLEARCHOICES(0x16419);
    INFO_ADDCHOICE(0x16419, CHOICE_FABIO_Q102_JORNTRIALOG_QUESTION_GOWITHJORN, 0x1642b);
    INFO_ADDCHOICE(0x16419, CHOICE_FABIO_Q102_JORNTRIALOG_QUESTION_GOWITHFABIO, 0x1642a);
}

var int TRIA_FABIO_Q102_JORNTRIALOG_QUESTION_END_NEXT_ADDED = 0;
func void TRIA_FABIO_Q102_JORNTRIALOG_QUESTION_END() {
    FABIO_Q102_QUESTIONCOUNT = (FABIO_Q102_QUESTIONCOUNT) + (1);
    if ((TRIA_FABIO_Q102_JORNTRIALOG_QUESTION_END_NEXT_ADDED) == (FALSE)) {
        if ((FABIO_Q102_QUESTIONCOUNT) >= (2)) {
            INFO_ADDCHOICE(0x16419, "That's all I needed to know.", 0x1642c);
            TRIA_FABIO_Q102_JORNTRIALOG_QUESTION_END_NEXT_ADDED = TRUE;
        };
    };
}

var int TRIA_FABIO_Q102_JORNTRIALOG_QUESTION_END.FABIO_Q102_QUESTIONCOUNT = 0;
func void TRIA_FABIO_Q102_JORNTRIALOG_QUESTION1() {
    TRIA_NEXT(NONE_1_JORN);
    AI_FUNCTION(SELF, 0x1641e);
    AI_OUTPUT(OTHER, SELF, "TRIA_Fabio_Q102_JornTrialog_Question1_15_01");
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_JornTrialog_Question1_01_02");
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_JornTrialog_Question1_01_03");
    TRIA_FABIO_Q102_JORNTRIALOG_QUESTION_END();
}

func void TRIA_FABIO_Q102_JORNTRIALOG_QUESTION2() {
    TRIA_NEXT(NONE_5_FABIO);
    AI_FUNCTION(SELF, 0x1641f);
    AI_OUTPUT(OTHER, SELF, "TRIA_Fabio_Q102_JornTrialog_Question2_15_01");
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_JornTrialog_Question2_05_02");
    TRIA_FABIO_Q102_JORNTRIALOG_QUESTION_END();
}

func void TRIA_FABIO_Q102_JORNTRIALOG_QUESTION3() {
    TRIA_NEXT(NONE_5_FABIO);
    AI_FUNCTION(SELF, 0x16420);
    AI_OUTPUT(OTHER, SELF, "TRIA_Fabio_Q102_JornTrialog_Question3_15_01");
    AI_WAITTILLEND(SELF, OTHER);
    AI_FUNCTION(SELF, 0x16421);
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_JornTrialog_Question3_05_02");
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_JornTrialog_Question3_05_03");
    TRIA_FABIO_Q102_JORNTRIALOG_QUESTION_END();
}

func void TRIA_FABIO_Q102_JORNTRIALOG_QUESTION4() {
    TRIA_NEXT(NONE_5_FABIO);
    AI_FUNCTION(SELF, 0x16422);
    AI_OUTPUT(OTHER, SELF, "TRIA_Fabio_Q102_JornTrialog_Question4_15_01");
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_JornTrialog_Question4_05_02");
    TRIA_FABIO_Q102_JORNTRIALOG_QUESTION_END();
}

instance TRIA_FABIO_Q102_MOLERATS(C_INFO) {
    NPC = 0xc938;
    NR = 2;
    CONDITION = TRIA_FABIO_Q102_MOLERATS_CONDITION;
    INFORMATION = TRIA_FABIO_Q102_MOLERATS_INFO;
    IMPORTANT = TRUE;
}

func int TRIA_FABIO_Q102_MOLERATS_CONDITION() {
    if ((LOG_GETSTATUS(MIS_Q102)) == (LOG_RUNNING)) {
        if (((HLP_ISVALIDNPC(CAVE_MOLERAT_01)) && (HLP_ISVALIDNPC(CAVE_MOLERAT_02))) && (HLP_ISVALIDNPC(CAVE_MOLERAT_03))) {
            if (((NPC_ISDEAD(CAVE_MOLERAT_01)) && (NPC_ISDEAD(CAVE_MOLERAT_02))) && (NPC_ISDEAD(CAVE_MOLERAT_03))) {
                if (((NPC_GETDISTTOWP(NONE_5_FABIO, "PART_13_FABIO_CAVE_01")) <= (500)) && ((NPC_GETDISTTOWP(NONE_100012_KAZEEM, "PART_13_KAZEEM_CAVE_01")) <= (500))) {
                    return TRUE;
                };
            };
        };
    };
    return 0 /* !broken stack! */;
}

func void KAZEEMGOGATHERWOOD() {
    TRIA_WAIT();
    AI_TURNTONPC(SELF, NONE_100012_KAZEEM);
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_Molerats_NotMe_05_06");
    AI_TURNTONPC(NONE_100012_KAZEEM, SELF);
    TRIA_WAIT();
    TRIA_NEXT(NONE_100012_KAZEEM);
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_Molerats_NotMe_05_07");
    TRIA_WAIT();
    TRIA_NEXT(NONE_5_FABIO);
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_Molerats_NotMe_05_08");
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_Molerats_NotMe_05_09");
    TRIA_WAIT();
    TRIA_NEXT(NONE_100012_KAZEEM);
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_Molerats_NotMe_05_10");
    TRIA_WAIT();
    TRIA_NEXT(NONE_5_FABIO);
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_Molerats_NotMe_05_11");
    TRIA_FINISH();
    AI_STOPLOOKAT(SELF);
    AI_STOPLOOKAT(OTHER);
    AI_FUNCTION(NONE_5_FABIO, 0x16443);
    AI_STOPPROCESSINFOS(SELF);
    AI_FUNCTION(SELF, 0xf25c);
}

var int KAZEEMGATHERWOOD = 0;
func void TRIA_FABIO_Q102_MOLERATS_INFO() {
    NPC_EXCHANGEROUTINE(NONE_5_FABIO, "CAVE");
    TRIA_INVITE(NONE_100012_KAZEEM);
    TRIA_START();
    AI_LOOKATNPC(OTHER, SELF);
    TRIA_WAIT();
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_Molerats_05_01");
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_Molerats_05_02");
    AI_OUTPUT(OTHER, SELF, "TRIA_Fabio_Q102_Molerats_15_03");
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_Molerats_05_04");
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_Molerats_05_05");
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_Molerats_05_06");
    if ((Q101_FABIOFIGHT) != (0)) {
        AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_Molerats_05_07");
        AI_OUTPUT(OTHER, SELF, "TRIA_Fabio_Q102_Molerats_15_08");
        AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_Molerats_05_09");
    };
    TRIA_WAIT();
    AI_TURNTONPC(SELF, NONE_100012_KAZEEM);
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_Molerats_05_10");
    AI_OUTPUT(OTHER, SELF, "TRIA_Fabio_Q102_Molerats_15_11");
    TRIA_WAIT();
    AI_TURNTONPC(SELF, HERO);
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_Molerats_05_12");
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_Molerats_05_13");
    INFO_ADDCHOICE(0x16434, "All right, I'll go.", 0x16439);
    INFO_ADDCHOICE(0x16434, "Go get that brushwood yourself.", 0x1643a);
    if ((Q101_FABIOWANTBEER) == (2)) {
        INFO_ADDCHOICE(0x16434, "I brought you a beer, remember?", 0x1643f);
    };
    INFO_ADDCHOICE(0x16434, "Send someone else.", 0x1643b);
}

func void TRIA_FABIO_Q102_MOLERAT_OKAY() {
    AI_OUTPUT(OTHER, SELF, "TRIA_Fabio_Q102_Molerats_Okay_15_01");
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_Molerats_Okay_05_02");
    AI_OUTPUT(OTHER, SELF, "TRIA_Fabio_Q102_Molerats_Okay_15_03");
    TRIA_FINISH();
    AI_STOPLOOKAT(SELF);
    AI_STOPLOOKAT(OTHER);
    AI_STOPPROCESSINFOS(SELF);
    AI_FUNCTION(SELF, 0xf25c);
}

func void TRIA_FABIO_Q102_MOLERAT_NOWAY() {
    INFO_CLEARCHOICES(0x16434);
    AI_OUTPUT(OTHER, SELF, "TRIA_Fabio_Q102_Molerats_NoWay_15_01");
    if ((Q101_FABIOFIGHT) == (1)) {
        AI_OUTPUT(OTHER, SELF, "TRIA_Fabio_Q102_Molerats_NoWay_15_02");
        AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_Molerats_NoWay_05_03");
        TRIA_FINISH();
        AI_STOPLOOKAT(SELF);
        AI_STOPLOOKAT(OTHER);
        AI_STOPPROCESSINFOS(SELF);
        AI_FUNCTION(SELF, 0x16444);
        AI_FUNCTION(SELF, 0xf25c);
    };
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_Molerats_NoWay_05_04");
    AI_OUTPUT(OTHER, SELF, "TRIA_Fabio_Q102_Molerats_NoWay_15_05");
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_Molerats_NoWay_05_06");
    INFO_ADDCHOICE(0x16434, "Okay, okay, I'll go...", 0x1643c);
    INFO_ADDCHOICE(0x16434, "Make me.", 0x1643e);
}

func void TRIA_FABIO_Q102_MOLERAT_NOTME() {
    AI_OUTPUT(OTHER, SELF, "TRIA_Fabio_Q102_Molerats_NotMe_15_01");
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_Molerats_NotMe_05_02");
    AI_OUTPUT(OTHER, SELF, "TRIA_Fabio_Q102_Molerats_NotMe_15_03");
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_Molerats_NotMe_05_04");
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_Molerats_NotMe_05_05");
    KAZEEMGOGATHERWOOD();
}

func void TRIA_FABIO_MOLERAT_CALMDOWN() {
    AI_OUTPUT(OTHER, SELF, "TRIA_Fabio_Q102_Molerats_CalmDown_15_01");
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_Molerats_CalmDown_05_02");
    TRIA_FINISH();
    AI_STOPLOOKAT(SELF);
    AI_STOPLOOKAT(OTHER);
    AI_STOPPROCESSINFOS(SELF);
    AI_FUNCTION(SELF, 0xf25c);
}

var int FABIOWOODFIGHT = 0;
func void TRIA_FABIO_MOLERAT_FIGHT() {
    SELF.AIVAR[15] = FALSE;
    SELF.AIVAR[96] = 10;
    FABIOWOODFIGHT = TRUE;
    AI_OUTPUT(OTHER, SELF, "TRIA_Fabio_Q102_Molerats_Fight_15_01");
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_Molerats_Fight_05_02");
    TRIA_FINISH();
    AI_STOPLOOKAT(SELF);
    AI_STOPLOOKAT(OTHER);
    SELF.AIVAR[45] = AF_RUNNING;
    AI_STOPPROCESSINFOS(SELF);
    B_ATTACK(SELF, OTHER, 0, 0);
    AI_FUNCTION(SELF, 0xf25c);
}

func void TRIA_FABIO_Q102_MOLERAT_BEER() {
    Q102_FABIOGIVEMEAT = TRUE;
    AI_OUTPUT(OTHER, SELF, "TRIA_Fabio_Q102_Molerats_Beer_15_01");
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_Molerats_Beer_05_02");
    AI_OUTPUT(OTHER, SELF, "TRIA_Fabio_Q102_Molerats_Beer_15_03");
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_Molerats_Beer_05_04");
    AI_OUTPUT(SELF, OTHER, "TRIA_Fabio_Q102_Molerats_Beer_05_05");
    KAZEEMGOGATHERWOOD();
}

var int FABIOKAZEEMSMALLTALK = 0;
var int FABIOKAZEEMSMALLTALK2 = 0;
var int FABIOAFTERFIRE = 0;
func void TRIA_FABIO_Q102_KAZEEM_RTNCHANGE() {
    KAZEEMGATHERWOOD = 1;
    B_STARTOTHERROUTINE(NONE_100012_KAZEEM, "Brushwood");
}

func void TRIA_FABIO_Q102_FABIO_RTNCHANGE() {
    NPC_EXCHANGEROUTINE(NONE_5_FABIO, "Brushwood");
    Q102_FABIOGATHERWOOD = TRUE;
    Q102_FABIOGIVEMEAT = TRUE;
}

func void DIA_FABIO_KAZEEM_FIREPLACE() {
    RUPERT_CAVEGUARD_PASS = TRUE;
    DIACAM_DISABLE();
    WLD_SENDTRIGGER("KM_FABIOFIREPLACE_01");
    AI_SETWALKMODE(NONE_5_FABIO, NPC_WALK);
    AI_SETWALKMODE(HERO, NPC_WALK);
    AI_GOTOFP(NONE_5_FABIO, "FP_CAMPFIRE_CAVE_07");
    AI_GOTOWP(HERO, "PART13_CAVE_HERO");
    AI_ALIGNTOFP(NONE_5_FABIO);
    AI_TURNTONPC(HERO, NONE_5_FABIO);
    AI_FUNCTION(NONE_5_FABIO, 0x16449);
    AI_PLAYANI(NONE_5_FABIO, T_PLUNDER);
    AI_FUNCTION(NONE_5_FABIO, 0x16446);
    AI_TURNTONPC(NONE_5_FABIO, NONE_100010_DARRYL);
    AI_OUTPUT(NONE_5_FABIO, HERO, "DIA_Fabio_Q102_FirePlace_05_01");
    AI_OUTPUT(NONE_5_FABIO, HERO, "DIA_Fabio_Q102_FirePlace_05_02");
    AI_FUNCTION(NONE_5_FABIO, 0xf254);
    AI_STOPPROCESSINFOS(NONE_5_FABIO);
    Q102_FABIO_READYTOSLEEP = TRUE;
    MOB_CHANGEFOCUSNAME("Q102_FIREPLACE", "MOBNAME_SITFIREPLACE");
    WLD_INSERTNPC(0xc4a1, "PART13_PATH_11");
    WLD_INSERTNPC(0xc4a3, "PART13_PATH_11");
    WLD_INSERTNPC(0xc4a5, "PART13_PATH_11");
}

func void FABIO_Q102_CHANGERESTRTN() {
    B_STARTOTHERROUTINE(NONE_100010_DARRYL, "SitCave");
    NPC_REFRESH(NONE_100010_DARRYL);
    B_STARTOTHERROUTINE(NONE_100011_MAIWEN, "SitCave");
    NPC_REFRESH(NONE_100011_MAIWEN);
    B_STARTOTHERROUTINE(NONE_100012_KAZEEM, "SitCave");
    NPC_REFRESH(NONE_100012_KAZEEM);
    B_STARTOTHERROUTINE(NONE_100007_RUPERT, "SitCave");
    NPC_REFRESH(NONE_100007_RUPERT);
    B_STARTOTHERROUTINE(NONE_3_EZEKIEL, "Q102_SitCave");
    NPC_REFRESH(NONE_3_EZEKIEL);
    B_STARTOTHERROUTINE(NONE_100009_LEA, "Q102_SitCave");
    NPC_REFRESH(NONE_100009_LEA);
    B_STARTOTHERROUTINE(NONE_100008_ANA, "Q102_SitCave");
    NPC_REFRESH(NONE_100008_ANA);
    HERO.AIVAR[4] = FALSE;
}

instance DIA_FABIO_Q102_WOOD(C_INFO) {
    NPC = 0xc938;
    NR = 2;
    CONDITION = DIA_FABIO_Q102_WOOD_CONDITION;
    INFORMATION = DIA_FABIO_Q102_WOOD_INFO;
    IMPORTANT = FALSE;
    DESCRIPTION = "Here you are. I brought some brushwood.";
}

func int DIA_FABIO_Q102_WOOD_CONDITION() {
    if (((((NPC_KNOWSINFO(OTHER, 0x16434)) && ((KAZEEMGATHERWOOD) == (FALSE))) && ((Q102_FABIOGATHERWOOD) == (FALSE))) && ((NPC_HASITEMS(OTHER, 0x90a5)) > (0))) && ((LOG_GETSTATUS(MIS_Q102)) == (LOG_RUNNING))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void FABIO_FIREPLACETRIGGER() {
    FABIOAFTERFIRE = TRUE;
    WLD_SENDTRIGGER("FABIO_FIREPLACE");
}

func void FABIO_Q102_FIREPLACECUTSCENE() {
    AI_STOPLOOKAT(SELF);
    AI_WAITTILLEND(SELF, OTHER);
    AI_WAITTILLEND(OTHER, SELF);
    AI_FUNCTION(SELF, 0x16445);
}

func void DIA_FABIO_Q102_WOOD_INFO() {
    MARVINCURRENTBRUSHWOOD = NPC_HASITEMS(OTHER, 0x90a5);
    Q102_FABIOGIVEMEAT = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q102_Wood_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q102_Wood_05_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q102_Wood_05_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q102_Wood_05_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q102_Wood_05_05");
    NPC_REMOVEINVITEMS(SELF, 0x90a5, MARVINCURRENTBRUSHWOOD);
    FABIO_Q102_FIREPLACECUTSCENE();
    B_GIVEINVITEMS(OTHER, SELF, 0x90a5, MARVINCURRENTBRUSHWOOD);
}

var int DIA_FABIO_Q102_WOOD_INFO.MARVINCURRENTBRUSHWOOD = 0;
instance DIA_FABIO_Q102_KAZEMBACK(C_INFO) {
    NPC = 0xc938;
    NR = 1;
    CONDITION = DIA_FABIO_Q102_KAZEMBACK_CONDITION;
    INFORMATION = DIA_FABIO_Q102_KAZEMBACK_INFO;
    IMPORTANT = TRUE;
}

func int DIA_FABIO_Q102_KAZEMBACK_CONDITION() {
    if (((FABIOKAZEEMSMALLTALK2) == (TRUE)) && ((LOG_GETSTATUS(MIS_Q102)) == (LOG_RUNNING))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_FABIO_Q102_KAZEMBACK_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q102_KazemBack_05_01");
    FABIO_Q102_FIREPLACECUTSCENE();
}

instance DIA_FABIO_Q102_MEAT(C_INFO) {
    NPC = 0xc938;
    NR = 2;
    CONDITION = DIA_FABIO_Q102_MEAT_CONDITION;
    INFORMATION = DIA_FABIO_Q102_MEAT_INFO;
    IMPORTANT = FALSE;
    DESCRIPTION = "You've got a tasty morsel there. Can I try it?";
}

func int DIA_FABIO_Q102_MEAT_CONDITION() {
    if (((FABIOAFTERFIRE) && ((FABIOTOSILBACH) == (FALSE))) && ((LOG_GETSTATUS(MIS_Q102)) == (LOG_RUNNING))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_FABIO_Q102_MEAT_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q102_Meat_15_01");
    if (Q102_FABIOGIVEMEAT) {
        AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q102_Meat_05_02");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q102_Meat_05_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q102_Meat_05_04");
}

instance DIA_FABIO_Q102_NIGHT(C_INFO) {
    NPC = 0xc938;
    NR = 2;
    CONDITION = DIA_FABIO_Q102_NIGHT_CONDITION;
    INFORMATION = DIA_FABIO_Q102_NIGHT_INFO;
    IMPORTANT = FALSE;
    DESCRIPTION = "Do you think this night will be peaceful?";
}

func int DIA_FABIO_Q102_NIGHT_CONDITION() {
    if ((FABIOTOSILBACH) == (FALSE)) {
        if ((NPC_KNOWSINFO(OTHER, 0x16447)) || ((FABIOAFTERFIRE) && ((LOG_GETSTATUS(MIS_Q102)) == (LOG_RUNNING)))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_FABIO_Q102_NIGHT_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q102_Night_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q102_Night_05_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q102_Night_05_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q102_Night_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q102_Night_05_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q102_Night_05_06");
    AI_STOPPROCESSINFOS(SELF);
    AI_LOGENTRY(TOPIC_Q102, LOG_Q102_FABIO_SLEEPTIME);
}

instance DIA_FABIO_Q102_TOSILBACH(C_INFO) {
    NPC = 0xc938;
    NR = 2;
    CONDITION = DIA_FABIO_Q102_TOSILBACH_CONDITION;
    INFORMATION = DIA_FABIO_Q102_TOSILBACH_INFO;
    IMPORTANT = TRUE;
}

func int DIA_FABIO_Q102_TOSILBACH_CONDITION() {
    if (((FABIOTOSILBACH) == (TRUE)) && ((LOG_GETSTATUS(MIS_Q102)) == (LOG_RUNNING))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_FABIO_Q102_TOSILBACH_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q102_ToSilbach_05_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q102_ToSilbach_05_02");
    INFO_CLEARCHOICES(0x16456);
    INFO_ADDCHOICE(0x16456, "Let's go.", 0x16459);
    INFO_ADDCHOICE(0x16456, "Why us?", 0x1645a);
}

func void DIA_FABIO_Q102_TOSILBACH_OKAY() {
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q102_ToSilbach_Okay_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q102_ToSilbach_Okay_05_02");
    AI_LOGENTRY(TOPIC_Q102, LOG_Q102_FABIO_BEACH);
    AI_STOPPROCESSINFOS(SELF);
}

func void DIA_FABIO_Q102_TOSILBACH_WHY() {
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q102_ToSilbach_Why_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q102_ToSilbach_Why_05_02");
}

instance DIA_FABIO_Q103_VILLAGE(C_INFO) {
    NPC = 0xc938;
    NR = 2;
    CONDITION = DIA_FABIO_Q103_VILLAGE_CONDITION;
    INFORMATION = DIA_FABIO_Q103_VILLAGE_INFO;
    IMPORTANT = TRUE;
}

func int DIA_FABIO_Q103_VILLAGE_CONDITION() {
    if (((((SILBACHSLEEP) == (2)) && (NPC_ISINSTATE(SELF, 0xf09f))) && ((LOG_GETSTATUS(MIS_Q102)) == (LOG_SUCCESS))) && ((Q102_JORNCHOSEN) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_FABIO_Q103_VILLAGE_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q103_Village_05_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q103_Village_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q103_Village_05_03");
}

instance DIA_FABIO_GQ001_JORNGONE(C_INFO) {
    NPC = 0xc938;
    NR = 2;
    CONDITION = DIA_FABIO_GQ001_JORNGONE_CONDITION;
    INFORMATION = DIA_FABIO_GQ001_JORNGONE_INFO;
    IMPORTANT = TRUE;
}

func int DIA_FABIO_GQ001_JORNGONE_CONDITION() {
    if (((JORNGONEKURTTALKED) == (TRUE)) && ((HERO.GUILD) == (GIL_NONE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_FABIO_GQ001_JORNGONE_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_GQ001_JornGone_05_01");
    INFO_CLEARCHOICES(0x1645e);
    INFO_ADDCHOICE(0x1645e, "Do you know anything about Jorn's disappearance?", 0x16461);
}

func void DIA_FABIO_GQ001_JORNGONE_UKNOW() {
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_GQ001_JornGone_uknow_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_GQ001_JornGone_uknow_05_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_GQ001_JornGone_uknow_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_GQ001_JornGone_uknow_05_04");
    INFO_CLEARCHOICES(0x1645e);
    INFO_ADDCHOICE(0x1645e, "Okay, thanks.", 0x16462);
    INFO_ADDCHOICE(0x1645e, "Are you sure?", 0x16463);
}

func void DIA_FABIO_GQ001_JORNGONE_THANKS() {
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_GQ001_JornGone_thanks_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_GQ001_JornGone_thanks_05_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_GQ001_JornGone_thanks_05_03");
    AI_STOPPROCESSINFOS(SELF);
}

func void DIA_FABIO_GQ001_JORNGONE_USURE() {
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_GQ001_JornGone_usure_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_GQ001_JornGone_usure_05_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_GQ001_JornGone_usure_15_04");
    AI_STOPPROCESSINFOS(SELF);
}

var int PLAYERWONTHELPFABIOWITHBEER = 0;
var int Q104_FABIODEAL = 0;
instance DIA_FABIO_Q104_FRATERNALASSISTANCE(C_INFO) {
    NPC = 0xc938;
    NR = 1;
    CONDITION = DIA_FABIO_Q104_FRATERNALASSISTANCE_CONDITION;
    INFORMATION = DIA_FABIO_Q104_FRATERNALASSISTANCE_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_FABIO_Q104_FRATERNALASSISTANCE_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q104)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x1568f))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_FABIO_Q104_FRATERNALASSISTANCE_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q104_FraternalAssistance_05_00");
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q104_FraternalAssistance_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q104_FraternalAssistance_05_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q104_FraternalAssistance_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q104_FraternalAssistance_05_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q104_FraternalAssistance_05_04");
    INFO_CLEARCHOICES(0x16466);
    INFO_ADDCHOICE(0x16466, "You could finally do something on your own.", 0x1646c);
    INFO_ADDCHOICE(0x16466, "What's in it for me?", 0x16469);
    INFO_ADDCHOICE(0x16466, "What specifically do you want me to do?", 0x1646a);
    INFO_CLEARCHOICES(0x16474);
    INFO_ADDCHOICE(0x16474, "What specifically do you want me to do?", 0x1646a);
}

func void DIA_FABIO_Q104_FRATERNALASSISTANCE1() {
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q104_FraternalAssistance1_15_01");
    if ((Q101_FABIOFIGHT) == (1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q104_FraternalAssistance1_05_00");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q104_FraternalAssistance1_05_01");
}

func void DIA_FABIO_Q104_FRATERNALASSISTANCE2() {
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q104_FraternalAssistance2_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q104_FraternalAssistance2_05_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q104_FraternalAssistance2_05_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q104_FraternalAssistance2_05_02");
    INFO_CLEARCHOICES(0x16466);
    INFO_ADDCHOICE(0x16466, "I'll see what I can do.", 0x1646b);
    INFO_ADDCHOICE(0x16466, "You could finally do something on your own.", 0x1646c);
    INFO_CLEARCHOICES(0x16474);
    INFO_ADDCHOICE(0x16474, "I'll see what I can do.", 0x1646b);
}

func void DIA_FABIO_Q104_FRATERNALASSISTANCE2_1() {
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q104_FraternalAssistance2_1_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q104_FraternalAssistance2_1_05_01");
    Q104_FABIODEAL = TRUE;
    if ((Q101_FABIOFIGHT) == (1)) {
        AI_LOGENTRY(TOPIC_Q104, LOG_Q104_FABIOBEEF1);
    };
    AI_LOGENTRY(TOPIC_Q104, LOG_Q104_FABIOBEEF2);
    INFO_CLEARCHOICES(0x16466);
    INFO_CLEARCHOICES(0x16474);
}

func void DIA_FABIO_Q104_FRATERNALASSISTANCE3() {
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q104_FraternalAssistance3_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q104_FraternalAssistance3_05_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q104_FraternalAssistance3_05_02");
    INFO_CLEARCHOICES(0x16466);
    PLAYERWONTHELPFABIOWITHBEER = TRUE;
    AI_STOPPROCESSINFOS(SELF);
}

var int FABIOWONTWORKWITHOUTBEER = 0;
instance DIA_FABIO_Q104_STAKEANDBEER(C_INFO) {
    NPC = 0xc938;
    NR = 1;
    CONDITION = DIA_FABIO_Q104_STAKEANDBEER_CONDITION;
    INFORMATION = DIA_FABIO_Q104_STAKEANDBEER_INFO;
    PERMANENT = FALSE;
    IMPORTANT = FALSE;
    DESCRIPTION = "A well-done steak for your lordship.";
}

func int DIA_FABIO_Q104_STAKEANDBEER_CONDITION() {
    if ((LOG_GETSTATUS(MIS_Q104)) == (LOG_RUNNING)) {
        if (((NPC_KNOWSINFO(OTHER, 0x16466)) && ((Q104_FABIODEAL) == (TRUE))) && ((NPC_HASITEMS(OTHER, 0x8e3d)) >= (1))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_FABIO_Q104_STAKEANDBEER_INFO() {
    NPC_REMOVEINVITEMS(OTHER, 0x8e3d, 1);
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q104_StakeAndBeer_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q104_StakeAndBeer_05_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q104_StakeAndBeer_05_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q104_StakeAndBeer_05_04");
    Q104_FABIODEAL = FALSE;
    B_GIVEPLAYERXP(XP_Q104_BEEFFORFABIO);
    CREATEINVITEMS(SELF, 0x859b, Q104_FABIOREWARD);
    if (((FABIOWONTWORKWITHOUTBEER) == (TRUE)) && ((LOG_GETSTATUS(MIS_Q104)) == (LOG_RUNNING))) {
        AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q104_StakeAndBeer_15_05");
        AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q104_StakeAndBeer_05_06");
        AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q104_StakeAndBeer_05_07");
        AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q104_StakeAndBeer_15_08");
        AI_WAITTILLEND(SELF, OTHER);
        AI_WAITTILLEND(OTHER, SELF);
        B_STANDUP();
        AI_LOGENTRY(TOPIC_Q104, LOG_Q104_FABIOWORKFORALBYN);
        AI_STOPPROCESSINFOS(SELF);
        NPC_EXCHANGEROUTINE(SELF, "Q104Wait");
        Q104_FABIOBROTHERLYWORK = 1;
        NPC_EXCHANGEROUTINE(BAU_11012_FARMER, "Pub");
    };
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, Q104_FABIOREWARD);
}

instance DIA_FABIO_Q104_WORKFORALBYN(C_INFO) {
    NPC = 0xc938;
    NR = 1;
    CONDITION = DIA_FABIO_Q104_WORKFORALBYN_CONDITION;
    INFORMATION = DIA_FABIO_Q104_WORKFORALBYN_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I'm back from the Elder.";
}

func int DIA_FABIO_Q104_WORKFORALBYN_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 0x1568f)) && ((LOG_GETSTATUS(MIS_Q104)) == (LOG_RUNNING))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_FABIO_Q104_WORKFORALBYN_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q104_WorkForAlbyn_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q104_WorkForAlbyn_05_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q104_WorkForAlbyn_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q104_WorkForAlbyn_05_03");
    if (NPC_KNOWSINFO(OTHER, 0x1646e)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q104_WorkForAlbyn_05_04");
        AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q104_WorkForAlbyn_05_05");
        AI_WAITTILLEND(SELF, OTHER);
        AI_WAITTILLEND(OTHER, SELF);
        B_STANDUP();
        NPC_EXCHANGEROUTINE(SELF, "Q104Wait");
        AI_STOPPROCESSINFOS(SELF);
        Q104_FABIOBROTHERLYWORK = 1;
        NPC_EXCHANGEROUTINE(BAU_11012_FARMER, "Pub");
        AI_LOGENTRY(TOPIC_Q104, LOG_Q104_FABIOWORKFORALBYN);
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q104_WorkForAlbyn_05_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q104_WorkForAlbyn_05_07");
    FABIOWONTWORKWITHOUTBEER = TRUE;
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_FABIO_Q104_ANGEREDWORKFORALBYN(C_INFO) {
    NPC = 0xc938;
    NR = 1;
    CONDITION = DIA_FABIO_Q104_ANGEREDWORKFORALBYN_CONDITION;
    INFORMATION = DIA_FABIO_Q104_ANGEREDWORKFORALBYN_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Maybe we can work it out?";
}

func int DIA_FABIO_Q104_ANGEREDWORKFORALBYN_CONDITION() {
    if ((((FABIOWONTWORKWITHOUTBEER) == (TRUE)) && ((PLAYERWONTHELPFABIOWITHBEER) == (TRUE))) && ((LOG_GETSTATUS(MIS_Q104)) == (LOG_RUNNING))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_FABIO_Q104_ANGEREDWORKFORALBYN_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q104_AngeredWorkForAlbyn_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q104_AngeredWorkForAlbyn_05_01");
    DIA_FABIO_Q104_FRATERNALASSISTANCE2();
}

instance DIA_FABIO_SQ103_WENEEDHELP(C_INFO) {
    NPC = 0xc938;
    NR = 1;
    CONDITION = DIA_FABIO_SQ103_WENEEDHELP_CONDITION;
    INFORMATION = DIA_FABIO_SQ103_WENEEDHELP_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "We need to go back for Darryl and Maiwen.";
}

func int DIA_FABIO_SQ103_WENEEDHELP_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_SQ103)) == (LOG_RUNNING)) && ((Q102_FABIOCHOSEN) == (TRUE))) && (!(NPC_KNOWSINFO(OTHER, 0x16593)))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_FABIO_SQ103_WENEEDHELP_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_SQ103_WeNeedHelp_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_SQ103_WeNeedHelp_05_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_SQ103_WeNeedHelp_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_SQ103_WeNeedHelp_05_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_SQ103_WeNeedHelp_05_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_SQ103_WeNeedHelp_05_06");
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_SQ103_WeNeedHelp_15_07");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_SQ103_WeNeedHelp_05_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_SQ103_WeNeedHelp_05_09");
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_FABIO_SQ103_MAIWENISDEAD(C_INFO) {
    NPC = 0xc938;
    NR = 1;
    CONDITION = DIA_FABIO_SQ103_MAIWENISDEAD_CONDITION;
    INFORMATION = DIA_FABIO_SQ103_MAIWENISDEAD_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I see you care a hell of a lot about your comrades.";
}

func int DIA_FABIO_SQ103_MAIWENISDEAD_CONDITION() {
    if ((LOG_GETSTATUS(MIS_SQ103)) == (LOG_SUCCESS)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_FABIO_SQ103_MAIWENISDEAD_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_SQ103_MaiwenIsDead_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_SQ103_MaiwenIsDead_05_02");
    if ((SQ103_MAIWENDEAD) == (TRUE)) {
        AI_OUTPUT(OTHER, SELF, "DIA_Fabio_SQ103_MaiwenIsDead_15_03");
        AI_OUTPUT(OTHER, SELF, "DIA_Fabio_SQ103_MaiwenIsDead_15_04");
        AI_OUTPUT(SELF, OTHER, "DIA_Fabio_SQ103_MaiwenIsDead_05_05");
    };
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_SQ103_MaiwenIsNotDead_15_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_SQ103_MaiwenIsNotDead_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_SQ103_MaiwenIsNotDead_05_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_SQ103_MaiwenIsDead_05_06");
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_SQ103_MaiwenIsDead_15_07");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_SQ103_MaiwenIsDead_05_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_SQ103_MaiwenIsDead_05_09");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_SQ103_MaiwenIsDead_05_10");
    if ((SQ103_MAIWENDEAD) == (TRUE)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Fabio_SQ103_MaiwenIsDead_05_11");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_SQ103_MaiwenIsDead_05_12");
}

instance DIA_FABIO_GQ001_WHEREISJORN(C_INFO) {
    NPC = 0xc938;
    NR = 15;
    CONDITION = DIA_FABIO_GQ001_WHEREISJORN_CONDITION;
    INFORMATION = DIA_FABIO_GQ001_WHEREISJORN_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Do you know anything about Jorn's disappearance?";
}

func int DIA_FABIO_GQ001_WHEREISJORN_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 0x1575a)) && ((LOG_GETSTATUS(MIS_Q201)) == (0))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void FABIO_GQ001_ARENAFIGHT() {
    GQ001_FABIOFIGHT = 1;
    SELF.AIVAR[45] = AF_RUNNING;
    AI_STOPPROCESSINFOS(SELF);
    B_ATTACK(SELF, OTHER, AR_NONE, 1);
}

func void DIA_FABIO_GQ001_INFORMATIONS() {
    GQ001_INFOFROMFABIO = TRUE;
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_GQ001_WhereIsJorn_IWillTellAlbyn_05_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_GQ001_WhereIsJorn_05_07");
}

func void DIA_FABIO_GQ001_WHEREISJORN_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_GQ001_WhereIsJorn_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_GQ001_WhereIsJorn_05_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_GQ001_WhereIsJorn_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_GQ001_WhereIsJorn_05_04");
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_GQ001_WhereIsJorn_15_05");
    if ((Q101_FABIOFIGHT) == (1)) {
        DIA_FABIO_GQ001_INFORMATIONS();
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_GQ001_WhereIsJorn_05_08");
    INFO_CLEARCHOICES(0x1647d);
    INFO_ADDCHOICE(0x1647d, "Tell me what you know or I'll teach you a lesson.", 0x16482);
    INFO_ADDCHOICE(0x1647d, "The Elder will know everything.", 0x16483);
}

func void DIA_FABIO_GQ001_WHEREISJORN_IWILLBEATYOU() {
    RNG_FUCKFABIO = (RNG_FUCKFABIO) + (1);
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_GQ001_WhereIsJorn_IWillBeatYou_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_GQ001_WhereIsJorn_IWillBeatYou_05_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_GQ001_WhereIsJorn_IWillBeatYou_05_03");
    INFO_CLEARCHOICES(0x1647d);
    FABIO_GQ001_ARENAFIGHT();
}

func void DIA_FABIO_GQ001_WHEREISJORN_IWILLTELLALBYN() {
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_GQ001_WhereIsJorn_IWillTellAlbyn_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_GQ001_WhereIsJorn_IWillTellAlbyn_05_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_GQ001_WhereIsJorn_IWillTellAlbyn_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_GQ001_WhereIsJorn_IWillTellAlbyn_05_04");
    DIA_FABIO_GQ001_INFORMATIONS();
    INFO_CLEARCHOICES(0x1647d);
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_FABIO_GQ001_FIGHTWITHMEAGAIN(C_INFO) {
    NPC = 0xc938;
    NR = 16;
    CONDITION = DIA_FABIO_GQ001_FIGHTWITHMEAGAIN_CONDITION;
    INFORMATION = DIA_FABIO_GQ001_FIGHTWITHMEAGAIN_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Tell me what you know or I'll teach you a lesson.";
}

func int DIA_FABIO_GQ001_FIGHTWITHMEAGAIN_CONDITION() {
    if (((GQ001_FABIOFIGHT) == (3)) && ((LOG_GETSTATUS(MIS_Q201)) != (LOG_RUNNING))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_FABIO_GQ001_FIGHTWITHMEAGAIN_INFO() {
    DIA_FABIO_GQ001_WHEREISJORN_IWILLBEATYOU();
}

instance DIA_FABIO_GQ001_AFTERFIGH(C_INFO) {
    NPC = 0xc938;
    NR = 17;
    CONDITION = DIA_FABIO_GQ001_AFTERFIGHT_CONDITION;
    INFORMATION = DIA_FABIO_GQ001_AFTERFIGHT_INFO;
    PERMANENT = TRUE;
    IMPORTANT = TRUE;
}

func int DIA_FABIO_GQ001_AFTERFIGHT_CONDITION() {
    if (((GQ001_FABIOFIGHT) == (1)) && ((LOG_GETSTATUS(MIS_Q201)) != (LOG_RUNNING))) {
        if (((SELF.AIVAR[64]) == (FALSE)) && ((SELF.AIVAR[0]) != (FIGHT_NONE))) {
            if ((SELF.AIVAR[45]) != (AF_NONE)) {
                if (NPC_ISINSTATE(SELF, 0xf09f)) {
                    return TRUE;
                };
            };
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_FABIO_GQ001_AFTERFIGHT_INFO() {
    if ((SELF.AIVAR[0]) == (FIGHT_WON)) {
        GQ001_FABIOFIGHT = 3;
        AI_OUTPUT(SELF, OTHER, "DIA_Fabio_GQ001_AfterFight_Lost_05_01");
    };
    GQ001_INFOFROMFABIO = TRUE;
    GQ001_FABIOFIGHT = 2;
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_GQ001_AfterFight_Won_05_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_GQ001_AfterFight_Won_15_02");
    DIA_FABIO_GQ001_INFORMATIONS();
    AI_STOPPROCESSINFOS(SELF);
    SELF.AIVAR[45] = AF_NONE;
    SELF.AIVAR[64] = TRUE;
}

instance DIA_FABIO_Q401_MEETING(C_INFO) {
    NPC = 0xc938;
    NR = 1;
    CONDITION = DIA_FABIO_Q401_MEETING_CONDITION;
    INFORMATION = DIA_FABIO_Q401_MEETING_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_FABIO_Q401_MEETING_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x13e1d)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_FABIO_Q401_MEETING_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_Meeting_05_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q401_Meeting_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_Meeting_05_03");
    INFO_CLEARCHOICES(0x1648a);
    INFO_ADDCHOICE(0x1648a, "Why are you hanging out here?", 0x1648d);
    INFO_ADDCHOICE(0x1648a, "Couldn't you set up camp somewhere else?", 0x1648e);
}

func void DIA_FABIO_Q401_MEETING_WHY() {
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q401_Meeting_Why_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_Meeting_Why_05_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_Meeting_Why_05_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_Meeting_Why_05_04");
}

func void DIA_FABIO_Q401_MEETING_WHERE() {
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q401_Meeting_Where_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_Meeting_Where_05_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_Meeting_Where_05_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_Meeting_Where_05_04");
}

instance DIA_FABIO_Q401_GOAWAY(C_INFO) {
    NPC = 0xc938;
    NR = 1;
    CONDITION = DIA_FABIO_Q401_GOAWAY_CONDITION;
    INFORMATION = DIA_FABIO_Q401_GOAWAY_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I want you out of here.";
}

func int DIA_FABIO_Q401_GOAWAY_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 0x1648a)) && ((LOG_GETSTATUS(MIS_Q401)) == (LOG_RUNNING))) {
        if (((Q401_DUSTERBIZZAREADVENTURE) < (4)) && ((NPC_KNOWSINFO(OTHER, 0x1069a)) == (FALSE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

var int FABIO_GOAWAY_NOTGOOD = 0;
var int FABIO_GOAWAY_COMPANIONS = 0;
var int FABIO_GOAWAY_MINE = 0;
var int FABIO_GOAWAY_VINEYARD = 0;
var int FABIO_GOAWAY_PROTECT = 0;
func void DIA_FABIO_Q401_GOAWAY_CHOICES() {
    INFO_CLEARCHOICES(0x1648f);
    INFO_ADDCHOICE(0x1648f, "I don't think we're going to reach a compromise.", 0x164a1);
    if ((FABIO_GOAWAY_COMPANIONS) == (FALSE)) {
        INFO_ADDCHOICE(0x1648f, "Do your comrades have any right to vote?", 0x164a0);
    };
    if (((((FABIO_GOAWAY_MINE) == (FALSE)) || ((FABIO_GOAWAY_VINEYARD) == (FALSE))) || ((NPC_KNOWSINFO(OTHER, 0x13e27)) && ((Q401_FABIOJOINTS) == (FALSE)))) || ((FABIO_GOAWAY_PROTECT) == (FALSE))) {
        INFO_ADDCHOICE(0x1648f, "You could earn everything you need.", 0x1649a);
    };
    if ((FABIO_GOAWAY_NOTGOOD) == (FALSE)) {
        INFO_ADDCHOICE(0x1648f, "Think: this is not a good place to camp.", 0x16499);
    };
}

func void DIA_FABIO_Q401_GOAWAY_WORK_PROPOSITION() {
    INFO_CLEARCHOICES(0x1648f);
    INFO_ADDCHOICE(0x1648f, DIALOG_BACK, 0x1649f);
    if ((FABIO_GOAWAY_MINE) == (FALSE)) {
        INFO_ADDCHOICE(0x1648f, "You can work in any mine.", 0x1649b);
    };
    if ((FABIO_GOAWAY_VINEYARD) == (FALSE)) {
        INFO_ADDCHOICE(0x1648f, "Every pair of hands comes in handy in the vineyards.", 0x1649c);
    };
    if (((Q401_FABIOJOINTS) == (FALSE)) && (NPC_KNOWSINFO(OTHER, 0x13e27))) {
        INFO_ADDCHOICE(0x1648f, "Start growing something.", 0x1649d);
    };
    if ((FABIO_GOAWAY_PROTECT) == (FALSE)) {
        INFO_ADDCHOICE(0x1648f, "Maybe protect the farmers from field raiders?", 0x1649e);
    };
}

func void DIA_FABIO_Q401_GOAWAY_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q401_GoAway_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_GoAway_05_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q401_GoAway_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_GoAway_05_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_GoAway_05_05");
    DIA_FABIO_Q401_GOAWAY_CHOICES();
}

func void DIA_FABIO_Q401_GOAWAY_NOTGOOD() {
    FABIO_GOAWAY_NOTGOOD = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q401_GoAway_NotGood_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_GoAway_NotGood_05_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q401_GoAway_NotGood_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_GoAway_NotGood_05_04");
    DIA_FABIO_Q401_GOAWAY_CHOICES();
}

func void DIA_FABIO_Q401_GOAWAY_WORK() {
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q401_GoAway_Work_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_GoAway_Work_05_02");
    DIA_FABIO_Q401_GOAWAY_WORK_PROPOSITION();
}

func void DIA_FABIO_Q401_GOAWAY_WORK_MINE() {
    FABIO_GOAWAY_MINE = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q401_GoAway_Mine_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_GoAway_Mine_05_02");
}

func void DIA_FABIO_Q401_GOAWAY_WORK_VINEYARD() {
    FABIO_GOAWAY_VINEYARD = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q401_GoAway_Vineyard_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_GoAway_Vineyard_05_02");
}

func void DIA_FABIO_Q401_GOAWAY_WORK_JOINTS() {
    if ((Q401_FABIOJOINTS) == (FALSE)) {
        Q401_FABIOJOINTS = TRUE;
    };
    AI_OUTPUT(OTHER, SELF, "DIA_Q401_FabioJoints_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Q401_FabioJoints_05_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Q401_FabioJoints_15_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Q401_FabioJoints_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Q401_FabioJoints_05_05");
    AI_OUTPUT(OTHER, SELF, "DIA_Q401_FabioJoints_15_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Q401_FabioJoints_05_07");
    if ((Q401_FABIOJOINTS) == (2)) {
        AI_LOGENTRY(TOPIC_Q401, LOG_Q401_FABIOJOINTS);
    };
}

func void DIA_FABIO_Q401_GOAWAY_WORK_PROTECT() {
    FABIO_GOAWAY_PROTECT = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q401_GoAway_Protect_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_GoAway_Protect_05_02");
}

func void DIA_FABIO_Q401_GOAWAY_WORK_BACK() {
    DIA_FABIO_Q401_GOAWAY_CHOICES();
}

func void DIA_FABIO_Q401_GOAWAY_COMPANIONS() {
    FABIO_GOAWAY_COMPANIONS = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q401_GoAway_Companions_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_GoAway_Companions_05_02");
    DIA_FABIO_Q401_GOAWAY_CHOICES();
}

func void DIA_FABIO_Q401_GOAWAY_NOWAY() {
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q401_GoAway_NoWay_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_GoAway_NoWay_05_02");
    INFO_CLEARCHOICES(0x1648f);
    AI_STOPPROCESSINFOS(SELF);
    if ((Q401_FABIOJOINTS) == (TRUE)) {
        AI_LOGENTRY(TOPIC_Q401, LOG_Q401_FABIOENCOUTERV1);
    };
    AI_LOGENTRY(TOPIC_Q401, LOG_Q401_FABIOENCOUTERV2);
}

instance DIA_FABIO_Q401_JOINTS(C_INFO) {
    NPC = 0xc938;
    NR = 1;
    CONDITION = DIA_FABIO_Q401_JOINTS_CONDITION;
    INFORMATION = DIA_FABIO_Q401_JOINTS_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Start growing something.";
}

func int DIA_FABIO_Q401_JOINTS_CONDITION() {
    if (((((NPC_KNOWSINFO(OTHER, 0x1648f)) && (NPC_KNOWSINFO(OTHER, 0x13e27))) && ((Q401_FABIOJOINTS) == (FALSE))) && ((LOG_GETSTATUS(MIS_Q401)) == (LOG_RUNNING))) && ((NPC_KNOWSINFO(OTHER, 0x1069a)) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_FABIO_Q401_JOINTS_INFO() {
    Q401_FABIOJOINTS = 2;
    DIA_FABIO_Q401_GOAWAY_WORK_JOINTS();
}

instance DIA_FABIO_Q401_GOSWAMP(C_INFO) {
    NPC = 0xc938;
    NR = 1;
    CONDITION = DIA_FABIO_Q401_GOSWAMP_CONDITION;
    INFORMATION = DIA_FABIO_Q401_GOSWAMP_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Will you move to the swamp?";
}

func int DIA_FABIO_Q401_GOSWAMP_CONDITION() {
    if (((((LOG_GETSTATUS(MIS_Q401)) == (LOG_RUNNING)) && ((Q401_FABIOFRIENDSCOUNT) != (4))) && ((Q401_FABIOJOINTS) >= (1))) && ((NPC_KNOWSINFO(OTHER, 0x1069a)) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_FABIO_Q401_GOSWAMP_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q401_GoSwamp_15_01");
    if ((Q401_FABIOFRIENDSCOUNT) == (0)) {
        AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_GoSwamp_05_02");
    };
    if ((Q401_GALBOPROBLEMDONE) == (TRUE)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_GoSwamp_05_03");
    };
    if ((Q401_SIGMUNPROBLEMDONE) == (TRUE)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_GoSwamp_05_04");
    };
    if ((Q401_ESTIPROBLEMDONE) == (TRUE)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_GoSwamp_05_05");
    };
    if ((Q401_FABIOFRIENDSCOUNT) == (1)) {
        AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_GoSwamp_05_06");
    };
    if ((Q401_FABIOFRIENDSCOUNT) == (2)) {
        AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_GoSwamp_05_07");
    };
    if ((Q401_FABIOFRIENDSCOUNT) >= (3)) {
        Q401_FABIOFRIENDSCOUNT = (Q401_FABIOFRIENDSCOUNT) + (1);
        Q401_FABIONEEDSPROTECTION = TRUE;
        AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_GoSwamp_05_08");
        AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_GoSwamp_05_09");
        AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_GoSwamp_05_10");
        AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q401_GoSwamp_15_11");
        AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_GoSwamp_05_12");
        AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q401_GoSwamp_15_13");
        AI_LOGENTRY(TOPIC_Q401, LOG_Q401_FABIOPROTECTION);
    };
    AI_RESETFACEANI(SELF);
}

instance DIA_FABIO_Q401_GOTPROTECTION(C_INFO) {
    NPC = 0xc938;
    NR = 1;
    CONDITION = DIA_FABIO_Q401_GOTPROTECTION_CONDITION;
    INFORMATION = DIA_FABIO_Q401_GOTPROTECTION_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "That should be enough. (400 GP)";
}

func int DIA_FABIO_Q401_GOTPROTECTION_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_Q401)) == (LOG_RUNNING)) && ((Q401_FABIONEEDSPROTECTION) == (1))) && ((NPC_KNOWSINFO(OTHER, 0x1069a)) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_FABIO_Q401_GOTPROTECTION_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q401_GotProtection_15_01");
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (Q401_FABIOPRICE)) {
        SELF.FLAGS = 2;
        NPC_REMOVEINVITEMS(SELF, 0x859b, Q401_FABIOPRICE);
        AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_GotProtection_05_02");
        B_GIVEINVITEMS(OTHER, SELF, 0x859b, Q401_FABIOPRICE);
        AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q401_GotProtection_15_03");
        AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_GotProtection_05_04");
        AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q401_GotProtection_15_05");
        AI_LOGENTRY(TOPIC_Q401, LOG_Q401_FABIOGONE_SWAMP);
        B_GIVEPLAYERXP(XP_Q401_FABIOGONE_SWAMPWAY);
        AI_STOPPROCESSINFOS(SELF);
        NPC_EXCHANGEROUTINE(SELF, "Q401_SWAMP");
        AI_FUNCTION(SELF, 0xf892);
        AI_FUNCTION(SELF, 0xf893);
        Q401_FABIOANDGANGGONE = 1;
        Q401_FABIONEEDSPROTECTION = 2;
        B_STARTOTHERROUTINE(BAU_2277_LOWELL, START);
    };
    B_SAY(SELF, OTHER, "$NOGOLD_BRIBE");
}

instance DIA_FABIO_Q401_WHATSWRONG(C_INFO) {
    NPC = 0xc938;
    NR = 1;
    CONDITION = DIA_FABIO_Q401_WHATSWRONG_CONDITION;
    INFORMATION = DIA_FABIO_Q401_WHATSWRONG_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "There seems to be something wrong with your camp.";
}

func int DIA_FABIO_Q401_WHATSWRONG_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q401)) == (LOG_RUNNING)) && ((Q401_DUSTERBIZZAREADVENTURE) == (5))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_FABIO_Q401_WHATSWRONG_INFO() {
    Q401_FABIOANDGANGGONE = 2;
    AI_STARTFACEANI(OTHER, S_SMUG, 1, -(1));
    AI_STARTFACEANI(SELF, S_FRIGHTENED, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q401_WhatsWrong_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_WhatsWrong_05_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q401_WhatsWrong_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_WhatsWrong_05_04");
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q401_WhatsWrong_15_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q401_WhatsWrong_05_06");
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q401_WhatsWrong_15_07");
    AI_LOGENTRY(TOPIC_Q401, LOG_Q401_FABIOGONE_EXPLOSION);
    B_GIVEPLAYERXP(XP_Q401_FABIOGONE_EXPLOSIONWAY);
    AI_STOPPROCESSINFOS(SELF);
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

instance DIA_FABIO_Q102_MAGICCIRCLE(C_INFO) {
    NPC = 0xc938;
    NR = 1;
    CONDITION = DIA_FABIO_Q102_MAGICCIRCLE_CONDITION;
    INFORMATION = DIA_FABIO_Q102_MAGICCIRCLE_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "In the depths of the cave I found some strange place...";
}

func int DIA_FABIO_Q102_MAGICCIRCLE_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q102)) == (LOG_RUNNING)) && ((Q102_FABIO_FOUNDINCAVEMAGIC) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_FABIO_Q102_MAGICCIRCLE_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Fabio_Q102_MagicCircle_15_01");
    AI_PLAYANI(SELF, T_SEARCH);
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q102_MagicCircle_03_02");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Q102_MagicCircle_03_03");
    AI_LOGENTRY(TOPIC_Q102, LOG_Q102_FABIO_ABOUTMAGIC);
}

instance DIA_FABIO_AMBIENT(C_INFO) {
    NPC = 0xc938;
    NR = 950;
    CONDITION = DIA_FABIO_AMBIENT_CONDITION;
    INFORMATION = DIA_FABIO_AMBIENT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "How are you doing?";
}

func int DIA_FABIO_AMBIENT_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 0xfd2a)) || ((LOG_GETSTATUS(MIS_Q102)) > (0))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_FABIO_AMBIENT_BUSY() {
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    NPC_INITAMBIENTS(SELF, 2);
    if ((NPC_GETLASTAMBIENT(SELF)) == (1)) {
        AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
        B_SAY(SELF, OTHER, "$RUDE_GOODBYE");
    };
    if ((NPC_GETLASTAMBIENT(SELF)) == (2)) {
        AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
        B_SAY(SELF, OTHER, "$IMBUSY_ANGRY");
    };
}

func void DIA_FABIO_AMBIENT_INFO() {
    AI_STARTFACEANI(OTHER, S_SMILE, 1, -(1));
    B_SAY(OTHER, SELF, "$MARVIN_WhatNew2");
    if ((LOG_GETSTATUS(MIS_Q101)) == (LOG_RUNNING)) {
        if ((Q101_FABIOFIGHT) == (-(1))) {
            AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
            B_SAY(SELF, OTHER, "$RUDE_GOODBYE");
        } else {
            AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
            B_SAY(SELF, OTHER, "$IMBUSY_ANGRY");
        } else {
            /* set_instance(0) */;
        };
    };
    if ((LOG_GETSTATUS(MIS_Q102)) == (LOG_RUNNING)) {
        AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
        B_SAY(SELF, OTHER, "$IMBUSY_ANGRY");
    };
    if ((KAPITEL) < (4)) {
        AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
        if (NPC_KNOWSINFO(OTHER, 0x1645e)) {
            AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Ambient_13_02");
        } else {
            AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Ambient_13_01");
        } else {
            /* set_instance(0) */;
        };
    };
    if ((KAPITEL) >= (4)) {
        if ((LOG_GETSTATUS(MIS_Q401)) > (0)) {
            if (((LOG_GETSTATUS(MIS_Q401)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x1648f))) {
                AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
                AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Ambient_13_03");
            } else if ((Q401_FABIOANDGANGGONE) == (1)) {
                AI_STARTFACEANI(SELF, S_SURPRISE, 1, -(1));
                AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Ambient_13_05");
            } else if ((Q401_FABIOANDGANGGONE) == (2)) {
                AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
                AI_OUTPUT(SELF, OTHER, "DIA_Fabio_Ambient_13_04");
            } else {
                DIA_FABIO_AMBIENT_BUSY();
            } else {
                /* set_instance(0) */;
            };
        };
        DIA_FABIO_AMBIENT_BUSY();
    };
    DIA_FABIO_AMBIENT_BUSY();
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

