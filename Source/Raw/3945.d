instance DIA_SUES_EXIT(C_INFO) {
    NPC = 0xd77d;
    NR = 999;
    CONDITION = DIA_SUES_EXIT_CONDITION;
    INFORMATION = DIA_SUES_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_SUES_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_SUES_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_SUES_HELLO(C_INFO) {
    NPC = 0xd77d;
    NR = 1;
    CONDITION = DIA_SUES_HELLO_CONDITION;
    INFORMATION = DIA_SUES_HELLO_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Are you Mures?";
}

func int DIA_SUES_HELLO_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ309)) == (LOG_RUNNING)) && ((SQ309_INFORMATIONABOUTSUES) == (TRUE))) {
        if ((NPC_HASEQUIPPEDARMOR(OTHER)) == (TRUE)) {
            if (((NPC_HASGUILDARMOREQUIPPED(OTHER, GIL_MIL)) == (FALSE)) && ((NPC_HASGUILDARMOREQUIPPED(OTHER, GIL_SLD)) == (FALSE))) {
                return TRUE;
            };
        } else {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_SUES_HELLO_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Sues_HELLO_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Sues_HELLO_03_02");
    INFO_CLEARCHOICES(0x12882);
    INFO_ADDCHOICE(0x12882, "I hear you're looking for people to work.", 0x12885);
    INFO_ADDCHOICE(0x12882, "Are you the one making the golden Innoses?", 0x12886);
}

func void DIA_SUES_HELLO_WORK() {
    AI_OUTPUT(OTHER, SELF, "DIA_Sues_HELLO_Work_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Sues_HELLO_Work_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Sues_HELLO_Work_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Sues_HELLO_Work_03_04");
    INFO_CLEARCHOICES(0x12882);
    INFO_ADDCHOICE(0x12882, "If you tell me what to do, I'm sure something will be arranged.", 0x12888);
}

func void DIA_SUES_HELLO_INNOS() {
    AI_OUTPUT(OTHER, SELF, "DIA_Sues_HELLO_Innos_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Sues_HELLO_Innos_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Sues_HELLO_Innos_03_03");
    INFO_CLEARCHOICES(0x12882);
    INFO_ADDCHOICE(0x12882, "Dima said she was buying whole crates of these figurines from you.", 0x12887);
}

func void DIA_SUES_HELLO_INNOS_DIMA() {
    AI_OUTPUT(OTHER, SELF, "DIA_Sues_HELLO_Dima_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Sues_HELLO_Dima_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Sues_HELLO_Dima_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Sues_HELLO_Dima_03_04");
    INFO_CLEARCHOICES(0x12882);
    INFO_ADDCHOICE(0x12882, "If you tell me what to do, I'm sure something will be arranged.", 0x12888);
}

func void DIA_SUES_HELLO_INNOS_DIMA_WHATDO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Sues_HELLO_WhatDo_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Sues_HELLO_WhatDo_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Sues_HELLO_WhatDo_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Sues_HELLO_WhatDo_03_04");
    INFO_CLEARCHOICES(0x12882);
    AI_LOGENTRY(TOPIC_SQ309, LOG_SQ309_MURES_WOOD);
}

instance DIA_SUES_WOODSWORD(C_INFO) {
    NPC = 0xd77d;
    NR = 2;
    CONDITION = DIA_SUES_WOODSWORD_CONDITION;
    INFORMATION = DIA_SUES_WOODSWORD_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "It may not be a figurine, but I know a little about wood.";
}

func int DIA_SUES_WOODSWORD_CONDITION() {
    if (((NPC_KNOWSINFO(OTHER, 0x12882)) && ((LOG_GETSTATUS(MIS_SQ309)) == (LOG_RUNNING))) && ((SQ309_PROVESUES) == (FALSE))) {
        if (((NPC_HASITEMS(OTHER, 0x9a52)) >= (1)) || ((NPC_HASITEMS(OTHER, 0x9a55)) >= (1))) {
            if ((NPC_HASEQUIPPEDARMOR(OTHER)) == (TRUE)) {
                if (((NPC_HASGUILDARMOREQUIPPED(OTHER, GIL_MIL)) == (FALSE)) && ((NPC_HASGUILDARMOREQUIPPED(OTHER, GIL_SLD)) == (FALSE))) {
                    return TRUE;
                };
            } else {
                return TRUE;
            };
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_SUES_PREPARECUTSCENE() {
    AI_STOPPROCESSINFOS(SELF);
    NPC_EXCHANGEROUTINE(SELF, "SQ309_CUTSCENE");
    AI_FUNCTION(SELF, 0x1288c);
}

func void SQ309_SUES_MAKINGINNOS_PREPARE() {
    HERO.AIVAR[4] = TRUE;
    FF_APPLYONCEEXT(0x1288d, 75, 4);
}

func void SQ309_SUES_MAKINGINNOS_PREPARE_APPLY() {
    SQ309_SUES_MAKINGINNOS_PREPARE_COUNT = (SQ309_SUES_MAKINGINNOS_PREPARE_COUNT) + (1);
    if ((SQ309_SUES_MAKINGINNOS_PREPARE_COUNT) == (4)) {
        AI_FUNCTION(HERO, 0x12899);
    };
}

var int SQ309_SUES_MAKINGINNOS_PREPARE_APPLY.SQ309_SUES_MAKINGINNOS_PREPARE_COUNT = 0;
func void DIA_SUES_WOODSWORD_INFO() {
    SQ309_PROVESUES = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Sues_WoodSword_15_01");
    B_STANDUP();
    AI_WAITTILLEND(OTHER, SELF);
    AI_WAITTILLEND(SELF, OTHER);
    AI_STOPLOOKAT(SELF);
    if ((NPC_HASITEMS(OTHER, 0x9a52)) >= (1)) {
    };
    if ((NPC_HASITEMS(OTHER, 0x9a55)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 0x9a55, 1);
    };
    if ((NPC_HASITEMS(SELF, 0x8cc1)) == (0)) {
        CREATEINVITEM(SELF, 0x8cc1);
        AI_USEITEMTOSTATE(SELF, 0x8cc1, 1);
        AI_WAIT(SELF, 0x40800000);
        AI_USEITEMTOSTATE(SELF, 0x8cc1, -(1));
    };
    AI_WAITTILLEND(OTHER, SELF);
    AI_WAITTILLEND(SELF, OTHER);
    AI_LOOKATNPC(SELF, OTHER);
    AI_OUTPUT(SELF, OTHER, "DIA_Sues_WoodSword_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Sues_WoodSword_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Sues_WoodSword_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Sues_WoodSword_03_05");
    DIA_SUES_PREPARECUTSCENE();
}

instance DIA_SUES_SCAVENGER(C_INFO) {
    NPC = 0xd77d;
    NR = 3;
    CONDITION = DIA_SUES_SCAVENGER_CONDITION;
    INFORMATION = DIA_SUES_SCAVENGER_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "A friend recently taught me how to make wooden scavengers.";
}

func int DIA_SUES_SCAVENGER_CONDITION() {
    if (((((LOG_GETSTATUS(MIS_SQ309)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x12882))) && ((LOG_GETSTATUS(MIS_Q206)) == (LOG_SUCCESS))) && ((SQ309_PROVESUES) == (FALSE))) {
        if ((NPC_HASEQUIPPEDARMOR(OTHER)) == (TRUE)) {
            if (((NPC_HASGUILDARMOREQUIPPED(OTHER, GIL_MIL)) == (FALSE)) && ((NPC_HASGUILDARMOREQUIPPED(OTHER, GIL_SLD)) == (FALSE))) {
                return TRUE;
            };
        } else {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_SUES_SCAVENGER_INFO() {
    SQ309_PROVESUES = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Sues_Scavenger_15_01");
    B_STANDUP();
    AI_OUTPUT(SELF, OTHER, "DIA_Sues_Scavenger_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Sues_Scavenger_03_03");
    DIA_SUES_PREPARECUTSCENE();
}

instance DIA_SUES_WOODCUTTER(C_INFO) {
    NPC = 0xd77d;
    NR = 4;
    CONDITION = DIA_SUES_WOODCUTTER_CONDITION;
    INFORMATION = DIA_SUES_WOODCUTTER_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "You probably need a lot of wood for your job.";
}

func int DIA_SUES_WOODCUTTER_CONDITION() {
    if (((((LOG_GETSTATUS(MIS_SQ309)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x12882))) && ((MARVINJOINEDWOODCUTTERS) == (TRUE))) && ((SQ309_PROVESUES) == (FALSE))) {
        if ((NPC_HASEQUIPPEDARMOR(OTHER)) == (TRUE)) {
            if (((NPC_HASGUILDARMOREQUIPPED(OTHER, GIL_MIL)) == (FALSE)) && ((NPC_HASGUILDARMOREQUIPPED(OTHER, GIL_SLD)) == (FALSE))) {
                return TRUE;
            };
        } else {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_SUES_WOODCUTTER_INFO() {
    SQ309_PROVESUES = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Sues_WoodCutter_15_01");
    B_STANDUP();
    AI_OUTPUT(SELF, OTHER, "DIA_Sues_WoodCutter_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Sues_WoodCutter_15_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Sues_WoodCutter_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Sues_WoodCutter_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Sues_WoodCutter_03_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Sues_WoodCutter_03_07");
    DIA_SUES_PREPARECUTSCENE();
}

instance DIA_SUES_SQ309_GOTSKILL(C_INFO) {
    NPC = 0xd77d;
    NR = 1;
    CONDITION = DIA_SUES_SQ309_GOTSKILL_CONDITION;
    INFORMATION = DIA_SUES_SQ309_GOTSKILL_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I know woodworking.";
}

func int DIA_SUES_SQ309_GOTSKILL_CONDITION() {
    if (((NPC_KNOWSINFO(OTHER, 0x12882)) && ((LOG_GETSTATUS(MIS_SQ309)) == (LOG_RUNNING))) && ((SQ309_PROVESUES) == (FALSE))) {
        if ((((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_FLETCHERY)) >= (1)) || ((PEON_DAVIS) == (TRUE))) || ((PEON_BORIS) == (TRUE))) {
            if ((NPC_HASEQUIPPEDARMOR(OTHER)) == (TRUE)) {
                if (((NPC_HASGUILDARMOREQUIPPED(OTHER, GIL_MIL)) == (FALSE)) && ((NPC_HASGUILDARMOREQUIPPED(OTHER, GIL_SLD)) == (FALSE))) {
                    return TRUE;
                };
            } else {
                return TRUE;
            };
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_SUES_SQ309_GOTSKILL_INFO() {
    SQ309_PROVESUES = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Sues_SQ309_GotSkill_15_01");
    if (((PEON_DAVIS) == (TRUE)) || ((PEON_BORIS) == (TRUE))) {
        if ((PEON_BORIS) == (TRUE)) {
            AI_OUTPUT(OTHER, SELF, "DIA_Sues_SQ309_GotSkill_15_02");
        } else if ((PEON_DAVIS) == (TRUE)) {
            AI_OUTPUT(OTHER, SELF, "DIA_Sues_SQ309_GotSkill_15_03");
        };
        AI_OUTPUT(OTHER, SELF, "DIA_Sues_SQ309_GotSkill_15_04");
    };
    B_STANDUP();
    AI_OUTPUT(SELF, OTHER, "DIA_Sues_SQ309_GotSkill_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Sues_SQ309_GotSkill_03_06");
    DIA_SUES_PREPARECUTSCENE();
}

func void SQ309_SUES_MAKINGINNOS() {
    DIACAM_DISABLE();
    WLD_SENDTRIGGER("KM_GOLDENINNOS_01");
    MDL_APPLYOVERLAYMDS(HERO, "HumanS_Chair_Innos.mds");
    HERO.AIVAR[4] = FALSE;
    FADESCREENTOBLACKF(6, 0x1289a, 1000);
    TELEPORTNPCTOWP(0xd77d, "SLUMS_PATH_194");
    TELEPORTNPCTOWP(0x71b, "SLUMS_PATH_64");
    NPC_CLEARAIQUEUE(VLK_6313_SUES);
    AI_SETWALKMODE(HERO, NPC_WALK);
    AI_SETWALKMODE(VLK_6313_SUES, NPC_WALK);
    AI_GOTOWP(HERO, "SLUMS_PATH_193");
    AI_GOTOWP(VLK_6313_SUES, "SLUMS_PATH_195");
    AI_USEMOB(HERO, "CHAIR", 1);
    AI_WAITTILLEND(VLK_6313_SUES, HERO);
    AI_TURNTONPC(VLK_6313_SUES, HERO);
    AI_WAIT(VLK_6313_SUES, 0x40400000);
}

func void SQ309_SUES_MAKINGINNOS_DONE() {
    WLD_SENDUNTRIGGER("KM_GOLDENINNOS_01");
    HERO.AIVAR[4] = FALSE;
    WLD_SENDTRIGGER("KM_GOLDENINNOS_02");
    FADESCREENFROMBLACK(4);
    TELEPORTNPCTOWP(0xd77d, "SLUMS_PATH_195");
    AI_TURNTONPC(VLK_6313_SUES, HERO);
    AI_LOOKATNPC(VLK_6313_SUES, HERO);
    AI_WAIT(VLK_6313_SUES, 0x3f800000);
    AI_WAIT(HERO, 0x40800000);
    AI_USEMOB(HERO, NPC_GETDETECTEDMOB(HERO), -(1));
    AI_WAIT(HERO, 0x3dcccccd);
    AI_TURNTONPC(HERO, VLK_6313_SUES);
    AI_WAITTILLEND(HERO, VLK_6313_SUES);
    AI_WAITTILLEND(VLK_6313_SUES, HERO);
    AI_TURNTONPC(VLK_6313_SUES, HERO);
    AI_WAITTILLEND(HERO, VLK_6313_SUES);
    AI_WAITTILLEND(VLK_6313_SUES, HERO);
    AI_OUTPUT(HERO, VLK_6313_SUES, "DIA_Sues_InnosReady_15_01");
    AI_WAITTILLEND(HERO, VLK_6313_SUES);
    AI_WAITTILLEND(VLK_6313_SUES, HERO);
    AI_FUNCTION(VLK_6313_SUES, 0x1289b);
    AI_OUTPUT(VLK_6313_SUES, HERO, "DIA_Sues_InnosReady_03_02");
    AI_OUTPUT(HERO, VLK_6313_SUES, "DIA_Sues_InnosReady_15_03");
    AI_OUTPUT(VLK_6313_SUES, HERO, "DIA_Sues_InnosReady_03_04");
    AI_STOPLOOKAT(VLK_6313_SUES);
    CREATEINVITEMS(VLK_6313_SUES, 0x8d1c, 1);
    AI_USEITEMTOSTATE(VLK_6313_SUES, 0x8d1c, 1);
    AI_WAIT(VLK_6313_SUES, 0x40000000);
    AI_USEITEMTOSTATE(VLK_6313_SUES, 0x8d1c, -(1));
    AI_OUTPUT(VLK_6313_SUES, HERO, "DIA_Sues_InnosReady_03_06");
    AI_OUTPUT(VLK_6313_SUES, HERO, "DIA_Sues_InnosReady_03_07");
    AI_FUNCTION(VLK_6313_SUES, 0x1289c);
}

func void SQ309_SUES_MAKINGINNOS_CAMERA_01() {
    WLD_SENDUNTRIGGER("KM_GOLDENINNOS_02");
    WLD_SENDTRIGGER("KM_GOLDENINNOS_03");
}

func void SQ309_SUES_MAKINGINNOS_ENDCUTSCENE() {
    HERO.AIVAR[4] = TRUE;
    FF_APPLYONCEEXT(0x1289d, 75, 4);
}

func void SQ309_SUES_MAKINGINNOS_ENDCUTSCENE_APPLY() {
    SQ309_SUES_MAKINGINNOS_ENDCUTSCENE_COUNT = (SQ309_SUES_MAKINGINNOS_ENDCUTSCENE_COUNT) + (1);
    if ((SQ309_SUES_MAKINGINNOS_ENDCUTSCENE_COUNT) == (4)) {
        WLD_SENDUNTRIGGER("SQ309_KNIFE");
        HERO.AIVAR[4] = FALSE;
        B_LOGENTRY(TOPIC_SQ309, LOG_SQ309_WOODENINNOS);
        CREATEINVITEMS(VLK_6313_SUES, 0x9015, 1);
        B_GIVEINVITEMS(VLK_6313_SUES, HERO, 0x9015, 1);
        WLD_SENDUNTRIGGER("KM_GOLDENINNOS_01");
        WLD_SENDUNTRIGGER("KM_GOLDENINNOS_02");
        WLD_SENDUNTRIGGER("KM_GOLDENINNOS_03");
        DIACAM_ENABLE();
        NPC_EXCHANGEROUTINE(VLK_6313_SUES, START);
    };
}

var int SQ309_SUES_MAKINGINNOS_ENDCUTSCENE_APPLY.SQ309_SUES_MAKINGINNOS_ENDCUTSCENE_COUNT = 0;
instance DIA_SUES_PICKPOCKET(C_INFO) {
    NPC = 0xd77d;
    NR = 900;
    CONDITION = DIA_SUES_PICKPOCKET_CONDITION;
    INFORMATION = DIA_SUES_PICKPOCKET_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = PICKPOCKET_80;
}

func int DIA_SUES_PICKPOCKET_CONDITION() {
    if (((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) && ((SELF.AIVAR[6]) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_SUES_PICKPOCKET_INFO() {
    INFO_CLEARCHOICES(0x1289f);
    INFO_ADDCHOICE(0x1289f, DIALOG_BACK, 0x128a3);
    INFO_ADDCHOICE(0x1289f, DIALOG_PICKPOCKET, 0x128a2);
}

func void DIA_SUES_PICKPOCKET_DOIT() {
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (2)) {
        B_PICKPOCKET_AMBIENT_TIER_2();
        CREATEINVITEMS(SELF, 0x9a52, 1);
        B_GIVEINVITEMS(SELF, OTHER, 0x9a52, 1);
        SELF.AIVAR[6] = TRUE;
        INFO_CLEARCHOICES(0x1289f);
    };
    AI_PLAYANI(HERO, T_CANNOTTAKE);
    PRINTSCREEN(PRINT_CANTPICKPOCKETTHISPERSON, -(1), -(1), FONT_SCREEN, 4);
    INFO_CLEARCHOICES(0x1289f);
}

func void DIA_SUES_PICKPOCKET_BACK() {
    INFO_CLEARCHOICES(0x1289f);
}

