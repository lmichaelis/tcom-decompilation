instance DIA_ARS_EXIT(C_INFO) {
    NPC = 0xcf1b;
    NR = 999;
    CONDITION = DIA_ARS_EXIT_CONDITION;
    INFORMATION = DIA_ARS_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_ARS_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_ARS_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_ARS_HELLO(C_INFO) {
    NPC = 0xcf1b;
    NR = 1;
    CONDITION = DIA_ARS_HELLO_CONDITION;
    INFORMATION = DIA_ARS_HELLO_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_ARS_HELLO_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ305)) == (LOG_RUNNING)) && (NPC_ISINSTATE(SELF, 0xf09f))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ARS_HELLO_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Ars_HELLO_03_01");
    B_STANDUP();
    AI_OUTPUT(SELF, OTHER, "DIA_Ars_HELLO_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Ars_HELLO_03_03");
    INFO_CLEARCHOICES(0x11110);
    INFO_ADDCHOICE(0x11110, "Are you saying you were behind the assassination attempt?", 0x11119);
}

var int ARS_HELLO_DAY = 0;
var int ARS_HELLO_WHY = 0;
var int ARS_HELLO_REASON = 0;
var int ARS_HELLO_REASON_COUNT = 0;
var int ARS_HELLO_COUNT = 0;
func void DIA_ARS_HELLO_CHOICES() {
    INFO_CLEARCHOICES(0x11110);
    if ((ARS_HELLO_DAY) == (FALSE)) {
        INFO_ADDCHOICE(0x11110, "Tell me about that day.", 0x1111c);
    };
    if ((ARS_HELLO_WHY) == (FALSE)) {
        INFO_ADDCHOICE(0x11110, "Why did you want Volker dead?", 0x1111d);
    };
    if ((ARS_HELLO_REASON) == (FALSE)) {
        INFO_ADDCHOICE(0x11110, "What did you actually get out of it?", 0x1111e);
    };
}

func void DIA_ARS_HELLO_ATTEMPT() {
    AI_OUTPUT(OTHER, SELF, "DIA_Ars_HELLO_Attempt_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Ars_HELLO_Attempt_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Ars_HELLO_Attempt_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Ars_HELLO_Attempt_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Ars_HELLO_Attempt_03_05");
    DIA_ARS_HELLO_CHOICES();
}

func void DIA_ARS_HELLO_END() {
    AI_LOGENTRY(TOPIC_SQ305, LOG_Q308_ARS_INFORMATIONS);
    INFO_CLEARCHOICES(0x11110);
    AI_STOPPROCESSINFOS(SELF);
}

func void DIA_ARS_HELLO_DIALOGUE() {
    if ((ARS_HELLO_COUNT) == (3)) {
        DIA_ARS_HELLO_END();
    };
    DIA_ARS_HELLO_CHOICES();
}

func void DIA_ARS_HELLO_ATTEMPT_DAY() {
    ARS_HELLO_DAY = TRUE;
    ARS_HELLO_COUNT = (ARS_HELLO_COUNT) + (1);
    AI_OUTPUT(OTHER, SELF, "DIA_Ars_HELLO_Day_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Ars_HELLO_Day_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Ars_HELLO_Day_03_03");
    DUMMYFUNCWITHSTRINGPARAMETER("DIA_Ars_HELLO_Day_03_04");
    INFO_CLEARCHOICES(0x11110);
    INFO_ADDCHOICE(0x11110, "Get to the point.", 0x1111f);
}

func void DIA_ARS_HELLO_ATTEMPT_WHY() {
    ARS_HELLO_WHY = TRUE;
    ARS_HELLO_COUNT = (ARS_HELLO_COUNT) + (1);
    AI_OUTPUT(OTHER, SELF, "DIA_Ars_HELLO_Why_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Ars_HELLO_Why_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Ars_HELLO_Why_03_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Ars_HELLO_Why_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Ars_HELLO_Why_03_05");
    if (NPC_HASGUILDARMOREQUIPPED(OTHER, GIL_SLD)) {
        AI_OUTPUT(OTHER, SELF, "DIA_Ars_HELLO_Why_15_06");
        AI_OUTPUT(SELF, OTHER, "DIA_Ars_HELLO_Why_03_07");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Ars_HELLO_Why_03_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Ars_HELLO_Why_03_09");
    DIA_ARS_HELLO_DIALOGUE();
}

func void DIA_ARS_HELLO_ATTEMPT_REASON() {
    ARS_HELLO_REASON = TRUE;
    ARS_HELLO_COUNT = (ARS_HELLO_COUNT) + (1);
    AI_OUTPUT(OTHER, SELF, "DIA_Ars_HELLO_Reason_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Ars_HELLO_Reason_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Ars_HELLO_Reason_03_03");
    INFO_CLEARCHOICES(0x11110);
    INFO_ADDCHOICE(0x11110, "Did you mean to cause a riot?", 0x11120);
    INFO_ADDCHOICE(0x11110, "Whose blood will be spilled?", 0x11121);
}

func void DIA_ARS_HELLO_ATTEMPT_DAY_GOON() {
    AI_OUTPUT(OTHER, SELF, "DIA_Ars_HELLO_GoOn_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Ars_HELLO_GoOn_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Ars_HELLO_GoOn_03_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Ars_HELLO_GoOn_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Ars_HELLO_GoOn_03_05");
    DIA_ARS_HELLO_DIALOGUE();
}

func void DIA_ARS_HELLO_ATTEMPT_REASON_CONSEQUENCES() {
    ARS_HELLO_REASON_COUNT = (ARS_HELLO_REASON_COUNT) + (1);
    AI_OUTPUT(OTHER, SELF, "DIA_Ars_HELLO_Consequences_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Ars_HELLO_Consequences_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Ars_HELLO_Consequences_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Ars_HELLO_Consequences_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Ars_HELLO_Consequences_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Ars_HELLO_Consequences_03_06");
    if ((ARS_HELLO_REASON_COUNT) == (2)) {
        DIA_ARS_HELLO_DIALOGUE();
    };
}

func void DIA_ARS_HELLO_ATTEMPT_REASON_BLOOD() {
    ARS_HELLO_REASON_COUNT = (ARS_HELLO_REASON_COUNT) + (1);
    AI_OUTPUT(OTHER, SELF, "DIA_Ars_HELLO_Blood_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Ars_HELLO_Blood_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Ars_HELLO_Blood_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Ars_HELLO_Blood_03_04");
    if ((ARS_HELLO_REASON_COUNT) == (2)) {
        DIA_ARS_HELLO_DIALOGUE();
    };
}

instance DIA_ARS_AMBIENT(C_INFO) {
    NPC = 0xcf1b;
    NR = 1;
    CONDITION = DIA_ARS_AMBIENT_CONDITION;
    INFORMATION = DIA_ARS_AMBIENT_INFO;
    PERMANENT = TRUE;
    IMPORTANT = TRUE;
}

func int DIA_ARS_AMBIENT_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 0x11110)) && (NPC_ISINSTATE(SELF, 0xf09f))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ARS_AMBIENT_INFO() {
    NPC_INITAMBIENTS(SELF, 2);
    if ((NPC_GETLASTAMBIENT(SELF)) == (1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Ars_Ambient_03_01");
    };
    if ((NPC_GETLASTAMBIENT(SELF)) == (2)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Ars_Ambient_03_02");
    };
}

