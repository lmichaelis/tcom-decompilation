func void ZERROR_SETTARGET_HOOK() {
    ZOPT = MEM_READINT(ZOPTIONS_POINTER_ADDRESS);
    SYSTEMPATH = MEM_READSTRINGARRAY((ZOPT) + (ZCOPTIONS_DIR_STRING_OFFSET), 0);
    MEM_WRITESTRING(EAX, CS2(SYSTEMPATH, "\\gothic_errorlog.txt"));
}

var int ZERROR_SETTARGET_HOOK.ZOPT = 0;
var string ZERROR_SETTARGET_HOOK.SYSTEMPATH = "";
const int ZERROR_LEVELBAK = 0;
func void ZERROR_SETTEMPLEVEL(var int LOGLEVEL) {
    ERR = _^(ZERRPTR);
    ZERROR_LEVELBAK = ERR.FILTER_LEVEL;
    ERR.FILTER_LEVEL = LOGLEVEL;
}

instance ZERROR_SETTEMPLEVEL.ERR(ZERROR)
func void ZERROR_RESTORELEVEL() {
    ERR = _^(ZERRPTR);
    ERR.FILTER_LEVEL = ZERROR_LEVELBAK;
}

instance ZERROR_RESTORELEVEL.ERR(ZERROR)
func void STARTLOGFILE(var int LOGLEVEL) {
    if (ONCE) {
        return;
    };
    ONCE = 1;
    HOOKENGINEF(0x44e056, 7, 0x544a);
    ERR = _^(ZERRPTR);
    ERR.FILTER_LEVEL = LOGLEVEL;
    CALL_INTPARAM((ERR.TARGET) | (2));
    CALL__THISCALL(ZERRPTR, ZERROR__SETTARGET);
    MAXCHAR = 16;
    USERCHRPTR = MEM_ALLOC(MAXCHAR);
    CALL_INTPARAM(_@(MAXCHAR));
    CALL_PTRPARAM(USERCHRPTR);
    CALL__STDCALL(GETUSERNAMEA);
    USER = STR_FROMCHAR(USERCHRPTR);
    MEM_FREE(USERCHRPTR);
    SYSTEMTIMEPTR = MEM_ALLOC(16);
    CALL_PTRPARAM(SYSTEMTIMEPTR);
    CALL__STDCALL(GETLOCALTIME);
    TIMESTR = INTTOSTRING((MEM_READINT(SYSTEMTIMEPTR)) & (0x7ff));
    TIMESTR = CONCATSTRINGS(CONCATSTRINGS(TIMESTR, "-"), INTTOSTRING((MEM_READINT((SYSTEMTIMEPTR) + (2))) & (0x7ff)));
    TIMESTR = CONCATSTRINGS(CONCATSTRINGS(TIMESTR, "-"), INTTOSTRING((MEM_READINT((SYSTEMTIMEPTR) + (6))) & (0x7ff)));
    TIMESTR = CONCATSTRINGS(CONCATSTRINGS(TIMESTR, " "), INTTOSTRING((MEM_READINT((SYSTEMTIMEPTR) + (8))) & (0x7ff)));
    TIMESTR = CONCATSTRINGS(CONCATSTRINGS(TIMESTR, ":"), INTTOSTRING((MEM_READINT((SYSTEMTIMEPTR) + (10))) & (0x7ff)));
    TIMESTR = CONCATSTRINGS(CONCATSTRINGS(TIMESTR, ":"), INTTOSTRING((MEM_READINT((SYSTEMTIMEPTR) + (12))) & (0x7ff)));
    MEM_FREE(SYSTEMTIMEPTR);
    MEM_INFO("");
    ZERROR_SETTEMPLEVEL(1);
    MEM_INFO(CONCATSTRINGS("Time:               ", TIMESTR));
    MEM_INFO(CONCATSTRINGS("Log level:          ", INTTOSTRING(LOGLEVEL)));
    ZERROR_RESTORELEVEL();
    MEM_INFO("");
}

const int STARTLOGFILE.ONCE = 0;
instance STARTLOGFILE.ERR(ZERROR)
var int STARTLOGFILE.MAXCHAR = 0;
var int STARTLOGFILE.USERCHRPTR = 0;
var string STARTLOGFILE.USER = "";
var int STARTLOGFILE.SYSTEMTIMEPTR = 0;
var string STARTLOGFILE.TIMESTR = "";
