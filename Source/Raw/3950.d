instance DIA_MIRON_EXIT(C_INFO) {
    NPC = 0xd0c6;
    NR = 999;
    CONDITION = DIA_MIRON_EXIT_CONDITION;
    INFORMATION = DIA_MIRON_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_MIRON_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_MIRON_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
    RUNESTRADE_CHECKBOUGHTRUNES();
}

instance DIA_MIRON_Q503_KEY(C_INFO) {
    NPC = 0xd0c6;
    NR = 1;
    CONDITION = DIA_MIRON_Q503_KEY_CONDITION;
    INFORMATION = DIA_MIRON_Q503_KEY_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Do you have anything similar to this stone at your place?";
}

func int DIA_MIRON_Q503_KEY_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q503)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x13734))) {
        if ((((NPC_HASITEMS(OTHER, 0x92a6)) >= (1)) || ((NPC_HASITEMS(OTHER, 0x92a7)) >= (1))) || ((NPC_HASITEMS(OTHER, 0x92a8)) >= (1))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_MIRON_Q503_KEY_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Miron_Q503_Key_15_01");
    B_STANDUP();
    Q503_SHOWKEYS();
    B_USEFAKEVOLFZACKKEY_START();
    AI_STARTFACEANI(SELF, S_SURPRISE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Miron_Q503_Key_03_02");
    Q503_SHOWKEYS_BACK();
    B_USEFAKEVOLFZACKKEY_REMOVE();
    AI_RESETFACEANI(OTHER);
    INFO_CLEARCHOICES(0x12923);
    ITM = NPC_GETEQUIPPEDARMOR(OTHER);
    if ((NPC_HASEQUIPPEDARMOR(OTHER)) == (TRUE)) {
        if (((((((HLP_ISITEM(ITM, 0x8ab2)) == (TRUE)) || ((HLP_ISITEM(ITM, 0x8ab3)) == (TRUE))) || ((HLP_ISITEM(ITM, 0x8ab4)) == (TRUE))) || ((HLP_ISITEM(ITM, 0x8aaa)) == (TRUE))) || ((HLP_ISITEM(ITM, 0x8aab)) == (TRUE))) || ((HLP_ISITEM(ITM, 0x8aac)) == (TRUE))) {
            INFO_ADDCHOICE(0x12923, "This item is related to an investigation I am conducting.", 0x1292b);
        };
    };
    if ((SQ411_MARVINGOTKEYS) == (TRUE)) {
        INFO_ADDCHOICE(0x12923, "I wanted to add it to my collection at home in Old Town.", 0x12929);
    };
    INFO_ADDCHOICE(0x12923, "It's irrelevant, I just want to buy another one.", 0x12928);
}

instance DIA_MIRON_Q503_KEY_INFO.ITM(C_ITEM)
var int MIRON_Q503_KEYCOST = 0;
func void DIA_MIRON_Q503_KEY_NOTIMPORTANT() {
    MIRON_Q503_KEYCOST = 1;
    AI_OUTPUT(OTHER, SELF, "DIA_Miron_Q503_Key_NotImportant_15_01");
    AI_STARTFACEANI(SELF, S_THINK, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Miron_Q503_Key_NotImportant_03_02");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Miron_Q503_Key_NotImportant_03_04");
    AI_RESETFACEANI(SELF);
    INFO_CLEARCHOICES(0x12923);
}

func void DIA_MIRON_Q503_KEY_CITY() {
    MIRON_Q503_KEYCOST = 2;
    AI_OUTPUT(OTHER, SELF, "DIA_Miron_Q503_Key_City_15_01");
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Miron_Q503_Key_City_03_02");
    AI_STARTFACEANI(OTHER, S_SMUG, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Miron_Q503_Key_City_15_03");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Miron_Q503_Key_City_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Miron_Q503_Key_City_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Miron_Q503_Key_City_03_06");
    INFO_CLEARCHOICES(0x12923);
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

func void DIA_MIRON_Q503_KEY_GOTKEY() {
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    CREATEINVITEMS(SELF, 0x92a8, 1);
    B_GIVEINVITEMS(SELF, OTHER, 0x92a8, 1);
    Q503_GOTMUSEUMKEY = TRUE;
    AI_LOGENTRY(TOPIC_Q503, LOG_Q503_MIRON_GOTKEY);
    B_GIVEPLAYERXP(XP_Q503_GOTKEY);
    WLD_SENDTRIGGER("Q503_MOVER_KEY_MUSEUM");
}

func void DIA_MIRON_Q503_KEY_MILITIA() {
    AI_STARTFACEANI(OTHER, S_SERIOUS, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Miron_Q503_Key_Militia_15_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Miron_Q503_Key_Militia_15_02");
    AI_STARTFACEANI(SELF, S_SAD, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Miron_Q503_Key_Militia_03_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Miron_Q503_Key_Militia_15_04");
    AI_STARTFACEANI(SELF, S_FRIGHTENED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Miron_Q503_Key_Militia_03_05");
    INFO_CLEARCHOICES(0x12923);
    DIA_MIRON_Q503_KEY_GOTKEY();
}

instance DIA_MIRON_Q503_PAY1000(C_INFO) {
    NPC = 0xd0c6;
    NR = 1;
    CONDITION = DIA_MIRON_Q503_PAY1000_CONDITION;
    INFORMATION = DIA_MIRON_Q503_PAY1000_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_KEYBUY1000G;
}

func int DIA_MIRON_Q503_PAY1000_CONDITION() {
    if (((((LOG_GETSTATUS(MIS_Q503)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x12923))) && ((MIRON_Q503_KEYCOST) == (1))) && ((Q503_GOTMUSEUMKEY) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_MIRON_Q503_PAY1000_INFO() {
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (Q503_KEYCOST_V1)) {
        NPC_REMOVEINVITEMS(SELF, 0x859b, Q503_KEYCOST_V1);
        DIA_MIRON_Q503_KEY_GOTKEY();
    };
    B_SAY(SELF, OTHER, "$NOGOLD");
}

instance DIA_MIRON_Q503_PAY500(C_INFO) {
    NPC = 0xd0c6;
    NR = 1;
    CONDITION = DIA_MIRON_Q503_PAY500_CONDITION;
    INFORMATION = DIA_MIRON_Q503_PAY500_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_KEYBUY500G;
}

func int DIA_MIRON_Q503_PAY500_CONDITION() {
    if (((((LOG_GETSTATUS(MIS_Q503)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x12923))) && ((MIRON_Q503_KEYCOST) == (2))) && ((Q503_GOTMUSEUMKEY) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_MIRON_Q503_PAY500_INFO() {
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (Q503_KEYCOST_V2)) {
        NPC_REMOVEINVITEMS(SELF, 0x859b, Q503_KEYCOST_V2);
        DIA_MIRON_Q503_KEY_GOTKEY();
    };
    B_SAY(SELF, OTHER, "$NOGOLD");
}

instance DIA_MIRON_HELLO(C_INFO) {
    NPC = 0xd0c6;
    NR = 1;
    CONDITION = DIA_MIRON_HELLO_CONDITION;
    INFORMATION = DIA_MIRON_HELLO_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_MIRON_HELLO_CONDITION() {
    return TRUE;
}

func void DIA_MIRON_HELLO_INFO() {
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Miron_HELLO_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Miron_HELLO_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Miron_HELLO_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Miron_HELLO_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Miron_HELLO_03_05");
    AI_RESETFACEANI(SELF);
    TEACHER_LOGENTRY_MUSEUM();
}

instance DIA_MIRON_GOTOLDCOINS(C_INFO) {
    NPC = 0xd0c6;
    NR = 900;
    CONDITION = DIA_MIRON_GOTOLDCOINS_CONDITION;
    INFORMATION = DIA_MIRON_GOTOLDCOINS_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "I brought some old coins...";
}

func int DIA_MIRON_GOTOLDCOINS_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x12932)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

var int MIRON_COUNTOLDCOINS = 0;
var int MIRON_REWARD_TIER1 = 0;
var int MIRON_REWARD_TIER2 = 0;
var int MIRON_REWARD_TIER3 = 0;
func void DIA_MIRON_GOTOLDCOINS_CHOCIES() {
    INFO_CLEARCHOICES(0x12935);
    INFO_ADDCHOICE(0x12935, DIALOG_BACK, 0x12942);
    if ((NPC_HASITEMS(OTHER, 0x859c)) >= (1)) {
        INFO_ADDCHOICE(0x12935, "(Give 1 old coin)", 0x1293f);
    };
    if ((NPC_HASITEMS(OTHER, 0x859c)) >= (5)) {
        INFO_ADDCHOICE(0x12935, "(Give 5 old coins)", 0x12940);
    };
    if (((NPC_HASITEMS(OTHER, 0x859c)) >= (1)) && ((MIRON_REWARD_TIER3) == (TRUE))) {
        INFO_ADDCHOICE(0x12935, "(Give all old coins)", 0x12941);
    };
}

func void DIA_MIRON_GOTOLDCOINS_REWARD() {
    RND_MIRON = HLP_RANDOM(2);
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    if ((RND_MIRON) == (0)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Miron_GotOldCoins_03_02");
    };
    if ((RND_MIRON) == (1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Miron_GotOldCoins_03_03");
    };
    if ((MIRON_REWARD_TIER1) == (FALSE)) {
        if ((MIRON_COUNTOLDCOINS) >= (15)) {
            MIRON_REWARD_TIER1 = TRUE;
            AI_OUTPUT(SELF, OTHER, "DIA_Miron_GotOldCoins_03_04");
            AI_OUTPUT(SELF, OTHER, "DIA_Miron_GotOldCoins_03_05");
            CREATEINVITEMS(SELF, 0x8632, 3);
            B_GIVEINVITEMS(SELF, OTHER, 0x8632, 3);
            CREATEINVITEMS(SELF, 0x9362, 1);
            B_GIVEINVITEMS(SELF, OTHER, 0x9362, 1);
            CREATEINVITEMS(SELF, 0x9366, 1);
            B_GIVEINVITEMS(SELF, OTHER, 0x9366, 1);
        };
    };
    if ((MIRON_REWARD_TIER2) == (FALSE)) {
        if ((MIRON_COUNTOLDCOINS) >= (30)) {
            MIRON_REWARD_TIER2 = TRUE;
            AI_OUTPUT(SELF, OTHER, "DIA_Miron_GotOldCoins_03_06");
            AI_OUTPUT(SELF, OTHER, "DIA_Miron_GotOldCoins_03_07");
            AI_OUTPUT(SELF, OTHER, "DIA_Miron_GotOldCoins_03_08");
            LOG_CREATETOPIC(TOPIC_CITYTRADER, LOG_NOTE);
            AI_LOGENTRY(TOPIC_CITYTRADER, LOG_TRADER_CITY_MIRON);
        };
    };
    if ((MIRON_REWARD_TIER3) == (FALSE)) {
        if ((MIRON_COUNTOLDCOINS) >= (45)) {
            MIRON_REWARD_TIER3 = TRUE;
            AI_OUTPUT(SELF, OTHER, "DIA_Miron_GotOldCoins_03_09");
            AI_OUTPUT(SELF, OTHER, "DIA_Miron_GotOldCoins_03_10");
            AI_OUTPUT(SELF, OTHER, "DIA_Miron_GotOldCoins_03_11");
            CREATEINVITEMS(SELF, 0x9a8b, 1);
            B_GIVEINVITEMS(SELF, OTHER, 0x9a8b, 1);
        };
    };
    if ((MIRON_COUNTOLDCOINS) >= (60)) {
        MIRON_COUNTOLDCOINS = 45;
        AI_OUTPUT(SELF, OTHER, "DIA_Miron_GotOldCoins_03_12");
        CREATEINVITEMS(SELF, 0x9356, 1);
        B_GIVEINVITEMS(SELF, OTHER, 0x9356, 1);
        CREATEINVITEMS(SELF, 0x9346, 1);
        B_GIVEINVITEMS(SELF, OTHER, 0x9346, 1);
        CREATEINVITEMS(SELF, 0x934a, 1);
        B_GIVEINVITEMS(SELF, OTHER, 0x934a, 1);
    };
}

var int DIA_MIRON_GOTOLDCOINS_REWARD.RND_MIRON = 0;
func void DIA_MIRON_GOTOLDCOINS_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Miron_GotOldCoins_15_01");
    if ((NPC_HASITEMS(OTHER, 0x859c)) >= (1)) {
        DIA_MIRON_GOTOLDCOINS_CHOCIES();
    };
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Miron_GotOldCoins_03_13");
    AI_RESETFACEANI(SELF);
}

func void DIA_MIRON_GOTOLDCOINS_1() {
    CREATEINVITEMS(SELF, 0x859b, (MIRON_OLDCOINPRICE) * (1));
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, (MIRON_OLDCOINPRICE) * (1));
    B_GIVEPLAYERXP((XP_MIRON_OLDCOIN) * (1));
    MIRON_COUNTOLDCOINS = (MIRON_COUNTOLDCOINS) + (1);
    NPC_REMOVEINVITEMS(SELF, 0x859c, 1);
    DIA_MIRON_GOTOLDCOINS_REWARD();
    B_GIVEINVITEMS(OTHER, SELF, 0x859c, 1);
    DIA_MIRON_GOTOLDCOINS_CHOCIES();
}

func void DIA_MIRON_GOTOLDCOINS_5() {
    CREATEINVITEMS(SELF, 0x859b, (MIRON_OLDCOINPRICE) * (5));
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, (MIRON_OLDCOINPRICE) * (5));
    B_GIVEPLAYERXP((XP_MIRON_OLDCOIN) * (5));
    MIRON_COUNTOLDCOINS = (MIRON_COUNTOLDCOINS) + (5);
    NPC_REMOVEINVITEMS(SELF, 0x859c, 5);
    DIA_MIRON_GOTOLDCOINS_REWARD();
    B_GIVEINVITEMS(OTHER, SELF, 0x859c, 5);
    DIA_MIRON_GOTOLDCOINS_CHOCIES();
}

func void DIA_MIRON_GOTOLDCOINS_ALL() {
    CREATEINVITEMS(SELF, 0x859b, (MIRON_OLDCOINPRICE) * (NPC_HASITEMS(OTHER, 0x859c)));
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, (MIRON_OLDCOINPRICE) * (NPC_HASITEMS(OTHER, 0x859c)));
    B_GIVEPLAYERXP((XP_MIRON_OLDCOIN) * (NPC_HASITEMS(OTHER, 0x859c)));
    MIRON_COUNTOLDCOINS = (MIRON_COUNTOLDCOINS) + (NPC_HASITEMS(OTHER, 0x859c));
    NPC_REMOVEINVITEMS(SELF, 0x859c, NPC_HASITEMS(SELF, 0x859c));
    DIA_MIRON_GOTOLDCOINS_REWARD();
    B_GIVEINVITEMS(OTHER, SELF, 0x859c, NPC_HASITEMS(OTHER, 0x859c));
    DIA_MIRON_GOTOLDCOINS_CHOCIES();
}

func void DIA_MIRON_GOTOLDCOINS_BACK() {
    INFO_CLEARCHOICES(0x12935);
}

instance DIA_MIRON_TRADE(C_INFO) {
    NPC = 0xd0c6;
    NR = 850;
    CONDITION = DIA_MIRON_TRADE_CONDITION;
    INFORMATION = DIA_MIRON_TRADE_INFO;
    PERMANENT = TRUE;
    TRADE = TRUE;
    DESCRIPTION = "Let's deal.";
}

func int DIA_MIRON_TRADE_CONDITION() {
    if ((MIRON_REWARD_TIER2) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_MIRON_TRADE_INFO() {
    B_SAY(OTHER, SELF, "$MARVIN_LetsTrade");
    B_GIVETRADEINV(SELF);
}

instance DIA_MIRON_PICKPOCKET(C_INFO) {
    NPC = 0xd0c6;
    NR = 900;
    CONDITION = DIA_MIRON_PICKPOCKET_CONDITION;
    INFORMATION = DIA_MIRON_PICKPOCKET_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = PICKPOCKET_80;
}

func int DIA_MIRON_PICKPOCKET_CONDITION() {
    if (((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) && ((SELF.AIVAR[6]) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_MIRON_PICKPOCKET_INFO() {
    INFO_CLEARCHOICES(0x12946);
    INFO_ADDCHOICE(0x12946, DIALOG_BACK, 0x1294a);
    INFO_ADDCHOICE(0x12946, DIALOG_PICKPOCKET, 0x12949);
}

func void DIA_MIRON_PICKPOCKET_DOIT() {
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (2)) {
        B_PICKPOCKET_AMBIENT_TIER_2();
        SELF.AIVAR[6] = TRUE;
        INFO_CLEARCHOICES(0x12946);
    };
    AI_PLAYANI(HERO, T_CANNOTTAKE);
    PRINTSCREEN(PRINT_CANTPICKPOCKETTHISPERSON, -(1), -(1), FONT_SCREEN, 4);
    INFO_CLEARCHOICES(0x12946);
}

func void DIA_MIRON_PICKPOCKET_BACK() {
    INFO_CLEARCHOICES(0x12946);
}

