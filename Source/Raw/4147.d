func void SQ507_TEAM() {
    NPC_EXCHANGEROUTINE(VLK_6126_LENA, "FOLLOWBARRY");
    NPC_REFRESH(VLK_6126_LENA);
    MIL_13698_BARRY.AIVAR[15] = TRUE;
    VLK_6126_LENA.AIVAR[15] = TRUE;
}

func void SQ507_NOTTEAM() {
    MIL_13698_BARRY.AIVAR[15] = FALSE;
    VLK_6126_LENA.AIVAR[15] = FALSE;
}

func void SQ507_ENEMIESSPAWN() {
    WLD_INSERTNPC(0xc75e, "PART17_PATH_155A");
    WLD_INSERTNPC(0xc75e, "PART17_PATH_119A");
    WLD_INSERTNPC(0xc49f, "PART17_PATH_70A");
    WLD_INSERTNPC(0xc49f, "PART17_PATH_64A");
    if ((NPC_ISDEAD(SWAMPRAT_CHAPTER4_01)) == (FALSE)) {
        B_REMOVENPC(0xc464);
    };
    if ((NPC_ISDEAD(SWAMPRAT_CHAPTER4_02)) == (FALSE)) {
        B_REMOVENPC(0xc465);
    };
}

instance DIA_BARRY_EXIT(C_INFO) {
    NPC = 0xe491;
    NR = 999;
    CONDITION = DIA_BARRY_EXIT_CONDITION;
    INFORMATION = DIA_BARRY_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_BARRY_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_BARRY_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_BARRY_SQ507_START(C_INFO) {
    NPC = 0xe491;
    NR = 1;
    CONDITION = DIA_BARRY_SQ507_START_CONDITION;
    INFORMATION = DIA_BARRY_SQ507_START_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_BARRY_SQ507_START_CONDITION() {
    return TRUE;
}

func void DIA_BARRY_SQ507_START_INFO() {
    SQ507_TEAM();
    AI_OUTPUT(SELF, OTHER, "DIA_Barry_SQ507_START_03_01");
    INFO_CLEARCHOICES(0x14366);
    INFO_ADDCHOICE(0x14366, "None of your business.", 0x14369);
    INFO_ADDCHOICE(0x14366, "This girl was being held here against her will.", 0x1436a);
}

func void DIA_BARRY_SQ507_START_FUCKOFF() {
    AI_OUTPUT(OTHER, SELF, "DIA_Barry_SQ507_START_FuckOff_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Barry_SQ507_START_FuckOff_03_02");
    if (NPC_HASGUILDARMOREQUIPPED(HERO, GIL_MIL)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Barry_SQ507_START_FuckOff_03_03");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Barry_SQ507_START_FuckOff_03_04");
}

func void DIA_BARRY_SQ507_START_THETRUTH() {
    AI_OUTPUT(OTHER, SELF, "DIA_Barry_SQ507_START_TheTruth_15_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Barry_SQ507_START_TheTruth_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Barry_SQ507_START_TheTruth_03_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Barry_SQ507_START_TheTruth_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Barry_SQ507_START_TheTruth_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Barry_SQ507_START_TheTruth_03_06");
    INFO_CLEARCHOICES(0x14366);
    INFO_ADDCHOICE(0x14366, "I can do this without your help!", 0x1436b);
    INFO_ADDCHOICE(0x14366, "We could use some help.", 0x1436c);
}

func void DIA_BARRY_SQ507_START_ALONE() {
    AI_OUTPUT(OTHER, SELF, "DIA_Barry_SQ507_START_Alone_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Barry_SQ507_START_Alone_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Barry_SQ507_START_Alone_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Barry_SQ507_START_Alone_03_04");
    NPC_EXCHANGEROUTINE(SELF, "GUIDE");
    B_STARTOTHERROUTINE(VLK_6126_LENA, "FOLLOWBARRY");
    NPC_REFRESH(VLK_6126_LENA);
    AI_LOGENTRY(TOPIC_SQ507, LOG_SQ507_BARRYV2);
    AI_TURNAWAY(SELF, OTHER);
    AI_STOPPROCESSINFOS(SELF);
    SQ507_ENEMIESSPAWN();
}

func void DIA_BARRY_SQ507_START_TOGETHER() {
    AI_OUTPUT(OTHER, SELF, "DIA_Barry_SQ507_START_Together_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Barry_SQ507_START_Together_03_02");
    NPC_EXCHANGEROUTINE(SELF, "GUIDE");
    B_STARTOTHERROUTINE(VLK_6126_LENA, "FOLLOWBARRY");
    NPC_REFRESH(VLK_6126_LENA);
    AI_LOGENTRY(TOPIC_SQ507, LOG_SQ507_BARRYV1);
    AI_TURNAWAY(SELF, OTHER);
    AI_STOPPROCESSINFOS(SELF);
    SQ507_ENEMIESSPAWN();
}

instance DIA_BARRY_SQ507_AFTERATTACK(C_INFO) {
    NPC = 0xe491;
    NR = 1;
    CONDITION = DIA_BARRY_SQ507_AFTERATTACK_CONDITION;
    INFORMATION = DIA_BARRY_SQ507_AFTERATTACK_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_BARRY_SQ507_AFTERATTACK_CONDITION() {
    if (((SQ507_FIGHTWITHBOUNTYHUNTERS) == (3)) && ((LOG_GETSTATUS(MIS_SQ507)) == (LOG_RUNNING))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BARRY_SQ507_AFTERATTACK_INFO() {
    B_HEALNPC_SELF();
    AI_OUTPUT(SELF, OTHER, "DIA_Barry_SQ507_AfterAttack_03_01");
    AI_LOGENTRY(TOPIC_SQ507, LOG_SQ507_VOLKERGUARDS);
    INFO_CLEARCHOICES(0x1436d);
    INFO_ADDCHOICE(0x1436d, "These are people I've still got a bone to pick with.", 0x14370);
}

func void DIA_BARRY_SQ507_ITISPERSONAL() {
    AI_OUTPUT(OTHER, SELF, "DIA_Barry_SQ507_ItIsPersonal_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Barry_SQ507_ItIsPersonal_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Barry_SQ507_ItIsPersonal_15_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Barry_SQ507_ItIsPersonal_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Barry_SQ507_ItIsPersonal_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Barry_SQ507_ItIsPersonal_03_06");
    AI_LOGENTRY(TOPIC_SQ507, LOG_SQ507_SPLITUP);
    B_STARTOTHERROUTINE(VLK_6126_LENA, "SPLITUP");
    NPC_REFRESH(VLK_6126_LENA);
    B_STARTOTHERROUTINE(VLK_13570_NADINE, "SQ507");
    NPC_REFRESH(VLK_13570_NADINE);
    NPC_EXCHANGEROUTINE(MIL_13698_BARRY, "SPLITUP");
    AI_STOPPROCESSINFOS(SELF);
}

