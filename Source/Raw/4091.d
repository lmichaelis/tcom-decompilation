instance DIA_GERHARD2_EXIT(C_INFO) {
    NPC = 0xd0a7;
    NR = 999;
    CONDITION = DIA_GERHARD2_EXIT_CONDITION;
    INFORMATION = DIA_GERHARD2_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_GERHARD2_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_GERHARD2_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_GERHARD_SQ225_VINEYARDATTACK(C_INFO) {
    NPC = 0xd0a7;
    NR = 1;
    CONDITION = DIA_GERHARD_SQ225_VINEYARDATTACK_CONDITION;
    INFORMATION = DIA_GERHARD_SQ225_VINEYARDATTACK_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_GERHARD_SQ225_VINEYARDATTACK_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ225)) == (LOG_RUNNING)) && ((SQ225_FIGHTINVINEYARD_ANDERAS) == (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_GERHARD_SQ225_VINEYARDATTACK_INFO() {
    SQ225_TELEPORTGERHARD = TRUE;
    SQ225_REMOVEHOLDWIGPORTALCHECK = TRUE;
    WLD_ASSIGNROOMTOGUILD("9WINERY01", GIL_PAL);
    AI_STARTFACEANI(SELF, S_SURPRISE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Gerhard_SQ225_VineyardAttack_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Gerhard_SQ225_VineyardAttack_03_02");
    AI_STARTFACEANI(OTHER, S_ANGRY, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Gerhard_SQ225_VineyardAttack_15_03");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Gerhard_SQ225_VineyardAttack_03_04");
    AI_RESETFACEANI(OTHER);
    AI_OUTPUT(OTHER, SELF, "DIA_Gerhard_SQ225_VineyardAttack_15_05");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Gerhard_SQ225_VineyardAttack_03_06");
    AI_OUTPUT(OTHER, SELF, "DIA_Gerhard_SQ225_VineyardAttack_15_07");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Gerhard_SQ225_VineyardAttack_03_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Gerhard_SQ225_VineyardAttack_03_09");
    AI_RESETFACEANI(SELF);
    AI_STOPPROCESSINFOS(SELF);
    AI_FUNCTION(SELF, 0x13b63);
}

func void GERHARD_SQ225_ATTACKVINEYARD() {
    VLK_3014_GERHARD_VINEYARDFIGHT.AIVAR[15] = TRUE;
    NONE_11214_MERCENARY.AIVAR[15] = TRUE;
    NPC_EXCHANGEROUTINE(VLK_3014_GERHARD_VINEYARDFIGHT, "SQ225_GUIDE");
    B_STARTOTHERROUTINE(NONE_11214_MERCENARY, "SQ225_FOLLOW");
    NPC_REFRESH(NONE_11214_MERCENARY);
}

instance DIA_GERHARD_SQ225_HOLDWIGFINISH(C_INFO) {
    NPC = 0xd0a7;
    NR = 1;
    CONDITION = DIA_GERHARD_SQ225_HOLDWIGFINISH_CONDITION;
    INFORMATION = DIA_GERHARD_SQ225_HOLDWIGFINISH_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_GERHARD_SQ225_HOLDWIGFINISH_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ225)) == (LOG_RUNNING)) && ((SQ225_FIGHTINVINEYARD) == (4))) {
        if ((NPC_GETDISTTONPC(VLK_3014_GERHARD_VINEYARDFIGHT, BAU_2245_HOLDWIG)) <= (1000)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

var int GERHARD_SQ225_HOLDWIGFINISH_OTHERWAY = 0;
var int GERHARD_SQ225_HOLDWIGFINISH_LETTER = 0;
func void DIA_GERHARD_SQ225_HOLDWIGFINISH_CHOICES() {
    INFO_CLEARCHOICES(0x13b64);
    if ((GERHARD_SQ225_HOLDWIGFINISH_OTHERWAY) == (FALSE)) {
        INFO_ADDCHOICE(0x13b64, "There must be some other way.", 0x13b6d);
    };
    INFO_ADDCHOICE(0x13b64, "It may not be so easy to get out of the colony.", 0x13b6f);
    if ((SQ225_READHARRYLETTER) == (TRUE)) {
        if ((GERHARD_SQ225_HOLDWIGFINISH_LETTER) == (FALSE)) {
            INFO_ADDCHOICE(0x13b64, "You have to explain something to me first! (Show letter)", 0x13b6e);
        };
    };
    if ((GERHARD_SQ225_HOLDWIGFINISH_LETTER) == (FALSE)) {
        INFO_ADDCHOICE(0x13b64, "(Don't react)", 0x13b6c);
    };
    INFO_ADDCHOICE(0x13b64, "Kill him, but my silence will cost you.", 0x13b70);
}

func void DIA_GERHARD_SQ225_HOLDWIGFINISH_INFO() {
    SQ225_CANKILLHOLDWIG = TRUE;
    BAU_2245_HOLDWIG.FLAGS = 0;
    BAU_2245_HOLDWIG.GUILD = GIL_NONE;
    NPC_SETTRUEGUILD(BAU_2245_HOLDWIG, GIL_NONE);
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Gerhard_SQ225_HoldwigFinish_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Gerhard_SQ225_HoldwigFinish_03_02");
    if ((NPC_HASEQUIPPEDMELEEWEAPON(SELF)) == (FALSE)) {
        CREATEINVITEMS(SELF, 0x84e0, 1);
        AI_EQUIPBESTMELEEWEAPON(SELF);
    };
    AI_DRAWWEAPON(SELF);
    AI_TURNTONPC(SELF, BAU_2245_HOLDWIG);
    DIA_GERHARD_SQ225_HOLDWIGFINISH_CHOICES();
}

func void DIA_GERHARD_SQ225_HOLDWIGFINISH_CUTSCENE() {
    INFO_CLEARCHOICES(0x13b64);
    AI_STOPPROCESSINFOS(SELF);
    AI_FUNCTION(SELF, 0x13b6b);
}

func void GERHARD_SQ225_ANDERASFINALCUTSCENE() {
    SQ225_ANDERASWAY_STARTCUTSCENE = 1;
    B_STARTOTHERROUTINE(NONE_11214_MERCENARY, "SQ225_STOP");
    NPC_REFRESH(NONE_11214_MERCENARY);
}

func void DIA_GERHARD_SQ225_HOLDWIGFINISH_NOTHING() {
    BAU_2245_HOLDWIG.FLAGS = 0;
    AI_TURNTONPC(SELF, BAU_2245_HOLDWIG);
    if ((GERHARD_SQ225_HOLDWIGFINISH_LETTER) == (FALSE)) {
        SQ225_GERHARD_FINISHWAY = 1;
    };
    SQ225_GERHARD_FINISHWAY = 2;
    AI_REMOVEWEAPON(OTHER);
    AI_FINISHINGMOVE(SELF, BAU_2245_HOLDWIG);
    AI_REMOVEWEAPON(SELF);
    AI_TURNTONPC(SELF, HERO);
    DIA_GERHARD_SQ225_HOLDWIGFINISH_CUTSCENE();
}

func void DIA_GERHARD_SQ225_HOLDWIGFINISH_OTHERWAY() {
    GERHARD_SQ225_HOLDWIGFINISH_OTHERWAY = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Gerhard_SQ225_HoldwigFinish_OtherWay_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Gerhard_SQ225_HoldwigFinish_OtherWay_03_02");
    DIA_GERHARD_SQ225_HOLDWIGFINISH_CHOICES();
}

func void DIA_GERHARD_SQ225_HOLDWIGFINISH_LETTER() {
    GERHARD_SQ225_HOLDWIGFINISH_LETTER = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Gerhard_SQ225_HoldwigFinish_Letter_15_01");
    AI_WAITTILLEND(SELF, OTHER);
    AI_TURNTONPC(SELF, HERO);
    B_MARVIN_USEFAKESCROLLSTATE_START();
    AI_OUTPUT(OTHER, SELF, "DIA_Gerhard_SQ225_HoldwigFinish_Letter_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Gerhard_SQ225_HoldwigFinish_Letter_03_03");
    B_MARVIN_USEFAKESCROLLSTATE_END();
    AI_OUTPUT(OTHER, SELF, "DIA_Gerhard_SQ225_HoldwigFinish_Letter_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Gerhard_SQ225_HoldwigFinish_Letter_03_05");
    DIA_GERHARD_SQ225_HOLDWIGFINISH_CHOICES();
}

func void DIA_GERHARD_SQ225_HOLDWIGFINISH_OTHERWAY_COLONY() {
    SQ225_GERHARD_FINISHWAY = 3;
    AI_OUTPUT(OTHER, SELF, "DIA_Gerhard_SQ225_HoldwigFinish_Colony_15_01");
    AI_WAITTILLEND(SELF, OTHER);
    AI_TURNTONPC(SELF, HERO);
    AI_OUTPUT(SELF, OTHER, "DIA_Gerhard_SQ225_HoldwigFinish_Colony_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Gerhard_SQ225_HoldwigFinish_Colony_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Gerhard_SQ225_HoldwigFinish_Colony_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Gerhard_SQ225_HoldwigFinish_Colony_03_05");
    DIA_GERHARD_SQ225_HOLDWIGFINISH_CUTSCENE();
}

func void DIA_GERHARD_SQ225_HOLDWIGFINISH_LETTER_GOLD() {
    AI_OUTPUT(OTHER, SELF, "DIA_Gerhard_SQ225_HoldwigFinish_Gold_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Gerhard_SQ225_HoldwigFinish_Gold_03_02");
    INFO_CLEARCHOICES(0x13b64);
    INFO_ADDCHOICE(0x13b64, "500 Gold pieces.", 0x13b71);
    INFO_ADDCHOICE(0x13b64, "1000 Gold pieces.", 0x13b72);
}

func void DIA_GERHARD_SQ225_HOLDWIGFINISH_LETTER_GOLD_500() {
    AI_OUTPUT(OTHER, SELF, "DIA_Gerhard_SQ225_HoldwigFinish_500_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Gerhard_SQ225_HoldwigFinish_500_03_02");
    CREATEINVITEMS(SELF, 0x859b, SQ225_GERHARD_MONEY);
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, SQ225_GERHARD_MONEY);
    DIA_GERHARD_SQ225_HOLDWIGFINISH_NOTHING();
}

func void DIA_GERHARD_SQ225_HOLDWIGFINISH_LETTER_GOLD_1000() {
    AI_OUTPUT(OTHER, SELF, "DIA_Gerhard_SQ225_HoldwigFinish_1000_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Gerhard_SQ225_HoldwigFinish_1000_03_02");
}

