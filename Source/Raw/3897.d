var int GIVEINFORMATION_Q206 = 0;
instance DIA_OLAF_EXIT(C_INFO) {
    NPC = 0xd500;
    NR = 999;
    CONDITION = DIA_OLAF_EXIT_CONDITION;
    INFORMATION = DIA_OLAF_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_OLAF_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_OLAF_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_OLAF_HELLO(C_INFO) {
    NPC = 0xd500;
    NR = 3;
    CONDITION = DIA_OLAF_HELLO_CONDITION;
    INFORMATION = DIA_OLAF_HELLO_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Who are you?";
}

func int DIA_OLAF_HELLO_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 0x121d9)) == (FALSE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_OLAF_HELLO_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Hello_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Hello_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Hello_03_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Hello_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Hello_03_05");
}

instance DIA_OLAF_KURT(C_INFO) {
    NPC = 0xd500;
    NR = 1;
    CONDITION = DIA_OLAF_KURT_CONDITION;
    INFORMATION = DIA_OLAF_KURT_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Kurt sent me. I'm his nephew.";
}

func int DIA_OLAF_KURT_CONDITION() {
    if ((((KAPITEL) == (2)) && (NPC_KNOWSINFO(OTHER, 0x1577f))) && ((LOG_GETSTATUS(MIS_Q209)) == (LOG_RUNNING))) {
        if ((NPC_KNOWSINFO(OTHER, 0x12143)) || (NPC_KNOWSINFO(OTHER, 0x121d9))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_OLAF_KURT_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Kurt_15_01");
    if ((Q201_SEWERSWAY) == (2)) {
        AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Kurt_03_07");
        AI_RESETFACEANI(SELF);
    };
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Kurt_15_02");
    AI_STARTFACEANI(SELF, S_THINK, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Kurt_03_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Kurt_15_04");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Kurt_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Kurt_03_06");
    INFO_CLEARCHOICES(0x12146);
    INFO_ADDCHOICE(0x12146, "Someone close to me went missing. Where do you think is the best place to start looking?", 0x1214a);
    if ((HERO.GUILD) == (GIL_NONE)) {
        if ((Q201_SEWERSWAY) == (2)) {
            INFO_ADDCHOICE(0x12146, "Do you have any more advice for me?", 0x12149);
        } else {
            INFO_ADDCHOICE(0x12146, "I just got into town. Do you have any advice for me?", 0x12149);
        };
    };
}

func void DIA_OLAF_KURT_ADVICE() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    if ((Q201_SEWERSWAY) == (2)) {
        AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Kurt_Advice_15_06");
    };
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Kurt_Advice_15_01");
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Kurt_Advice_03_02");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Kurt_Advice_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Kurt_Advice_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Kurt_Advice_03_05");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    LOG_CREATETOPIC(TOPIC_Q202, LOG_MISSION);
    LOG_SETSTATUS(_@(MIS_Q202), TOPIC_Q202, LOG_RUNNING);
    AI_LOGENTRY(TOPIC_Q202, LOG_Q202_START_V2);
    LOG_SETSTATUS(_@(MIS_Q209), TOPIC_Q209, LOG_SUCCESS);
    AI_LOGENTRY(TOPIC_Q209, LOG_Q209_FINISH);
    B_GIVEPLAYERXP(XP_Q209_FINISH);
}

func void DIA_OLAF_KURT_SEARCH() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Kurt_Search_15_01");
    AI_WAITTILLEND(SELF, OTHER);
    B_STANDUP();
    AI_STOPLOOKAT(SELF);
    AI_PLAYANI(SELF, T_SEARCH_SCARED);
    AI_STARTFACEANI(SELF, S_THINK, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Kurt_Search_03_02");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Kurt_Search_03_03");
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Kurt_Search_03_04");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Kurt_Search_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Kurt_Search_03_06");
    INFO_ADDCHOICE(0x12146, "What should I do then?", 0x1214b);
}

func void DIA_OLAF_KURT_SEARCH_WHAT() {
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Kurt_What_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Kurt_What_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Kurt_What_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Kurt_What_03_04");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

instance DIA_OLAF_SQ116_KURT(C_INFO) {
    NPC = 0xd500;
    NR = 1;
    CONDITION = DIA_OLAF_SQ116_KURT_CONDITION;
    INFORMATION = DIA_OLAF_SQ116_KURT_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_OLAF_SQ116_KURT_CONDITION() {
    if ((((SQ116_KURTLETTER_READ) == (TRUE)) && ((LOG_GETSTATUS(MIS_SQ116)) == (LOG_RUNNING))) && ((NPC_KNOWSINFO(OTHER, 0x15785)) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_OLAF_SQ116_KURT_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_SQ116_Kurt_03_01");
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_OLAF_TROUBLESOME3START(C_INFO) {
    NPC = 0xd500;
    NR = 1;
    CONDITION = DIA_OLAF_TROUBLESOME3START_CONDITION;
    INFORMATION = DIA_OLAF_TROUBLESOME3START_INFO;
    DESCRIPTION = "How are you doing?";
}

func int DIA_OLAF_TROUBLESOME3START_CONDITION() {
    if (((NPC_KNOWSINFO(OTHER, 0x12143)) || (NPC_KNOWSINFO(OTHER, 0x121d9))) && ((HERO.GUILD) == (GIL_VLK))) {
        if ((KAPITEL) < (3)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_OLAF_TROUBLESOME3START_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Troublesome3Start_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Troublesome3Start_14_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Troublesome3Start_14_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Troublesome3Start_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Troublesome3Start_14_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Troublesome3Start_14_05");
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Troublesome3Start_15_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Troublesome3Start_14_07");
    INFO_CLEARCHOICES(0x1214f);
    INFO_ADDCHOICE(0x1214f, "I'm sorry, but I can't help it.", 0x12152);
    INFO_ADDCHOICE(0x1214f, "Perhaps I can help you?", 0x12153);
}

func void DIA_OLAF_TROUBLESOME3START_NOHELP() {
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Troublesome3Start_NoHelp_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Troublesome3Start_NoHelp_14_01");
    AI_STOPPROCESSINFOS(SELF);
}

func void DIA_OLAF_TROUBLESOME3START_HELP() {
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Troublesome3Start_Help_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Troublesome3Start_Help_14_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Troublesome3Start_Help_15_02");
    AI_STOPPROCESSINFOS(SELF);
    LOG_CREATETOPIC(TOPIC_FAQ003, LOG_MISSION);
    LOG_SETSTATUS(_@(MIS_FAQ003), TOPIC_FAQ003, LOG_RUNNING);
    AI_LOGENTRY(TOPIC_FAQ003, LOG_FAQ003_START);
}

instance DIA_OLAF_STRONGALCOHOL(C_INFO) {
    NPC = 0xd500;
    NR = 2;
    CONDITION = DIA_OLAF_STRONGALCOHOL_CONDITION;
    INFORMATION = DIA_OLAF_STRONGALCOHOL_INFO;
    DESCRIPTION = "Which of your drinks is the strongest?";
}

var int BLACKTROLLNOTBOUGHT = 0;
func int DIA_OLAF_STRONGALCOHOL_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 0x1214f)) && ((LOG_GETSTATUS(MIS_FAQ003)) == (LOG_RUNNING))) {
        if ((KAPITEL) < (3)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_OLAF_STRONGALCOHOL_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_StrongAlcohol_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_StrongAlcohol_14_01");
    AI_LOGENTRY(TOPIC_FAQ003, LOG_FAQ003_STRONGDRINK);
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_StrongAlcohol_14_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_StrongAlcohol_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_StrongAlcohol_14_04");
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_StrongAlcohol_15_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_StrongAlcohol_14_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_StrongAlcohol_14_07");
    INFO_CLEARCHOICES(0x12154);
    INFO_ADDCHOICE(0x12154, "Maybe some other time.", 0x12159);
    INFO_ADDCHOICE(0x12154, "I'll take it.", 0x12158);
}

func void DIA_OLAF_STRONGALCOHOL_YES() {
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (FAQ003_BLACKTROLL)) {
        AI_OUTPUT(OTHER, SELF, "DIA_Olaf_StrongAlcohol_Yes_15_00");
        AI_OUTPUT(SELF, OTHER, "DIA_Olaf_StrongAlcohol_Yes_14_01");
        CREATEINVITEMS(SELF, 0x9120, 1);
        B_GIVEINVITEMS(OTHER, SELF, 0x859b, FAQ003_BLACKTROLL);
        BLACKTROLLNOTBOUGHT = FALSE;
    };
    B_SAY(SELF, OTHER, "$NOGOLD");
    BLACKTROLLNOTBOUGHT = TRUE;
    AI_STOPPROCESSINFOS(SELF);
}

func void DIA_OLAF_STRONGALCOHOL_NO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_StrongAlcohol_No_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_StrongAlcohol_No_14_01");
    BLACKTROLLNOTBOUGHT = TRUE;
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_OLAF_STRONALCOHOLBACK(C_INFO) {
    NPC = 0xd500;
    NR = 2;
    CONDITION = DIA_OLAF_STRONALCOHOLBACK_CONDITION;
    INFORMATION = DIA_OLAF_STRONALCOHOLBACK_INFO;
    DESCRIPTION = "Do you still have that Black Troll?";
    PERMANENT = TRUE;
}

func int DIA_OLAF_STRONALCOHOLBACK_CONDITION() {
    if (((BLACKTROLLNOTBOUGHT) == (TRUE)) && ((LOG_GETSTATUS(MIS_FAQ003)) == (LOG_RUNNING))) {
        if ((KAPITEL) < (3)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_OLAF_STRONALCOHOLBACK_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_StronAlcoholBack_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_StronAlcoholBack_14_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_StronAlcoholBack_14_02");
    INFO_CLEARCHOICES(0x12154);
    INFO_CLEARCHOICES(0x1215a);
    INFO_ADDCHOICE(0x1215a, "Maybe some other time.", 0x12159);
    INFO_ADDCHOICE(0x1215a, "I'll take it.", 0x12158);
}

instance DIA_OLAF_UFAILED(C_INFO) {
    NPC = 0xd500;
    NR = 1;
    CONDITION = DIA_OLAF_UFAILED_CONDITION;
    INFORMATION = DIA_OLAF_UFAILED_INFO;
    IMPORTANT = TRUE;
}

func int DIA_OLAF_UFAILED_CONDITION() {
    if (((((NPC_ISINSTATE(SELF, 0xf09f)) && ((LOG_GETSTATUS(MIS_FAQ003)) == (LOG_RUNNING))) && ((FAQ003_MARVINHADHELP) == (FALSE))) && (NPC_KNOWSINFO(OTHER, 0x12214))) && (NPC_KNOWSINFO(OTHER, 0x12253))) {
        if ((KAPITEL) < (3)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_OLAF_UFAILED_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_UFailed_14_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_UFailed_14_02");
    LOG_SETSTATUS(_@(MIS_FAQ003), TOPIC_FAQ003, LOG_FAILED);
    if ((FAQ003_WEKNOWABOUTOLAF) == (TRUE)) {
        AI_LOGENTRY(TOPIC_FAQ003, LOG_FAQ003_WEFAILEDARAXOS);
    };
    if ((FAQ003_WEKNOWABOUTOLAF) == (FALSE)) {
        AI_LOGENTRY(TOPIC_FAQ003, LOG_FAQ003_WEFAILED);
    };
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_OLAF_TROUBLESOME3DRUNK(C_INFO) {
    NPC = 0xd500;
    NR = 1;
    CONDITION = DIA_OLAF_TROUBLESOME3DRUNK_CONDITION;
    INFORMATION = DIA_OLAF_TROUBLESOME3DRUNK_INFO;
    IMPORTANT = TRUE;
}

func int DIA_OLAF_TROUBLESOME3DRUNK_CONDITION() {
    if (((NPC_ISINSTATE(SELF, 0xf09f)) && ((LOG_GETSTATUS(MIS_FAQ003)) == (LOG_RUNNING))) && (((NPC_KNOWSINFO(OTHER, 0x1222e)) || (NPC_KNOWSINFO(OTHER, 0x12208))) || ((FAQ003_ARNOLDBEATEN) == (TRUE)))) {
        if ((KAPITEL) < (3)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_OLAF_TROUBLESOME3DRUNKRESULT() {
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Troublesome3Drunk_14_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Troublesome3Drunk_14_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Troublesome3Drunk_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Troublesome3Drunk_14_03");
    if ((FAQ003_MARVINHADHELP) == (TRUE)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Troublesome3Drunk_14_04");
        AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Troublesome3Drunk_14_05");
        Q204_ARAXOSGUILDREPUTATION = (Q204_ARAXOSGUILDREPUTATION) + (2);
        PRINTD("+2 rep do Gildi Araxos");
        if ((((Q204_WEGOTENTRY) == (FALSE)) && ((Q204_ARAXOSGUILDREPUTATION) >= (Q204_ARAXOSGUILDREPUTATION_REQUIRED))) && ((LOG_GETSTATUS(MIS_Q204)) == (LOG_RUNNING))) {
            AI_LOGENTRY(TOPIC_Q204, LOG_Q204_ITHINKIDONEENOUGH);
            Q204_WEGOTENTRY = TRUE;
        };
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Troublesome3Drunk_14_11");
    CREATEINVITEMS(SELF, 0x859b, FAQ003_REWARD);
    if (((LOG_GETSTATUS(MIS_Q204)) == (LOG_RUNNING)) && ((FAQ003_WEKNOWABOUTOLAF) == (TRUE))) {
        AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Troublesome3Drunk_15_06");
        AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Troublesome3Drunk_14_07");
        AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Troublesome3Drunk_14_08");
        AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Troublesome3Drunk_14_09");
        AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Troublesome3Drunk_14_10");
    };
    B_GIVEINVITEMS(SELF, OTHER, 0x859b, FAQ003_REWARD);
    LOG_SETSTATUS(_@(MIS_FAQ003), TOPIC_FAQ003, LOG_SUCCESS);
    B_GIVEPLAYERXP(XP_FAQ003_FINISH);
    if ((FAQ003_WEKNOWABOUTOLAF) == (TRUE)) {
        AI_LOGENTRY(TOPIC_FAQ003, LOG_FAQ003_HELGAHAPPYARAXOS);
    };
    if ((FAQ003_WEKNOWABOUTOLAF) == (FALSE)) {
        AI_LOGENTRY(TOPIC_FAQ003, LOG_FAQ003_HELGAHAPPY);
    };
}

func void DIA_OLAF_TROUBLESOME3DRUNK_INFO() {
    if (NPC_KNOWSINFO(OTHER, 0x1222e)) {
        DIA_OLAF_TROUBLESOME3DRUNKRESULT();
        Q204_ARAXOSGUILDREPUTATION = (Q204_ARAXOSGUILDREPUTATION) + (2);
        PRINTD("+2 rep do Gildi Araxos");
        if ((((Q204_WEGOTENTRY) == (FALSE)) && ((Q204_ARAXOSGUILDREPUTATION) >= (Q204_ARAXOSGUILDREPUTATION_REQUIRED))) && ((LOG_GETSTATUS(MIS_Q204)) == (LOG_RUNNING))) {
            AI_LOGENTRY(TOPIC_Q204, LOG_Q204_ITHINKIDONEENOUGH);
            Q204_WEGOTENTRY = TRUE;
        };
    };
    if ((FAQ003_ARNOLDBEATEN) == (TRUE)) {
        DIA_OLAF_TROUBLESOME3DRUNKRESULT();
        Q204_ARAXOSGUILDREPUTATION = (Q204_ARAXOSGUILDREPUTATION) + (1);
        PRINTD("+1 rep do Gildi Araxos");
        if ((((Q204_WEGOTENTRY) == (FALSE)) && ((Q204_ARAXOSGUILDREPUTATION) >= (Q204_ARAXOSGUILDREPUTATION_REQUIRED))) && ((LOG_GETSTATUS(MIS_Q204)) == (LOG_RUNNING))) {
            AI_LOGENTRY(TOPIC_Q204, LOG_Q204_ITHINKIDONEENOUGH);
            Q204_WEGOTENTRY = TRUE;
        };
    };
    if (NPC_KNOWSINFO(OTHER, 0x12208)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Troublesome3Drunk_14_15");
        AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Troublesome3Drunk_14_16");
        LOG_SETSTATUS(_@(MIS_FAQ003), TOPIC_FAQ003, LOG_FAILED);
        if ((LOG_GETSTATUS(MIS_Q204)) == (LOG_RUNNING)) {
            AI_LOGENTRY(TOPIC_FAQ003, LOG_FAQ003_DRUNKFAILEDARAXOS);
        } else {
            AI_LOGENTRY(TOPIC_FAQ003, LOG_FAQ003_DRUNKFAILED);
        } else {
            AI_STOPPROCESSINFOS(SELF);
        };
    };
}

instance DIA_OLAF_INFORMATION(C_INFO) {
    NPC = 0xd500;
    NR = 1;
    CONDITION = DIA_OLAF_INFORMATION_CONDITION;
    INFORMATION = DIA_OLAF_INFORMATION_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I need information.";
}

func int DIA_OLAF_INFORMATION_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 0x12143)) || (NPC_KNOWSINFO(OTHER, 0x121d9))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

var int OLAF_INFORMATION_FIRSTFREE = 0;
var int OLAF_INFORMATION_COST = 0;
var int OLAF_INFORMATION_FAQ002_KAF = 0;
func void DIA_OLAF_INFORMATION_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Information_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Information_03_02");
    OLAF_INFORMATION_FIRSTFREE = TRUE;
    INFO_CLEARCHOICES(0x12164);
    INFO_ADDCHOICE(0x12164, "It's too expensive! How about 5 gold pieces?", 0x1216b);
    INFO_ADDCHOICE(0x12164, "Fine.", 0x1216a);
}

func void DIA_OLAF_INFORMATION_OKAY() {
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Information_Okay_15_01");
    OLAF_INFORMATION_COST = 1;
    INFO_CLEARCHOICES(0x12164);
}

func void DIA_OLAF_INFORMATION_TOOMUCH() {
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Information_TooMuch_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Information_TooMuch_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Information_TooMuch_15_03");
    OLAF_INFORMATION_COST = 2;
    INFO_CLEARCHOICES(0x12164);
}

instance DIA_OLAF_GIVEINFORMATION(C_INFO) {
    NPC = 0xd500;
    NR = 2;
    CONDITION = DIA_OLAF_GIVEINFORMATION_CONDITION;
    INFORMATION = DIA_OLAF_GIVEINFORMATION_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "I need information.";
}

func int DIA_OLAF_GIVEINFORMATION_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 0x12164)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void OLAFINFORMATIONS_PAY() {
    if ((OLAF_INFORMATION_FIRSTFREE) == (TRUE)) {
        B_GIVEPLAYERXP(XP_OLAFINFORMATION_V1);
        OLAF_INFORMATION_FIRSTFREE = FALSE;
    };
    if ((OLAF_INFORMATION_COST) == (1)) {
        B_GIVEPLAYERXP(XP_OLAFINFORMATION_V2);
    };
    if ((OLAF_INFORMATION_COST) == (2)) {
        B_GIVEPLAYERXP(XP_OLAFINFORMATION_V1);
        B_GIVEINVITEMS(OTHER, SELF, 0x859b, OLAF_INFORMATIONCOST_V2);
    };
}

var int Q509_OLAFWARRIORSINFO = 0;
var int OLAF_KURTINFORMATION = 0;
var int CQ004_OLAFINFO_CRANE = 0;
var int CQ004_OLAFINFO_RECKON = 0;
var int SQ217_OLAFINFO = 0;
var int SQ223_OLAFINFO = 0;
var int FMQ002_OLAFINFO = 0;
var int Q402_OLAFINFO = 0;
var int SQ309_OLAFINFO = 0;
var int SQ316_OLAFINFO = 0;
var int SQ403_OLAFINFO = 0;
var int SQ405_OLAFINFO = 0;
var int KQ404_OLAFINFO = 0;
var int OLAFINFO_GOLD = 0;
var int OLAFINFO_CITIZEN = 0;
func void OLAFINFORMATIONS() {
    INFO_CLEARCHOICES(0x1216c);
    INFO_ADDCHOICE(0x1216c, DIALOG_BACK, 0x12190);
    if ((((LOG_GETSTATUS(MIS_Q405)) == (LOG_SUCCESS)) && ((KURTLETTER_READ) == (TRUE))) && ((OLAF_KURTINFORMATION) == (FALSE))) {
        INFO_ADDCHOICE(0x1216c, "Have you seen Kurt lately?", 0x121a5);
    };
    if ((((LOG_GETSTATUS(MIS_Q509)) == (LOG_RUNNING)) && ((Q509_OLAFWARRIORSINFO) == (FALSE))) && ((Q509_COUNTWARRIORS) <= (4))) {
        INFO_ADDCHOICE(0x1216c, "I'm looking for warriors for a very dangerous assignment.", 0x121a4);
    };
    if (((LOG_GETSTATUS(MIS_FAQ002)) == (LOG_RUNNING)) && ((OLAF_INFORMATION_FAQ002_KAF) == (FALSE))) {
        INFO_ADDCHOICE(0x1216c, "Have you been visited by a guy with a ponytail lately?", 0x1218e);
    };
    if (((((LOG_GETSTATUS(MIS_Q206)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x11296))) && ((GIVEINFORMATION_Q206) == (FALSE))) && ((NPC_KNOWSINFO(OTHER, 0x11299)) == (FALSE))) {
        Q206_MARVINISBADSPY();
        INFO_ADDCHOICE(0x1216c, "You know anything about smugglers?", 0x12192);
    };
    if (((LOG_GETSTATUS(MIS_QM304)) == (LOG_RUNNING)) && ((QM304_OLAFNUGGETINFO) == (FALSE))) {
        INFO_ADDCHOICE(0x1216c, "Has anyone tried paying with an ore nugget at your place?", 0x1218f);
    };
    if (((((LOG_GETSTATUS(MIS_CQ004)) == (LOG_RUNNING)) && ((CQ004_OLAFINFO_CRANE) == (FALSE))) && (NPC_KNOWSINFO(OTHER, 0x1265a))) && ((NPC_KNOWSINFO(OTHER, 0x12512)) == (FALSE))) {
        INFO_ADDCHOICE(0x1216c, "I'm looking for information on a damaged crane.", 0x12183);
    };
    if (((((LOG_GETSTATUS(MIS_CQ004)) == (LOG_RUNNING)) && ((CQ004_OLAFINFO_RECKON) == (FALSE))) && ((CQ004_RECONANDVEIGOCHEAT) == (TRUE))) && ((CQ004_RECONCHESTSTATUS) == (0))) {
        INFO_ADDCHOICE(0x1216c, "Which room does Recon rent?", 0x12184);
    };
    if ((((LOG_GETSTATUS(MIS_SQ217)) == (LOG_RUNNING)) && ((SQ217_OLAFINFO) == (FALSE))) && ((SQ217_PEARLS) == (0))) {
        INFO_ADDCHOICE(0x1216c, "Where can I find pearls?", 0x12185);
    };
    if ((((LOG_GETSTATUS(MIS_SQ223)) == (LOG_RUNNING)) && ((SQ223_OLAFINFO) == (FALSE))) && ((SQ223_FOUNDDRUNKENGUIDE) == (FALSE))) {
        INFO_ADDCHOICE(0x1216c, "Have you seen any drunken guides?", 0x12186);
    };
    if ((((LOG_GETSTATUS(MIS_FMQ002)) == (LOG_RUNNING)) && ((FMQ002_OLAFINFO) == (FALSE))) && ((FMQ002_KNOWSODGAR) == (0))) {
        INFO_ADDCHOICE(0x1216c, "Do you know where I can get a guard's sword?", 0x12187);
    };
    if ((((((LOG_GETSTATUS(MIS_Q402)) == (LOG_RUNNING)) && ((Q402_OLAFINFO) == (FALSE))) && ((NPC_HASITEMS(OTHER, 0x91e7)) >= (1))) && ((NPC_KNOWSINFO(OTHER, 0x1207c)) == (FALSE))) && ((Q402_STRANGENOTELOGENTRY) == (TRUE))) {
        INFO_ADDCHOICE(0x1216c, "I need to clean up this map.", 0x12188);
    };
    if ((((LOG_GETSTATUS(MIS_SQ309)) == (LOG_RUNNING)) && ((SQ309_OLAFINFO) == (FALSE))) && ((SQ309_SPAWNMURES) == (FALSE))) {
        INFO_ADDCHOICE(0x1216c, "Do you know anything about the Golden Innoses?", 0x12189);
    };
    if ((((LOG_GETSTATUS(MIS_SQ316)) == (LOG_RUNNING)) && ((SQ316_OLAFINFO) == (FALSE))) && ((LENA_SQ316_FIRSTLOG) == (FALSE))) {
        INFO_ADDCHOICE(0x1216c, "I'm looking for Nadine's daughter, do you know anything about her disappearance?", 0x1218a);
    };
    if (((LOG_GETSTATUS(MIS_SQ403)) == (LOG_RUNNING)) && ((SQ403_OLAFINFO) == (FALSE))) {
        INFO_ADDCHOICE(0x1216c, "I'm looking for all sorts of wolf pelts.", 0x1218b);
    };
    if ((((LOG_GETSTATUS(MIS_SQ405)) == (LOG_RUNNING)) && ((SQ405_OLAFINFO) == (FALSE))) && ((INNKEEPER_DARKBEER) == (FALSE))) {
        INFO_ADDCHOICE(0x1216c, "The Innkeeper of the Wolf's Den is looking for a liquor supplier...", 0x1218c);
    };
    if (((((LOG_GETSTATUS(MIS_KQ404)) == (LOG_RUNNING)) && ((KQ404_OLAFINFO) == (FALSE))) && ((NPC_HASITEMS(OTHER, 0x91d1)) >= (1))) && ((KQ404_UNICORNLIST_GOTEVERYTHING) != (2))) {
        INFO_ADDCHOICE(0x1216c, "I need to get some unusual outfits...", 0x1218d);
    };
    if (((((LOG_GETSTATUS(MIS_KQ404)) == (LOG_RUNNING)) && ((KQ404_OLAFINFO) == (FALSE))) && ((NPC_HASITEMS(OTHER, 0x91d1)) >= (1))) && ((KQ404_UNICORNLIST_GOTEVERYTHING) != (2))) {
        INFO_ADDCHOICE(0x1216c, "I need to get some unusual outfits...", 0x1218d);
    };
    if ((OLAFINFO_GOLD) == (FALSE)) {
        INFO_ADDCHOICE(0x1216c, "Do you have any ideas for a good income?", 0x12182);
    };
    if (((LOG_GETSTATUS(MIS_Q202)) == (LOG_RUNNING)) && ((OLAFINFO_CITIZEN) == (FALSE))) {
        INFO_ADDCHOICE(0x1216c, "I need to get references for citizenship. Do you have any ideas?", 0x12181);
    };
}

func void DIA_OLAF_GIVEINFORMATION_SURE() {
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Information_03_03");
}

func void DIA_OLAF_GIVEINFORMATION_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Information_15_01");
    if ((OLAF_INFORMATION_FIRSTFREE) == (TRUE)) {
        DIA_OLAF_GIVEINFORMATION_SURE();
        OLAF_INFORMATION_FIRSTFREE = FALSE;
        OLAFINFORMATIONS();
    };
    if ((OLAF_INFORMATION_COST) == (1)) {
        if ((NPC_HASITEMS(OTHER, 0x859b)) >= (OLAF_INFORMATIONCOST_V1)) {
            DIA_OLAF_GIVEINFORMATION_SURE();
            OLAFINFORMATIONS();
        } else {
            B_SAY(SELF, OTHER, "$NOGOLD");
        } else {
            /* set_instance(0) */;
        };
    };
    if ((OLAF_INFORMATION_COST) == (2)) {
        if ((NPC_HASITEMS(OTHER, 0x859b)) >= (OLAF_INFORMATIONCOST_V2)) {
            DIA_OLAF_GIVEINFORMATION_SURE();
            OLAFINFORMATIONS();
        } else {
            B_SAY(SELF, OTHER, "$NOGOLD");
        };
    };
}

func void DIA_OLAF_GIVEINFORMATION_CITIZEN() {
    OLAFINFORMATIONS_PAY();
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Info_Citizen_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Info_Citizen_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Info_Citizen_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Info_Citizen_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Info_Citizen_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Info_Citizen_03_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Info_Citizen_03_07");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Info_Citizen_03_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Info_Citizen_03_09");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Info_Citizen_03_10");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Info_Citizen_03_12");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Info_Citizen_03_13");
    OLAFINFO_CITIZEN = TRUE;
    AI_LOGENTRY(TOPIC_Q202, LOG_Q202_OLAF_CITIZEN);
    INFO_CLEARCHOICES(0x1216c);
}

func void DIA_OLAF_GIVEINFORMATION_GOLD() {
    OLAFINFORMATIONS_PAY();
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_GoldInfo_15_01");
    AI_STARTFACEANI(SELF, S_THINK, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GoldInfo_03_02");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GoldInfo_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GoldInfo_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GoldInfo_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GoldInfo_03_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GoldInfo_03_07");
    AI_PLAYANI(SELF, T_SEARCH);
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GoldInfo_03_08");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    OLAFINFO_GOLD = TRUE;
    INFO_CLEARCHOICES(0x1216c);
}

func void DIA_OLAF_GIVEINFORMATION_CQ004_CRANE() {
    OLAFINFORMATIONS_PAY();
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_CQ004_Crane_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_CQ004_Crane_03_02");
    CQ004_OLAFINFO_CRANE = TRUE;
    AI_LOGENTRY(TOPIC_CQ004, LOG_CQ004_OLAF_CRANE);
    INFO_CLEARCHOICES(0x1216c);
}

func void DIA_OLAF_GIVEINFORMATION_CQ004_RECKON() {
    OLAFINFORMATIONS_PAY();
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_CQ004_Reckon_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_CQ004_Reckon_03_02");
    AI_RESETFACEANI(OTHER);
    CQ004_OLAFINFO_RECKON = TRUE;
    AI_LOGENTRY(TOPIC_CQ004, LOG_CQ004_OLAF_RECKON);
    INFO_CLEARCHOICES(0x1216c);
}

func void DIA_OLAF_GIVEINFORMATION_SQ217_INFO() {
    OLAFINFORMATIONS_PAY();
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_SQ217_Pearls_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_SQ217_Pearls_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_SQ217_Pearls_03_03");
    AI_RESETFACEANI(OTHER);
    SQ217_OLAFINFO = TRUE;
    AI_LOGENTRY(TOPIC_SQ217, LOG_SQ217_OLAF_PEARLS);
    INFO_CLEARCHOICES(0x1216c);
}

func void DIA_OLAF_GIVEINFORMATION_SQ223_INFO() {
    OLAFINFORMATIONS_PAY();
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_SQ223_Drunk_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_SQ223_Drunk_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_SQ223_Drunk_03_03");
    AI_RESETFACEANI(OTHER);
    SQ223_OLAFINFO = TRUE;
    AI_LOGENTRY(TOPIC_SQ223, LOG_SQ223_OLAF_DRUNK);
    INFO_CLEARCHOICES(0x1216c);
}

func void DIA_OLAF_GIVEINFORMATION_FMQ002_INFO() {
    OLAFINFORMATIONS_PAY();
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_FMQ002_Sword_15_01");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_FMQ002_Sword_03_02");
    AI_RESETFACEANI(OTHER);
    AI_RESETFACEANI(SELF);
    FMQ002_OLAFINFO = TRUE;
    AI_LOGENTRY(TOPIC_FMQ002, LOG_FMQ002_OLAF_ODGAR);
    INFO_CLEARCHOICES(0x1216c);
}

func void DIA_OLAF_GIVEINFORMATION_Q402_INFO() {
    OLAFINFORMATIONS_PAY();
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Q402_BloodMap_15_01");
    B_GIVEINVITEMS(OTHER, SELF, 0x91e7, 1);
    B_USEFAKEBLOODMAP();
    AI_STARTFACEANI(SELF, S_SURPRISE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Q402_BloodMap_03_02");
    B_GIVEINVITEMS(SELF, OTHER, 0x91e7, 1);
    AI_STARTFACEANI(SELF, S_THINK, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Q402_BloodMap_03_03");
    AI_RESETFACEANI(SELF);
    Q402_OLAFINFO = TRUE;
    AI_LOGENTRY(TOPIC_Q402, LOG_Q402_OLAF_LUDWIG);
    INFO_CLEARCHOICES(0x1216c);
}

func void DIA_OLAF_GIVEINFORMATION_SQ309_INFO() {
    OLAFINFORMATIONS_PAY();
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_SQ309_Innos_15_01");
    AI_STARTFACEANI(SELF, S_SURPRISE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_SQ309_Innos_03_02");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_SQ309_Innos_03_03");
    AI_RESETFACEANI(OTHER);
    SQ309_OLAFINFO = TRUE;
    AI_LOGENTRY(TOPIC_SQ309, LOG_SQ309_OLAF_INNOS);
    INFO_CLEARCHOICES(0x1216c);
}

func void DIA_OLAF_GIVEINFORMATION_SQ316_INFO() {
    OLAFINFORMATIONS_PAY();
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_SQ316_Lena_15_01");
    AI_STARTFACEANI(SELF, S_SAD, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_SQ316_Lena_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_SQ316_Lena_03_03");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_SQ316_Lena_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_SQ316_Lena_03_05");
    if ((LOG_GETSTATUS(MIS_Q405)) != (LOG_SUCCESS)) {
        AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Olaf_SQ316_Lena_03_06");
    };
    AI_RESETFACEANI(SELF);
    SQ316_OLAFINFO = TRUE;
    AI_LOGENTRY(TOPIC_SQ316, LOG_SQ316_OLAF_LENA);
    INFO_CLEARCHOICES(0x1216c);
}

func void DIA_OLAF_GIVEINFORMATION_SQ403_INFO() {
    OLAFINFORMATIONS_PAY();
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_SQ403_Fur_15_01");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_SQ403_Fur_03_02");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_SQ403_Fur_03_03");
    AI_STARTFACEANI(SELF, S_THINK, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_SQ403_Fur_03_04");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_SQ403_Fur_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_SQ403_Fur_03_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_SQ403_Fur_03_07");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_SQ403_Fur_03_08");
    AI_RESETFACEANI(SELF);
    SQ403_OLAFINFO = TRUE;
    AI_LOGENTRY(TOPIC_SQ403, LOG_SQ403_OLAF_FURS);
    INFO_CLEARCHOICES(0x1216c);
}

func void DIA_OLAF_GIVEINFORMATION_SQ405_INFO() {
    OLAFINFORMATIONS_PAY();
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_SQ405_Beer_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_SQ405_Beer_03_02");
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_SQ405_Beer_15_03");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_SQ405_Beer_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_SQ405_Beer_03_05");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    SQ405_OLAFINFO = TRUE;
    if ((LOG_GETSTATUS(MIS_CQ003)) != (LOG_SUCCESS)) {
        AI_LOGENTRY(TOPIC_SQ405, LOG_SQ405_OLAF_BEER);
    };
    AI_LOGENTRY(TOPIC_SQ405, LOG_SQ405_OLAF_BEERTOMASDONE);
    INFO_CLEARCHOICES(0x1216c);
}

func void DIA_OLAF_GIVEINFORMATION_KQ404_INFO() {
    OLAFINFORMATIONS_PAY();
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_KQ404_Armors_15_01");
    B_GIVEINVITEMS(OTHER, SELF, 0x91d1, 1);
    B_USEFAKESCROLL();
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_KQ404_Armors_03_02");
    B_GIVEINVITEMS(SELF, OTHER, 0x91d1, 1);
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_KQ404_Armors_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_KQ404_Armors_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_KQ404_Armors_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_KQ404_Armors_03_06");
    AI_STARTFACEANI(SELF, S_THINK, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_KQ404_Armors_03_07");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_KQ404_Armors_03_08");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_KQ404_Armors_03_09");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_KQ404_Armors_03_10");
    AI_RESETFACEANI(OTHER);
    KQ404_OLAFINFO = TRUE;
    AI_LOGENTRY(TOPIC_KQ404, LOG_KQ404_OLAF_ARMORS);
    INFO_CLEARCHOICES(0x1216c);
}

func void DIA_OLAF_GIVEINFORMATION_FAQ002() {
    OLAFINFORMATIONS_PAY();
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_FAQ002_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_FAQ002_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_FAQ002_03_03");
    AI_RESETFACEANI(OTHER);
    FAQ002_INFOFROMORTWIN = TRUE;
    OLAF_INFORMATION_FAQ002_KAF = TRUE;
    AI_LOGENTRY(TOPIC_FAQ002, LOG_FAQ002_OLAF);
    INFO_CLEARCHOICES(0x1216c);
}

func void DIA_OLAF_GIVEINFORMATION_QM304_NUGGET() {
    OLAFINFORMATIONS_PAY();
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_GiveInformation_QM304_Nugget_15_01");
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GiveInformation_QM304_Nugget_03_02");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_GiveInformation_QM304_Nugget_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GiveInformation_QM304_Nugget_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GiveInformation_QM304_Nugget_03_05");
    QM304_OLAFNUGGETINFO = TRUE;
    AI_LOGENTRY(TOPIC_QM304, LOG_QM304_OLAF_INFORMATION_NUGGET);
    INFO_CLEARCHOICES(0x1216c);
}

func void DIA_OLAF_GIVEINFORMATION_BACK() {
    INFO_CLEARCHOICES(0x1216c);
}

func void DIA_OLAF_Q206_FINBARFAIL() {
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Q206_FinbarFail_03_01");
    AI_LOGENTRY(TOPIC_Q206, LOG_Q206_FINBARINFO_FAIL);
}

func void DIA_OLAF_GIVEINFORMATION_Q206() {
    OLAFINFORMATIONS_PAY();
    GIVEINFORMATION_Q206 = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_GiveInformation_Q206_15_01");
    AI_PLAYANI(SELF, T_SEARCH);
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GiveInformation_Q206_03_02");
    INFO_CLEARCHOICES(0x1216c);
    INFO_ADDCHOICE(0x1216c, "They may have something to do with my brother's disappearance.", 0x12195);
    INFO_ADDCHOICE(0x1216c, "Let's just say their actions are not to someone's liking.", 0x12194);
    INFO_ADDCHOICE(0x1216c, "I want to use their services.", 0x12193);
}

func void DIA_OLAF_Q206_IAMCLIENT() {
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Q206_IAmClient_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Q206_IAmClient_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Q206_IAmClient_03_03");
    INFO_CLEARCHOICES(0x1216c);
    if ((LOG_GETSTATUS(MIS_FAQ003)) != (LOG_SUCCESS)) {
        DIA_OLAF_Q206_FINBARFAIL();
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Q206_IAmClient_03_04");
}

func void DIA_OLAF_Q206_ANYGOOD() {
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Q206_AnyGood_15_01");
    INFO_CLEARCHOICES(0x1216c);
    DIA_OLAF_Q206_FINBARFAIL();
    AI_STOPPROCESSINFOS(SELF);
}

func void DIA_OLAF_Q206_MYBROTHER() {
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Q206_MyBrother_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Q206_MyBrother_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Q206_MyBrother_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Q206_MyBrother_03_04");
    AI_LOGENTRY(TOPIC_Q206, LOG_Q206_FINBARINFO_SUCCESS);
    INFO_CLEARCHOICES(0x1216c);
    INFO_ADDCHOICE(0x1216c, DIALOG_BACK, 0x12190);
    INFO_ADDCHOICE(0x1216c, "Do you think smugglers are dangerous?", 0x12196);
    Q206_KNOWFINBAR_CHECK();
}

func void DIA_OLAF_Q206_SMUGGLERSDANGEROUS() {
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Q206_SmugglersDangerous_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Q206_SmugglersDangerous_03_02");
}

func void DIA_OLAF_GIVEINFORMATION_Q509_WARRIORS_NEXT() {
    if ((((NPC_ISDEAD(NONE_6331_JAVAD)) == (FALSE)) && ((Q305_JAVAD_WENTTONEWHOME) == (1))) || ((((LOG_GETSTATUS(MIS_SQ503)) == (0)) && ((HERO.GUILD) != (GIL_MIL))) && ((HERO.GUILD) != (GIL_SLD)))) {
        AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GiveInformation_Q509_Warriors_03_22");
        AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GiveInformation_Q509_Warriors_03_23");
        AI_LOGENTRY(TOPIC_Q509, LOG_Q509_HELGA_PIRATES);
    };
    AI_RESETFACEANI(SELF);
    AI_PLAYANI(SELF, T_COUNTING_2_STAND);
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GiveInformation_Q509_Warriors_03_24");
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_GiveInformation_Q509_Warriors_15_25");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GiveInformation_Q509_Warriors_03_26");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GiveInformation_Q509_Warriors_03_27");
    AI_RESETFACEANI(SELF);
    INFO_CLEARCHOICES(0x1216c);
    AI_LOGENTRY(TOPIC_Q509, LOG_Q509_HELGA_HELP);
}

var int OLAF_GIVEINFORMATION_Q509_WARRIORS_COUNT = 0;
func void DIA_OLAF_GIVEINFORMATION_Q509_WARRIORS_CHECKTALK() {
    OLAF_GIVEINFORMATION_Q509_WARRIORS_COUNT = (OLAF_GIVEINFORMATION_Q509_WARRIORS_COUNT) + (1);
    if ((OLAF_GIVEINFORMATION_Q509_WARRIORS_COUNT) == (4)) {
        DIA_OLAF_GIVEINFORMATION_Q509_WARRIORS_NEXT();
    };
}

func void DIA_OLAF_GIVEINFORMATION_Q509_WARRIORS_TELL() {
    if ((OLAF_GIVEINFORMATION_Q509_WARRIORS_COUNT) != (4)) {
        if (((OLAF_GIVEINFORMATION_Q509_WARRIORS_BEN) == (FALSE)) && ((NPC_ISDEAD(NONE_7500_BEN)) == (FALSE))) {
            if ((Q509_BENVOLFZACKE) == (FALSE)) {
                OLAF_GIVEINFORMATION_Q509_WARRIORS_BEN = TRUE;
                AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
                AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GiveInformation_Q509_Warriors_03_04");
                AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GiveInformation_Q509_Warriors_03_05");
                AI_LOGENTRY(TOPIC_Q509, LOG_Q509_HELGA_BEN);
                DIA_OLAF_GIVEINFORMATION_Q509_WARRIORS_CHECKTALK();
            } else {
                OLAF_GIVEINFORMATION_Q509_WARRIORS_COUNT = (OLAF_GIVEINFORMATION_Q509_WARRIORS_COUNT) + (1);
            };
        };
    };
    if ((OLAF_GIVEINFORMATION_Q509_WARRIORS_COUNT) != (4)) {
        if ((OLAF_GIVEINFORMATION_Q509_WARRIORS_GRIF) == (FALSE)) {
            OLAF_GIVEINFORMATION_Q509_WARRIORS_GRIF = TRUE;
            AI_STARTFACEANI(SELF, "S_THINK", 1, -(1));
            AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GiveInformation_Q509_Warriors_03_11");
            AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
            AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GiveInformation_Q509_Warriors_03_12");
            AI_LOGENTRY(TOPIC_Q509, LOG_Q509_HELGA_GRIF);
            DIA_OLAF_GIVEINFORMATION_Q509_WARRIORS_CHECKTALK();
        };
    };
    if ((OLAF_GIVEINFORMATION_Q509_WARRIORS_COUNT) != (4)) {
        if (((OLAF_GIVEINFORMATION_Q509_WARRIORS_CANDAC) == (FALSE)) && ((LOG_GETSTATUS(MIS_SQ508)) == (LOG_SUCCESS))) {
            OLAF_GIVEINFORMATION_Q509_WARRIORS_CANDAC = TRUE;
            AI_RESETFACEANI(SELF);
            AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GiveInformation_Q509_Warriors_03_17");
            AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
            AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GiveInformation_Q509_Warriors_03_18");
            AI_RESETFACEANI(SELF);
            AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GiveInformation_Q509_Warriors_03_19");
            AI_LOGENTRY(TOPIC_Q509, LOG_Q509_HELGA_CANDAC);
            DIA_OLAF_GIVEINFORMATION_Q509_WARRIORS_CHECKTALK();
        };
    };
    if ((OLAF_GIVEINFORMATION_Q509_WARRIORS_COUNT) != (4)) {
        if ((((OLAF_GIVEINFORMATION_Q509_WARRIORS_LUTZ) == (FALSE)) && ((LOG_GETSTATUS(MIS_SQ410)) == (LOG_SUCCESS))) && ((NPC_HASITEMS(MIL_6318_LUTZ, 0x8b1f)) >= (1))) {
            OLAF_GIVEINFORMATION_Q509_WARRIORS_LUTZ = TRUE;
            AI_STARTFACEANI(SELF, "S_THINK", 1, -(1));
            AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GiveInformation_Q509_Warriors_03_20");
            AI_RESETFACEANI(SELF);
            AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GiveInformation_Q509_Warriors_03_21");
            AI_LOGENTRY(TOPIC_Q509, LOG_Q509_HELGA_LUTZ);
            DIA_OLAF_GIVEINFORMATION_Q509_WARRIORS_CHECKTALK();
        };
    };
    if ((OLAF_GIVEINFORMATION_Q509_WARRIORS_COUNT) != (4)) {
        if ((((OLAF_GIVEINFORMATION_Q509_WARRIORS_GARD) == (FALSE)) && ((LOG_GETSTATUS(MIS_SQ219)) == (LOG_SUCCESS))) && ((SQ219_EASTER_EGG) == (FALSE))) {
            OLAF_GIVEINFORMATION_Q509_WARRIORS_GARD = TRUE;
            AI_STARTFACEANI(SELF, "S_THINK", 1, -(1));
            AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GiveInformation_Q509_Warriors_03_15");
            AI_RESETFACEANI(SELF);
            AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GiveInformation_Q509_Warriors_03_16");
            AI_LOGENTRY(TOPIC_Q509, LOG_Q509_HELGA_GARD);
            DIA_OLAF_GIVEINFORMATION_Q509_WARRIORS_CHECKTALK();
        };
    };
    if ((OLAF_GIVEINFORMATION_Q509_WARRIORS_COUNT) != (4)) {
        if ((OLAF_GIVEINFORMATION_Q509_WARRIORS_ILSE) == (FALSE)) {
            OLAF_GIVEINFORMATION_Q509_WARRIORS_ILSE = TRUE;
            AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
            AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GiveInformation_Q509_Warriors_03_09");
            AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GiveInformation_Q509_Warriors_03_10");
            AI_LOGENTRY(TOPIC_Q509, LOG_Q509_HELGA_ILSE);
            DIA_OLAF_GIVEINFORMATION_Q509_WARRIORS_CHECKTALK();
        };
    };
    if ((OLAF_GIVEINFORMATION_Q509_WARRIORS_COUNT) != (4)) {
        if ((OLAF_GIVEINFORMATION_Q509_WARRIORS_HAVARD) == (FALSE)) {
            OLAF_GIVEINFORMATION_Q509_WARRIORS_HAVARD = TRUE;
            AI_RESETFACEANI(SELF);
            AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GiveInformation_Q509_Warriors_03_28");
            AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GiveInformation_Q509_Warriors_03_29");
            AI_LOGENTRY(TOPIC_Q509, LOG_Q509_HELGA_HAVARD);
            DIA_OLAF_GIVEINFORMATION_Q509_WARRIORS_CHECKTALK();
        };
    };
    if ((OLAF_GIVEINFORMATION_Q509_WARRIORS_COUNT) != (4)) {
        if (((OLAF_GIVEINFORMATION_Q509_WARRIORS_BERTO) == (FALSE)) && ((LOG_GETSTATUS(MIS_QM401)) == (LOG_SUCCESS))) {
            OLAF_GIVEINFORMATION_Q509_WARRIORS_BERTO = TRUE;
            AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
            AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GiveInformation_Q509_Warriors_03_13");
            AI_RESETFACEANI(SELF);
            AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GiveInformation_Q509_Warriors_03_14");
            AI_LOGENTRY(TOPIC_Q509, LOG_Q509_HELGA_BERTO);
            DIA_OLAF_GIVEINFORMATION_Q509_WARRIORS_CHECKTALK();
        };
    };
    if ((OLAF_GIVEINFORMATION_Q509_WARRIORS_COUNT) != (4)) {
        if ((OLAF_GIVEINFORMATION_Q509_WARRIORS_HEROFRIEND) == (FALSE)) {
            OLAF_GIVEINFORMATION_Q509_WARRIORS_HEROFRIEND = TRUE;
            if ((LOG_GETSTATUS(MIS_Q204)) == (LOG_SUCCESS)) {
                AI_RESETFACEANI(SELF);
                AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GiveInformation_Q509_Warriors_03_06");
                AI_LOGENTRY(TOPIC_Q509, LOG_Q509_HELGA_CARAMON);
            } else if ((LOG_GETSTATUS(MIS_Q203)) == (LOG_SUCCESS)) {
                AI_STARTFACEANI(SELF, "S_THINK", 1, -(1));
                AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GiveInformation_Q509_Warriors_03_07");
                AI_RESETFACEANI(SELF);
                AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GiveInformation_Q509_Warriors_03_08");
                AI_LOGENTRY(TOPIC_Q509, LOG_Q509_HELGA_ARWID);
            };
            DIA_OLAF_GIVEINFORMATION_Q509_WARRIORS_CHECKTALK();
        };
    };
}

var int DIA_OLAF_GIVEINFORMATION_Q509_WARRIORS_TELL.OLAF_GIVEINFORMATION_Q509_WARRIORS_BEN = 0;
var int DIA_OLAF_GIVEINFORMATION_Q509_WARRIORS_TELL.OLAF_GIVEINFORMATION_Q509_WARRIORS_GRIF = 0;
var int DIA_OLAF_GIVEINFORMATION_Q509_WARRIORS_TELL.OLAF_GIVEINFORMATION_Q509_WARRIORS_CANDAC = 0;
var int DIA_OLAF_GIVEINFORMATION_Q509_WARRIORS_TELL.OLAF_GIVEINFORMATION_Q509_WARRIORS_LUTZ = 0;
var int DIA_OLAF_GIVEINFORMATION_Q509_WARRIORS_TELL.OLAF_GIVEINFORMATION_Q509_WARRIORS_GARD = 0;
var int DIA_OLAF_GIVEINFORMATION_Q509_WARRIORS_TELL.OLAF_GIVEINFORMATION_Q509_WARRIORS_ILSE = 0;
var int DIA_OLAF_GIVEINFORMATION_Q509_WARRIORS_TELL.OLAF_GIVEINFORMATION_Q509_WARRIORS_HAVARD = 0;
var int DIA_OLAF_GIVEINFORMATION_Q509_WARRIORS_TELL.OLAF_GIVEINFORMATION_Q509_WARRIORS_BERTO = 0;
var int DIA_OLAF_GIVEINFORMATION_Q509_WARRIORS_TELL.OLAF_GIVEINFORMATION_Q509_WARRIORS_HEROFRIEND = 0;
func void DIA_OLAF_GIVEINFORMATION_Q509_WARRIORS() {
    Q509_OLAFWARRIORSINFO = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_GiveInformation_Q509_Warriors_15_01");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GiveInformation_Q509_Warriors_03_02");
    AI_STARTFACEANI(SELF, "S_THINK", 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GiveInformation_Q509_Warriors_03_03");
    B_STANDUP();
    AI_STOPLOOKAT(SELF);
    AI_PLAYANI(SELF, T_STAND_2_COUNTING);
    DIA_OLAF_GIVEINFORMATION_Q509_WARRIORS_TELL();
}

func void DIA_OLAF_GIVEINFORMATION_KURT() {
    OLAFINFORMATIONS_PAY();
    OLAF_KURTINFORMATION = TRUE;
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_GiveInformation_Kurt_15_01");
    if ((KAPITEL) == (4)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GiveInformation_Kurt_03_02");
    };
    if ((KAPITEL) == (5)) {
        AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Olaf_GiveInformation_Kurt_03_03");
    };
    if ((KURT_GIVENGOLD) >= (1)) {
        CREATEINVITEMS(SELF, 0x9549, 1);
        B_GIVEINVITEMS(SELF, OTHER, 0x9549, 1);
    };
    CREATEINVITEMS(SELF, 0x9be5, 1);
    B_GIVEINVITEMS(SELF, OTHER, 0x9be5, 1);
    INFO_CLEARCHOICES(0x1216c);
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

instance DIA_OLAF_ROOM(C_INFO) {
    NPC = 0xd500;
    NR = 4;
    CONDITION = DIA_OLAF_ROOM_CONDITION;
    INFORMATION = DIA_OLAF_ROOM_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "I want to rent a room.";
}

var int OLAFTAVERNROOM_DAY = 0;
var int OLAFTAVERNROOM = 0;
func int DIA_OLAF_ROOM_CONDITION() {
    return FALSE;
}

func void DIA_OLAF_WANTROOM() {
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Room_15_01");
}

func void DIA_OLAF_ROOM_INFO() {
    DIA_OLAF_WANTROOM();
    if ((NPC_KNOWSINFO(OTHER, 0x1265a)) && ((LOG_GETSTATUS(MIS_CQ004)) == (LOG_RUNNING))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Room_03_02");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Room_03_03");
    INFO_CLEARCHOICES(0x121a6);
    INFO_ADDCHOICE(0x121a6, "For the week. (24 GP)", 0x121ac);
    INFO_ADDCHOICE(0x121a6, "For the day. (5 GP)", 0x121ad);
}

func void DIA_OLAF_ROOM_WEEK() {
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Room_Week_15_01");
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (OLAF_ROOM_WEEK)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Room_Week_03_02");
        INFO_CLEARCHOICES(0x121a6);
        B_GIVEINVITEMS(OTHER, SELF, 0x859b, OLAF_ROOM_WEEK);
        OLAFTAVERNROOM_DAY = WLD_GETDAY();
        OLAFTAVERNROOM = 2;
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Room_Day_03_03");
    INFO_CLEARCHOICES(0x121a6);
}

func void DIA_OLAF_ROOM_DAY() {
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Room_Day_15_01");
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (OLAF_ROOM_DAY)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Room_Week_03_02");
        INFO_CLEARCHOICES(0x121a6);
        B_GIVEINVITEMS(OTHER, SELF, 0x859b, OLAF_ROOM_DAY);
        OLAFTAVERNROOM_DAY = WLD_GETDAY();
        OLAFTAVERNROOM = 1;
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Room_Day_03_03");
    INFO_CLEARCHOICES(0x121a6);
}

instance DIA_OLAF_PAYTIME(C_INFO) {
    NPC = 0xd500;
    NR = 5;
    CONDITION = DIA_OLAF_PAYTIME_CONDITION;
    INFORMATION = DIA_OLAF_PAYTIME_INFO;
    PERMANENT = TRUE;
    IMPORTANT = TRUE;
}

func int DIA_OLAF_PAYTIME_CONDITION() {
    return FALSE;
}

func void DIA_OLAF_PAYTIME_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_PayTime_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_PayTime_03_02");
    INFO_CLEARCHOICES(0x121ae);
    INFO_ADDCHOICE(0x121ae, "I'll pay...", 0x121b1);
    INFO_ADDCHOICE(0x121ae, "Maybe another time.", 0x121b2);
}

func void DIA_OLAF_PAYTIME_PAY() {
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_PayTime_Pay_15_01");
    INFO_CLEARCHOICES(0x121ae);
    INFO_ADDCHOICE(0x121ae, "...for the next day.", 0x121b3);
    INFO_ADDCHOICE(0x121ae, "...for next week.", 0x121b4);
}

func void DIA_OLAF_PAYTIME_NAH() {
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_PayTime_Nah_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_PayTime_Nah_03_02");
    INFO_CLEARCHOICES(0x121ae);
    OLAFTAVERNROOM = 0;
}

func void DIA_OLAF_PAYTIME_PAY_NEXTDAY() {
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_PayTime_NextDay_15_01");
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (OLAF_ROOM_DAY)) {
        INFO_CLEARCHOICES(0x121a6);
        B_GIVEINVITEMS(OTHER, SELF, 0x859b, OLAF_ROOM_DAY);
        OLAFTAVERNROOM_DAY = WLD_GETDAY();
        OLAFTAVERNROOM = 1;
        AI_OUTPUT(SELF, OTHER, "DIA_Olaf_PayTime_NextWeek_03_02");
        AI_OUTPUT(SELF, OTHER, "DIA_Olaf_PayTime_NextWeek_03_03");
        INFO_CLEARCHOICES(0x121ae);
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Room_Day_03_03");
    INFO_CLEARCHOICES(0x121ae);
    OLAFTAVERNROOM = 0;
}

func void DIA_OLAF_PAYTIME_PAY_NEXTWEEK() {
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_PayTime_NextWeek_15_01");
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (OLAF_ROOM_WEEK)) {
        INFO_CLEARCHOICES(0x121a6);
        B_GIVEINVITEMS(OTHER, SELF, 0x859b, OLAF_ROOM_WEEK);
        OLAFTAVERNROOM_DAY = WLD_GETDAY();
        OLAFTAVERNROOM = 2;
        AI_OUTPUT(SELF, OTHER, "DIA_Olaf_PayTime_NextWeek_03_02");
        AI_OUTPUT(SELF, OTHER, "DIA_Olaf_PayTime_NextWeek_03_03");
        INFO_CLEARCHOICES(0x121ae);
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Room_Day_03_03");
    INFO_CLEARCHOICES(0x121ae);
    OLAFTAVERNROOM = 0;
}

instance DIA_OLAF_NOMOREROOM(C_INFO) {
    NPC = 0xd500;
    NR = 6;
    CONDITION = DIA_OLAF_NOMOREROOM_CONDITION;
    INFORMATION = DIA_OLAF_NOMOREROOM_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "I'd like to give up my room.";
}

func int DIA_OLAF_NOMOREROOM_CONDITION() {
    if (((OLAFTAVERNROOM) == (1)) || ((OLAFTAVERNROOM) == (2))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_OLAF_NOMOREROOM_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_NoMoreRoom_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_NoMoreRoom_03_02");
    OLAFTAVERNROOM = 0;
}

instance DIA_OLAF_TRADE(C_INFO) {
    NPC = 0xd500;
    NR = 90;
    CONDITION = DIA_OLAF_TRADE_CONDITION;
    INFORMATION = DIA_OLAF_TRADE_INFO;
    PERMANENT = TRUE;
    TRADE = TRUE;
    DESCRIPTION = "What do you have to offer?";
}

func int DIA_OLAF_TRADE_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 0x12143)) || (NPC_KNOWSINFO(OTHER, 0x121d9))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_OLAF_TRADE_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Trade_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Trade_03_02");
    B_GIVETRADEINV(SELF);
}

instance DIA_OLAF_CQ003(C_INFO) {
    NPC = 0xd500;
    NR = 50;
    CONDITION = DIA_OLAF_CQ003_CONDITION;
    INFORMATION = DIA_OLAF_CQ003_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "I come with an offer.";
}

func int DIA_OLAF_CQ003_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 0x12143)) || (NPC_KNOWSINFO(OTHER, 0x121d9))) {
        if ((((LOG_GETSTATUS(MIS_CQ003)) == (LOG_RUNNING)) && ((NPC_HASITEMS(OTHER, 0x8e0c)) >= (1))) && ((CQ003_HAPPYOLAF) == (0))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_OLAF_CQ003_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_CQ003_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_CQ003_03_02");
    INFO_CLEARCHOICES(0x121bb);
    INFO_ADDCHOICE(0x121bb, "I don't feel like it. Can we talk business?", 0x121c0);
    INFO_ADDCHOICE(0x121bb, DIALOG_GIVE10G, 0x121bf);
}

func void DIA_OLAF_CQ003_TRY() {
    B_GIVEINVITEMS(OTHER, SELF, 0x859b, CQ003_OLAFDRINK);
    CREATEINVITEMS(SELF, 0x8e10, 1);
    B_GIVEINVITEMS(SELF, OTHER, 0x8e10, 1);
    AI_WAITTILLEND(OTHER, SELF);
    B_SAY(OTHER, SELF, "$MARVIN_ThinkingEmoji");
    AI_USEITEM(SELF, 0x8e10);
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_CQ003_Sure_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_CQ003_Sure_03_04");
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_CQ003_Sure_15_05");
    B_STANDUP();
    B_GIVEINVITEMS(OTHER, SELF, 0x8e0c, 1);
    AI_WAITTILLEND(SELF, OTHER);
    AI_STOPLOOKAT(SELF);
    AI_USEITEM(SELF, 0x8e0c);
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_CQ003_Sure_03_06");
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_CQ003_Sure_15_07");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_CQ003_Sure_03_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_CQ003_Sure_03_09");
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_CQ003_Sure_15_10");
    AI_LOGENTRY(TOPIC_CQ003, LOG_CQ003_HELGASUCCESS);
    CQ003_HAPPYCUSTOMER = (CQ003_HAPPYCUSTOMER) + (2);
    CQ003_TALKED = (CQ003_TALKED) + (1);
    CQ003_HAPPYOLAF = 1;
    INFO_CLEARCHOICES(0x121bb);
}

func void DIA_OLAF_CQ003_SURE() {
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_CQ003_Sure_15_01");
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (CQ003_OLAFDRINK)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Olaf_CQ003_Sure_03_02");
        DIA_OLAF_CQ003_TRY();
    };
    B_SAY(SELF, OTHER, "$NOGOLD");
    INFO_CLEARCHOICES(0x121bb);
}

func void DIA_OLAF_CQ003_NOWAY() {
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_CQ003_NoWay_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_CQ003_NoWay_03_02");
    if (!(NPC_KNOWSINFO(OTHER, 0x12143))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Olaf_CQ003_NoWay_03_03");
    };
    INFO_CLEARCHOICES(0x121bb);
    INFO_ADDCHOICE(0x121bb, "Let's be serious, I don't have time for nonsense.", 0x121c1);
    INFO_ADDCHOICE(0x121bb, "All right, I'll have a drink. (10 GP)", 0x121c2);
}

func void DIA_OLAF_CQ003_NOWAY_REAL() {
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_CQ003_Real_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_CQ003_Real_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_CQ003_Real_15_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_CQ003_Real_15_04");
    INFO_CLEARCHOICES(0x121bb);
    AI_LOGENTRY(TOPIC_CQ003, LOG_CQ003_HELGAFAIL);
    CQ003_HAPPYOLAF = 2;
    CQ003_TALKED = (CQ003_TALKED) + (1);
    INFO_CLEARCHOICES(0x121bb);
}

func void DIA_OLAF_CQ003_NOWAY_REAL_ALRIGHT() {
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_CQ003_Alright_15_01");
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (CQ003_OLAFDRINK)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Olaf_CQ003_Alright_03_02");
        DIA_OLAF_CQ003_TRY();
    };
    B_SAY(SELF, OTHER, "$NOGOLD");
    INFO_CLEARCHOICES(0x121bb);
}

instance DIA_OLAF_TROUBLESOME3KAPITEL3(C_INFO) {
    NPC = 0xd500;
    NR = 1;
    CONDITION = DIA_OLAF_TROUBLESOME3KAPITEL3_CONDITION;
    INFORMATION = DIA_OLAF_TROUBLESOME3KAPITEL3_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_OLAF_TROUBLESOME3KAPITEL3_CONDITION() {
    if (((LOG_GETSTATUS(MIS_FAQ003)) == (LOG_RUNNING)) && ((FAQ003_CHAPTER3OLAFMAD) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_OLAF_TROUBLESOME3KAPITEL3_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Troublesome3Kapitel3_03_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Troublesome3Kapitel3_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Troublesome3Kapitel3_03_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Troublesome3Kapitel3_15_04");
    AI_STOPPROCESSINFOS(SELF);
    if ((LOG_GETSTATUS(MIS_Q204)) == (LOG_RUNNING)) {
        AI_LOGENTRY(TOPIC_FAQ003, LOG_FAQ003_WELEFTARAXOS);
    };
    AI_LOGENTRY(TOPIC_FAQ003, LOG_FAQ003_WELEFT);
    LOG_SETSTATUS(_@(MIS_FAQ003), TOPIC_FAQ003, LOG_SUCCESS);
    B_GIVEPLAYERXP(XP_FAQ003_ENDAFTER3CHAPTER);
}

instance DIA_OLAF_KQ403_TAVERN(C_INFO) {
    NPC = 0xd500;
    NR = 1;
    CONDITION = DIA_OLAF_KQ403_TAVERN_CONDITION;
    INFORMATION = DIA_OLAF_KQ403_TAVERN_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "The Guild needs your services.";
}

func int DIA_OLAF_KQ403_TAVERN_CONDITION() {
    if (((LOG_GETSTATUS(MIS_KQ403)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x112dc))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

var int KQ403_OLAF_NEEDGOLD = 0;
func void DIA_OLAF_KQ403_TAVERN_END() {
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    KQ403_OLAF_NEEDGOLD = 0;
    KQ403_OLAFTAVERNREADY = 1;
    AI_LOGENTRY(TOPIC_KQ403, LOG_KQ403_OLAF_TAVERN);
    AI_STOPPROCESSINFOS(SELF);
}

func void DIA_OLAF_KQ403_GIVEGOLD() {
    B_GIVEINVITEMS(OTHER, SELF, 0x859b, KQ403_OLAFMONEY);
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_KQ403_Tavern_15_17");
    DIA_OLAF_KQ403_TAVERN_END();
}

func void DIA_OLAF_KQ403_TAVERN_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_KQ403_Tavern_15_01");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_KQ403_Tavern_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_KQ403_Tavern_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_KQ403_Tavern_03_04");
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_KQ403_Tavern_15_05");
    AI_STARTFACEANI(SELF, S_SURPRISE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_KQ403_Tavern_03_06");
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_KQ403_Tavern_15_07");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_KQ403_Tavern_03_08");
    if ((LOG_GETSTATUS(MIS_FAQ003)) == (LOG_SUCCESS)) {
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        AI_STARTFACEANI(OTHER, S_SMILE, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Olaf_KQ403_Tavern_03_09");
        AI_OUTPUT(OTHER, SELF, "DIA_Olaf_KQ403_Tavern_15_10");
        AI_OUTPUT(SELF, OTHER, "DIA_Olaf_KQ403_Tavern_03_11");
        DIA_OLAF_KQ403_TAVERN_END();
    };
    KQ403_OLAF_NEEDGOLD = 1;
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_KQ403_Tavern_03_12");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_KQ403_Tavern_03_13");
    AI_STARTFACEANI(OTHER, S_ANGRY, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_KQ403_Tavern_15_14");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_KQ403_Tavern_03_15");
    AI_RESETFACEANI(OTHER);
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_KQ403_Tavern_15_16");
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (KQ403_OLAFMONEY)) {
        DIA_OLAF_KQ403_GIVEGOLD();
    };
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_KQ403_Tavern_03_18");
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_KQ403_Tavern_15_19");
    AI_RESETFACEANI(SELF);
}

instance DIA_OLAF_KQ403_YOURGOLD(C_INFO) {
    NPC = 0xd500;
    NR = 1;
    CONDITION = DIA_OLAF_KQ403_YOURGOLD_CONDITION;
    INFORMATION = DIA_OLAF_KQ403_YOURGOLD_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Here. (Give 300 GP)";
}

func int DIA_OLAF_KQ403_YOURGOLD_CONDITION() {
    if ((((NPC_HASITEMS(OTHER, 0x859b)) >= (KQ403_OLAFMONEY)) && ((LOG_GETSTATUS(MIS_KQ403)) == (LOG_RUNNING))) && ((KQ403_OLAF_NEEDGOLD) == (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_OLAF_KQ403_YOURGOLD_INFO() {
    DIA_OLAF_KQ403_GIVEGOLD();
}

instance DIA_OLAF_Q505_SELL(C_INFO) {
    NPC = 0xd500;
    NR = 1;
    CONDITION = DIA_OLAF_Q505_SELL_CONDITION;
    INFORMATION = DIA_OLAF_Q505_SELL_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Do you sell food in larger quantities?";
}

func int DIA_OLAF_Q505_SELL_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q505)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x13974))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_OLAF_Q505_SELL_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Q505_Sell_15_01");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Q505_Sell_03_02");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

instance DIA_OLAF_Q505_HELP(C_INFO) {
    NPC = 0xd500;
    NR = 1;
    CONDITION = DIA_OLAF_Q505_HELP_CONDITION;
    INFORMATION = DIA_OLAF_Q505_HELP_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "So, how much do you want for a pack of provisions?";
}

func int DIA_OLAF_Q505_HELP_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q505)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x121cf))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

var int OLAF_Q505_WENEEDTOPAY = 0;
func void DIA_OLAF_Q505_HELP_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Q505_Help_15_01");
    if ((((LOG_GETSTATUS(MIS_FAQ003)) == (LOG_SUCCESS)) || ((LOG_GETSTATUS(MIS_QA305)) == (LOG_SUCCESS))) || ((Q509_BENVOLFZACKE) == (TRUE))) {
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Q505_Help_03_02");
        AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Q505_Help_03_03");
        CREATEINVITEMS(SELF, 0x92af, 1);
    };
    OLAF_Q505_WENEEDTOPAY = TRUE;
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Q505_Help_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Q505_Help_03_05");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

instance DIA_OLAF_Q505_PAY(C_INFO) {
    NPC = 0xd500;
    NR = 1;
    CONDITION = DIA_OLAF_Q505_PAY_CONDITION;
    INFORMATION = DIA_OLAF_Q505_PAY_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_PROVISIONS200G;
}

func int DIA_OLAF_Q505_PAY_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_Q505)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x121d2))) && ((OLAF_Q505_WENEEDTOPAY) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_OLAF_Q505_PAY_INFO() {
    if ((NPC_HASITEMS(OTHER, 0x859b)) >= (Q505_HELGAPRICE)) {
        OLAF_Q505_WENEEDTOPAY = 0;
        NPC_REMOVEINVITEMS(SELF, 0x859b, Q505_HELGAPRICE);
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        B_GIVEINVITEMS(OTHER, SELF, 0x859b, Q505_HELGAPRICE);
        AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Q505_Pay_03_01");
        CREATEINVITEMS(SELF, 0x92af, 1);
        B_GIVEINVITEMS(SELF, OTHER, 0x92af, 1);
        AI_RESETFACEANI(SELF);
    };
    B_SAY(SELF, OTHER, "$NOGOLD");
}

instance DIA_OLAF_Q201_SEWERSWAY(C_INFO) {
    NPC = 0xd500;
    NR = 1;
    CONDITION = DIA_OLAF_Q201_SEWERSWAY_CONDITION;
    INFORMATION = DIA_OLAF_Q201_SEWERSWAY_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_OLAF_Q201_SEWERSWAY_CONDITION() {
    if (((Q201_SEWERSWAY) == (2)) && ((LOG_GETSTATUS(MIS_Q201)) == (LOG_SUCCESS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_OLAF_Q201_SEWERSWAY_INFO() {
    B_GIVEPLAYERXP(XP_Q201_SEWERSBONUS);
    AI_STARTFACEANI(SELF, S_DISGUST, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Q201_SewersWay_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Q201_SewersWay_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Q201_SewersWay_03_03");
    INFO_CLEARCHOICES(0x121d9);
    INFO_ADDCHOICE(0x121d9, "I don't know what you're talking about.", 0x121de);
    INFO_ADDCHOICE(0x121d9, "You could say that...", 0x121dd);
}

func void DIA_OLAF_Q201_SEWERSWAY_NEXT() {
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Q201_SewersWay_Next_03_01");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Q201_SewersWay_Next_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Q201_SewersWay_Next_03_03");
    AI_STARTFACEANI(SELF, S_THINK, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Q201_SewersWay_Next_03_04");
    INFO_CLEARCHOICES(0x121d9);
    INFO_ADDCHOICE(0x121d9, "Who are you?", 0x121df);
}

func void DIA_OLAF_Q201_SEWERSWAY_MAYBE() {
    AI_STARTFACEANI(OTHER, S_TIRED, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Q201_SewersWay_Maybe_15_01");
    DIA_OLAF_Q201_SEWERSWAY_NEXT();
}

func void DIA_OLAF_Q201_SEWERSWAY_NO() {
    AI_STARTFACEANI(OTHER, S_SURPRISE, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Q201_SewersWay_No_15_01");
    DIA_OLAF_Q201_SEWERSWAY_NEXT();
}

func void DIA_OLAF_Q201_SEWERSWAY_NO_NEXT_WHO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Olaf_Q201_SewersWay_Who_15_01");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Q201_SewersWay_Who_03_02");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Q201_SewersWay_Who_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Q201_SewersWay_Who_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Q201_SewersWay_Who_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Olaf_Q201_SewersWay_Who_03_06");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    INFO_CLEARCHOICES(0x121d9);
    NPC_EXCHANGEROUTINE(SELF, START);
}

instance DIA_OLAF_PICKPOCKET(C_INFO) {
    NPC = 0xd500;
    NR = 900;
    CONDITION = DIA_OLAF_PICKPOCKET_CONDITION;
    INFORMATION = DIA_OLAF_PICKPOCKET_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = PICKPOCKET_80;
}

func int DIA_OLAF_PICKPOCKET_CONDITION() {
    if (((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) && ((SELF.AIVAR[6]) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_OLAF_PICKPOCKET_INFO() {
    INFO_CLEARCHOICES(0x121e0);
    INFO_ADDCHOICE(0x121e0, DIALOG_BACK, 0x121e4);
    INFO_ADDCHOICE(0x121e0, DIALOG_PICKPOCKET, 0x121e3);
}

func void DIA_OLAF_PICKPOCKET_DOIT() {
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (2)) {
        CREATEINVITEMS(SELF, 0x8e10, 1);
        B_GIVEINVITEMS(SELF, OTHER, 0x8e10, 1);
        B_PICKPOCKET_AMBIENT_TIER_2();
        SELF.AIVAR[6] = TRUE;
        INFO_CLEARCHOICES(0x121e0);
    };
    AI_PLAYANI(HERO, T_CANNOTTAKE);
    PRINTSCREEN(PRINT_CANTPICKPOCKETTHISPERSON, -(1), -(1), FONT_SCREEN, 4);
    INFO_CLEARCHOICES(0x121e0);
}

func void DIA_OLAF_PICKPOCKET_BACK() {
    INFO_CLEARCHOICES(0x121e0);
}

