instance DIA_BERTO_EXIT(C_INFO) {
    NPC = 0xdbd5;
    NR = 999;
    CONDITION = DIA_BERTO_EXIT_CONDITION;
    INFORMATION = DIA_BERTO_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_BERTO_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_BERTO_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_BERTO_AMBIENTBEFOREJOIN(C_INFO) {
    NPC = 0xdbd5;
    NR = 1;
    CONDITION = DIA_BERTO_AMBIENTBEFOREJOIN_CONDITION;
    INFORMATION = DIA_BERTO_AMBIENTBEFOREJOIN_INFO;
    PERMANENT = TRUE;
    IMPORTANT = TRUE;
}

func int DIA_BERTO_AMBIENTBEFOREJOIN_CONDITION() {
    if (((Q205_MARVINJOINEDRENEGADES) == (FALSE)) && (NPC_ISINSTATE(SELF, 0xf09f))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BERTO_AMBIENTBEFOREJOIN_INFO() {
    DIA_IMBUSY_ANGRY();
}

instance DIA_BERTO_Q205_HELP(C_INFO) {
    NPC = 0xdbd5;
    NR = 1;
    CONDITION = DIA_BERTO_Q205_HELP_CONDITION;
    INFORMATION = DIA_BERTO_Q205_HELP_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_BERTO_Q205_HELP_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_Q205)) == (LOG_RUNNING)) && ((Q205_MARVINJOINEDRENEGADES) == (TRUE))) && ((NPC_GETDISTTONPC(MIL_6275_BERTO, MIL_6267_SALVI)) >= (750))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BERTO_Q205_HELP_NEXT() {
    WLD_SENDTRIGGER("Q205_MOVER_WINE");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_Help_Next_03_01");
    if ((NPC_ISDEAD(NONE_6269_DANIEL)) == (FALSE)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_Help_Next_03_02");
        CREATEINVITEMS(SELF, 0x8632, 2);
        B_GIVEINVITEMS(SELF, OTHER, 0x8632, 2);
        B_GIVEPLAYERXP(XP_Q205_DANIELSURVIVED);
    };
    AI_RESETFACEANI(SELF);
    INFO_CLEARCHOICES(0x13321);
    AI_STOPPROCESSINFOS(SELF);
    NPC_EXCHANGEROUTINE(SELF, "CAVE");
    TELEPORTNPCTOWP(0xdbca, MIL_6268_BRODDY.WP);
}

func void DIA_BERTO_Q205_HELP_COUNT() {
    BERTO_Q205_HELP_COUNT = (BERTO_Q205_HELP_COUNT) + (1);
    if ((BERTO_Q205_HELP_COUNT) == (3)) {
        DIA_BERTO_Q205_HELP_NEXT();
    };
}

var int DIA_BERTO_Q205_HELP_COUNT.BERTO_Q205_HELP_COUNT = 0;
func void DIA_BERTO_Q205_HELP_INFO() {
    MIL_6268_BRODDY.AIVAR[52] = TRUE;
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    CREATEINVITEMS(SELF, 0x8ab5, 1);
    B_GIVEINVITEMS(SELF, OTHER, 0x8ab5, 1);
    AI_EQUIPARMOR(SELF, 0x8ab5);
    AI_EQUIPARMOR(OTHER, 0x8ab5);
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_Help_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_Help_03_02");
    INFO_CLEARCHOICES(0x13321);
    INFO_ADDCHOICE(0x13321, "I have to get out of here somehow!", 0x1332b);
    INFO_ADDCHOICE(0x13321, "Why are you helping me?", 0x13327);
}

func void DIA_BERTO_Q205_HELP_WHY() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Berto_Q205_Help_Why_15_01");
    AI_RESETFACEANI(OTHER);
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_Help_Why_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_Help_Why_03_03");
    INFO_ADDCHOICE(0x13321, "Can you tell me exactly what happened here?", 0x13328);
    INFO_ADDCHOICE(0x13321, "How can I get my stuff back?", 0x13329);
}

func void DIA_BERTO_Q205_HELP_WHY_TELL() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Berto_Q205_Help_Tell_15_01");
    AI_RESETFACEANI(OTHER);
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_Help_Tell_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_Help_Tell_03_03");
    DIA_BERTO_Q205_HELP_COUNT();
}

func void DIA_BERTO_Q205_HELP_WHY_HOW() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Berto_Q205_Help_How_15_01");
    AI_RESETFACEANI(OTHER);
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_Help_How_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_Help_How_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_Help_How_03_04");
    AI_LOGENTRY(TOPIC_Q205, LOG_Q205_BERTO_MYSTUFF);
    INFO_ADDCHOICE(0x13321, "Any idea how to get rid of him?", 0x1332a);
}

func void DIA_BERTO_Q205_HELP_WHY_HOW_IDEA() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Berto_Q205_Help_Idea_15_01");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_Help_Idea_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_Help_Idea_03_03");
    AI_RESETFACEANI(OTHER);
    AI_RESETFACEANI(SELF);
    DIA_BERTO_Q205_HELP_COUNT();
}

func void DIA_BERTO_Q205_HELP_LEAVE() {
    AI_OUTPUT(OTHER, SELF, "DIA_Berto_Q205_Help_Leave_15_01");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_Help_Leave_03_02");
    AI_PLAYANI(SELF, T_SEARCH);
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_Help_Leave_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_Help_Leave_03_04");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_Help_Leave_03_05");
    AI_LOGENTRY(TOPIC_Q205, LOG_Q205_BERTO_WAYOUT);
    DIA_BERTO_Q205_HELP_COUNT();
}

instance DIA_BERTO_Q205_IDEA(C_INFO) {
    NPC = 0xdbd5;
    NR = 1;
    CONDITION = DIA_BERTO_Q205_IDEA_CONDITION;
    INFORMATION = DIA_BERTO_Q205_IDEA_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I have an idea how to get rid of Broddy.";
}

func int DIA_BERTO_Q205_IDEA_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q205)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x132f0))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BERTO_Q205_IDEA_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Berto_Q205_Idea_15_01");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_Idea_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_Idea_03_03");
    CREATEINVITEMS(SELF, 0x8c51, 1);
    B_GIVEINVITEMS(SELF, OTHER, 0x8c51, 1);
    AI_STARTFACEANI(SELF, S_THINK, 1, -(1));
    AI_PLAYANI(SELF, T_SEARCH);
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_Idea_03_04");
    INFO_CLEARCHOICES(0x1332c);
    INFO_ADDCHOICE(0x1332c, "What makes you so sure I'm alone?", 0x1332f);
    INFO_ADDCHOICE(0x1332c, "Roderich clearly did not foresee that a rebellion had occurred.", 0x13330);
}

func void DIA_BERTO_Q205_IDEA_ALONE() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Berto_Q205_Idea_Alone_15_01");
    AI_STARTFACEANI(SELF, S_DOUBT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_Idea_Alone_03_02");
    AI_RESETFACEANI(OTHER);
}

func void DIA_BERTO_Q205_IDEA_RIOT() {
    AI_OUTPUT(OTHER, SELF, "DIA_Berto_Q205_Idea_Riot_15_01");
    AI_STARTFACEANI(SELF, S_THINK, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_Idea_Riot_03_02");
    INFO_CLEARCHOICES(0x1332c);
    INFO_ADDCHOICE(0x1332c, "I'm looking for my brother. I suspect he was abducted in Silbach.", 0x13331);
}

func void DIA_BERTO_Q205_IDEA_RIOT_JORN() {
    AI_STARTFACEANI(OTHER, S_TIRED, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Berto_Q205_Idea_Jorn_15_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Berto_Q205_Idea_Jorn_15_02");
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_Idea_Jorn_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_Idea_Jorn_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_Idea_Jorn_03_05");
    AI_STARTFACEANI(SELF, S_DOUBT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_Idea_Jorn_03_06");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_Idea_Jorn_03_07");
    AI_RESETFACEANI(OTHER);
    AI_RESETFACEANI(SELF);
    AI_LOGENTRY(TOPIC_Q205, LOG_Q205_BERTO_IDEA);
    INFO_CLEARCHOICES(0x1332c);
    Q205_CANPREPAREMEAL();
}

instance DIA_BERTO_Q205_IMBUSY(C_INFO) {
    NPC = 0xdbd5;
    NR = 1;
    CONDITION = DIA_BERTO_Q205_IMBUSY_CONDITION;
    INFORMATION = DIA_BERTO_Q205_IMBUSY_INFO;
    PERMANENT = TRUE;
    IMPORTANT = TRUE;
}

func int DIA_BERTO_Q205_IMBUSY_CONDITION() {
    if (((((LOG_GETSTATUS(MIS_Q205)) == (LOG_RUNNING)) && ((Q205_ATTACKVINEYARD_READ) == (TRUE))) && ((Q205_TREEHEROFELL) != (2))) && (NPC_ISINSTATE(SELF, 0xf09f))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BERTO_Q205_IMBUSY_INFO() {
    B_SAY(SELF, OTHER, "$IMBUSY_CALM");
    AI_STOPPROCESSINFOS(SELF);
    Q205_BUSY();
}

instance DIA_BERTO_Q205_RUNAWAY(C_INFO) {
    NPC = 0xdbd5;
    NR = 1;
    CONDITION = DIA_BERTO_Q205_RUNAWAY_CONDITION;
    INFORMATION = DIA_BERTO_Q205_RUNAWAY_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_BERTO_Q205_RUNAWAY_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q205)) == (LOG_RUNNING)) && ((Q205_TREEHEROFELL) == (2))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

var int BERTO_Q205_RUNAWAY_WHAT = 0;
var int BERTO_Q205_RUNAWAY_KILL = 0;
func void DIA_BERTO_Q205_RUNAWAY_CHOICES() {
    INFO_CLEARCHOICES(0x13335);
    if (((BERTO_Q205_RUNAWAY_WHAT) == (FALSE)) || ((BERTO_Q205_RUNAWAY_KILL) == (FALSE))) {
        if ((BERTO_Q205_RUNAWAY_WHAT) == (FALSE)) {
            INFO_ADDCHOICE(0x13335, "What do I do?", 0x1333c);
        };
        if ((BERTO_Q205_RUNAWAY_KILL) == (FALSE)) {
            INFO_ADDCHOICE(0x13335, "Did you kill him?", 0x1333b);
        };
    };
    INFO_ADDCHOICE(0x13335, "Good luck, Berto.", 0x1333e);
}

func void DIA_BERTO_Q205_RUNAWAY_INFO() {
    MIL_6268_BRODDY.AIVAR[52] = FALSE;
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_RunAway_03_01");
    DIA_BERTO_Q205_RUNAWAY_CHOICES();
}

func void DIA_BERTO_Q205_RUNAWAY_KILL() {
    BERTO_Q205_RUNAWAY_KILL = TRUE;
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Berto_Q205_RunAway_Kill_15_01");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_RunAway_Kill_03_02");
    DIA_BERTO_Q205_RUNAWAY_CHOICES();
}

func void DIA_BERTO_Q205_RUNAWAY_WHAT() {
    BERTO_Q205_RUNAWAY_WHAT = TRUE;
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Berto_Q205_RunAway_What_15_01");
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_RunAway_What_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_RunAway_What_03_03");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_RunAway_What_03_04");
    INFO_CLEARCHOICES(0x13335);
    INFO_ADDCHOICE(0x13335, "You're not running away?", 0x1333d);
}

func void DIA_BERTO_Q205_RUNAWAY_WHAT_FLEE() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Berto_Q205_RunAway_Flee_15_01");
    AI_RESETFACEANI(OTHER);
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_RunAway_Flee_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_RunAway_Flee_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_RunAway_Flee_03_04");
    DIA_BERTO_Q205_RUNAWAY_CHOICES();
}

func void DIA_BERTO_Q205_RUNAWAY_BYE() {
    AI_STARTFACEANI(OTHER, S_SMILE, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Berto_Q205_RunAway_Bye_15_01");
    AI_STARTFACEANI(SELF, S_SURPRISE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_RunAway_Bye_03_02");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_RunAway_Bye_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_RunAway_Bye_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_RunAway_Bye_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q205_RunAway_Bye_03_06");
    AI_OUTPUT(OTHER, SELF, "DIA_Berto_Q205_RunAway_Bye_15_07");
    AI_RESETFACEANI(OTHER);
    INFO_CLEARCHOICES(0x13335);
    AI_STOPPROCESSINFOS(SELF);
    AI_LOGENTRY(TOPIC_Q205, LOG_Q205_BERTO_GOODBYE);
    LOG_CREATETOPIC(TOPIC_Q207, LOG_MISSION);
    LOG_SETSTATUS(_@(MIS_Q207), TOPIC_Q207, LOG_RUNNING);
    AI_LOGENTRY(TOPIC_Q207, LOG_Q207_START);
    Q205_BRINGBACKPART4RENEGADES();
    NPC_EXCHANGEROUTINE(SELF, "Q205_PLUNDER");
}

instance DIA_BERTO_QM401_HELLO(C_INFO) {
    NPC = 0xdbd5;
    NR = 1;
    CONDITION = DIA_BERTO_QM401_HELLO_CONDITION;
    INFORMATION = DIA_BERTO_QM401_HELLO_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_BERTO_QM401_HELLO_CONDITION() {
    if ((LOG_GETSTATUS(MIS_QM401)) == (LOG_RUNNING)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BERTO_QM401_HELLO_INFO() {
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_QM401_Hello_03_01");
}

instance DIA_BERTO_QM401_WHAT(C_INFO) {
    NPC = 0xdbd5;
    NR = 1;
    CONDITION = DIA_BERTO_QM401_WHAT_CONDITION;
    INFORMATION = DIA_BERTO_QM401_WHAT_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "What happened here?";
}

func int DIA_BERTO_QM401_WHAT_CONDITION() {
    if ((LOG_GETSTATUS(MIS_QM401)) == (LOG_RUNNING)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BERTO_QM401_WHAT_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Berto_QM401_What_15_01");
    AI_RESETFACEANI(OTHER);
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_QM401_What_03_02");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_QM401_What_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_QM401_What_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_QM401_What_03_05");
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_QM401_What_03_06");
    AI_RESETFACEANI(SELF);
}

instance DIA_BERTO_QM401_SALVI(C_INFO) {
    NPC = 0xdbd5;
    NR = 1;
    CONDITION = DIA_BERTO_QM401_SALVI_CONDITION;
    INFORMATION = DIA_BERTO_QM401_SALVI_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Can't you take us to Salvi?";
}

func int DIA_BERTO_QM401_SALVI_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 0x13342)) && ((LOG_GETSTATUS(MIS_QM401)) == (LOG_RUNNING))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BERTO_QM401_SALVI_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Berto_QM401_Salvi_15_01");
    AI_RESETFACEANI(OTHER);
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_QM401_Salvi_03_02");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_QM401_Salvi_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_QM401_Salvi_03_04");
    CREATEINVITEMS(SELF, 0x91c3, 1);
    B_GIVEINVITEMS(SELF, OTHER, 0x91c3, 1);
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_QM401_Salvi_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_QM401_Salvi_03_06");
    AI_FUNCTION(SELF, 0xf570);
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_QM401_Salvi_03_07");
    AI_LOGENTRY(TOPIC_QM401, LOG_QM401_BERTO_SALVIPLAN);
    AI_STOPPROCESSINFOS(SELF);
    NPC_EXCHANGEROUTINE(SELF, "QM401_FLEE");
}

instance DIA_BERTO_QM401_NOTIME(C_INFO) {
    NPC = 0xdbd5;
    NR = 1;
    CONDITION = DIA_BERTO_QM401_NOTIME_CONDITION;
    INFORMATION = DIA_BERTO_QM401_NOTIME_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_BERTO_QM401_NOTIME_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_QM401)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 0x10298))) && ((NPC_GETDISTTOWP(SELF, "PART7_PATH_64")) <= (0x5dc))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BERTO_QM401_NOTIME_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_QM401_NoTime_03_01");
    AI_STOPPROCESSINFOS(SELF);
    AI_FUNCTION(SELF, 0xf574);
    AI_WAITTILLEND(OTHER, SELF);
    AI_TURNTONPC(OTHER, MIL_6268_BRODDY);
}

instance DIA_BERTO_QM401_AFTERBRODDY(C_INFO) {
    NPC = 0xdbd5;
    NR = 1;
    CONDITION = DIA_BERTO_QM401_AFTERBRODDY_CONDITION;
    INFORMATION = DIA_BERTO_QM401_AFTERBRODDY_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_BERTO_QM401_AFTERBRODDY_CONDITION() {
    if (((LOG_GETSTATUS(MIS_QM401)) == (LOG_RUNNING)) && ((QM401_FIGHTWITHBRODDY) == (2))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BERTO_QM401_AFTERBRODDY_INFO() {
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_QM401_AfterBroddy_03_01");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_QM401_AfterBroddy_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_QM401_AfterBroddy_03_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Berto_QM401_AfterBroddy_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_QM401_AfterBroddy_03_05");
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_QM401_AfterBroddy_03_06");
    INFO_CLEARCHOICES(0x1334b);
    INFO_ADDCHOICE(0x1334b, "Roderich assigned additional men to protect the vineyard.", 0x1334e);
}

func void DIA_BERTO_QM401_AFTERBRODDY_PROTECTION() {
    AI_OUTPUT(OTHER, SELF, "DIA_Berto_QM401_AfterBroddy_Protection_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_QM401_AfterBroddy_Protection_03_02");
    INFO_CLEARCHOICES(0x1334b);
    INFO_ADDCHOICE(0x1334b, "What do you suggest?", 0x1334f);
}

func void DIA_BERTO_QM401_AFTERBRODDY_PROTECTION_WHAT() {
    QM401_BEATUPBERTO = TRUE;
    MIL_6275_BERTO.FLAGS = NPC_FLAG_IMPORTANT;
    MIL_6275_BERTO.AIVAR[96] = -(1);
    MIL_6275_BERTO.AIVAR[15] = FALSE;
    AI_OUTPUT(OTHER, SELF, "DIA_Berto_QM401_AfterBroddy_What_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_QM401_AfterBroddy_What_03_02");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_QM401_AfterBroddy_What_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_QM401_AfterBroddy_What_03_04");
    AI_STARTFACEANI(OTHER, S_SURPRISE, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Berto_QM401_AfterBroddy_What_15_05");
    AI_RESETFACEANI(OTHER);
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_QM401_AfterBroddy_What_03_06");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_QM401_AfterBroddy_What_03_07");
    INFO_CLEARCHOICES(0x1334b);
    AI_STOPPROCESSINFOS(SELF);
    AI_LOGENTRY(TOPIC_QM401, LOG_QM401_BERTO_PLAN);
    NPC_EXCHANGEROUTINE(SELF, "QM401_BEATUP");
}

instance DIA_BERTO_QM401_AFTERFIGHT(C_INFO) {
    NPC = 0xdbd5;
    NR = 1;
    CONDITION = DIA_BERTO_QM401_AFTERFIGHT_CONDITION;
    INFORMATION = DIA_BERTO_QM401_AFTERFIGHT_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_BERTO_QM401_AFTERFIGHT_CONDITION() {
    if (((LOG_GETSTATUS(MIS_QM401)) == (LOG_RUNNING)) && ((QM401_FIGHTWITHRENEGADESCHECK) == (2))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BERTO_QM401_AFTERFIGHT_INFO() {
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_QM401_AfterFight_03_01");
    INFO_CLEARCHOICES(0x13350);
    INFO_ADDCHOICE(0x13350, "You too, Berto!", 0x13354);
    INFO_ADDCHOICE(0x13350, "We made it!", 0x13355);
}

func void DIA_BERTO_QM401_AFTERFIGHT_NEXT() {
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_QM401_AfterFight_Next_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_QM401_AfterFight_Next_03_02");
    INFO_CLEARCHOICES(0x13350);
    AI_STOPPROCESSINFOS(SELF);
}

func void DIA_BERTO_QM401_AFTERFIGHT_HELLO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Berto_QM401_AfterFight_Hello_15_01");
    DIA_BERTO_QM401_AFTERFIGHT_NEXT();
}

func void DIA_BERTO_QM401_AFTERFIGHT_YES() {
    AI_OUTPUT(OTHER, SELF, "DIA_Berto_QM401_AfterFight_Yes_15_01");
    DIA_BERTO_QM401_AFTERFIGHT_NEXT();
}

instance DIA_BERTO_Q509_QUESTION(C_INFO) {
    NPC = 0xdbd5;
    NR = 1;
    CONDITION = DIA_BERTO_Q509_QUESTION_CONDITION;
    INFORMATION = DIA_BERTO_Q509_QUESTION_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I need help from trusted and experienced people.";
}

func int DIA_BERTO_Q509_QUESTION_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_Q509)) == (LOG_RUNNING)) && ((LOG_GETSTATUS(MIS_QM401)) == (LOG_SUCCESS))) && ((Q509_COUNTWARRIORS) < (4))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BERTO_Q509_QUESTION_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Berto_Q509_Question_15_01");
    B_STANDUP();
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q509_Question_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Berto_Q509_Question_15_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Berto_Q509_Question_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q509_Question_03_05");
    INFO_CLEARCHOICES(0x13356);
    INFO_ADDCHOICE(0x13356, "Just like that? You know what they say about this place?", 0x13359);
}

func void DIA_BERTO_Q509_QUESTION_PLACE() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Berto_Q509_Question_Place_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q509_Question_Place_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q509_Question_Place_03_03");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

instance DIA_BERTO_Q509_LETSGO(C_INFO) {
    NPC = 0xdbd5;
    NR = 1;
    CONDITION = DIA_BERTO_Q509_LETSGO_CONDITION;
    INFORMATION = DIA_BERTO_Q509_LETSGO_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "In that case, I'll see you at the entrance to the ruins.";
}

func int DIA_BERTO_Q509_LETSGO_CONDITION() {
    if (((((LOG_GETSTATUS(MIS_Q509)) == (LOG_RUNNING)) && ((LOG_GETSTATUS(MIS_QM401)) == (LOG_SUCCESS))) && ((Q509_COUNTWARRIORS) < (4))) && (NPC_KNOWSINFO(OTHER, 0x13356))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BERTO_Q509_LETSGO_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Berto_Q509_LetsGo_15_01");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q509_LetsGo_03_02");
    B_STANDUP();
    AI_STOPPROCESSINFOS(SELF);
    B_GIVEPLAYERXP(XP_VARHDAL_RECRUIT);
    SELF.AIVAR[15] = TRUE;
    SELF.FLAGS = 2;
    Q509_BERTOVOLFZACKE = 1;
    NPC_EXCHANGEROUTINE(SELF, "Q509_WAIT");
    AI_LOGENTRY(TOPIC_Q509, LOG_Q509_BERTO);
    AI_FUNCTION(SELF, 0xf74c);
}

instance DIA_BERTO_Q509_FEEL(C_INFO) {
    NPC = 0xdbd5;
    NR = 90;
    CONDITION = DIA_BERTO_Q509_FEEL_CONDITION;
    INFORMATION = DIA_BERTO_Q509_FEEL_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "How's the morale?";
}

func int DIA_BERTO_Q509_FEEL_CONDITION() {
    if (((NPC_GETDISTTOWP(SELF, "PART5_Q509_BERTO")) <= (0x7d0)) && ((Q509_BERTOVOLFZACKE) == (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_BERTO_Q509_FEEL_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    B_SAY(OTHER, SELF, "$MARVIN_VolfzackMorale3");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Berto_Q509_Feel_03_02");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

