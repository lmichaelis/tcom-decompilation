const int VALUE_BESTIARY_GOBLIN = 10;
const int VALUE_BESTIARY_WOLF = 10;
const int VALUE_BESTIARY_SCAVENGER = 10;
const int VALUE_BESTIARY_TROLL = 50;
const int VALUE_BESTIARY_MINECRAWLER = 30;
const int VALUE_BESTIARY_HARPIE = 30;
const int VALUE_BESTIARY_SHADOWBEAST = 50;
const int VALUE_BESTIARY_BEAR = 50;
const int VALUE_BESTIARY_SWAMPSHARK = 25;
const int VALUE_BESTIARY_RATS = 10;
const int VALUE_BESTIARY_GIANTBUG = 10;
const int VALUE_BESTIARY_SNAPPERS = 30;
const int VALUE_BESTIARY_GOLEMS = 50;
const int VALUE_BESTIARY_SKELETONS = 50;
const int VALUE_BESTIARY_BOAR = 15;
const int VALUE_BESTIARY_BAT = 25;
const int VALUE_BESTIARY_TURTLE = 15;
const int VALUE_BESTIARY_CRAB = 25;
const int VALUE_BESTIARY_ZOMBIE = 25;
const int VALUE_BESTIARY_MOLERAT = 10;
const int VALUE_BESTIARY_LIZARD = 50;
const int VALUE_BESTIARY_BLOODFLY = 10;
const int VALUE_BESTIARY_LURKER = 20;
const int VALUE_BESTIARY_DRONE = 20;
const int VALUE_BESTIARY_FROGMAN = 20;
instance ITWR_BESTIARY_GOBLIN(C_ITEM) {
    NAME = WRITTENNAME_BESTIARY_GOBLIN;
    MAINFLAG = ITEM_KAT_DOCS;
    FLAGS = 0;
    VALUE = VALUE_BESTIARY_GOBLIN;
    VISUAL = "KM_ITEM_BOOK_22.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MAP;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITWR_BESTIARY_GOBLIN_1;
    TEXT[4] = MISCDESC_ADDBONUSEXP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
    ON_STATE[0] = USE_BESTIARY_GOBLIN;
    INV_ROTX = 90;
    INV_ROTY = 180;
    INV_ROTZ = 180;
}

func void USE_BESTIARY_GOBLIN() {
    if ((ITWR_BESTIARY_GOBLIN_CHECKREAD) == (FALSE)) {
        B_GIVEPLAYERXP(XP_READBESTIARYBOOK);
        ITWR_BESTIARY_GOBLIN_CHECKREAD = TRUE;
        LOG_CREATETOPIC(TOPIC_BEASTIARY, LOG_NOTE);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_GOBLIN);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_GOBLINBLACK);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_GOBLINWARRIOR);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_GOBLINSKELETON);
    };
    NDOCID = DOC_CREATE();
    DOC_SETPAGES(NDOCID, 2);
    DOC_SETPAGE(NDOCID, 0, "Book_KM_01_L.tga", 0);
    DOC_SETPAGE(NDOCID, 1, "Book_KM_01_R.tga", 0);
    DOC_SETMARGINS(NDOCID, 0, 195, 15, 40, 15, 1);
    DOC_SETFONT(NDOCID, 0, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_PRINTLINES(NDOCID, 0, NAME_GOBBO);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_GOBLIN_1);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_GOBLIN_2);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_GOBLIN_3);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_GOBLIN_4);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_GOBLIN_5);
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_SETFONT(NDOCID, 0, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 0, NAME_BLACKGOBLIN);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_GOBLIN_6);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_GOBLIN_7);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_GOBLIN_8);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_GOBLIN_9);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_GOBLIN_10);
    DOC_SETMARGINS(NDOCID, 1, 15, 15, 225, 15, 1);
    DOC_SETFONT(NDOCID, 1, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_GOBLIN_11);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_GOBLIN_12);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_GOBLIN_13);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_GOBLIN_14);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_GOBLIN_15);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_GOBLIN_16);
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_SETFONT(NDOCID, 1, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_GOBLIN_17);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_GOBLIN_18);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_GOBLIN_19);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_GOBLIN_20);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_GOBLIN_21);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_GOBLIN_22);
    DOC_SHOW(NDOCID);
}

var int USE_BESTIARY_GOBLIN.ITWR_BESTIARY_GOBLIN_CHECKREAD = 0;
var int USE_BESTIARY_GOBLIN.NDOCID = 0;
instance ITWR_BESTIARY_WOLF(C_ITEM) {
    NAME = WRITTENNAME_BESTIARY_WOLF;
    MAINFLAG = ITEM_KAT_DOCS;
    FLAGS = 0;
    VALUE = VALUE_BESTIARY_WOLF;
    VISUAL = "KM_ITEM_BOOK_22.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MAP;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITWR_BESTIARY_WOLF_1;
    TEXT[4] = MISCDESC_ADDBONUSEXP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
    ON_STATE[0] = USE_BESTIARY_WOLF;
    INV_ROTX = 90;
    INV_ROTY = 180;
    INV_ROTZ = 180;
}

func void USE_BESTIARY_WOLF() {
    if ((ITWR_BESTIARY_WOLF_CHECKREAD) == (FALSE)) {
        B_GIVEPLAYERXP(XP_READBESTIARYBOOK);
        ITWR_BESTIARY_WOLF_CHECKREAD = TRUE;
        LOG_CREATETOPIC(TOPIC_BEASTIARY, LOG_NOTE);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_WOLF);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_WOLFBLACK);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_WARG);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_ORCDOG);
    };
    NDOCID = DOC_CREATE();
    DOC_SETPAGES(NDOCID, 2);
    DOC_SETPAGE(NDOCID, 0, "Book_KM_01_L.tga", 0);
    DOC_SETPAGE(NDOCID, 1, "Book_KM_01_R.tga", 0);
    DOC_SETMARGINS(NDOCID, 0, 195, 15, 40, 15, 1);
    DOC_SETFONT(NDOCID, 0, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_PRINTLINES(NDOCID, 0, NAME_WOLF);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_WOLF_1);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_WOLF_2);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_WOLF_3);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_WOLF_4);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_WOLF_5);
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_SETFONT(NDOCID, 0, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_WOLF_6);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_WOLF_7);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_WOLF_8);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_WOLF_9);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_WOLF_10);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_WOLF_11);
    DOC_SETMARGINS(NDOCID, 1, 15, 15, 225, 15, 1);
    DOC_SETFONT(NDOCID, 1, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_PRINTLINES(NDOCID, 1, NAME_WARG);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_WOLF_12);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_WOLF_13);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_WOLF_14);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_WOLF_15);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_WOLF_16);
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_SETFONT(NDOCID, 1, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 1, NAME_ORCDOG);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_WOLF_17);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_WOLF_18);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_WOLF_19);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_WOLF_20);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_WOLF_21);
    DOC_SHOW(NDOCID);
}

var int USE_BESTIARY_WOLF.ITWR_BESTIARY_WOLF_CHECKREAD = 0;
var int USE_BESTIARY_WOLF.NDOCID = 0;
instance ITWR_BESTIARY_SCAVENGER(C_ITEM) {
    NAME = WRITTENNAME_BESTIARY_SCAVENGER;
    MAINFLAG = ITEM_KAT_DOCS;
    FLAGS = 0;
    VALUE = VALUE_BESTIARY_SCAVENGER;
    VISUAL = "KM_ITEM_BOOK_22.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MAP;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITWR_BESTIARY_SCAVENGER_1;
    TEXT[4] = MISCDESC_ADDBONUSEXP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
    ON_STATE[0] = USE_BESTIARY_SCAVENGER;
    INV_ROTX = 90;
    INV_ROTY = 180;
    INV_ROTZ = 180;
}

func void USE_BESTIARY_SCAVENGER() {
    if ((ITWR_BESTIARY_SCAVENGER_CHECKREAD) == (FALSE)) {
        B_GIVEPLAYERXP(XP_READBESTIARYBOOK);
        ITWR_BESTIARY_SCAVENGER_CHECKREAD = TRUE;
        LOG_CREATETOPIC(TOPIC_BEASTIARY, LOG_NOTE);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_SCAVENGER);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_SCAVENGERFOREST);
    };
    NDOCID = DOC_CREATE();
    DOC_SETPAGES(NDOCID, 2);
    DOC_SETPAGE(NDOCID, 0, "Book_KM_01_L.tga", 0);
    DOC_SETPAGE(NDOCID, 1, "Book_KM_01_R.tga", 0);
    DOC_SETMARGINS(NDOCID, 0, 195, 15, 40, 15, 1);
    DOC_SETFONT(NDOCID, 0, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_PRINTLINES(NDOCID, 0, NAME_SCAVENGER);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_SCAVENGER_1);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_SCAVENGER_2);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_SCAVENGER_3);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_SCAVENGER_4);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_SCAVENGER_5);
    DOC_SETMARGINS(NDOCID, 1, 15, 15, 225, 15, 1);
    DOC_SETFONT(NDOCID, 1, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_SCAVENGER_6);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_SCAVENGER_7);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_SCAVENGER_8);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_SCAVENGER_9);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_SCAVENGER_10);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_SCAVENGER_11);
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_SHOW(NDOCID);
}

var int USE_BESTIARY_SCAVENGER.ITWR_BESTIARY_SCAVENGER_CHECKREAD = 0;
var int USE_BESTIARY_SCAVENGER.NDOCID = 0;
instance ITWR_BESTIARY_TROLL(C_ITEM) {
    NAME = WRITTENNAME_BESTIARY_TROLL;
    MAINFLAG = ITEM_KAT_DOCS;
    FLAGS = 0;
    VALUE = VALUE_BESTIARY_TROLL;
    VISUAL = "KM_ITEM_BOOK_22.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MAP;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITWR_BESTIARY_TROLL_1;
    TEXT[4] = MISCDESC_ADDBONUSEXP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
    ON_STATE[0] = USE_BESTIARY_TROLL;
    INV_ROTX = 90;
    INV_ROTY = 180;
    INV_ROTZ = 180;
}

func void USE_BESTIARY_TROLL() {
    if ((ITWR_BESTIARY_TROLL_CHECKREAD) == (FALSE)) {
        B_GIVEPLAYERXP(XP_READBESTIARYBOOK);
        ITWR_BESTIARY_TROLL_CHECKREAD = TRUE;
        LOG_CREATETOPIC(TOPIC_BEASTIARY, LOG_NOTE);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_TROLL);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_TROLLSWAMP);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_TROLLCAVE);
    };
    NDOCID = DOC_CREATE();
    DOC_SETPAGES(NDOCID, 2);
    DOC_SETPAGE(NDOCID, 0, "Book_KM_01_L.tga", 0);
    DOC_SETPAGE(NDOCID, 1, "Book_KM_01_R.tga", 0);
    DOC_SETMARGINS(NDOCID, 0, 195, 15, 40, 15, 1);
    DOC_SETFONT(NDOCID, 0, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 0, NAME_TROLL);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_TROLL_1);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_TROLL_2);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_TROLL_3);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_TROLL_4);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_TROLL_5);
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_SETFONT(NDOCID, 0, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_TROLL_6);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_TROLL_7);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_TROLL_8);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_TROLL_9);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_TROLL_10);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_TROLL_11);
    DOC_SETMARGINS(NDOCID, 1, 15, 15, 225, 15, 1);
    DOC_SETFONT(NDOCID, 1, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_TROLL_12);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_TROLL_13);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_TROLL_14);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_TROLL_15);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_TROLL_16);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_TROLL_17);
    DOC_SHOW(NDOCID);
}

var int USE_BESTIARY_TROLL.ITWR_BESTIARY_TROLL_CHECKREAD = 0;
var int USE_BESTIARY_TROLL.NDOCID = 0;
instance ITWR_BESTIARY_MINECRAWLER(C_ITEM) {
    NAME = WRITTENNAME_BESTIARY_MINECRAWLER;
    MAINFLAG = ITEM_KAT_DOCS;
    FLAGS = 0;
    VALUE = VALUE_BESTIARY_MINECRAWLER;
    VISUAL = "KM_ITEM_BOOK_22.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MAP;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITWR_BESTIARY_MINECRAWLER_1;
    TEXT[4] = MISCDESC_ADDBONUSEXP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
    ON_STATE[0] = USE_BESTIARY_MINECRAWLER;
    INV_ROTX = 90;
    INV_ROTY = 180;
    INV_ROTZ = 180;
}

func void USE_BESTIARY_MINECRAWLER() {
    if ((ITWR_BESTIARY_MINECRAWLER_CHECKREAD) == (FALSE)) {
        B_GIVEPLAYERXP(XP_READBESTIARYBOOK);
        ITWR_BESTIARY_MINECRAWLER_CHECKREAD = TRUE;
        LOG_CREATETOPIC(TOPIC_BEASTIARY, LOG_NOTE);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_MINECRAWLER);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_CRAWLER);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_CRAWLERWARRIOR);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_CRAWLERRUNE);
    };
    NDOCID = DOC_CREATE();
    DOC_SETPAGES(NDOCID, 2);
    DOC_SETPAGE(NDOCID, 0, "Book_KM_01_L.tga", 0);
    DOC_SETPAGE(NDOCID, 1, "Book_KM_01_R.tga", 0);
    DOC_SETMARGINS(NDOCID, 0, 195, 15, 40, 15, 1);
    DOC_SETFONT(NDOCID, 0, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_PRINTLINES(NDOCID, 0, NAME_MINECRAWLER);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_MINECRAWLER_1);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_MINECRAWLER_2);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_MINECRAWLER_3);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_MINECRAWLER_4);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_MINECRAWLER_5);
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_SETFONT(NDOCID, 0, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_MINECRAWLER_6);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_MINECRAWLER_7);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_MINECRAWLER_8);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_MINECRAWLER_9);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_MINECRAWLER_10);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_MINECRAWLER_11);
    DOC_SETMARGINS(NDOCID, 1, 15, 15, 225, 15, 1);
    DOC_SETFONT(NDOCID, 1, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_MINECRAWLER_12);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_MINECRAWLER_13);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_MINECRAWLER_14);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_MINECRAWLER_15);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_MINECRAWLER_16);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_MINECRAWLER_17);
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_SETFONT(NDOCID, 1, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_MINECRAWLER_18);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_MINECRAWLER_19);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_MINECRAWLER_20);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_MINECRAWLER_21);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_MINECRAWLER_22);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_MINECRAWLER_23);
    DOC_SHOW(NDOCID);
}

var int USE_BESTIARY_MINECRAWLER.ITWR_BESTIARY_MINECRAWLER_CHECKREAD = 0;
var int USE_BESTIARY_MINECRAWLER.NDOCID = 0;
instance ITWR_BESTIARY_HARPIE(C_ITEM) {
    NAME = WRITTENNAME_BESTIARY_HARPIE;
    MAINFLAG = ITEM_KAT_DOCS;
    FLAGS = 0;
    VALUE = VALUE_BESTIARY_HARPIE;
    VISUAL = "KM_ITEM_BOOK_22.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MAP;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITWR_BESTIARY_HARPIE_1;
    TEXT[4] = MISCDESC_ADDBONUSEXP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
    ON_STATE[0] = USE_BESTIARY_HARPIE;
    INV_ROTX = 90;
    INV_ROTY = 180;
    INV_ROTZ = 180;
}

func void USE_BESTIARY_HARPIE() {
    if ((ITWR_BESTIARY_HARPIE_CHECKREAD) == (FALSE)) {
        B_GIVEPLAYERXP(XP_READBESTIARYBOOK);
        ITWR_BESTIARY_HARPIE_CHECKREAD = TRUE;
        LOG_CREATETOPIC(TOPIC_BEASTIARY, LOG_NOTE);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_HARPIE);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_HARPIEBLACK);
    };
    NDOCID = DOC_CREATE();
    DOC_SETPAGES(NDOCID, 2);
    DOC_SETPAGE(NDOCID, 0, "Book_KM_01_L.tga", 0);
    DOC_SETPAGE(NDOCID, 1, "Book_KM_01_R.tga", 0);
    DOC_SETMARGINS(NDOCID, 0, 195, 15, 40, 15, 1);
    DOC_SETFONT(NDOCID, 0, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_PRINTLINES(NDOCID, 0, NAME_HARPY);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_HARPIE_1);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_HARPIE_2);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_HARPIE_3);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_HARPIE_4);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_HARPIE_5);
    DOC_SETMARGINS(NDOCID, 1, 15, 15, 225, 15, 1);
    DOC_SETFONT(NDOCID, 1, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_HARPIE_6);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_HARPIE_7);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_HARPIE_8);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_HARPIE_9);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_HARPIE_10);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_HARPIE_11);
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_SHOW(NDOCID);
}

var int USE_BESTIARY_HARPIE.ITWR_BESTIARY_HARPIE_CHECKREAD = 0;
var int USE_BESTIARY_HARPIE.NDOCID = 0;
instance ITWR_BESTIARY_SHADOWBEAST(C_ITEM) {
    NAME = WRITTENNAME_BESTIARY_SHADOWBEAST;
    MAINFLAG = ITEM_KAT_DOCS;
    FLAGS = 0;
    VALUE = VALUE_BESTIARY_SHADOWBEAST;
    VISUAL = "KM_ITEM_BOOK_22.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MAP;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITWR_BESTIARY_SHADOWBEAST_1;
    TEXT[4] = MISCDESC_ADDBONUSEXP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
    ON_STATE[0] = USE_BESTIARY_SHADOWBEAST;
    INV_ROTX = 90;
    INV_ROTY = 180;
    INV_ROTZ = 180;
}

func void USE_BESTIARY_SHADOWBEAST() {
    if ((ITWR_BESTIARY_SHADOWBEAST_CHECKREAD) == (FALSE)) {
        B_GIVEPLAYERXP(XP_READBESTIARYBOOK);
        ITWR_BESTIARY_SHADOWBEAST_CHECKREAD = TRUE;
        LOG_CREATETOPIC(TOPIC_BEASTIARY, LOG_NOTE);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_SHADOWBEAST);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_SHADOWBEASTSKELETON);
    };
    NDOCID = DOC_CREATE();
    DOC_SETPAGES(NDOCID, 2);
    DOC_SETPAGE(NDOCID, 0, "Book_KM_01_L.tga", 0);
    DOC_SETPAGE(NDOCID, 1, "Book_KM_01_R.tga", 0);
    DOC_SETMARGINS(NDOCID, 0, 195, 15, 40, 15, 1);
    DOC_SETFONT(NDOCID, 0, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_PRINTLINES(NDOCID, 0, NAME_SHADOWBEAST);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_SHADOWBEAST_1);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_SHADOWBEAST_2);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_SHADOWBEAST_3);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_SHADOWBEAST_4);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_SHADOWBEAST_5);
    DOC_SETMARGINS(NDOCID, 1, 15, 15, 225, 15, 1);
    DOC_SETFONT(NDOCID, 1, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_SHADOWBEAST_6);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_SHADOWBEAST_7);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_SHADOWBEAST_8);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_SHADOWBEAST_9);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_SHADOWBEAST_10);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_SHADOWBEAST_11);
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_SHOW(NDOCID);
}

var int USE_BESTIARY_SHADOWBEAST.ITWR_BESTIARY_SHADOWBEAST_CHECKREAD = 0;
var int USE_BESTIARY_SHADOWBEAST.NDOCID = 0;
instance ITWR_BESTIARY_BEAR(C_ITEM) {
    NAME = WRITTENNAME_BESTIARY_BEAR;
    MAINFLAG = ITEM_KAT_DOCS;
    FLAGS = 0;
    VALUE = VALUE_BESTIARY_BEAR;
    VISUAL = "KM_ITEM_BOOK_22.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MAP;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITWR_BESTIARY_BEAR_1;
    TEXT[4] = MISCDESC_ADDBONUSEXP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
    ON_STATE[0] = USE_BESTIARY_BEAR;
    INV_ROTX = 90;
    INV_ROTY = 180;
    INV_ROTZ = 180;
}

func void USE_BESTIARY_BEAR() {
    if ((ITWR_BESTIARY_BEAR_CHECKREAD) == (FALSE)) {
        B_GIVEPLAYERXP(XP_READBESTIARYBOOK);
        ITWR_BESTIARY_BEAR_CHECKREAD = TRUE;
        LOG_CREATETOPIC(TOPIC_BEASTIARY, LOG_NOTE);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_BEAR);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_BEARBLACK);
    };
    NDOCID = DOC_CREATE();
    DOC_SETPAGES(NDOCID, 2);
    DOC_SETPAGE(NDOCID, 0, "Book_KM_01_L.tga", 0);
    DOC_SETPAGE(NDOCID, 1, "Book_KM_01_R.tga", 0);
    DOC_SETMARGINS(NDOCID, 0, 195, 15, 40, 15, 1);
    DOC_SETFONT(NDOCID, 0, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_PRINTLINES(NDOCID, 0, NAME_BEAR);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_BEAR_1);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_BEAR_2);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_BEAR_3);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_BEAR_4);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_BEAR_5);
    DOC_SETMARGINS(NDOCID, 1, 15, 15, 225, 15, 1);
    DOC_SETFONT(NDOCID, 1, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_BEAR_6);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_BEAR_7);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_BEAR_8);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_BEAR_9);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_BEAR_10);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_BEAR_11);
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_SHOW(NDOCID);
}

var int USE_BESTIARY_BEAR.ITWR_BESTIARY_BEAR_CHECKREAD = 0;
var int USE_BESTIARY_BEAR.NDOCID = 0;
instance ITWR_BESTIARY_SWAMPSHARK(C_ITEM) {
    NAME = WRITTENNAME_BESTIARY_SWAMPSHARK;
    MAINFLAG = ITEM_KAT_DOCS;
    FLAGS = 0;
    VALUE = VALUE_BESTIARY_SWAMPSHARK;
    VISUAL = "KM_ITEM_BOOK_22.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MAP;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITWR_BESTIARY_SWAMPSHARK_1;
    TEXT[2] = ITEMDESC_ITWR_BESTIARY_SWAMPSHARK_2;
    TEXT[4] = MISCDESC_ADDBONUSEXP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
    ON_STATE[0] = USE_BESTIARY_SWAMPSHARK;
    INV_ROTX = 90;
    INV_ROTY = 180;
    INV_ROTZ = 180;
}

func void USE_BESTIARY_SWAMPSHARK() {
    if ((ITWR_BESTIARY_SWAMPSHARK_CHECKREAD) == (FALSE)) {
        B_GIVEPLAYERXP(XP_READBESTIARYBOOK);
        ITWR_BESTIARY_SWAMPSHARK_CHECKREAD = TRUE;
        LOG_CREATETOPIC(TOPIC_BEASTIARY, LOG_NOTE);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_SWAMPSHARK);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_SWAMPSHARKSEA);
    };
    NDOCID = DOC_CREATE();
    DOC_SETPAGES(NDOCID, 2);
    DOC_SETPAGE(NDOCID, 0, "Book_KM_01_L.tga", 0);
    DOC_SETPAGE(NDOCID, 1, "Book_KM_01_R.tga", 0);
    DOC_SETMARGINS(NDOCID, 0, 195, 15, 40, 15, 1);
    DOC_SETFONT(NDOCID, 0, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_PRINTLINES(NDOCID, 0, NAME_SWAMPSHARK);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_SWAMPSHARK_1);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_SWAMPSHARK_2);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_SWAMPSHARK_3);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_SWAMPSHARK_4);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_SWAMPSHARK_5);
    DOC_SETMARGINS(NDOCID, 1, 15, 15, 225, 15, 1);
    DOC_SETFONT(NDOCID, 1, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_PRINTLINES(NDOCID, 1, NAME_SEASHARK);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_SWAMPSHARK_6);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_SWAMPSHARK_7);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_SWAMPSHARK_8);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_SWAMPSHARK_9);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_SWAMPSHARK_10);
    DOC_SHOW(NDOCID);
}

var int USE_BESTIARY_SWAMPSHARK.ITWR_BESTIARY_SWAMPSHARK_CHECKREAD = 0;
var int USE_BESTIARY_SWAMPSHARK.NDOCID = 0;
instance ITWR_BESTIARY_RATS(C_ITEM) {
    NAME = WRITTENNAME_BESTIARY_RATS;
    MAINFLAG = ITEM_KAT_DOCS;
    FLAGS = 0;
    VALUE = VALUE_BESTIARY_RATS;
    VISUAL = "KM_ITEM_BOOK_22.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MAP;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITWR_BESTIARY_RATS_1;
    TEXT[4] = MISCDESC_ADDBONUSEXP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
    ON_STATE[0] = USE_BESTIARY_RATS;
    INV_ROTX = 90;
    INV_ROTY = 180;
    INV_ROTZ = 180;
}

func void USE_BESTIARY_RATS() {
    if ((ITWR_BESTIARY_RATS_CHECKREAD) == (FALSE)) {
        B_GIVEPLAYERXP(XP_READBESTIARYBOOK);
        ITWR_BESTIARY_RATS_CHECKREAD = TRUE;
        LOG_CREATETOPIC(TOPIC_BEASTIARY, LOG_NOTE);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_RAT);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_RATSWAMP);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_RATBLACK);
    };
    NDOCID = DOC_CREATE();
    DOC_SETPAGES(NDOCID, 2);
    DOC_SETPAGE(NDOCID, 0, "Book_KM_01_L.tga", 0);
    DOC_SETPAGE(NDOCID, 1, "Book_KM_01_R.tga", 0);
    DOC_SETMARGINS(NDOCID, 0, 195, 15, 40, 15, 1);
    DOC_SETFONT(NDOCID, 0, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_RATS_1);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_RATS_2);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_RATS_3);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_RATS_4);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_RATS_5);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_RATS_6);
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_SETFONT(NDOCID, 0, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 0, NAME_SWAMPRAT);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_RATS_7);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_RATS_8);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_RATS_9);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_RATS_10);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_RATS_11);
    DOC_SETMARGINS(NDOCID, 1, 15, 15, 225, 15, 1);
    DOC_SETFONT(NDOCID, 1, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_PRINTLINES(NDOCID, 1, NAME_BLACKRAT);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_RATS_12);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_RATS_13);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_RATS_14);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_RATS_15);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_RATS_16);
    DOC_SHOW(NDOCID);
}

var int USE_BESTIARY_RATS.ITWR_BESTIARY_RATS_CHECKREAD = 0;
var int USE_BESTIARY_RATS.NDOCID = 0;
instance ITWR_BESTIARY_GIANTBUG(C_ITEM) {
    NAME = WRITTENNAME_BESTIARY_GIANTBUG;
    MAINFLAG = ITEM_KAT_DOCS;
    FLAGS = 0;
    VALUE = VALUE_BESTIARY_GIANTBUG;
    VISUAL = "KM_ITEM_BOOK_22.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MAP;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITWR_BESTIARY_SWAMPSHARK_1;
    TEXT[2] = ITEMDESC_ITWR_BESTIARY_GIANTBUG_2;
    TEXT[4] = MISCDESC_ADDBONUSEXP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
    ON_STATE[0] = USE_BESTIARY_GIANTBUG;
    INV_ROTX = 90;
    INV_ROTY = 180;
    INV_ROTZ = 180;
}

func void USE_BESTIARY_GIANTBUG() {
    if ((ITWR_BESTIARY_GIANTBUG_CHECKREAD) == (FALSE)) {
        B_GIVEPLAYERXP(XP_READBESTIARYBOOK);
        ITWR_BESTIARY_GIANTBUG_CHECKREAD = TRUE;
        LOG_CREATETOPIC(TOPIC_BEASTIARY, LOG_NOTE);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_GIANTBUG);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_GIANTBUGFOREST);
    };
    NDOCID = DOC_CREATE();
    DOC_SETPAGES(NDOCID, 2);
    DOC_SETPAGE(NDOCID, 0, "Book_KM_01_L.tga", 0);
    DOC_SETPAGE(NDOCID, 1, "Book_KM_01_R.tga", 0);
    DOC_SETMARGINS(NDOCID, 0, 195, 15, 40, 15, 1);
    DOC_SETFONT(NDOCID, 0, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_GIANTBUG_1);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_GIANTBUG_2);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_GIANTBUG_3);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_GIANTBUG_4);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_GIANTBUG_5);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_GIANTBUG_6);
    DOC_SETMARGINS(NDOCID, 1, 15, 15, 225, 15, 1);
    DOC_SETFONT(NDOCID, 1, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_GIANTBUG_7);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_GIANTBUG_8);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_GIANTBUG_9);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_GIANTBUG_10);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_GIANTBUG_11);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_GIANTBUG_12);
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_SHOW(NDOCID);
}

var int USE_BESTIARY_GIANTBUG.ITWR_BESTIARY_GIANTBUG_CHECKREAD = 0;
var int USE_BESTIARY_GIANTBUG.NDOCID = 0;
instance ITWR_BESTIARY_SNAPPERS(C_ITEM) {
    NAME = WRITTENNAME_BESTIARY_SNAPPERS;
    MAINFLAG = ITEM_KAT_DOCS;
    FLAGS = 0;
    VALUE = VALUE_BESTIARY_SNAPPERS;
    VISUAL = "KM_ITEM_BOOK_22.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MAP;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITWR_BESTIARY_SNAPPERS_1;
    TEXT[4] = MISCDESC_ADDBONUSEXP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
    ON_STATE[0] = USE_BESTIARY_SNAPPERS;
    INV_ROTX = 90;
    INV_ROTY = 180;
    INV_ROTZ = 180;
}

func void USE_BESTIARY_SNAPPERS() {
    if ((ITWR_BESTIARY_SNAPPERS_CHECKREAD) == (FALSE)) {
        B_GIVEPLAYERXP(XP_READBESTIARYBOOK);
        ITWR_BESTIARY_SNAPPERS_CHECKREAD = TRUE;
        LOG_CREATETOPIC(TOPIC_BEASTIARY, LOG_NOTE);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_SNAPPER);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_RAZOR);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_SNAPPERDRAGON);
    };
    NDOCID = DOC_CREATE();
    DOC_SETPAGES(NDOCID, 2);
    DOC_SETPAGE(NDOCID, 0, "Book_KM_01_L.tga", 0);
    DOC_SETPAGE(NDOCID, 1, "Book_KM_01_R.tga", 0);
    DOC_SETMARGINS(NDOCID, 0, 195, 15, 40, 15, 1);
    DOC_SETFONT(NDOCID, 0, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 0, NAME_SNAPPER);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_SNAPPERS_1);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_SNAPPERS_2);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_SNAPPERS_3);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_SNAPPERS_4);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_SNAPPERS_5);
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_SETFONT(NDOCID, 0, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 0, NAME_RAZOR);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_SNAPPERS_6);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_SNAPPERS_7);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_SNAPPERS_8);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_SNAPPERS_9);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_SNAPPERS_10);
    DOC_SETMARGINS(NDOCID, 1, 15, 15, 225, 15, 1);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_SNAPPERS_11);
    DOC_PRINTLINES(NDOCID, 1, "");
    DUMMYFUNCWITHSTRINGPARAMETER("");
    DUMMYFUNCWITHSTRINGPARAMETER("");
    DOC_SETFONT(NDOCID, 1, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_SNAPPERS_12);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_SNAPPERS_13);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_SNAPPERS_14);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_SNAPPERS_15);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_SNAPPERS_16);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_SNAPPERS_17);
    DOC_SHOW(NDOCID);
}

var int USE_BESTIARY_SNAPPERS.ITWR_BESTIARY_SNAPPERS_CHECKREAD = 0;
var int USE_BESTIARY_SNAPPERS.NDOCID = 0;
instance ITWR_BESTIARY_GOLEMS(C_ITEM) {
    NAME = WRITTENNAME_BESTIARY_GOLEMS;
    MAINFLAG = ITEM_KAT_DOCS;
    FLAGS = 0;
    VALUE = VALUE_BESTIARY_GOLEMS;
    VISUAL = "KM_ITEM_BOOK_22.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MAP;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITWR_BESTIARY_GOLEMS_1;
    TEXT[4] = MISCDESC_ADDBONUSEXP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
    ON_STATE[0] = USE_BESTIARY_GOLEMS;
    INV_ROTX = 90;
    INV_ROTY = 180;
    INV_ROTZ = 180;
}

func void USE_BESTIARY_GOLEMS() {
    if ((ITWR_BESTIARY_GOLEMS_CHECKREAD) == (FALSE)) {
        B_GIVEPLAYERXP(XP_READBESTIARYBOOK);
        ITWR_BESTIARY_GOLEMS_CHECKREAD = TRUE;
        LOG_CREATETOPIC(TOPIC_BEASTIARY, LOG_NOTE);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_GOLEMSTONE);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_GOLEMSWAMP);
    };
    NDOCID = DOC_CREATE();
    DOC_SETPAGES(NDOCID, 2);
    DOC_SETPAGE(NDOCID, 0, "Book_KM_01_L.tga", 0);
    DOC_SETPAGE(NDOCID, 1, "Book_KM_01_R.tga", 0);
    DOC_SETMARGINS(NDOCID, 0, 195, 15, 40, 15, 1);
    DOC_SETFONT(NDOCID, 0, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_GOLEMS_1);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_GOLEMS_2);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_GOLEMS_3);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_GOLEMS_4);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_GOLEMS_5);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_GOLEMS_6);
    DOC_SETMARGINS(NDOCID, 1, 15, 15, 225, 15, 1);
    DOC_SETFONT(NDOCID, 1, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_GOLEMS_7);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_GOLEMS_8);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_GOLEMS_9);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_GOLEMS_10);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_GOLEMS_11);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_GOLEMS_12);
    DOC_SHOW(NDOCID);
}

var int USE_BESTIARY_GOLEMS.ITWR_BESTIARY_GOLEMS_CHECKREAD = 0;
var int USE_BESTIARY_GOLEMS.NDOCID = 0;
instance ITWR_BESTIARY_SKELETONS(C_ITEM) {
    NAME = WRITTENNAME_BESTIARY_SKELETONS;
    MAINFLAG = ITEM_KAT_DOCS;
    FLAGS = 0;
    VALUE = VALUE_BESTIARY_SKELETONS;
    VISUAL = "KM_ITEM_BOOK_22.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MAP;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITWR_BESTIARY_SKELETONS_1;
    TEXT[4] = MISCDESC_ADDBONUSEXP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
    ON_STATE[0] = USE_BESTIARY_SKELETONS;
    INV_ROTX = 90;
    INV_ROTY = 180;
    INV_ROTZ = 180;
}

func void USE_BESTIARY_SKELETONS() {
    if ((ITWR_BESTIARY_SKELETONS_CHECKREAD) == (FALSE)) {
        B_GIVEPLAYERXP(XP_READBESTIARYBOOK);
        ITWR_BESTIARY_SKELETONS_CHECKREAD = TRUE;
        LOG_CREATETOPIC(TOPIC_BEASTIARY, LOG_NOTE);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_SKELETONS);
    };
    NDOCID = DOC_CREATE();
    DOC_SETPAGES(NDOCID, 2);
    DOC_SETPAGE(NDOCID, 0, "Book_KM_01_L.tga", 0);
    DOC_SETPAGE(NDOCID, 1, "Book_KM_01_R.tga", 0);
    DOC_SETMARGINS(NDOCID, 0, 195, 15, 40, 15, 1);
    DOC_SETFONT(NDOCID, 0, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_PRINTLINES(NDOCID, 0, MOBNAME_CORPSESKELETON);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_SKELETONS_1);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_SKELETONS_2);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_SKELETONS_3);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_SKELETONS_4);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_SKELETONS_5);
    DOC_SETMARGINS(NDOCID, 1, 15, 15, 225, 15, 1);
    DOC_SETFONT(NDOCID, 1, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_SKELETONS_6);
    DOC_SHOW(NDOCID);
}

var int USE_BESTIARY_SKELETONS.ITWR_BESTIARY_SKELETONS_CHECKREAD = 0;
var int USE_BESTIARY_SKELETONS.NDOCID = 0;
instance ITWR_BESTIARY_BOAR(C_ITEM) {
    NAME = WRITTENNAME_BESTIARY_BOAR;
    MAINFLAG = ITEM_KAT_DOCS;
    FLAGS = 0;
    VALUE = VALUE_BESTIARY_BOAR;
    VISUAL = "KM_ITEM_BOOK_22.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MAP;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITWR_BESTIARY_BOAR_1;
    TEXT[4] = MISCDESC_ADDBONUSEXP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
    ON_STATE[0] = USE_BESTIARY_BOAR;
    INV_ROTX = 90;
    INV_ROTY = 180;
    INV_ROTZ = 180;
}

func void USE_BESTIARY_BOAR() {
    if ((ITWR_BESTIARY_BOAR_CHECKREAD) == (FALSE)) {
        B_GIVEPLAYERXP(XP_READBESTIARYBOOK);
        ITWR_BESTIARY_BOAR_CHECKREAD = TRUE;
        LOG_CREATETOPIC(TOPIC_BEASTIARY, LOG_NOTE);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_BOARS);
    };
    NDOCID = DOC_CREATE();
    DOC_SETPAGES(NDOCID, 2);
    DOC_SETPAGE(NDOCID, 0, "Book_KM_01_L.tga", 0);
    DOC_SETPAGE(NDOCID, 1, "Book_KM_01_R.tga", 0);
    DOC_SETMARGINS(NDOCID, 0, 195, 15, 40, 15, 1);
    DOC_SETFONT(NDOCID, 0, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_PRINTLINES(NDOCID, 0, NAME_BOAR);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_BOAR_1);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_BOAR_2);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_BOAR_3);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_BOAR_4);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_BOAR_5);
    DOC_SETMARGINS(NDOCID, 1, 15, 15, 225, 15, 1);
    DOC_SETFONT(NDOCID, 1, FONT_BOOKHEADLINE);
    DOC_SHOW(NDOCID);
}

var int USE_BESTIARY_BOAR.ITWR_BESTIARY_BOAR_CHECKREAD = 0;
var int USE_BESTIARY_BOAR.NDOCID = 0;
instance ITWR_BESTIARY_BAT(C_ITEM) {
    NAME = WRITTENNAME_BESTIARY_BAT;
    MAINFLAG = ITEM_KAT_DOCS;
    FLAGS = 0;
    VALUE = VALUE_BESTIARY_BAT;
    VISUAL = "KM_ITEM_BOOK_22.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MAP;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITWR_BESTIARY_BAT_1;
    TEXT[4] = MISCDESC_ADDBONUSEXP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
    ON_STATE[0] = USE_BESTIARY_BAT;
    INV_ROTX = 90;
    INV_ROTY = 180;
    INV_ROTZ = 180;
}

func void USE_BESTIARY_BAT() {
    if ((ITWR_BESTIARY_BAT_CHECKREAD) == (FALSE)) {
        B_GIVEPLAYERXP(XP_READBESTIARYBOOK);
        ITWR_BESTIARY_BAT_CHECKREAD = TRUE;
        LOG_CREATETOPIC(TOPIC_BEASTIARY, LOG_NOTE);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_BATS);
    };
    NDOCID = DOC_CREATE();
    DOC_SETPAGES(NDOCID, 2);
    DOC_SETPAGE(NDOCID, 0, "Book_KM_01_L.tga", 0);
    DOC_SETPAGE(NDOCID, 1, "Book_KM_01_R.tga", 0);
    DOC_SETMARGINS(NDOCID, 0, 195, 15, 40, 15, 1);
    DOC_SETFONT(NDOCID, 0, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_BAT_1);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_BAT_2);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_BAT_3);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_BAT_4);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_BAT_5);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_BAT_6);
    DOC_SETMARGINS(NDOCID, 1, 15, 15, 225, 15, 1);
    DOC_SETFONT(NDOCID, 1, FONT_BOOKHEADLINE);
    DOC_SHOW(NDOCID);
}

var int USE_BESTIARY_BAT.ITWR_BESTIARY_BAT_CHECKREAD = 0;
var int USE_BESTIARY_BAT.NDOCID = 0;
instance ITWR_BESTIARY_TURTLE(C_ITEM) {
    NAME = WRITTENNAME_BESTIARY_TURTLE;
    MAINFLAG = ITEM_KAT_DOCS;
    FLAGS = 0;
    VALUE = VALUE_BESTIARY_TURTLE;
    VISUAL = "KM_ITEM_BOOK_22.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MAP;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITWR_BESTIARY_TURTLE_1;
    TEXT[4] = MISCDESC_ADDBONUSEXP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
    ON_STATE[0] = USE_BESTIARY_TURTLE;
    INV_ROTX = 90;
    INV_ROTY = 180;
    INV_ROTZ = 180;
}

func void USE_BESTIARY_TURTLE() {
    if ((ITWR_BESTIARY_TURTLE_CHECKREAD) == (FALSE)) {
        B_GIVEPLAYERXP(XP_READBESTIARYBOOK);
        ITWR_BESTIARY_TURTLE_CHECKREAD = TRUE;
        LOG_CREATETOPIC(TOPIC_BEASTIARY, LOG_NOTE);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_TURTLE);
    };
    NDOCID = DOC_CREATE();
    DOC_SETPAGES(NDOCID, 2);
    DOC_SETPAGE(NDOCID, 0, "Book_KM_01_L.tga", 0);
    DOC_SETPAGE(NDOCID, 1, "Book_KM_01_R.tga", 0);
    DOC_SETMARGINS(NDOCID, 0, 195, 15, 40, 15, 1);
    DOC_SETFONT(NDOCID, 0, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_PRINTLINES(NDOCID, 0, NAME_KMTURTLE);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_TURTLE_1);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_TURTLE_2);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_TURTLE_3);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_TURTLE_4);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_TURTLE_5);
    DOC_SETMARGINS(NDOCID, 1, 15, 15, 225, 15, 1);
    DOC_SETFONT(NDOCID, 1, FONT_BOOKHEADLINE);
    DOC_SHOW(NDOCID);
}

var int USE_BESTIARY_TURTLE.ITWR_BESTIARY_TURTLE_CHECKREAD = 0;
var int USE_BESTIARY_TURTLE.NDOCID = 0;
instance ITWR_BESTIARY_CRAB(C_ITEM) {
    NAME = WRITTENNAME_BESTIARY_CRAB;
    MAINFLAG = ITEM_KAT_DOCS;
    FLAGS = 0;
    VALUE = VALUE_BESTIARY_CRAB;
    VISUAL = "KM_ITEM_BOOK_22.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MAP;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITWR_BESTIARY_CRAB_1;
    TEXT[4] = MISCDESC_ADDBONUSEXP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
    ON_STATE[0] = USE_BESTIARY_CRAB;
    INV_ROTX = 90;
    INV_ROTY = 180;
    INV_ROTZ = 180;
}

func void USE_BESTIARY_CRAB() {
    if ((ITWR_BESTIARY_CRAB_CHECKREAD) == (FALSE)) {
        B_GIVEPLAYERXP(XP_READBESTIARYBOOK);
        ITWR_BESTIARY_CRAB_CHECKREAD = TRUE;
        LOG_CREATETOPIC(TOPIC_BEASTIARY, LOG_NOTE);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_CRAB);
    };
    NDOCID = DOC_CREATE();
    DOC_SETPAGES(NDOCID, 2);
    DOC_SETPAGE(NDOCID, 0, "Book_KM_01_L.tga", 0);
    DOC_SETPAGE(NDOCID, 1, "Book_KM_01_R.tga", 0);
    DOC_SETMARGINS(NDOCID, 0, 195, 15, 40, 15, 1);
    DOC_SETFONT(NDOCID, 0, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_PRINTLINES(NDOCID, 0, NAME_KMCRAB);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_CRAB_1);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_CRAB_2);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_CRAB_3);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_CRAB_4);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_CRAB_5);
    DOC_SETMARGINS(NDOCID, 1, 15, 15, 225, 15, 1);
    DOC_SETFONT(NDOCID, 1, FONT_BOOKHEADLINE);
    DOC_SHOW(NDOCID);
}

var int USE_BESTIARY_CRAB.ITWR_BESTIARY_CRAB_CHECKREAD = 0;
var int USE_BESTIARY_CRAB.NDOCID = 0;
instance ITWR_BESTIARY_ZOMBIE(C_ITEM) {
    NAME = WRITTENNAME_BESTIARY_ZOMBIE;
    MAINFLAG = ITEM_KAT_DOCS;
    FLAGS = 0;
    VALUE = VALUE_BESTIARY_ZOMBIE;
    VISUAL = "KM_ITEM_BOOK_22.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MAP;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITWR_BESTIARY_ZOMBIE_1;
    TEXT[4] = MISCDESC_ADDBONUSEXP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
    ON_STATE[0] = USE_BESTIARY_ZOMBIE;
    INV_ROTX = 90;
    INV_ROTY = 180;
    INV_ROTZ = 180;
}

func void USE_BESTIARY_ZOMBIE() {
    if ((ITWR_BESTIARY_ZOMBIE_CHECKREAD) == (FALSE)) {
        B_GIVEPLAYERXP(XP_READBESTIARYBOOK);
        ITWR_BESTIARY_ZOMBIE_CHECKREAD = TRUE;
        LOG_CREATETOPIC(TOPIC_BEASTIARY, LOG_NOTE);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_ZOMBIE);
    };
    NDOCID = DOC_CREATE();
    DOC_SETPAGES(NDOCID, 2);
    DOC_SETPAGE(NDOCID, 0, "Book_KM_01_L.tga", 0);
    DOC_SETPAGE(NDOCID, 1, "Book_KM_01_R.tga", 0);
    DOC_SETMARGINS(NDOCID, 0, 195, 15, 40, 15, 1);
    DOC_SETFONT(NDOCID, 0, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_PRINTLINES(NDOCID, 0, NAME_ZOMBIE);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_ZOMBIE_1);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_ZOMBIE_2);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_ZOMBIE_3);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_ZOMBIE_4);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_ZOMBIE_5);
    DOC_SETMARGINS(NDOCID, 1, 15, 15, 225, 15, 1);
    DOC_SETFONT(NDOCID, 1, FONT_BOOKHEADLINE);
    DOC_SHOW(NDOCID);
}

var int USE_BESTIARY_ZOMBIE.ITWR_BESTIARY_ZOMBIE_CHECKREAD = 0;
var int USE_BESTIARY_ZOMBIE.NDOCID = 0;
instance ITWR_BESTIARY_MOLERAT(C_ITEM) {
    NAME = WRITTENNAME_BESTIARY_MOLERAT;
    MAINFLAG = ITEM_KAT_DOCS;
    FLAGS = 0;
    VALUE = VALUE_BESTIARY_MOLERAT;
    VISUAL = "KM_ITEM_BOOK_22.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MAP;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITWR_BESTIARY_MOLERAT_1;
    TEXT[4] = MISCDESC_ADDBONUSEXP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
    ON_STATE[0] = USE_BESTIARY_MOLERAT;
    INV_ROTX = 90;
    INV_ROTY = 180;
    INV_ROTZ = 180;
}

func void USE_BESTIARY_MOLERAT() {
    if ((ITWR_BESTIARY_MOLERAT_CHECKREAD) == (FALSE)) {
        B_GIVEPLAYERXP(XP_READBESTIARYBOOK);
        ITWR_BESTIARY_MOLERAT_CHECKREAD = TRUE;
        LOG_CREATETOPIC(TOPIC_BEASTIARY, LOG_NOTE);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_MOLERAT);
    };
    NDOCID = DOC_CREATE();
    DOC_SETPAGES(NDOCID, 2);
    DOC_SETPAGE(NDOCID, 0, "Book_KM_01_L.tga", 0);
    DOC_SETPAGE(NDOCID, 1, "Book_KM_01_R.tga", 0);
    DOC_SETMARGINS(NDOCID, 0, 195, 15, 40, 15, 1);
    DOC_SETFONT(NDOCID, 0, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_PRINTLINES(NDOCID, 0, NAME_MOLERAT);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_MOLERAT_1);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_MOLERAT_2);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_MOLERAT_3);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_MOLERAT_4);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_MOLERAT_5);
    DOC_SETMARGINS(NDOCID, 1, 15, 15, 225, 15, 1);
    DOC_SETFONT(NDOCID, 1, FONT_BOOKHEADLINE);
    DOC_SHOW(NDOCID);
}

var int USE_BESTIARY_MOLERAT.ITWR_BESTIARY_MOLERAT_CHECKREAD = 0;
var int USE_BESTIARY_MOLERAT.NDOCID = 0;
instance ITWR_BESTIARY_LIZARD(C_ITEM) {
    NAME = WRITTENNAME_BESTIARY_LIZARD;
    MAINFLAG = ITEM_KAT_DOCS;
    FLAGS = 0;
    VALUE = VALUE_BESTIARY_LIZARD;
    VISUAL = "KM_ITEM_BOOK_22.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MAP;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITWR_BESTIARY_LIZARD_1;
    TEXT[4] = MISCDESC_ADDBONUSEXP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
    ON_STATE[0] = USE_BESTIARY_LIZARD;
    INV_ROTX = 90;
    INV_ROTY = 180;
    INV_ROTZ = 180;
}

func void USE_BESTIARY_LIZARD() {
    if ((ITWR_BESTIARY_LIZARD_CHECKREAD) == (FALSE)) {
        B_GIVEPLAYERXP(XP_READBESTIARYBOOK);
        ITWR_BESTIARY_LIZARD_CHECKREAD = TRUE;
        LOG_CREATETOPIC(TOPIC_BEASTIARY, LOG_NOTE);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_LIZARD);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_ALLIGATOR);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_LIZARDSWAMP);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_LIZARDFIRE);
    };
    NDOCID = DOC_CREATE();
    DOC_SETPAGES(NDOCID, 2);
    DOC_SETPAGE(NDOCID, 0, "Book_KM_01_L.tga", 0);
    DOC_SETPAGE(NDOCID, 1, "Book_KM_01_R.tga", 0);
    DOC_SETMARGINS(NDOCID, 0, 195, 15, 40, 15, 1);
    DOC_SETFONT(NDOCID, 0, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 0, NAME_WARAN);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_LIZARD_1);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_LIZARD_2);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_LIZARD_3);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_LIZARD_4);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_LIZARD_5);
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_SETFONT(NDOCID, 0, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 0, NAME_ALLIGATOR);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_LIZARD_6);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_LIZARD_7);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_LIZARD_8);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_LIZARD_9);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_LIZARD_10);
    DOC_SETMARGINS(NDOCID, 1, 15, 15, 225, 15, 1);
    DOC_SETFONT(NDOCID, 1, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 1, NAME_SWAMPWARAN);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_LIZARD_11);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_LIZARD_12);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_LIZARD_13);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_LIZARD_14);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_LIZARD_15);
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_SETFONT(NDOCID, 1, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_LIZARD_16);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_LIZARD_17);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_LIZARD_18);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_LIZARD_19);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_LIZARD_20);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_LIZARD_21);
    DOC_SHOW(NDOCID);
}

var int USE_BESTIARY_LIZARD.ITWR_BESTIARY_LIZARD_CHECKREAD = 0;
var int USE_BESTIARY_LIZARD.NDOCID = 0;
instance ITWR_BESTIARY_BLOODFLY(C_ITEM) {
    NAME = WRITTENNAME_BESTIARY_BLOODFLY;
    MAINFLAG = ITEM_KAT_DOCS;
    FLAGS = 0;
    VALUE = VALUE_BESTIARY_BLOODFLY;
    VISUAL = "KM_ITEM_BOOK_22.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MAP;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITWR_BESTIARY_BLOODFLY_1;
    TEXT[4] = MISCDESC_ADDBONUSEXP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
    ON_STATE[0] = USE_BESTIARY_BLOODFLY;
    INV_ROTX = 90;
    INV_ROTY = 180;
    INV_ROTZ = 180;
}

func void USE_BESTIARY_BLOODFLY() {
    if ((ITWR_BESTIARY_BLOODFLY_CHECKREAD) == (FALSE)) {
        B_GIVEPLAYERXP(XP_READBESTIARYBOOK);
        ITWR_BESTIARY_BLOODFLY_CHECKREAD = TRUE;
        LOG_CREATETOPIC(TOPIC_BEASTIARY, LOG_NOTE);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_BLOODFLY);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_BLOODFLYRIVER);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_BLOODFLYSWAMP);
    };
    NDOCID = DOC_CREATE();
    DOC_SETPAGES(NDOCID, 2);
    DOC_SETPAGE(NDOCID, 0, "Book_KM_01_L.tga", 0);
    DOC_SETPAGE(NDOCID, 1, "Book_KM_01_R.tga", 0);
    DOC_SETMARGINS(NDOCID, 0, 195, 15, 40, 15, 1);
    DOC_SETFONT(NDOCID, 0, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 0, NAME_BLOODFLY);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_BLOODFLY_1);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_BLOODFLY_2);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_BLOODFLY_3);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_BLOODFLY_4);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_BLOODFLY_5);
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_SETFONT(NDOCID, 0, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_BLOODFLY_6);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_BLOODFLY_7);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_BLOODFLY_8);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_BLOODFLY_9);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_BLOODFLY_10);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_BLOODFLY_11);
    DOC_SETMARGINS(NDOCID, 1, 15, 15, 225, 15, 1);
    DOC_SETFONT(NDOCID, 1, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_PRINTLINES(NDOCID, 1, NAME_SWAMPBLOODFLY);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_BLOODFLY_12);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_BLOODFLY_13);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_BLOODFLY_14);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_BLOODFLY_15);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_BLOODFLY_16);
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_SHOW(NDOCID);
}

var int USE_BESTIARY_BLOODFLY.ITWR_BESTIARY_BLOODFLY_CHECKREAD = 0;
var int USE_BESTIARY_BLOODFLY.NDOCID = 0;
instance ITWR_BESTIARY_LURKER(C_ITEM) {
    NAME = WRITTENNAME_BESTIARY_LURKER;
    MAINFLAG = ITEM_KAT_DOCS;
    FLAGS = 0;
    VALUE = VALUE_BESTIARY_LURKER;
    VISUAL = "KM_ITEM_BOOK_22.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MAP;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITWR_BESTIARY_LURKER_1;
    TEXT[4] = MISCDESC_ADDBONUSEXP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
    ON_STATE[0] = USE_BESTIARY_LURKER;
    INV_ROTX = 90;
    INV_ROTY = 180;
    INV_ROTZ = 180;
}

func void USE_BESTIARY_LURKER() {
    if ((ITWR_BESTIARY_LURKER_CHECKREAD) == (FALSE)) {
        B_GIVEPLAYERXP(XP_READBESTIARYBOOK);
        ITWR_BESTIARY_LURKER_CHECKREAD = TRUE;
        LOG_CREATETOPIC(TOPIC_BEASTIARY, LOG_NOTE);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_LURKER);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_LURKERSEA);
    };
    NDOCID = DOC_CREATE();
    DOC_SETPAGES(NDOCID, 2);
    DOC_SETPAGE(NDOCID, 0, "Book_KM_01_L.tga", 0);
    DOC_SETPAGE(NDOCID, 1, "Book_KM_01_R.tga", 0);
    DOC_SETMARGINS(NDOCID, 0, 195, 15, 40, 15, 1);
    DOC_SETFONT(NDOCID, 0, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_PRINTLINES(NDOCID, 0, NAME_LURKER);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_LURKER_1);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_LURKER_2);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_LURKER_3);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_LURKER_4);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_LURKER_5);
    DOC_SETMARGINS(NDOCID, 1, 15, 15, 225, 15, 1);
    DOC_SETFONT(NDOCID, 1, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_PRINTLINES(NDOCID, 1, NAME_SEALURKER);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_LURKER_6);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_LURKER_7);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_LURKER_8);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_LURKER_9);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_LURKER_10);
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_SHOW(NDOCID);
}

var int USE_BESTIARY_LURKER.ITWR_BESTIARY_LURKER_CHECKREAD = 0;
var int USE_BESTIARY_LURKER.NDOCID = 0;
instance ITWR_BESTIARY_DRONE(C_ITEM) {
    NAME = WRITTENNAME_BESTIARY_DRONE;
    MAINFLAG = ITEM_KAT_DOCS;
    FLAGS = 0;
    VALUE = VALUE_BESTIARY_DRONE;
    VISUAL = "KM_ITEM_BOOK_22.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MAP;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITWR_BESTIARY_DRONE_1;
    TEXT[4] = MISCDESC_ADDBONUSEXP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
    ON_STATE[0] = USE_BESTIARY_DRONE;
    INV_ROTX = 90;
    INV_ROTY = 180;
    INV_ROTZ = 180;
}

func void USE_BESTIARY_DRONE() {
    if ((ITWR_BESTIARY_DRONE_CHECKREAD) == (FALSE)) {
        B_GIVEPLAYERXP(XP_READBESTIARYBOOK);
        ITWR_BESTIARY_DRONE_CHECKREAD = TRUE;
        LOG_CREATETOPIC(TOPIC_BEASTIARY, LOG_NOTE);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_DRONE);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_DRONESWAMP);
    };
    NDOCID = DOC_CREATE();
    DOC_SETPAGES(NDOCID, 2);
    DOC_SETPAGE(NDOCID, 0, "Book_KM_01_L.tga", 0);
    DOC_SETPAGE(NDOCID, 1, "Book_KM_01_R.tga", 0);
    DOC_SETMARGINS(NDOCID, 0, 195, 15, 40, 15, 1);
    DOC_SETFONT(NDOCID, 0, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_PRINTLINES(NDOCID, 0, NAME_SWAMPDRONE);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_DRONE_1);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_DRONE_2);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_DRONE_3);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_DRONE_4);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_DRONE_5);
    DOC_SETMARGINS(NDOCID, 1, 15, 15, 225, 15, 1);
    DOC_SETFONT(NDOCID, 1, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_PRINTLINES(NDOCID, 1, NAME_DUNGDRONE);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_DRONE_6);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_DRONE_7);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_DRONE_8);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_DRONE_9);
    DOC_PRINTLINES(NDOCID, 1, WRITTENTEXT_BESTIARY_DRONE_10);
    DOC_PRINTLINES(NDOCID, 1, "");
    DOC_SHOW(NDOCID);
}

var int USE_BESTIARY_DRONE.ITWR_BESTIARY_DRONE_CHECKREAD = 0;
var int USE_BESTIARY_DRONE.NDOCID = 0;
instance ITWR_BESTIARY_FROGMAN(C_ITEM) {
    NAME = WRITTENNAME_BESTIARY_FROGMAN;
    MAINFLAG = ITEM_KAT_DOCS;
    FLAGS = 0;
    VALUE = VALUE_BESTIARY_FROGMAN;
    VISUAL = "KM_ITEM_BOOK_22.3ds";
    MATERIAL = MAT_LEATHER;
    SCEMENAME = SCEME_MAP;
    DESCRIPTION = NAME;
    TEXT[1] = ITEMDESC_ITWR_BESTIARY_FROGMAN_1;
    TEXT[4] = MISCDESC_ADDBONUSEXP;
    TEXT[5] = NAME_VALUE;
    COUNT[5] = VALUE;
    ON_STATE[0] = USE_BESTIARY_FROGMAN;
    INV_ROTX = 90;
    INV_ROTY = 180;
    INV_ROTZ = 180;
}

func void USE_BESTIARY_FROGMAN() {
    if ((ITWR_BESTIARY_FROGMAN_CHECKREAD) == (FALSE)) {
        B_GIVEPLAYERXP(XP_READBESTIARYBOOK);
        ITWR_BESTIARY_FROGMAN_CHECKREAD = TRUE;
        LOG_CREATETOPIC(TOPIC_BEASTIARY, LOG_NOTE);
        B_LOGENTRY(TOPIC_BEASTIARY, LOG_BESTIARY_FROGMAN);
    };
    NDOCID = DOC_CREATE();
    DOC_SETPAGES(NDOCID, 2);
    DOC_SETPAGE(NDOCID, 0, "Book_KM_01_L.tga", 0);
    DOC_SETPAGE(NDOCID, 1, "Book_KM_01_R.tga", 0);
    DOC_SETMARGINS(NDOCID, 0, 195, 15, 40, 15, 1);
    DOC_SETFONT(NDOCID, 0, FONT_BOOKHEADLINE);
    DOC_PRINTLINES(NDOCID, 0, "");
    DOC_PRINTLINES(NDOCID, 0, NAME_FROGMAN);
    DOC_SETFONT(NDOCID, -(1), FONT_BOOK);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_FROGMAN_1);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_FROGMAN_2);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_FROGMAN_3);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_FROGMAN_4);
    DOC_PRINTLINES(NDOCID, 0, WRITTENTEXT_BESTIARY_FROGMAN_5);
    DOC_SETMARGINS(NDOCID, 1, 15, 15, 225, 15, 1);
    DOC_SETFONT(NDOCID, 1, FONT_BOOKHEADLINE);
    DOC_SHOW(NDOCID);
}

var int USE_BESTIARY_FROGMAN.ITWR_BESTIARY_FROGMAN_CHECKREAD = 0;
var int USE_BESTIARY_FROGMAN.NDOCID = 0;
