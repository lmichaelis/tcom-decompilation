instance DIA_MILTIA_QM401_FOUNDSOMETHING(C_INFO) {
    NPC = 0xcdff;
    NR = 1;
    CONDITION = DIA_MILTIA_QM401_FOUNDSOMETHING_CONDITION;
    INFORMATION = DIA_MILTIA_QM401_FOUNDSOMETHING_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_MILTIA_QM401_FOUNDSOMETHING_CONDITION() {
    if ((LOG_GETSTATUS(MIS_QM401)) == (LOG_RUNNING)) {
        if ((QM401_RENEGADECAVE_BOOKS) == (TRUE)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_MILTIA_QM401_FOUNDSOMETHING_INFO() {
    AI_PLAYANI(SELF, "T_STAND_2_MILSTAND_HERO");
    AI_TURNTONPC(SELF, OTHER);
    AI_OUTPUT(SELF, OTHER, "DIA_Miltia_QM401_FOUNDSOMETHING_03_01");
    INFO_CLEARCHOICES(0x10134);
    INFO_ADDCHOICE(0x10134, "Let's go!", 0x10137);
}

func void DIA_MILTIA_QM401_FOUNDSOMETHING_GO() {
    B_SAY(OTHER, SELF, "$MARVIN_LETSGO");
    AI_PLAYANI(SELF, "T_REMOVE_MILSTAND");
    AI_WAITTILLEND(SELF, OTHER);
    AI_STOPPROCESSINFOS(SELF);
    NPC_EXCHANGEROUTINE(SELF, "QM401_GUIDE_WATERFALL");
}

instance DIA_MILTIA_QM401_WATERFALL(C_INFO) {
    NPC = 0xcdff;
    NR = 1;
    CONDITION = DIA_MILTIA_QM401_WATERFALL_CONDITION;
    INFORMATION = DIA_MILTIA_QM401_WATERFALL_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_MILTIA_QM401_WATERFALL_CONDITION() {
    if ((LOG_GETSTATUS(MIS_QM401)) == (LOG_RUNNING)) {
        if (((QM401_RENEGADECAVE_BOOKS) == (TRUE)) && ((NPC_GETDISTTOWP(SELF, "PART7_PATH_60")) <= (500))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_MILTIA_QM401_WATERFALL_INFO() {
    AI_PLAYANI(SELF, "T_STAND_2_MILSTAND_HERO");
    AI_OUTPUT(SELF, OTHER, "DIA_Miltia_QM401_WATERFALL_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Miltia_QM401_WATERFALL_03_02");
    AI_PLAYANI(SELF, "T_REMOVE_MILSTAND");
    AI_WAITTILLEND(SELF, OTHER);
    AI_STOPPROCESSINFOS(SELF);
    NPC_EXCHANGEROUTINE(SELF, "QM401_CAVESEARCH");
    AI_LOGENTRY(TOPIC_QM401, LOG_QM401_MILITIA_LETTER);
    CREATEINVITEMS(SELF, 0x91c0, 1);
    B_GIVEINVITEMS(SELF, OTHER, 0x91c0, 1);
}

instance DIA_MILTIA_QM401_LETTER(C_INFO) {
    NPC = 0xcdff;
    NR = 1;
    CONDITION = DIA_MILTIA_QM401_LETTER_CONDITION;
    INFORMATION = DIA_MILTIA_QM401_LETTER_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_MILTIA_QM401_LETTER_CONDITION() {
    if ((LOG_GETSTATUS(MIS_QM401)) == (LOG_RUNNING)) {
        if ((QM401_BERTOLETTER_READ) == (TRUE)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_MILTIA_QM401_LETTER_INFO() {
    AI_PLAYANI(SELF, "T_STAND_2_MILSTAND_HERO");
    AI_TURNTONPC(SELF, OTHER);
    AI_OUTPUT(SELF, OTHER, "DIA_Miltia_QM401_LETTER_03_01");
    INFO_CLEARCHOICES(0x1013b);
    INFO_ADDCHOICE(0x1013b, "Yes, someone wants to meet me without witnesses...", 0x1013f);
    INFO_ADDCHOICE(0x1013b, "No, this letter doesn't make any sense...", 0x10140);
}

func void DIA_MILTIA_QM401_LETTER_NEXT() {
    AI_WAITTILLEND(SELF, OTHER);
    AI_PLAYANI(SELF, "T_MILSTAND_2_MILJOIN_HERO");
    AI_PLAYANI(SELF, "T_REMOVE_MILJOIN");
    AI_STOPPROCESSINFOS(SELF);
    AI_FUNCTION(SELF, 0xf56f);
    AI_LOGENTRY(TOPIC_QM401, LOG_QM401_MILITIA_LEAVE);
}

func void DIA_MILTIA_QM401_LETTER_YES() {
    AI_OUTPUT(OTHER, SELF, "DIA_Miltia_QM401_LETTER_15_01");
    DIA_MILTIA_QM401_LETTER_NEXT();
}

func void DIA_MILTIA_QM401_LETTER_NO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Miltia_QM401_LETTER_15_02");
    DIA_MILTIA_QM401_LETTER_NEXT();
}

