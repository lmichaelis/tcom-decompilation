var int BOWMAKING_MODE = 0;
const int BOWMAKING_AMMO = 1;
const int BOWMAKING_BOWS = 2;
const int BOWMAKING_CROSSBOWS = 3;
instance PC_BOWMAKING_AMMUNITION(C_INFO) {
    NPC = 0xc3ab;
    NR = 50;
    CONDITION = PC_BOWMAKING_AMMUNITION_CONDITION;
    INFORMATION = PC_BOWMAKING_AMMUNITION_INFO;
    IMPORTANT = FALSE;
    PERMANENT = TRUE;
    DESCRIPTION = PRINT_BOWMAKING_AMMUNITION;
}

func int PC_BOWMAKING_AMMUNITION_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_BOWMAKING)) && ((BOWMAKING_MODE) == (0))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

var string BOWMAKING_PRINTHOWMANYCREATED = "";
var string BOWMAKING_COUNTHOWMANYCREATED = "";
var int BOWMAKING_HOWMUCHAMMO = 0;
func void PC_BOWMAKING_AMMUNITION_INFO() {
    BOWMAKING_MODE = BOWMAKING_AMMO;
    INFO_CLEARCHOICES(0xbcea);
    INFO_ADDCHOICE(0xbcea, DIALOG_BACK, 0xbcf0);
    INFO_ADDCHOICE(0xbcea, PRINT_BOWMAKING_AMMUNITION_ARROWS, 0xbcf1);
    INFO_ADDCHOICE(0xbcea, PRINT_BOWMAKING_AMMUNITION_BOLTS, 0xbcf7);
    INFO_ADDCHOICE(0xbcea, PRINT_BOWMAKING_AMMUNITION_ARROWSTOBOLT, 0xbcfd);
    INFO_ADDCHOICE(0xbcea, PRINT_BOWMAKING_AMMUNITION_BOLTSTOARROW, 0xbd03);
}

func void PC_BOWMAKING_AMMUNITION_BACK() {
    INFO_CLEARCHOICES(0xbcea);
    BOWMAKING_MODE = 0;
}

func void PC_BOWMAKING_AMMUNITION_ARROWS() {
    if ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_FLETCHERY)) == (0)) {
        BOWMAKING_HOWMUCHAMMO = 3;
    };
    if ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_FLETCHERY)) == (1)) {
        BOWMAKING_HOWMUCHAMMO = 4;
    };
    if ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_FLETCHERY)) == (2)) {
        BOWMAKING_HOWMUCHAMMO = 5;
    };
    if ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_FLETCHERY)) == (3)) {
        BOWMAKING_HOWMUCHAMMO = 6;
    };
    INFO_CLEARCHOICES(0xbcea);
    INFO_ADDCHOICE(0xbcea, DIALOG_BACK, 0xbcef);
    INFO_ADDCHOICE(0xbcea, PRINT_BOWMAKING_AMMUNITION_BRANCHES_ALL, 0xbcf2);
    INFO_ADDCHOICE(0xbcea, PRINT_BOWMAKING_AMMUNITION_BRANCHES_10, 0xbcf4);
    INFO_ADDCHOICE(0xbcea, PRINT_BOWMAKING_AMMUNITION_BRANCHES_01, 0xbcf6);
}

func void PC_BOWMAKING_AMMUNITION_ARROWS_ALL() {
    if ((NPC_HASITEMS(HERO, 0x84d0)) >= (1)) {
        NUMBER_BAUMACE = NPC_HASITEMS(HERO, 0x84d0);
        BOWMAKING_COUNTHOWMANYCREATED = INTTOSTRING((NUMBER_BAUMACE) * (BOWMAKING_HOWMUCHAMMO));
        BOWMAKING_PRINTHOWMANYCREATED = CONCATSTRINGS(BOWMAKING_COUNTHOWMANYCREATED, BOWMAKING_PRINT_HOWMANYISDONE);
        PRINT(PRINT_ARROWSUCCESS);
        PRINT(BOWMAKING_PRINTHOWMANYCREATED);
        GAMESERVICES_INCREMENTSTATANDCHECKACHIEVEMENT(STAT_ACH_20, (NUMBER_BAUMACE) * (BOWMAKING_HOWMUCHAMMO), ACH_20, STAT_ACH_20_REQUIRED);
        CREATEINVITEMS(HERO, 0x864f, (NUMBER_BAUMACE) * (BOWMAKING_HOWMUCHAMMO));
    };
    PRINT(PRINT_PRODITEMSMISSING);
    PC_BOWMAKING_AMMUNITION_ARROWS();
}

var int PC_BOWMAKING_AMMUNITION_ARROWS_ALL.NUMBER_BAUMACE = 0;
func void PC_BOWMAKING_AMMUNITION_ARROWS_10() {
    if ((NPC_HASITEMS(HERO, 0x84d0)) >= (10)) {
        BOWMAKING_COUNTHOWMANYCREATED = INTTOSTRING((10) * (BOWMAKING_HOWMUCHAMMO));
        BOWMAKING_PRINTHOWMANYCREATED = CONCATSTRINGS(BOWMAKING_COUNTHOWMANYCREATED, BOWMAKING_PRINT_HOWMANYISDONE);
        PRINT(PRINT_ARROWSUCCESS);
        PRINT(BOWMAKING_PRINTHOWMANYCREATED);
        GAMESERVICES_INCREMENTSTATANDCHECKACHIEVEMENT(STAT_ACH_20, (10) * (BOWMAKING_HOWMUCHAMMO), ACH_20, STAT_ACH_20_REQUIRED);
        CREATEINVITEMS(HERO, 0x864f, (10) * (BOWMAKING_HOWMUCHAMMO));
    };
    if (((NPC_HASITEMS(HERO, 0x84d0)) > (0)) && ((NPC_HASITEMS(HERO, 0x84d0)) <= (9))) {
        NUMBER_BAUMACE = NPC_HASITEMS(HERO, 0x84d0);
        BOWMAKING_COUNTHOWMANYCREATED = INTTOSTRING((NUMBER_BAUMACE) * (BOWMAKING_HOWMUCHAMMO));
        BOWMAKING_PRINTHOWMANYCREATED = CONCATSTRINGS(BOWMAKING_COUNTHOWMANYCREATED, BOWMAKING_PRINT_HOWMANYISDONE);
        PRINT(PRINT_ARROWSUCCESS);
        PRINT(BOWMAKING_PRINTHOWMANYCREATED);
        GAMESERVICES_INCREMENTSTATANDCHECKACHIEVEMENT(STAT_ACH_20, (NUMBER_BAUMACE) * (BOWMAKING_HOWMUCHAMMO), ACH_20, STAT_ACH_20_REQUIRED);
        CREATEINVITEMS(HERO, 0x864f, (NUMBER_BAUMACE) * (BOWMAKING_HOWMUCHAMMO));
    };
    PRINT(PRINT_PRODITEMSMISSING);
    PC_BOWMAKING_AMMUNITION_ARROWS();
}

var int PC_BOWMAKING_AMMUNITION_ARROWS_10.NUMBER_BAUMACE = 0;
func void PC_BOWMAKING_AMMUNITION_ARROWS_01() {
    if ((NPC_HASITEMS(HERO, 0x84d0)) >= (1)) {
        BOWMAKING_COUNTHOWMANYCREATED = INTTOSTRING(BOWMAKING_HOWMUCHAMMO);
        BOWMAKING_PRINTHOWMANYCREATED = CONCATSTRINGS(BOWMAKING_COUNTHOWMANYCREATED, BOWMAKING_PRINT_HOWMANYISDONE);
        PRINT(PRINT_ARROWSUCCESS);
        PRINT(BOWMAKING_PRINTHOWMANYCREATED);
        GAMESERVICES_INCREMENTSTATANDCHECKACHIEVEMENT(STAT_ACH_20, BOWMAKING_HOWMUCHAMMO, ACH_20, STAT_ACH_20_REQUIRED);
        CREATEINVITEMS(HERO, 0x864f, BOWMAKING_HOWMUCHAMMO);
    };
    PRINT(PRINT_PRODITEMSMISSING);
    PC_BOWMAKING_AMMUNITION_ARROWS();
}

func void PC_BOWMAKING_AMMUNITION_BOLTS() {
    if ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_FLETCHERY)) == (0)) {
        BOWMAKING_HOWMUCHAMMO = 3;
    };
    if ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_FLETCHERY)) == (1)) {
        BOWMAKING_HOWMUCHAMMO = 4;
    };
    if ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_FLETCHERY)) == (2)) {
        BOWMAKING_HOWMUCHAMMO = 5;
    };
    if ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_FLETCHERY)) == (3)) {
        BOWMAKING_HOWMUCHAMMO = 6;
    };
    INFO_CLEARCHOICES(0xbcea);
    INFO_ADDCHOICE(0xbcea, DIALOG_BACK, 0xbcef);
    INFO_ADDCHOICE(0xbcea, PRINT_BOWMAKING_AMMUNITION_BRANCHES_ALL, 0xbcf8);
    INFO_ADDCHOICE(0xbcea, PRINT_BOWMAKING_AMMUNITION_BRANCHES_10, 0xbcfa);
    INFO_ADDCHOICE(0xbcea, PRINT_BOWMAKING_AMMUNITION_BRANCHES_01, 0xbcfc);
}

func void PC_BOWMAKING_AMMUNITION_BOLTS_ALL() {
    if ((NPC_HASITEMS(HERO, 0x84d0)) >= (1)) {
        NUMBER_BAUMACE = NPC_HASITEMS(HERO, 0x84d0);
        BOWMAKING_COUNTHOWMANYCREATED = INTTOSTRING((NUMBER_BAUMACE) * (BOWMAKING_HOWMUCHAMMO));
        BOWMAKING_PRINTHOWMANYCREATED = CONCATSTRINGS(BOWMAKING_COUNTHOWMANYCREATED, BOWMAKING_PRINT_HOWMANYISDONE);
        PRINT(PRINT_BOLTSUCCESS);
        PRINT(BOWMAKING_PRINTHOWMANYCREATED);
        GAMESERVICES_INCREMENTSTATANDCHECKACHIEVEMENT(STAT_ACH_20, (NUMBER_BAUMACE) * (BOWMAKING_HOWMUCHAMMO), ACH_20, STAT_ACH_20_REQUIRED);
        CREATEINVITEMS(HERO, 0x8650, (NUMBER_BAUMACE) * (BOWMAKING_HOWMUCHAMMO));
    };
    PRINT(PRINT_PRODITEMSMISSING);
    PC_BOWMAKING_AMMUNITION_BOLTS();
}

var int PC_BOWMAKING_AMMUNITION_BOLTS_ALL.NUMBER_BAUMACE = 0;
func void PC_BOWMAKING_AMMUNITION_BOLTS_10() {
    if ((NPC_HASITEMS(HERO, 0x84d0)) >= (10)) {
        BOWMAKING_COUNTHOWMANYCREATED = INTTOSTRING((10) * (BOWMAKING_HOWMUCHAMMO));
        BOWMAKING_PRINTHOWMANYCREATED = CONCATSTRINGS(BOWMAKING_COUNTHOWMANYCREATED, BOWMAKING_PRINT_HOWMANYISDONE);
        PRINT(PRINT_BOLTSUCCESS);
        PRINT(BOWMAKING_PRINTHOWMANYCREATED);
        GAMESERVICES_INCREMENTSTATANDCHECKACHIEVEMENT(STAT_ACH_20, (10) * (BOWMAKING_HOWMUCHAMMO), ACH_20, STAT_ACH_20_REQUIRED);
        CREATEINVITEMS(HERO, 0x8650, (10) * (BOWMAKING_HOWMUCHAMMO));
    };
    if (((NPC_HASITEMS(HERO, 0x84d0)) > (0)) && ((NPC_HASITEMS(HERO, 0x84d0)) <= (9))) {
        NUMBER_BAUMACE = NPC_HASITEMS(HERO, 0x84d0);
        BOWMAKING_COUNTHOWMANYCREATED = INTTOSTRING((NUMBER_BAUMACE) * (BOWMAKING_HOWMUCHAMMO));
        BOWMAKING_PRINTHOWMANYCREATED = CONCATSTRINGS(BOWMAKING_COUNTHOWMANYCREATED, BOWMAKING_PRINT_HOWMANYISDONE);
        PRINT(PRINT_BOLTSUCCESS);
        PRINT(BOWMAKING_PRINTHOWMANYCREATED);
        GAMESERVICES_INCREMENTSTATANDCHECKACHIEVEMENT(STAT_ACH_20, (NUMBER_BAUMACE) * (BOWMAKING_HOWMUCHAMMO), ACH_20, STAT_ACH_20_REQUIRED);
        CREATEINVITEMS(HERO, 0x8650, (NUMBER_BAUMACE) * (BOWMAKING_HOWMUCHAMMO));
    };
    PRINT(PRINT_PRODITEMSMISSING);
    PC_BOWMAKING_AMMUNITION_BOLTS();
}

var int PC_BOWMAKING_AMMUNITION_BOLTS_10.NUMBER_BAUMACE = 0;
func void PC_BOWMAKING_AMMUNITION_BOLTS_01() {
    if ((NPC_HASITEMS(HERO, 0x84d0)) >= (1)) {
        BOWMAKING_COUNTHOWMANYCREATED = INTTOSTRING(BOWMAKING_HOWMUCHAMMO);
        BOWMAKING_PRINTHOWMANYCREATED = CONCATSTRINGS(BOWMAKING_COUNTHOWMANYCREATED, BOWMAKING_PRINT_HOWMANYISDONE);
        PRINT(PRINT_BOLTSUCCESS);
        PRINT(BOWMAKING_PRINTHOWMANYCREATED);
        GAMESERVICES_INCREMENTSTATANDCHECKACHIEVEMENT(STAT_ACH_20, BOWMAKING_HOWMUCHAMMO, ACH_20, STAT_ACH_20_REQUIRED);
        CREATEINVITEMS(HERO, 0x8650, BOWMAKING_HOWMUCHAMMO);
    };
    PRINT(PRINT_PRODITEMSMISSING);
    PC_BOWMAKING_AMMUNITION_BOLTS();
}

func void PC_BOWMAKING_AMMUNITION_ARROWSTOBOLT() {
    INFO_CLEARCHOICES(0xbcea);
    INFO_ADDCHOICE(0xbcea, DIALOG_BACK, 0xbcef);
    INFO_ADDCHOICE(0xbcea, PRINT_BOWMAKING_AMMUNITION_ARROWSTOBOLT_ALL, 0xbcfe);
    INFO_ADDCHOICE(0xbcea, PRINT_BOWMAKING_AMMUNITION_ARROWSTOBOLT_10, 0xbd00);
    INFO_ADDCHOICE(0xbcea, PRINT_BOWMAKING_AMMUNITION_ARROWSTOBOLT_01, 0xbd02);
}

func void PC_BOWMAKING_AMMUNITION_ARROWSTOBOLT_ALL() {
    if ((NPC_HASITEMS(HERO, 0x864f)) >= (2)) {
        NUMBER_ARROW = NPC_HASITEMS(HERO, 0x864f);
        BOWMAKING_COUNTHOWMANYCREATED = INTTOSTRING(((NUMBER_ARROW) / (2)) * (1));
        BOWMAKING_PRINTHOWMANYCREATED = CONCATSTRINGS(BOWMAKING_COUNTHOWMANYCREATED, BOWMAKING_PRINT_HOWMANYISDONE);
        PRINT(PRINT_BOLTSUCCESS);
        PRINT(BOWMAKING_PRINTHOWMANYCREATED);
        CREATEINVITEMS(HERO, 0x8650, ((NUMBER_ARROW) / (2)) * (1));
    };
    PRINT(PRINT_PRODITEMSMISSING);
    PC_BOWMAKING_AMMUNITION_ARROWSTOBOLT();
}

var int PC_BOWMAKING_AMMUNITION_ARROWSTOBOLT_ALL.NUMBER_ARROW = 0;
func void PC_BOWMAKING_AMMUNITION_ARROWSTOBOLT_10() {
    if ((NPC_HASITEMS(HERO, 0x864f)) >= (20)) {
        BOWMAKING_COUNTHOWMANYCREATED = INTTOSTRING(10);
        BOWMAKING_PRINTHOWMANYCREATED = CONCATSTRINGS(BOWMAKING_COUNTHOWMANYCREATED, BOWMAKING_PRINT_HOWMANYISDONE);
        PRINT(PRINT_BOLTSUCCESS);
        PRINT(BOWMAKING_PRINTHOWMANYCREATED);
        CREATEINVITEMS(HERO, 0x8650, 10);
    };
    if (((NPC_HASITEMS(HERO, 0x864f)) > (0)) && ((NPC_HASITEMS(HERO, 0x864f)) <= (19))) {
        NUMBER_ARROW = NPC_HASITEMS(HERO, 0x864f);
        BOWMAKING_COUNTHOWMANYCREATED = INTTOSTRING(((NUMBER_ARROW) / (2)) * (1));
        BOWMAKING_PRINTHOWMANYCREATED = CONCATSTRINGS(BOWMAKING_COUNTHOWMANYCREATED, BOWMAKING_PRINT_HOWMANYISDONE);
        PRINT(PRINT_BOLTSUCCESS);
        PRINT(BOWMAKING_PRINTHOWMANYCREATED);
        CREATEINVITEMS(HERO, 0x8650, ((NUMBER_ARROW) / (2)) * (1));
    };
    PRINT(PRINT_PRODITEMSMISSING);
    PC_BOWMAKING_AMMUNITION_ARROWSTOBOLT();
}

var int PC_BOWMAKING_AMMUNITION_ARROWSTOBOLT_10.NUMBER_ARROW = 0;
func void PC_BOWMAKING_AMMUNITION_ARROWSTOBOLT_01() {
    if ((NPC_HASITEMS(HERO, 0x864f)) >= (2)) {
        BOWMAKING_COUNTHOWMANYCREATED = INTTOSTRING(1);
        BOWMAKING_PRINTHOWMANYCREATED = CONCATSTRINGS(BOWMAKING_COUNTHOWMANYCREATED, BOWMAKING_PRINT_HOWMANYISDONE);
        PRINT(PRINT_BOLTSUCCESS);
        PRINT(BOWMAKING_PRINTHOWMANYCREATED);
        CREATEINVITEMS(HERO, 0x8650, 1);
    };
    PRINT(PRINT_PRODITEMSMISSING);
    PC_BOWMAKING_AMMUNITION_ARROWSTOBOLT();
}

func void PC_BOWMAKING_AMMUNITION_BOLTSTOARROW() {
    INFO_CLEARCHOICES(0xbcea);
    INFO_ADDCHOICE(0xbcea, DIALOG_BACK, 0xbcef);
    INFO_ADDCHOICE(0xbcea, PRINT_BOWMAKING_AMMUNITION_BOLTSTOARROW_ALL, 0xbd04);
    INFO_ADDCHOICE(0xbcea, PRINT_BOWMAKING_AMMUNITION_BOLTSTOARROW_10, 0xbd06);
    INFO_ADDCHOICE(0xbcea, PRINT_BOWMAKING_AMMUNITION_BOLTSTOARROW_01, 0xbd08);
}

func void PC_BOWMAKING_AMMUNITION_BOLTSTOARROW_ALL() {
    if ((NPC_HASITEMS(HERO, 0x8650)) >= (2)) {
        NUMBER_BOLT = NPC_HASITEMS(HERO, 0x8650);
        BOWMAKING_COUNTHOWMANYCREATED = INTTOSTRING(((NUMBER_BOLT) / (2)) * (1));
        BOWMAKING_PRINTHOWMANYCREATED = CONCATSTRINGS(BOWMAKING_COUNTHOWMANYCREATED, BOWMAKING_PRINT_HOWMANYISDONE);
        PRINT(PRINT_ARROWSUCCESS);
        PRINT(BOWMAKING_PRINTHOWMANYCREATED);
        CREATEINVITEMS(HERO, 0x864f, ((NUMBER_BOLT) / (2)) * (1));
    };
    PRINT(PRINT_PRODITEMSMISSING);
    PC_BOWMAKING_AMMUNITION_BOLTSTOARROW();
}

var int PC_BOWMAKING_AMMUNITION_BOLTSTOARROW_ALL.NUMBER_BOLT = 0;
func void PC_BOWMAKING_AMMUNITION_BOLTSTOARROW_10() {
    if ((NPC_HASITEMS(HERO, 0x8650)) >= (20)) {
        BOWMAKING_COUNTHOWMANYCREATED = INTTOSTRING(10);
        BOWMAKING_PRINTHOWMANYCREATED = CONCATSTRINGS(BOWMAKING_COUNTHOWMANYCREATED, BOWMAKING_PRINT_HOWMANYISDONE);
        PRINT(PRINT_ARROWSUCCESS);
        PRINT(BOWMAKING_PRINTHOWMANYCREATED);
        CREATEINVITEMS(HERO, 0x864f, 10);
    };
    if (((NPC_HASITEMS(HERO, 0x8650)) > (0)) && ((NPC_HASITEMS(HERO, 0x8650)) <= (19))) {
        NUMBER_BOLT = NPC_HASITEMS(HERO, 0x8650);
        BOWMAKING_COUNTHOWMANYCREATED = INTTOSTRING(((NUMBER_BOLT) / (2)) * (1));
        BOWMAKING_PRINTHOWMANYCREATED = CONCATSTRINGS(BOWMAKING_COUNTHOWMANYCREATED, BOWMAKING_PRINT_HOWMANYISDONE);
        PRINT(PRINT_ARROWSUCCESS);
        PRINT(BOWMAKING_PRINTHOWMANYCREATED);
        CREATEINVITEMS(HERO, 0x864f, ((NUMBER_BOLT) / (2)) * (1));
    };
    PRINT(PRINT_PRODITEMSMISSING);
    PC_BOWMAKING_AMMUNITION_BOLTSTOARROW();
}

var int PC_BOWMAKING_AMMUNITION_BOLTSTOARROW_10.NUMBER_BOLT = 0;
func void PC_BOWMAKING_AMMUNITION_BOLTSTOARROW_01() {
    if ((NPC_HASITEMS(HERO, 0x8650)) >= (2)) {
        BOWMAKING_COUNTHOWMANYCREATED = INTTOSTRING(1);
        BOWMAKING_PRINTHOWMANYCREATED = CONCATSTRINGS(BOWMAKING_COUNTHOWMANYCREATED, BOWMAKING_PRINT_HOWMANYISDONE);
        PRINT(PRINT_ARROWSUCCESS);
        PRINT(BOWMAKING_PRINTHOWMANYCREATED);
        CREATEINVITEMS(HERO, 0x864f, 1);
    };
    PRINT(PRINT_PRODITEMSMISSING);
    PC_BOWMAKING_AMMUNITION_BOLTSTOARROW();
}

instance PC_BOWMAKING_BACK(C_INFO) {
    NPC = 0xc3ab;
    NR = 999;
    CONDITION = PC_BOWMAKING_BACK_CONDITION;
    INFORMATION = PC_BOWMAKING_BACK_INFO;
    IMPORTANT = FALSE;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_BACK;
}

func int PC_BOWMAKING_BACK_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_BOWMAKING)) && ((BOWMAKING_MODE) > (0))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_BOWMAKING_BACK_INFO() {
    BOWMAKING_MODE = 0;
}

instance PC_BOWMAKING_BOWS(C_INFO) {
    NPC = 0xc3ab;
    NR = 50;
    CONDITION = PC_BOWMAKING_BOWS_CONDITION;
    INFORMATION = PC_BOWMAKING_BOWS_INFO;
    IMPORTANT = FALSE;
    PERMANENT = TRUE;
    DESCRIPTION = PRINT_BOWMAKING_BOWS;
}

func int PC_BOWMAKING_BOWS_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_BOWMAKING)) && ((BOWMAKING_MODE) == (0))) && ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_FLETCHERY)) > (0))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_BOWMAKING_BOWS_INFO() {
    BOWMAKING_MODE = BOWMAKING_BOWS;
}

instance PC_BOWMAKING_CROSSBOWS(C_INFO) {
    NPC = 0xc3ab;
    NR = 50;
    CONDITION = PC_BOWMAKING_CROSSBOWS_CONDITION;
    INFORMATION = PC_BOWMAKING_CROSSBOWS_INFO;
    IMPORTANT = FALSE;
    PERMANENT = TRUE;
    DESCRIPTION = PRINT_BOWMAKING_CROSSBOWS;
}

func int PC_BOWMAKING_CROSSBOWS_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_BOWMAKING)) && ((BOWMAKING_MODE) == (0))) && ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_FLETCHERY)) > (0))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_BOWMAKING_CROSSBOWS_INFO() {
    BOWMAKING_MODE = BOWMAKING_CROSSBOWS;
}

instance PC_BOWMAKING_ENDE(C_INFO) {
    NPC = 0xc3ab;
    NR = 999;
    CONDITION = PC_BOWMAKING_ENDE_CONDITION;
    INFORMATION = PC_BOWMAKING_ENDE_INFO;
    IMPORTANT = FALSE;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int PC_BOWMAKING_ENDE_CONDITION() {
    if (((PLAYER_MOBSI_PRODUCTION) == (MOBSI_BOWMAKING)) && ((BOWMAKING_MODE) == (0))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_BOWMAKING_ENDE_INFO() {
    BOWMAKING_MODE = 0;
    AI_STOPPROCESSINFOS(SELF);
    SELF.AIVAR[4] = FALSE;
    PLAYER_MOBSI_PRODUCTION = MOBSI_NONE;
}

instance PC_CROSSBOW_L_02(C_INFO) {
    NPC = 0xc3ab;
    CONDITION = PC_CROSSBOW_L_02_CONDITION;
    INFORMATION = PC_CROSSBOW_L_02_INFO;
    PERMANENT = TRUE;
    NR = (0x2710) + (WEAPON_CROSSBOW_L_02);
}

func int PC_CROSSBOW_L_02_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_BOWMAKING)) && ((PLAYER_TALENT_SMITH[71]) == (TRUE))) && ((BOWMAKING_MODE) == (BOWMAKING_CROSSBOWS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_CROSSBOW_L_02_INFO() {
    PC_CRAFTRECIPEITEM(0x940a);
}

instance PC_CROSSBOW_01(C_INFO) {
    NPC = 0xc3ab;
    CONDITION = PC_CROSSBOW_01_CONDITION;
    INFORMATION = PC_CROSSBOW_01_INFO;
    PERMANENT = TRUE;
    NR = (0x2710) + (WEAPON_CROSSBOW_01);
}

func int PC_CROSSBOW_01_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_BOWMAKING)) && ((PLAYER_TALENT_SMITH[72]) == (TRUE))) && ((BOWMAKING_MODE) == (BOWMAKING_CROSSBOWS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_CROSSBOW_01_INFO() {
    PC_CRAFTRECIPEITEM(0x940c);
}

instance PC_CROSSBOW_L_01(C_INFO) {
    NPC = 0xc3ab;
    CONDITION = PC_CROSSBOW_L_01_CONDITION;
    INFORMATION = PC_CROSSBOW_L_01_INFO;
    PERMANENT = TRUE;
    NR = (0x2710) + (WEAPON_CROSSBOW_L_01);
}

func int PC_CROSSBOW_L_01_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_BOWMAKING)) && ((PLAYER_TALENT_SMITH[73]) == (TRUE))) && ((BOWMAKING_MODE) == (BOWMAKING_CROSSBOWS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_CROSSBOW_L_01_INFO() {
    PC_CRAFTRECIPEITEM(0x940e);
}

instance PC_CROSSBOW_M_02(C_INFO) {
    NPC = 0xc3ab;
    CONDITION = PC_CROSSBOW_M_02_CONDITION;
    INFORMATION = PC_CROSSBOW_M_02_INFO;
    PERMANENT = TRUE;
    NR = (0x2710) + (WEAPON_CROSSBOW_M_02);
}

func int PC_CROSSBOW_M_02_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_BOWMAKING)) && ((PLAYER_TALENT_SMITH[74]) == (TRUE))) && ((BOWMAKING_MODE) == (BOWMAKING_CROSSBOWS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_CROSSBOW_M_02_INFO() {
    PC_CRAFTRECIPEITEM(0x9410);
}

instance PC_EMMA_CROSSBOW(C_INFO) {
    NPC = 0xc3ab;
    CONDITION = PC_EMMA_CROSSBOW_CONDITION;
    INFORMATION = PC_EMMA_CROSSBOW_INFO;
    PERMANENT = TRUE;
    NR = (0x2710) + (WEAPON_EMMA_CROSSBOW);
}

func int PC_EMMA_CROSSBOW_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_BOWMAKING)) && ((PLAYER_TALENT_SMITH[75]) == (TRUE))) && ((BOWMAKING_MODE) == (BOWMAKING_CROSSBOWS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_EMMA_CROSSBOW_INFO() {
    PC_CRAFTRECIPEITEM(0x9412);
}

instance PC_CROSSBOW_05(C_INFO) {
    NPC = 0xc3ab;
    CONDITION = PC_CROSSBOW_05_CONDITION;
    INFORMATION = PC_CROSSBOW_05_INFO;
    PERMANENT = TRUE;
    NR = (0x2710) + (WEAPON_CROSSBOW_05);
}

func int PC_CROSSBOW_05_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_BOWMAKING)) && ((PLAYER_TALENT_SMITH[76]) == (TRUE))) && ((BOWMAKING_MODE) == (BOWMAKING_CROSSBOWS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_CROSSBOW_05_INFO() {
    PC_CRAFTRECIPEITEM(0x9414);
}

instance PC_JON_CROSSBOW(C_INFO) {
    NPC = 0xc3ab;
    CONDITION = PC_JON_CROSSBOW_CONDITION;
    INFORMATION = PC_JON_CROSSBOW_INFO;
    PERMANENT = TRUE;
    NR = (0x2710) + (WEAPON_JON_CROSSBOW);
}

func int PC_JON_CROSSBOW_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_BOWMAKING)) && ((PLAYER_TALENT_SMITH[77]) == (TRUE))) && ((BOWMAKING_MODE) == (BOWMAKING_CROSSBOWS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_JON_CROSSBOW_INFO() {
    PC_CRAFTRECIPEITEM(0x9416);
}

instance PC_CROSSBOW_H_02(C_INFO) {
    NPC = 0xc3ab;
    CONDITION = PC_CROSSBOW_H_02_CONDITION;
    INFORMATION = PC_CROSSBOW_H_02_INFO;
    PERMANENT = TRUE;
    NR = (0x2710) + (WEAPON_CROSSBOW_H_02);
}

func int PC_CROSSBOW_H_02_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_BOWMAKING)) && ((PLAYER_TALENT_SMITH[78]) == (TRUE))) && ((BOWMAKING_MODE) == (BOWMAKING_CROSSBOWS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_CROSSBOW_H_02_INFO() {
    PC_CRAFTRECIPEITEM(0x9418);
}

instance PC_CROSSBOW_M_01(C_INFO) {
    NPC = 0xc3ab;
    CONDITION = PC_CROSSBOW_M_01_CONDITION;
    INFORMATION = PC_CROSSBOW_M_01_INFO;
    PERMANENT = TRUE;
    NR = (0x2710) + (WEAPON_CROSSBOW_M_01);
}

func int PC_CROSSBOW_M_01_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_BOWMAKING)) && ((PLAYER_TALENT_SMITH[79]) == (TRUE))) && ((BOWMAKING_MODE) == (BOWMAKING_CROSSBOWS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_CROSSBOW_M_01_INFO() {
    PC_CRAFTRECIPEITEM(0x941a);
}

instance PC_CROSSBOW_H_01(C_INFO) {
    NPC = 0xc3ab;
    CONDITION = PC_CROSSBOW_H_01_CONDITION;
    INFORMATION = PC_CROSSBOW_H_01_INFO;
    PERMANENT = TRUE;
    NR = (0x2710) + (WEAPON_CROSSBOW_H_01);
}

func int PC_CROSSBOW_H_01_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_BOWMAKING)) && ((PLAYER_TALENT_SMITH[80]) == (TRUE))) && ((BOWMAKING_MODE) == (BOWMAKING_CROSSBOWS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_CROSSBOW_H_01_INFO() {
    PC_CRAFTRECIPEITEM(0x941c);
}

instance PC_CROSSBOW_03(C_INFO) {
    NPC = 0xc3ab;
    CONDITION = PC_CROSSBOW_03_CONDITION;
    INFORMATION = PC_CROSSBOW_03_INFO;
    PERMANENT = TRUE;
    NR = (0x2710) + (WEAPON_CROSSBOW_03);
}

func int PC_CROSSBOW_03_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_BOWMAKING)) && ((PLAYER_TALENT_SMITH[81]) == (TRUE))) && ((BOWMAKING_MODE) == (BOWMAKING_CROSSBOWS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_CROSSBOW_03_INFO() {
    PC_CRAFTRECIPEITEM(0x941e);
}

instance PC_ADDON_MAGICCROSSBOW(C_INFO) {
    NPC = 0xc3ab;
    CONDITION = PC_ADDON_MAGICCROSSBOW_CONDITION;
    INFORMATION = PC_ADDON_MAGICCROSSBOW_INFO;
    PERMANENT = TRUE;
    NR = (0x2710) + (WEAPON_ADDON_MAGICCROSSBOW);
}

func int PC_ADDON_MAGICCROSSBOW_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_BOWMAKING)) && ((PLAYER_TALENT_SMITH[82]) == (TRUE))) && ((BOWMAKING_MODE) == (BOWMAKING_CROSSBOWS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ADDON_MAGICCROSSBOW_INFO() {
    PC_CRAFTRECIPEITEM(0x9420);
}

instance PC_BOW_01(C_INFO) {
    NPC = 0xc3ab;
    CONDITION = PC_BOW_01_CONDITION;
    INFORMATION = PC_BOW_01_INFO;
    PERMANENT = TRUE;
    NR = (0x2710) + (WEAPON_BOW_01);
}

func int PC_BOW_01_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_BOWMAKING)) && ((PLAYER_TALENT_SMITH[83]) == (TRUE))) && ((BOWMAKING_MODE) == (BOWMAKING_BOWS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_BOW_01_INFO() {
    PC_CRAFTRECIPEITEM(0x9422);
}

instance PC_BOW_09(C_INFO) {
    NPC = 0xc3ab;
    CONDITION = PC_BOW_09_CONDITION;
    INFORMATION = PC_BOW_09_INFO;
    PERMANENT = TRUE;
    NR = (0x2710) + (WEAPON_BOW_09);
}

func int PC_BOW_09_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_BOWMAKING)) && ((PLAYER_TALENT_SMITH[84]) == (TRUE))) && ((BOWMAKING_MODE) == (BOWMAKING_BOWS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_BOW_09_INFO() {
    PC_CRAFTRECIPEITEM(0x9424);
}

instance PC_BOW_05(C_INFO) {
    NPC = 0xc3ab;
    CONDITION = PC_BOW_05_CONDITION;
    INFORMATION = PC_BOW_05_INFO;
    PERMANENT = TRUE;
    NR = (0x2710) + (WEAPON_BOW_05);
}

func int PC_BOW_05_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_BOWMAKING)) && ((PLAYER_TALENT_SMITH[85]) == (TRUE))) && ((BOWMAKING_MODE) == (BOWMAKING_BOWS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_BOW_05_INFO() {
    PC_CRAFTRECIPEITEM(0x9426);
}

instance PC_BOW_M_01(C_INFO) {
    NPC = 0xc3ab;
    CONDITION = PC_BOW_M_01_CONDITION;
    INFORMATION = PC_BOW_M_01_INFO;
    PERMANENT = TRUE;
    NR = (0x2710) + (WEAPON_BOW_M_01);
}

func int PC_BOW_M_01_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_BOWMAKING)) && ((PLAYER_TALENT_SMITH[86]) == (TRUE))) && ((BOWMAKING_MODE) == (BOWMAKING_BOWS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_BOW_M_01_INFO() {
    PC_CRAFTRECIPEITEM(0x9428);
}

instance PC_BOW_04(C_INFO) {
    NPC = 0xc3ab;
    CONDITION = PC_BOW_04_CONDITION;
    INFORMATION = PC_BOW_04_INFO;
    PERMANENT = TRUE;
    NR = (0x2710) + (WEAPON_BOW_04);
}

func int PC_BOW_04_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_BOWMAKING)) && ((PLAYER_TALENT_SMITH[87]) == (TRUE))) && ((BOWMAKING_MODE) == (BOWMAKING_BOWS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_BOW_04_INFO() {
    PC_CRAFTRECIPEITEM(0x942a);
}

instance PC_BOW_07(C_INFO) {
    NPC = 0xc3ab;
    CONDITION = PC_BOW_07_CONDITION;
    INFORMATION = PC_BOW_07_INFO;
    PERMANENT = TRUE;
    NR = (0x2710) + (WEAPON_BOW_07);
}

func int PC_BOW_07_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_BOWMAKING)) && ((PLAYER_TALENT_SMITH[88]) == (TRUE))) && ((BOWMAKING_MODE) == (BOWMAKING_BOWS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_BOW_07_INFO() {
    PC_CRAFTRECIPEITEM(0x942c);
}

instance PC_BOW_02(C_INFO) {
    NPC = 0xc3ab;
    CONDITION = PC_BOW_02_CONDITION;
    INFORMATION = PC_BOW_02_INFO;
    PERMANENT = TRUE;
    NR = (0x2710) + (WEAPON_BOW_02);
}

func int PC_BOW_02_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_BOWMAKING)) && ((PLAYER_TALENT_SMITH[89]) == (TRUE))) && ((BOWMAKING_MODE) == (BOWMAKING_BOWS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_BOW_02_INFO() {
    PC_CRAFTRECIPEITEM(0x942e);
}

instance PC_BOW_08(C_INFO) {
    NPC = 0xc3ab;
    CONDITION = PC_BOW_08_CONDITION;
    INFORMATION = PC_BOW_08_INFO;
    PERMANENT = TRUE;
    NR = (0x2710) + (WEAPON_BOW_08);
}

func int PC_BOW_08_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_BOWMAKING)) && ((PLAYER_TALENT_SMITH[90]) == (TRUE))) && ((BOWMAKING_MODE) == (BOWMAKING_BOWS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_BOW_08_INFO() {
    PC_CRAFTRECIPEITEM(0x9430);
}

instance PC_ADDON_FIREBOW(C_INFO) {
    NPC = 0xc3ab;
    CONDITION = PC_ADDON_FIREBOW_CONDITION;
    INFORMATION = PC_ADDON_FIREBOW_INFO;
    PERMANENT = TRUE;
    NR = (0x2710) + (WEAPON_ADDON_FIREBOW);
}

func int PC_ADDON_FIREBOW_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_BOWMAKING)) && ((PLAYER_TALENT_SMITH[91]) == (TRUE))) && ((BOWMAKING_MODE) == (BOWMAKING_BOWS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ADDON_FIREBOW_INFO() {
    PC_CRAFTRECIPEITEM(0x9432);
}

instance PC_BOW_M_04(C_INFO) {
    NPC = 0xc3ab;
    CONDITION = PC_BOW_M_04_CONDITION;
    INFORMATION = PC_BOW_M_04_INFO;
    PERMANENT = TRUE;
    NR = (0x2710) + (WEAPON_BOW_M_04);
}

func int PC_BOW_M_04_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_BOWMAKING)) && ((PLAYER_TALENT_SMITH[92]) == (TRUE))) && ((BOWMAKING_MODE) == (BOWMAKING_BOWS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_BOW_M_04_INFO() {
    PC_CRAFTRECIPEITEM(0x9434);
}

instance PC_BOW_06(C_INFO) {
    NPC = 0xc3ab;
    CONDITION = PC_BOW_06_CONDITION;
    INFORMATION = PC_BOW_06_INFO;
    PERMANENT = TRUE;
    NR = (0x2710) + (WEAPON_BOW_06);
}

func int PC_BOW_06_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_BOWMAKING)) && ((PLAYER_TALENT_SMITH[93]) == (TRUE))) && ((BOWMAKING_MODE) == (BOWMAKING_BOWS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_BOW_06_INFO() {
    PC_CRAFTRECIPEITEM(0x9436);
}

instance PC_BOW_H_01(C_INFO) {
    NPC = 0xc3ab;
    CONDITION = PC_BOW_H_01_CONDITION;
    INFORMATION = PC_BOW_H_01_INFO;
    PERMANENT = TRUE;
    NR = (0x2710) + (WEAPON_BOW_H_01);
}

func int PC_BOW_H_01_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_BOWMAKING)) && ((PLAYER_TALENT_SMITH[94]) == (TRUE))) && ((BOWMAKING_MODE) == (BOWMAKING_BOWS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_BOW_H_01_INFO() {
    PC_CRAFTRECIPEITEM(0x9438);
}

instance PC_BOW_H_02(C_INFO) {
    NPC = 0xc3ab;
    CONDITION = PC_BOW_H_02_CONDITION;
    INFORMATION = PC_BOW_H_02_INFO;
    PERMANENT = TRUE;
    NR = (0x2710) + (WEAPON_BOW_H_02);
}

func int PC_BOW_H_02_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_BOWMAKING)) && ((PLAYER_TALENT_SMITH[95]) == (TRUE))) && ((BOWMAKING_MODE) == (BOWMAKING_BOWS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_BOW_H_02_INFO() {
    PC_CRAFTRECIPEITEM(0x943a);
}

instance PC_BOW_H_04(C_INFO) {
    NPC = 0xc3ab;
    CONDITION = PC_BOW_H_04_CONDITION;
    INFORMATION = PC_BOW_H_04_INFO;
    PERMANENT = TRUE;
    NR = (0x2710) + (WEAPON_BOW_H_04);
}

func int PC_BOW_H_04_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_BOWMAKING)) && ((PLAYER_TALENT_SMITH[96]) == (TRUE))) && ((BOWMAKING_MODE) == (BOWMAKING_BOWS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_BOW_H_04_INFO() {
    PC_CRAFTRECIPEITEM(0x943c);
}

instance PC_ADDON_MAGICBOW(C_INFO) {
    NPC = 0xc3ab;
    CONDITION = PC_ADDON_MAGICBOW_CONDITION;
    INFORMATION = PC_ADDON_MAGICBOW_INFO;
    PERMANENT = TRUE;
    NR = (0x2710) + (WEAPON_ADDON_MAGICBOW);
}

func int PC_ADDON_MAGICBOW_CONDITION() {
    if ((((PLAYER_MOBSI_PRODUCTION) == (MOBSI_BOWMAKING)) && ((PLAYER_TALENT_SMITH[97]) == (TRUE))) && ((BOWMAKING_MODE) == (BOWMAKING_BOWS))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void PC_ADDON_MAGICBOW_INFO() {
    PC_CRAFTRECIPEITEM(0x943e);
}

func void BOWMAKING_S1() {
    HER = HLP_GETNPC(0xc3ab);
    if ((HLP_GETINSTANCEID(SELF)) == (HLP_GETINSTANCEID(HER))) {
        SELF.AIVAR[4] = TRUE;
        PLAYER_MOBSI_PRODUCTION = MOBSI_BOWMAKING;
        AI_PROCESSINFOS(HER);
        PC_CROSSBOW_L_02.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x940a);
        PC_CROSSBOW_01.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x940c);
        PC_CROSSBOW_L_01.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x940e);
        PC_CROSSBOW_M_02.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x9410);
        PC_EMMA_CROSSBOW.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x9412);
        PC_CROSSBOW_05.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x9414);
        PC_JON_CROSSBOW.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x9416);
        PC_CROSSBOW_H_02.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x9418);
        PC_CROSSBOW_M_01.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x941a);
        PC_CROSSBOW_H_01.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x941c);
        PC_CROSSBOW_03.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x941e);
        PC_ADDON_MAGICCROSSBOW.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x9420);
        PC_BOW_01.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x9422);
        PC_BOW_09.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x9424);
        PC_BOW_05.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x9426);
        PC_BOW_M_01.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x9428);
        PC_BOW_04.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x942a);
        PC_BOW_07.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x942c);
        PC_BOW_02.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x942e);
        PC_BOW_08.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x9430);
        PC_ADDON_FIREBOW.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x9432);
        PC_BOW_M_04.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x9434);
        PC_BOW_06.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x9436);
        PC_BOW_H_01.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x9438);
        PC_BOW_H_02.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x943a);
        PC_BOW_H_04.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x943c);
        PC_ADDON_MAGICBOW.DESCRIPTION = BUILDRECIPEDIALOGDESCRIPTION(0x943e);
    };
}

instance BOWMAKING_S1.HER(C_NPC)
