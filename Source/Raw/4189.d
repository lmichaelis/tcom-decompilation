instance DIA_ARENAGUARD_EXIT(C_INFO) {
    NPC = 0xe478;
    NR = 999;
    CONDITION = DIA_ARENAGUARD_EXIT_CONDITION;
    INFORMATION = DIA_ARENAGUARD_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_ARENAGUARD_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_ARENAGUARD_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_ARENAGUARD_ARENANOINVITE(C_INFO) {
    NPC = 0xe478;
    NR = 1;
    CONDITION = DIA_ARENAGUARD_ARENANOINVITE_CONDITION;
    INFORMATION = DIA_ARENAGUARD_ARENANOINVITE_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "What's behind those bars?";
}

func int DIA_ARENAGUARD_ARENANOINVITE_CONDITION() {
    if ((((Q306_READY) && (Q306_PLAYERSIGNEDIN)) && ((LOG_GETSTATUS(MIS_Q306)) == (LOG_RUNNING))) || ((LOG_GETSTATUS(MIS_Q306)) == (LOG_SUCCESS))) {
        return FALSE;
    };
    return TRUE;
}

func void DIA_ARENAGUARD_ARENANOINVITE_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_ArenaGuard_ArenaNoInvite_15_01");
    if ((Q302_PLAYERDUELWITHDANSTATE) == (2)) {
        AI_OUTPUT(SELF, OTHER, "DIA_ArenaGuard_ArenaNoInvite_03_01");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_ArenaGuard_ArenaNoInvite_03_02");
    INFO_CLEARCHOICES(0x14bab);
    INFO_ADDCHOICE(0x14ba4, "What can I find here?", 0x14ba7);
}

func void DIA_ARENAGUARD_ARENANOINVITE_DETAILS() {
    B_SAY(OTHER, SELF, "$MARVIN_WhatCanIFindHere");
    AI_OUTPUT(SELF, OTHER, "DIA_ArenaGuard_ArenaNoInvite_Details_03_01");
}

instance DIA_ARENAGUARD_ARENASIGNEDIN(C_INFO) {
    NPC = 0xe478;
    NR = 2;
    CONDITION = DIA_ARENAGUARD_ARENASIGNEDIN_CONDITION;
    INFORMATION = DIA_ARENAGUARD_ARENASIGNEDIN_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I am one of the participants in the tournament.";
}

func int DIA_ARENAGUARD_ARENASIGNEDIN_CONDITION() {
    if (((Q306_READY) && (Q306_PLAYERSIGNEDIN)) && ((LOG_GETSTATUS(MIS_Q306)) == (LOG_RUNNING))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ARENAGUARD_ARENASIGNEDIN_INFO() {
    WLD_SENDTRIGGER("KM_Q306_ARENAFIGHT");
    AI_OUTPUT(OTHER, SELF, "DIA_ArenaGuard_ArenaSignedIn_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_ArenaGuard_ArenaSignedIn_03_01");
    AI_FUNCTION_S(SELF, 777, "P17_HAVEN_ARENA_MAINGATE");
    AI_OUTPUT(SELF, OTHER, "DIA_ArenaGuard_ArenaSignedIn_03_02");
    AI_FUNCTION_S(SELF, 777, "P17_HAVEN_ARENA_LOCKER_PLAYER");
    AI_OUTPUT(SELF, OTHER, "DIA_ArenaGuard_ArenaSignedIn_03_03");
    B_STARTOTHERROUTINE(PIR_1307_PROXIMO, "ArenaGreeting");
    NPC_REFRESH(PIR_1307_PROXIMO);
    TELEPORTNPCTOWP(0xe548, "P17_HAVEN_ARENA_INSIDE_08");
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_ARENAGUARD_Q306_GIVEUP(C_INFO) {
    NPC = 0xe478;
    NR = 2;
    CONDITION = DIA_ARENAGUARD_Q306_GIVEUP_CONDITION;
    INFORMATION = DIA_ARENAGUARD_Q306_GIVEUP_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "I've had enough of this fight, I want to quit the tournament.";
}

func int DIA_ARENAGUARD_Q306_GIVEUP_CONDITION() {
    if ((((Q306_READY) && (Q306_PLAYERSIGNEDIN)) && ((LOG_GETSTATUS(MIS_Q306)) == (LOG_RUNNING))) && ((Q306_STATE) > (6))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ARENAGUARD_Q306_GIVEUP_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_ArenaGuard_Q306_GiveUp_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_ArenaGuard_Q306_GiveUp_03_01");
    INFO_CLEARCHOICES(0x14bab);
    INFO_ADDCHOICE(0x14bab, "No", 0x14baf);
    INFO_ADDCHOICE(0x14bab, "Yes", 0x14bae);
}

func void DIA_ARENAGUARD_Q306_GIVEUP_YES() {
    INFO_CLEARCHOICES(0x14bab);
    AI_OUTPUT(OTHER, SELF, "DIA_ArenaGuard_Q306_GiveUp_Yes_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_ArenaGuard_Q306_GiveUp_Yes_03_01");
    AI_STOPPROCESSINFOS(SELF);
    AI_FUNCTION(SELF, 0x16967);
}

func void DIA_ARENAGUARD_Q306_GIVEUP_NO() {
    INFO_CLEARCHOICES(0x14bab);
    AI_OUTPUT(OTHER, SELF, "DIA_ArenaGuard_Q306_GiveUp_No_15_01");
    AI_WAITTILLEND(SELF, OTHER);
    AI_STOPPROCESSINFOS(SELF);
}

