func void SCALETIME(var int X) {
    var int ACCELERATION;
    var int WORLD_TIMER;
    WORLD_TIMER = MEM_TIMER.FRAMETIMEFLOAT;
    ACCELERATION = FRACF(X, 100);
    WORLD_TIMER = MULF(WORLD_TIMER, SUBF(ACCELERATION, MKF(1)));
    MEM_WORLDTIMER.WORLDTIME = ADDF(MEM_WORLDTIMER.WORLDTIME, WORLD_TIMER);
}

func int CONVERTTOTIMETICKS(var int H, var int M) {
    var int T;
    var int TPMF;
    var int TPHF;
    TPHF = MKF(OCWORLDTIMER_TICKSPERHOUR);
    TPMF = DIVF(TPHF, MKF(60));
    T = MULF(MKF(H), TPHF);
    T = ADDF(T, MULF(MKF(M), TPMF));
    return T;
}

var int TIMETOSTOPWHEN;
func void STOPTIMEATHOURFF() {
    MEM_WORLDTIMER.WORLDTIME = TIMETOSTOPWHEN;
}

func void STOPTIMEATHOUR(var int H, var int M) {
    TIMETOSTOPWHEN = CONVERTTOTIMETICKS(H, M);
    FF_APPLY(21065);
}

func void RESUMETIME() {
    FF_REMOVE(21065);
}

var int CLOCKSPEED;
func void CLOCKSPEEDFF() {
    SCALETIME(CLOCKSPEED);
}

func void CHANGETIMESPEED(var int X) {
    CLOCKSPEED = X;
    if ((CLOCKSPEED) != (100)) {
        FF_APPLY(21071);
    };
    FF_REMOVE(21071);
}

