instance DIA_CARDEN_EXIT(C_INFO) {
    NPC = 57698;
    NR = 999;
    CONDITION = DIA_CARDEN_EXIT_CONDITION;
    INFORMATION = DIA_CARDEN_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_CARDEN_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_CARDEN_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_CARDEN_HELLO(C_INFO) {
    NPC = 57698;
    NR = 1;
    CONDITION = DIA_CARDEN_HELLO_CONDITION;
    INFORMATION = DIA_CARDEN_HELLO_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "What are you doing here?";
}

func int DIA_CARDEN_HELLO_CONDITION() {
    if ((KAPITEL) < (5)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CARDEN_HELLO_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Carden_Hello_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_Hello_03_02");
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_Hello_03_03");
    AI_RESETFACEANI(SELF);
}

instance DIA_CARDEN_TRADE(C_INFO) {
    NPC = 57698;
    NR = 10;
    CONDITION = DIA_CARDEN_TRADE_CONDITION;
    INFORMATION = DIA_CARDEN_TRADE_INFO;
    PERMANENT = TRUE;
    TRADE = TRUE;
    DESCRIPTION = "Let's deal.";
}

func int DIA_CARDEN_TRADE_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 85700)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CARDEN_TRADE_INFO() {
    B_SAY(OTHER, SELF, "$MARVIN_LetsTrade");
    TRADER_LOGENTRY_CARDEN();
    B_GIVETRADEINV(SELF);
}

instance DIA_CARDEN_MILITIA(C_INFO) {
    NPC = 57698;
    NR = 2;
    CONDITION = DIA_CARDEN_MILITIA_CONDITION;
    INFORMATION = DIA_CARDEN_MILITIA_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Do you think the guard is doing a bad job?";
}

func int DIA_CARDEN_MILITIA_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 85700)) && ((KAPITEL) < (5))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CARDEN_MILITIA_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Carden_Militia_15_01");
    if (NPC_HASGUILDARMOREQUIPPED(OTHER, GIL_MIL)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Carden_Militia_03_02");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_Militia_03_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Carden_Militia_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_Militia_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_Militia_03_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_Militia_03_07");
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_Militia_03_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_Militia_03_09");
}

instance DIA_CARDEN_HUNTING(C_INFO) {
    NPC = 57698;
    NR = 3;
    CONDITION = DIA_CARDEN_HUNTING_CONDITION;
    INFORMATION = DIA_CARDEN_HUNTING_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "How's the hunting going?";
}

func int DIA_CARDEN_HUNTING_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 85700)) && ((KAPITEL) < (5))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CARDEN_HUNTING_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Carden_Hunting_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_Hunting_03_02");
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Carden_Hunting_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_Hunting_03_04");
    AI_STARTFACEANI(SELF, S_DOUBT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_Hunting_03_05");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

instance DIA_CARDEN_HELP(C_INFO) {
    NPC = 57698;
    NR = 4;
    CONDITION = DIA_CARDEN_HELP_CONDITION;
    INFORMATION = DIA_CARDEN_HELP_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Do you need some help?";
}

func int DIA_CARDEN_HELP_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 85700)) && ((TAKINGCOASTQUEST) == (FALSE))) {
        if ((KAPITEL) >= (2)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_CARDEN_HELP_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Carden_Help_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_Help_03_02");
    INFO_CLEARCHOICES(85712);
    if ((OTHER.HITCHANCE[3]) >= (30)) {
        INFO_ADDCHOICE(85712, "I shoot pretty well.", 85716);
    };
    INFO_ADDCHOICE(85712, "I can do something.", 85717);
}

func void DIA_CARDEN_HELP_BOW_SEARCH() {
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_Help_Search_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_Help_Search_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_Help_Search_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_Help_Search_03_04");
    INFO_CLEARCHOICES(85712);
    INFO_ADDCHOICE(85712, "I think I'll pass.", 85721);
    INFO_ADDCHOICE(85712, "Been doing worse.", 85720);
}

func void DIA_CARDEN_HELP_BOW() {
    AI_OUTPUT(OTHER, SELF, "DIA_Carden_Help_Bow_15_01");
    TAKINGCOASTQUEST = 1;
    DIA_CARDEN_HELP_BOW_SEARCH();
}

func void DIA_CARDEN_HELP_TROPHY() {
    AI_OUTPUT(OTHER, SELF, "DIA_Carden_Help_Trophy_15_01");
    TAKINGCOASTQUEST = 1;
    DIA_CARDEN_HELP_BOW_SEARCH();
}

func void DIA_CARDEN_HELP_NOPE() {
    AI_OUTPUT(OTHER, SELF, "DIA_Carden_Help_Nope_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_Help_Nope_03_02");
    INFO_CLEARCHOICES(85712);
}

func void DIA_CARDEN_HELP_BOW_SEARCH_YES_TAKEQUEST() {
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_Help_Yes_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_Help_Yes_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_Help_Yes_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_Help_Yes_03_05");
    LOG_CREATETOPIC(TOPIC_SQ112, LOG_MISSION);
    LOG_SETSTATUS(_@(MIS_SQ112), TOPIC_SQ112, LOG_RUNNING);
    AI_LOGENTRY(TOPIC_SQ112, LOG_SQ112_START);
    INFO_CLEARCHOICES(85712);
    INFO_CLEARCHOICES(85722);
    TAKINGCOASTQUEST = 3;
}

func void DIA_CARDEN_HELP_BOW_SEARCH_YES() {
    AI_OUTPUT(OTHER, SELF, "DIA_Carden_Help_Yes_15_01");
    DIA_CARDEN_HELP_BOW_SEARCH_YES_TAKEQUEST();
}

func void DIA_CARDEN_HELP_BOW_SEARCH_NOWAY() {
    AI_OUTPUT(OTHER, SELF, "DIA_Carden_Help_NoWay_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_Help_NoWay_03_02");
    INFO_CLEARCHOICES(85712);
    TAKINGCOASTQUEST = 2;
}

instance DIA_CARDEN_TAKELURKER(C_INFO) {
    NPC = 57698;
    NR = 8;
    CONDITION = DIA_CARDEN_TAKELURKER_CONDITION;
    INFORMATION = DIA_CARDEN_TAKELURKER_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I'll help you with the lurkers after all.";
}

func int DIA_CARDEN_TAKELURKER_CONDITION() {
    if ((TAKINGCOASTQUEST) == (2)) {
        if ((KAPITEL) >= (2)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_CARDEN_TAKELURKER_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Carden_TakeLurker_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_TakeLurker_03_02");
    DIA_CARDEN_HELP_BOW_SEARCH_YES_TAKEQUEST();
}

instance DIA_CARDEN_SQ112_FINISH(C_INFO) {
    NPC = 57698;
    NR = 1;
    CONDITION = DIA_CARDEN_SQ112_FINISH_CONDITION;
    INFORMATION = DIA_CARDEN_SQ112_FINISH_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "The lurkers should no longer threaten residents.";
}

func int DIA_CARDEN_SQ112_FINISH_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ112)) == (LOG_RUNNING)) && ((SQ112_LURKERNESTCOUNT) == (5))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CARDEN_SQ112_FINISH_INFO() {
    AI_STARTFACEANI(SELF, S_SURPRISE, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Carden_SQ112_Finish_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_SQ112_Finish_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Carden_SQ112_Finish_15_03");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_SQ112_Finish_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_SQ112_Finish_03_05");
    CREATEINVITEMS(SELF, 34286, 1);
    B_GIVEINVITEMS(SELF, OTHER, 34286, 1);
    CREATEINVITEMS(SELF, 34288, 1);
    B_GIVEINVITEMS(SELF, OTHER, 34288, 1);
    CREATEINVITEMS(SELF, 34290, 1);
    B_GIVEINVITEMS(SELF, OTHER, 34290, 1);
    AI_LOGENTRY(TOPIC_SQ112, LOG_SQ112_FINISH);
    LOG_SETSTATUS(_@(MIS_SQ112), TOPIC_SQ112, LOG_SUCCESS);
    GIVEREPUTATION_SILBACH();
    B_GIVEPLAYERXP(XP_SQ112_FINISH);
}

instance DIA_CARDEN_LURKERTROPHY(C_INFO) {
    NPC = 57698;
    NR = 90;
    CONDITION = DIA_CARDEN_LURKERTROPHY_CONDITION;
    INFORMATION = DIA_CARDEN_LURKERTROPHY_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "I have some trophies for sale.";
}

func int DIA_CARDEN_LURKERTROPHY_CONDITION() {
    return FALSE;
}

func void CARDEN_TROPHYTRADE() {
    var int CARDEN_MONEYFORTROPHY;
    var int MARVIN_CURRENTLURKERSKIN;
    var int MARVIN_CURRENTLURKERCLAW;
    var int MARVIN_CURRENTSEALURKERSKIN;
    var int MARVIN_CURRENTSEALURKERCLAW;
    MARVIN_CURRENTSEALURKERCLAW = NPC_HASITEMS(OTHER, 35353);
    MARVIN_CURRENTSEALURKERSKIN = NPC_HASITEMS(OTHER, 35314);
    MARVIN_CURRENTLURKERCLAW = NPC_HASITEMS(OTHER, 33851);
    MARVIN_CURRENTLURKERSKIN = NPC_HASITEMS(OTHER, 33858);
    CARDEN_MONEYFORTROPHY = ((((MARVIN_CURRENTSEALURKERCLAW) * (24)) + ((MARVIN_CURRENTSEALURKERSKIN) * (30))) + ((MARVIN_CURRENTLURKERCLAW) * (12))) + ((MARVIN_CURRENTLURKERSKIN) * (15));
    if ((NPC_HASITEMS(OTHER, 35353)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 35353, MARVIN_CURRENTSEALURKERCLAW);
        NPC_REMOVEINVITEMS(SELF, 35353, MARVIN_CURRENTSEALURKERCLAW);
    };
    if ((NPC_HASITEMS(OTHER, 35314)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 35314, MARVIN_CURRENTSEALURKERSKIN);
        NPC_REMOVEINVITEMS(SELF, 35314, MARVIN_CURRENTSEALURKERSKIN);
    };
    if ((NPC_HASITEMS(OTHER, 33851)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 33851, MARVIN_CURRENTLURKERCLAW);
        NPC_REMOVEINVITEMS(SELF, 33851, MARVIN_CURRENTLURKERCLAW);
    };
    if ((NPC_HASITEMS(OTHER, 33858)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, 33858, MARVIN_CURRENTLURKERSKIN);
        NPC_REMOVEINVITEMS(SELF, 33858, MARVIN_CURRENTLURKERSKIN);
    };
    CREATEINVITEMS(SELF, 34203, CARDEN_MONEYFORTROPHY);
    B_GIVEINVITEMS(SELF, OTHER, 34203, CARDEN_MONEYFORTROPHY);
}

func void DIA_CARDEN_LURKERTROPHY_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Carden_LurkerTrophy_15_01");
    if (((((NPC_HASITEMS(OTHER, 35353)) >= (1)) || ((NPC_HASITEMS(OTHER, 35314)) >= (1))) || ((NPC_HASITEMS(OTHER, 33851)) >= (1))) || ((NPC_HASITEMS(OTHER, 33858)) >= (1))) {
        NPC_INITAMBIENTS(SELF, 4);
        if ((NPC_GETLASTAMBIENT(SELF)) == (1)) {
            AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
            AI_OUTPUT(SELF, OTHER, "DIA_Carden_LurkerTrophy_03_02");
        } else if ((NPC_GETLASTAMBIENT(SELF)) == (2)) {
            AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
            AI_OUTPUT(SELF, OTHER, "DIA_Carden_LurkerTrophy_03_03");
        } else if ((NPC_GETLASTAMBIENT(SELF)) == (3)) {
            AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
            AI_OUTPUT(SELF, OTHER, "DIA_Carden_LurkerTrophy_03_04");
        } else if ((NPC_GETLASTAMBIENT(SELF)) == (4)) {
            AI_STARTFACEANI(SELF, S_THINK, 1, -(1));
            AI_OUTPUT(SELF, OTHER, "DIA_Carden_LurkerTrophy_03_05");
        };
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Carden_LurkerTrophy_03_06");
        AI_OUTPUT(SELF, OTHER, "DIA_Carden_LurkerTrophy_03_07");
        CARDEN_TROPHYTRADE();
        AI_RESETFACEANI(SELF);
    };
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_LurkerTrophy_03_08");
    AI_RESETFACEANI(SELF);
}

instance DIA_CARDEN_SQ115_BOAR(C_INFO) {
    NPC = 57698;
    NR = 1;
    CONDITION = DIA_CARDEN_SQ115_BOAR_CONDITION;
    INFORMATION = DIA_CARDEN_SQ115_BOAR_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Do you know where I can find some boar?";
}

func int DIA_CARDEN_SQ115_BOAR_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ115)) == (LOG_RUNNING)) && ((SQ115_KNOWWHEREAREBOARS) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CARDEN_SQ115_BOAR_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Carden_SQ115_Boar_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_SQ115_Boar_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_SQ115_Boar_03_03");
    AI_LOGENTRY(TOPIC_SQ115, LOG_SQ115_CARDEN_BOARS);
    INFO_CLEARCHOICES(85737);
    INFO_ADDCHOICE(85737, "Where would I get their meat?", 85740);
    if (!(NPC_KNOWSINFO(OTHER, 89681))) {
        INFO_ADDCHOICE(85737, "Where can I find Markus?", 85741);
    };
}

func void DIA_CARDEN_SQ115_BOAR_WHERE() {
    AI_OUTPUT(OTHER, SELF, "DIA_Carden_SQ115_Boar_Where_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_SQ115_Boar_Where_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_SQ115_Boar_Where_03_03");
    AI_LOGENTRY(TOPIC_SQ115, LOG_SQ115_CARDEN_REMY);
}

func void DIA_CARDEN_SQ115_BOAR_MARKUS() {
    AI_OUTPUT(OTHER, SELF, "DIA_Carden_SQ115_Boar_Markus_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_SQ115_Boar_Markus_03_02");
}

var int CARDENCANTEACHUS;
var int CARDENCANTEACHUSHUNT;
var int CARDENHUNTTEACHINFO;
instance DIA_CARDEN_CANTEACH(C_INFO) {
    NPC = 57698;
    NR = 5;
    CONDITION = DIA_CARDEN_CANTEACH_CONDITION;
    INFORMATION = DIA_CARDEN_CANTEACH_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Could you teach me something?";
}

func int DIA_CARDEN_CANTEACH_CONDITION() {
    if (((CARDENCANTEACHUSHUNT) == (FALSE)) && ((CARDENCANTEACHUS) == (FALSE))) {
        if (NPC_KNOWSINFO(OTHER, 85700)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void CARDEN_CANTEACH() {
    LOG_CREATETOPIC(TOPIC_SILBACHTEACHER, LOG_NOTE);
    AI_LOGENTRY(TOPIC_SILBACHTEACHER, LOG_TEACHER_CARDEN);
    CARDENCANTEACHUS = TRUE;
    CARDENCANTEACHUSHUNT = TRUE;
}

func void DIA_CARDEN_CANTEACH_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Carden_CanTeach_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_CanTeach_03_02");
    CARDEN_CANTEACH();
}

var int CARDEN_BOWLEVEL;
var int CARDEN_DEXLEVEL;
var string CARDEN_PRINTS;
instance DIA_CARDEN_TEACH(C_INFO) {
    NPC = 57698;
    NR = 950;
    CONDITION = DIA_CARDEN_TEACH_CONDITION;
    INFORMATION = DIA_CARDEN_TEACH_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Teach me.";
}

func int DIA_CARDEN_TEACH_CONDITION() {
    if ((CARDENCANTEACHUS) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CARDEN_TEACH_CHOICES() {
    var int CARDEN_GOLDCOST;
    CARDEN_GOLDCOST = 10;
    CARDEN_DEXLEVEL = OTHER.AIVAR[82];
    CARDEN_BOWLEVEL = OTHER.AIVAR[86];
    INFO_CLEARCHOICES(85752);
    INFO_ADDCHOICE(85752, DIALOG_BACK, 85761);
    INFO_ADDCHOICE(85752, B_BUILDLEARNSTRING2(PRINT_LEARNDEX5, B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 5), (CARDEN_GOLDCOST) * (5)), 85758);
    INFO_ADDCHOICE(85752, B_BUILDLEARNSTRING2(PRINT_LEARNDEX1, B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 1), CARDEN_GOLDCOST), 85757);
    INFO_ADDCHOICE(85752, B_BUILDLEARNSTRING2(PRINT_LEARNBOW5, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 5), (CARDEN_GOLDCOST) * (5)), 85760);
    INFO_ADDCHOICE(85752, B_BUILDLEARNSTRING2(PRINT_LEARNBOW1, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 1), CARDEN_GOLDCOST), 85759);
}

func void DIA_CARDEN_TEACH_INFO() {
    B_SAY(OTHER, SELF, "$MARVIN_TeachMe");
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_TeachDex_03_02");
    DIA_CARDEN_TEACH_CHOICES();
}

func void DIA_CARDEN_TEACHDEX1() {
    if ((NPC_HASITEMS(OTHER, 34203)) >= (CARDEN_PAYMENT1)) {
        if ((CARDEN_DEXLEVEL) < (OTHER.AIVAR[82])) {
            SND_PLAY(GELDBEUTEL);
            B_GIVEINVITEMS(OTHER, SELF, 34203, CARDEN_PAYMENT1);
            NPC_REMOVEINVITEMS(SELF, 34203, CARDEN_PAYMENT1);
        };
        B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_DEXTERITY, 1, 40);
        DIA_CARDEN_TEACH_CHOICES();
    };
    if ((NPC_HASITEMS(OTHER, 34203)) < (CARDEN_PAYMENT1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Carden_TeachDex_03_03");
        CARDEN_PRINTS = CONCATSTRINGS(PRINT_RGOLD, INTTOSTRING(CARDEN_PAYMENT1));
        PRINTSCREEN(CARDEN_PRINTS, -(1), -(1), FONT_SCREEN, 2);
        DIA_CARDEN_TEACH_CHOICES();
    };
}

func void DIA_CARDEN_TEACHDEX5() {
    if ((NPC_HASITEMS(OTHER, 34203)) >= (CARDEN_PAYMENT5)) {
        if ((CARDEN_DEXLEVEL) < (OTHER.AIVAR[82])) {
            SND_PLAY(GELDBEUTEL);
            B_GIVEINVITEMS(OTHER, SELF, 34203, CARDEN_PAYMENT5);
            NPC_REMOVEINVITEMS(SELF, 34203, CARDEN_PAYMENT5);
        };
        B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_DEXTERITY, 5, 40);
        DIA_CARDEN_TEACH_CHOICES();
    };
    if ((NPC_HASITEMS(OTHER, 34203)) < (CARDEN_PAYMENT5)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Carden_TeachDex_03_04");
        CARDEN_PRINTS = CONCATSTRINGS(PRINT_RGOLD, INTTOSTRING(CARDEN_PAYMENT5));
        PRINTSCREEN(CARDEN_PRINTS, -(1), -(1), FONT_SCREEN, 2);
        DIA_CARDEN_TEACH_CHOICES();
    };
}

func void DIA_CARDEN_TEACHBOW_BOW1() {
    if ((NPC_HASITEMS(OTHER, 34203)) >= (CARDEN_PAYMENT1)) {
        if ((CARDEN_BOWLEVEL) < (OTHER.AIVAR[86])) {
            SND_PLAY(GELDBEUTEL);
            B_GIVEINVITEMS(OTHER, SELF, 34203, CARDEN_PAYMENT1);
            NPC_REMOVEINVITEMS(SELF, 34203, CARDEN_PAYMENT1);
        };
        B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_BOW, 1, 30);
        DIA_CARDEN_TEACH_CHOICES();
    };
    if ((NPC_HASITEMS(OTHER, 34203)) < (CARDEN_PAYMENT1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Carden_TeachBow_03_03");
        CARDEN_PRINTS = CONCATSTRINGS(PRINT_RGOLD, INTTOSTRING(CARDEN_PAYMENT1));
        PRINTSCREEN(CARDEN_PRINTS, -(1), -(1), FONT_SCREEN, 2);
        DIA_CARDEN_TEACH_CHOICES();
    };
}

func void DIA_CARDEN_TEACHBOW_BOW5() {
    if ((NPC_HASITEMS(OTHER, 34203)) >= (CARDEN_PAYMENT5)) {
        if ((CARDEN_BOWLEVEL) < (OTHER.AIVAR[86])) {
            SND_PLAY(GELDBEUTEL);
            B_GIVEINVITEMS(OTHER, SELF, 34203, CARDEN_PAYMENT5);
            NPC_REMOVEINVITEMS(SELF, 34203, CARDEN_PAYMENT5);
        };
        B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_BOW, 5, 30);
        DIA_CARDEN_TEACH_CHOICES();
    };
    if ((NPC_HASITEMS(OTHER, 34203)) < (CARDEN_PAYMENT5)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Carden_TeachBow_03_04");
        CARDEN_PRINTS = CONCATSTRINGS(PRINT_RGOLD, INTTOSTRING(CARDEN_PAYMENT5));
        PRINTSCREEN(CARDEN_PRINTS, -(1), -(1), FONT_SCREEN, 2);
        DIA_CARDEN_TEACH_CHOICES();
    };
}

func void DIA_CARDEN_TEACH_BACK() {
    if (((((OTHER.AIVAR[82]) > (CARDEN_DEXLEVEL)) || ((OTHER.AIVAR[86]) > (CARDEN_BOWLEVEL))) && (((OTHER.AIVAR[82]) <= (24)) || ((OTHER.AIVAR[86]) > (19)))) && (((OTHER.AIVAR[82]) >= (10)) || ((OTHER.AIVAR[86]) > (10)))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Carden_TeachDex_03_05");
    };
    if (((((OTHER.AIVAR[82]) > (CARDEN_DEXLEVEL)) || (((OTHER.AIVAR[86]) > (CARDEN_BOWLEVEL)) && ((OTHER.AIVAR[82]) <= (39)))) || (((OTHER.AIVAR[86]) > (29)) && ((OTHER.AIVAR[82]) >= (25)))) || ((OTHER.AIVAR[86]) > (20))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Carden_TeachDex_03_06");
    };
    if (((OTHER.AIVAR[82]) >= (40)) && ((OTHER.AIVAR[86]) >= (30))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Carden_TeachDex_03_07");
        CARDENCANTEACHUS = FALSE;
    };
    INFO_CLEARCHOICES(85752);
}

instance DIA_CARDEN_AMBIENT(C_INFO) {
    NPC = 57698;
    NR = 950;
    CONDITION = DIA_CARDEN_AMBIENT_CONDITION;
    INFORMATION = DIA_CARDEN_AMBIENT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "How are you doing?";
}

func int DIA_CARDEN_AMBIENT_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 85709)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CARDEN_AMBIENT_INFO() {
    AI_STARTFACEANI(OTHER, S_SMILE, 1, -(1));
    B_SAY(OTHER, SELF, "$MARVIN_WhatNew2");
    NPC_INITAMBIENTS(SELF, 3);
    if ((NPC_GETLASTAMBIENT(SELF)) == (1)) {
        if ((LOG_GETSTATUS(MIS_SQ416)) == (LOG_SUCCESS)) {
            AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
            AI_OUTPUT(SELF, OTHER, "DIA_Carden_Ambient_03_04");
            AI_OUTPUT(SELF, OTHER, "DIA_Carden_Ambient_03_05");
        } else {
            AI_STARTFACEANI(SELF, "S_ANGRY", 1, -(1));
            AI_OUTPUT(SELF, OTHER, "DIA_Carden_Ambient_03_02");
        };
    };
    if ((NPC_GETLASTAMBIENT(SELF)) == (2)) {
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Carden_Ambient_03_03");
    };
    if ((NPC_GETLASTAMBIENT(SELF)) == (3)) {
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Carden_Ambient_03_06");
    };
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

instance DIA_CARDEN_Q205_GUARDS(C_INFO) {
    NPC = 57698;
    NR = 1;
    CONDITION = DIA_CARDEN_Q205_GUARDS_CONDITION;
    INFORMATION = DIA_CARDEN_Q205_GUARDS_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Have you seen any city guards anywhere around here?";
}

func int DIA_CARDEN_Q205_GUARDS_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q205)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 85700))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CARDEN_Q205_GUARDS_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Carden_Q205_Guards_15_01");
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_Q205_Guards_03_02");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_Q205_Guards_03_03");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    AI_LOGENTRY(TOPIC_Q205, LOG_Q205_CARDEN_INFO);
    NPC_EXCHANGEROUTINE(SELF, START);
}

instance DIA_CARDEN_SQ509_WHAT(C_INFO) {
    NPC = 57698;
    NR = 1;
    CONDITION = DIA_CARDEN_SQ509_WHAT_CONDITION;
    INFORMATION = DIA_CARDEN_SQ509_WHAT_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Carden, what brings you here?";
}

func int DIA_CARDEN_SQ509_WHAT_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 80147)) && (NPC_KNOWSINFO(OTHER, 85700))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CARDEN_SQ509_WHAT_INFO() {
    AI_STARTFACEANI(OTHER, S_SURPRISE, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Carden_SQ509_What_15_01");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_SQ509_What_03_02");
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_SQ509_What_03_03");
    AI_STARTFACEANI(SELF, S_SURPRISE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_SQ509_What_03_04");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

instance DIA_CARDEN_SQ509_CANHELP(C_INFO) {
    NPC = 57698;
    NR = 1;
    CONDITION = DIA_CARDEN_SQ509_CANHELP_CONDITION;
    INFORMATION = DIA_CARDEN_SQ509_CANHELP_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Rierol told me to help you.";
}

func int DIA_CARDEN_SQ509_CANHELP_CONDITION() {
    if ((LOG_GETSTATUS(MIS_SQ509)) == (LOG_RUNNING)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CARDEN_SQ509_CANHELP_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Carden_SQ509_CanHelp_15_01");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_SQ509_CanHelp_03_02");
    AI_RESETFACEANI(SELF);
}

instance DIA_CARDEN_SQ509_MORE(C_INFO) {
    NPC = 57698;
    NR = 1;
    CONDITION = DIA_CARDEN_SQ509_MORE_CONDITION;
    INFORMATION = DIA_CARDEN_SQ509_MORE_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Can you tell me more about them?";
}

func int DIA_CARDEN_SQ509_MORE_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ509)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 85771))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CARDEN_SQ509_MORE_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Carden_SQ509_More_15_01");
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_SQ509_More_03_02");
    AI_STARTFACEANI(SELF, S_NOPE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_SQ509_More_03_03");
    INFO_CLEARCHOICES(85774);
    INFO_ADDCHOICE(85774, "Do you know where they come from?", 85777);
}

func void DIA_CARDEN_SQ509_MORE_WHERE() {
    AI_OUTPUT(OTHER, SELF, "DIA_Carden_SQ509_More_Where_15_01");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_SQ509_More_Where_03_02");
    AI_STARTFACEANI(SELF, S_THINK, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_SQ509_More_Where_03_03");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_SQ509_More_Where_03_04");
    AI_RESETFACEANI(SELF);
    INFO_CLEARCHOICES(85774);
    AI_LOGENTRY(TOPIC_SQ509, LOG_SQ509_CARDEN_INFO);
    SQ509_PREPARESCAVENGERS();
}

instance DIA_CARDEN_HUNTING_BASE(C_INFO) {
    NPC = 57698;
    NR = 940;
    CONDITION = DIA_CARDEN_HUNTING_BASE_CONDITION;
    INFORMATION = DIA_CARDEN_HUNTING_BASE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = B_BUILDLEARNSTRING2(PRINT_LEARN_HUNTING_BASE, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_FUR), CARDEN_BASETROPHY);
}

func int DIA_CARDEN_HUNTING_BASE_CONDITION() {
    if (((CARDENCANTEACHUSHUNT) == (TRUE)) && ((PLAYER_TALENT_TAKEANIMALTROPHY[2]) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CARDEN_HUNTING_BASE_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Carden_Hunting_Base_15_01");
    if ((NPC_HASITEMS(OTHER, 34203)) >= (CARDEN_BASETROPHY)) {
        if ((PLAYER_TALENT_TAKEANIMALTROPHY[2]) == (TRUE)) {
            if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_SNEAK)) == (0)) {
                PRINTSCREEN(PRINT_LEARNSNEAK, -(1), YPOS_LEVELUP, FONT_SCREEN, 2);
                AI_OUTPUT(SELF, OTHER, "DIA_Carden_Base_Sneak_03_01");
                B_TEACHTHIEFTALENT(NONE_6262_CARDEN, HERO, NPC_TALENT_SNEAK, 1);
                AI_OUTPUT(SELF, OTHER, "DIA_Carden_Base_Sneak_03_02");
            };
            NPC_REMOVEINVITEMS(SELF, 34203, CARDEN_BASETROPHY);
            AI_OUTPUT(SELF, OTHER, "DIA_Carden_Hunting_Base_03_02");
            B_GIVEINVITEMS(OTHER, SELF, 34203, CARDEN_BASETROPHY);
            AI_OUTPUT(SELF, OTHER, "DIA_Carden_Hunting_Base_03_03");
            AI_OUTPUT(SELF, OTHER, "DIA_Carden_Hunting_Base_03_04");
            PRINTSCREEN(PRINT_LEARNTAKEANIMALTROPHY, -(1), -(1), FONT_SCREEN, 2);
        };
    };
    if ((NPC_HASITEMS(OTHER, 34203)) < (CARDEN_BASETROPHY)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Carden_Hunting_Base_03_05");
    };
}

instance DIA_CARDEN_HUNTING_SPECIAL(C_INFO) {
    NPC = 57698;
    NR = 1;
    CONDITION = DIA_CARDEN_HUNTING_SPECIAL_CONDITION;
    INFORMATION = DIA_CARDEN_HUNTING_SPECIAL_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Can you teach me something about hunting?";
}

func int DIA_CARDEN_HUNTING_SPECIAL_CONDITION() {
    if (((CARDENCANTEACHUSHUNT) == (TRUE)) && ((PLAYER_TALENT_TAKEANIMALTROPHY[2]) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CARDEN_HUNTING_SPECIAL_CHOICES() {
    INFO_CLEARCHOICES(85781);
    INFO_ADDCHOICE(85781, DIALOG_BACK, 85785);
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[7]) == (FALSE)) {
        INFO_ADDCHOICE(85781, B_BUILDLEARNSTRING2(PRINT_TEACHBFSTING, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_BFSTING), CARDEN_STINGSTROPHY), 85786);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[15]) == (FALSE)) {
        INFO_ADDCHOICE(85781, B_BUILDLEARNSTRING2(PRINT_TEACHFATS, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_FATS), CARDEN_FATSTROPHY), 85787);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[6]) == (FALSE)) {
        INFO_ADDCHOICE(85781, B_BUILDLEARNSTRING2(PRINT_TEACHBFWING, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_BFWING), CARDEN_WINGSTROPHY), 85788);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[13]) == (FALSE)) {
        INFO_ADDCHOICE(85781, B_BUILDLEARNSTRING2(PRINT_TEACHREPTILESKIN, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_REPTILESKIN), CARDEN_REPTILESKINTROPHY), 85789);
    };
}

func void DIA_CARDEN_HUNTING_SPECIAL_INFO() {
    B_SAY(OTHER, SELF, "$MARVIN_CanYouTeachMeHunting");
    AI_OUTPUT(SELF, OTHER, "DIA_Carden_Hunting_Special_03_01");
    DIA_CARDEN_HUNTING_SPECIAL_CHOICES();
}

func void DIA_CARDEN_HUNTING_SPECIAL_BACK() {
    INFO_CLEARCHOICES(85781);
    if (((((PLAYER_TALENT_TAKEANIMALTROPHY[7]) == (TRUE)) && ((PLAYER_TALENT_TAKEANIMALTROPHY[15]) == (TRUE))) && ((PLAYER_TALENT_TAKEANIMALTROPHY[6]) == (TRUE))) && ((PLAYER_TALENT_TAKEANIMALTROPHY[13]) == (TRUE))) {
        CARDENCANTEACHUSHUNT = FALSE;
        B_SAY(SELF, OTHER, "$NoLearnYoureBetter");
    };
}

func void DIA_CARDEN_HUNTING_SPECIAL_BFSTING() {
    AI_OUTPUT(OTHER, SELF, "DIA_Carden_Hunting_Special_BFSting_15_01");
    if ((NPC_HASITEMS(OTHER, 34203)) >= (CARDEN_STINGSTROPHY)) {
        if ((PLAYER_TALENT_TAKEANIMALTROPHY[7]) == (TRUE)) {
            NPC_REMOVEINVITEMS(SELF, 34203, CARDEN_STINGSTROPHY);
            AI_OUTPUT(SELF, OTHER, "DIA_Carden_Hunting_Special_BFSting_03_02");
            B_GIVEINVITEMS(OTHER, SELF, 34203, CARDEN_STINGSTROPHY);
            AI_OUTPUT(SELF, OTHER, "DIA_Carden_Hunting_Special_BFSting_03_03");
            PRINTSCREEN(PRINT_LEARNTAKEANIMALTROPHYSTING, -(1), -(1), FONT_SCREEN, 2);
        };
    };
    if ((NPC_HASITEMS(OTHER, 34203)) < (CARDEN_STINGSTROPHY)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Carden_Hunting_Special_BFSting_03_04");
    };
    DIA_CARDEN_HUNTING_SPECIAL_CHOICES();
}

func void DIA_CARDEN_HUNTING_SPECIAL_FATS() {
    AI_OUTPUT(OTHER, SELF, "DIA_Carden_Hunting_Special_Fats_15_01");
    if ((NPC_HASITEMS(OTHER, 34203)) >= (CARDEN_FATSTROPHY)) {
        if ((PLAYER_TALENT_TAKEANIMALTROPHY[15]) == (TRUE)) {
            NPC_REMOVEINVITEMS(SELF, 34203, CARDEN_FATSTROPHY);
            AI_OUTPUT(SELF, OTHER, "DIA_Carden_Hunting_Special_Fats_03_02");
            B_GIVEINVITEMS(OTHER, SELF, 34203, CARDEN_FATSTROPHY);
            AI_OUTPUT(SELF, OTHER, "DIA_Carden_Hunting_Special_Fats_03_03");
            PRINTSCREEN(PRINT_LEARNTAKEANIMALTROPHYFAT, -(1), -(1), FONT_SCREEN, 2);
        };
    };
    if ((NPC_HASITEMS(OTHER, 34203)) < (CARDEN_FATSTROPHY)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Carden_Hunting_Special_Fats_03_04");
    };
    DIA_CARDEN_HUNTING_SPECIAL_CHOICES();
}

func void DIA_CARDEN_HUNTING_SPECIAL_BFWING() {
    AI_OUTPUT(OTHER, SELF, "DIA_Carden_Hunting_Special_BFWing_15_01");
    if ((NPC_HASITEMS(OTHER, 34203)) >= (CARDEN_WINGSTROPHY)) {
        if ((PLAYER_TALENT_TAKEANIMALTROPHY[6]) == (TRUE)) {
            NPC_REMOVEINVITEMS(SELF, 34203, CARDEN_WINGSTROPHY);
            AI_OUTPUT(SELF, OTHER, "DIA_Carden_Hunting_Special_BFWing_03_02");
            B_GIVEINVITEMS(OTHER, SELF, 34203, CARDEN_WINGSTROPHY);
            PRINTSCREEN(PRINT_LEARNTAKEANIMALTROPHYWING, -(1), -(1), FONT_SCREEN, 2);
        };
    };
    if ((NPC_HASITEMS(OTHER, 34203)) < (CARDEN_WINGSTROPHY)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Carden_Hunting_Special_BFWing_03_03");
    };
    DIA_CARDEN_HUNTING_SPECIAL_CHOICES();
}

func void DIA_CARDEN_HUNTING_SPECIAL_REPTILESKIN() {
    AI_OUTPUT(OTHER, SELF, "DIA_Carden_Hunting_Special_ReptileSkin_15_01");
    if ((NPC_HASITEMS(OTHER, 34203)) >= (CARDEN_REPTILESKINTROPHY)) {
        if ((PLAYER_TALENT_TAKEANIMALTROPHY[13]) == (TRUE)) {
            NPC_REMOVEINVITEMS(SELF, 34203, CARDEN_REPTILESKINTROPHY);
            AI_OUTPUT(SELF, OTHER, "DIA_Carden_Hunting_Special_ReptileSkin_03_02");
            B_GIVEINVITEMS(OTHER, SELF, 34203, CARDEN_REPTILESKINTROPHY);
            AI_OUTPUT(SELF, OTHER, "DIA_Carden_Hunting_Special_ReptileSkin_03_03");
            AI_OUTPUT(SELF, OTHER, "DIA_Carden_Hunting_Special_ReptileSkin_03_04");
            PRINTSCREEN(PRINT_LEARNTAKEANIMALTROPHYREPTILESKIN, -(1), -(1), FONT_SCREEN, 2);
        };
    };
    if ((NPC_HASITEMS(OTHER, 34203)) < (CARDEN_REPTILESKINTROPHY)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Carden_Hunting_Special_ReptileSkin_03_05");
    };
    DIA_CARDEN_HUNTING_SPECIAL_CHOICES();
}

instance DIA_CARDEN_PICKPOCKET(C_INFO) {
    NPC = 57698;
    NR = 900;
    CONDITION = DIA_CARDEN_PICKPOCKET_CONDITION;
    INFORMATION = DIA_CARDEN_PICKPOCKET_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = PICKPOCKET_80;
}

func int DIA_CARDEN_PICKPOCKET_CONDITION() {
    if (((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) && ((SELF.AIVAR[6]) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CARDEN_PICKPOCKET_INFO() {
    INFO_CLEARCHOICES(85790);
    INFO_ADDCHOICE(85790, DIALOG_BACK, 85794);
    INFO_ADDCHOICE(85790, DIALOG_PICKPOCKET, 85793);
}

func void DIA_CARDEN_PICKPOCKET_DOIT() {
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (2)) {
        CREATEINVITEMS(SELF, 33851, 1);
        B_GIVEINVITEMS(SELF, OTHER, 33851, 1);
        B_PICKPOCKET_AMBIENT_TIER_2();
        SELF.AIVAR[6] = TRUE;
        INFO_CLEARCHOICES(85790);
    };
    AI_PLAYANI(HERO, T_CANNOTTAKE);
    PRINTSCREEN(PRINT_CANTPICKPOCKETTHISPERSON, -(1), -(1), FONT_SCREEN, 4);
    INFO_CLEARCHOICES(85790);
}

func void DIA_CARDEN_PICKPOCKET_BACK() {
    INFO_CLEARCHOICES(85790);
}

instance DIA_CARDEN_SELLFUR(C_INFO) {
    NPC = 57698;
    NR = 770;
    CONDITION = DIA_CARDEN_SELLFUR_CONDITION;
    INFORMATION = DIA_CARDEN_SELLFUR_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "I have everything you need. (Sell skins and fur)";
}

var int CARDENNEEDFUR_RAT_ENOUGH;
var int CARDENNEEDFUR_WOLF_ENOUGH;
var int CARDENNEEDFUR_KEILER_ENOUGH;
var int CARDENNEEDFUR_RAT_COUNT;
var int CARDENNEEDFUR_WOLF_COUNT;
var int CARDENNEEDFUR_KEILER_COUNT;
func int DIA_CARDEN_SELLFUR_CONDITION() {
    if ((SILBACH_NEWS_CARDEN) == (TRUE)) {
        if ((((CARDENNEEDFUR_RAT_ENOUGH) == (FALSE)) || ((CARDENNEEDFUR_WOLF_ENOUGH) == (FALSE))) || ((CARDENNEEDFUR_KEILER_ENOUGH) == (FALSE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

var int CARDEN_FURINSTANCE;
var int CARDEN_FURVALUE;
func void DIA_CARDEN_SELLFUR_CHOICES() {
    CARDEN_FURINSTANCE = -(1);
    CARDEN_FURVALUE = 0;
    if ((((CARDENNEEDFUR_RAT_ENOUGH) == (TRUE)) && ((CARDENNEEDFUR_WOLF_ENOUGH) == (TRUE))) && ((CARDENNEEDFUR_KEILER_ENOUGH) == (TRUE))) {
        INFO_CLEARCHOICES(85795);
    };
    INFO_CLEARCHOICES(85795);
    INFO_ADDCHOICE(85795, DIALOG_BACK, 85810);
    if (((NPC_HASITEMS(OTHER, 35341)) >= (1)) && ((CARDENNEEDFUR_RAT_ENOUGH) == (FALSE))) {
        INFO_ADDCHOICE(85795, THROPHYNAME_RATFUR, 85811);
    };
    if (((NPC_HASITEMS(OTHER, 35342)) >= (1)) && ((CARDENNEEDFUR_RAT_ENOUGH) == (FALSE))) {
        INFO_ADDCHOICE(85795, THROPHYNAME_BLACKRATFUR, 85812);
    };
    if (((NPC_HASITEMS(OTHER, 33848)) >= (1)) && ((CARDENNEEDFUR_WOLF_ENOUGH) == (FALSE))) {
        INFO_ADDCHOICE(85795, THROPHYNAME_WOLFFUR, 85813);
    };
    if (((NPC_HASITEMS(OTHER, 35350)) >= (1)) && ((CARDENNEEDFUR_WOLF_ENOUGH) == (FALSE))) {
        INFO_ADDCHOICE(85795, THROPHYNAME_BLACKWOLFFUR, 85814);
    };
    if (((NPC_HASITEMS(OTHER, 33860)) >= (1)) && ((CARDENNEEDFUR_KEILER_ENOUGH) == (FALSE))) {
        INFO_ADDCHOICE(85795, THROPHYNAME_KEILERSKIN, 85815);
    };
    if (((NPC_HASITEMS(OTHER, 35332)) >= (1)) && ((CARDENNEEDFUR_KEILER_ENOUGH) == (FALSE))) {
        INFO_ADDCHOICE(85795, THROPHYNAME_YKEILERFUR, 85816);
    };
}

func void DIA_CARDEN_SELLFUR_INFO() {
    B_SAY(OTHER, SELF, "$MARVIN_GiveItem3");
    DIA_CARDEN_SELLFUR_CHOICES();
}

func void DIA_CARDEN_SELLFUR_AMMOUNT() {
    var string ALL_STRING;
    var int MAX;
    INFO_CLEARCHOICES(85795);
    MAX = NPC_HASITEMS(HERO, CARDEN_FURINSTANCE);
    ALL_STRING = CS4(DIALOG_ALL, " (", I2S(MAX), ")");
    INFO_ADDCHOICE(85795, ALL_STRING, 85817);
    INFO_ADDCHOICE(85795, CHOICE_NUMBER_5, 85819);
    INFO_ADDCHOICE(85795, CHOICE_NUMBER_1, 85821);
    INFO_ADDCHOICE(85795, DIALOG_BACK, 85805);
}

func void DIA_CARDEN_SELLFUR_BACK() {
    INFO_CLEARCHOICES(85795);
}

func void DIA_CARDEN_SELLFUR_RAT() {
    CARDEN_FURINSTANCE = 35341;
    CARDEN_FURVALUE = VALUE_RATFUR;
    DIA_CARDEN_SELLFUR_AMMOUNT();
}

func void DIA_CARDEN_SELLFUR_BLACKRAT() {
    CARDEN_FURINSTANCE = 35342;
    CARDEN_FURVALUE = VALUE_BLACKRATFUR;
    DIA_CARDEN_SELLFUR_AMMOUNT();
}

func void DIA_CARDEN_SELLFUR_WOLF() {
    CARDEN_FURINSTANCE = 33848;
    CARDEN_FURVALUE = VALUE_WOLFFUR;
    DIA_CARDEN_SELLFUR_AMMOUNT();
}

func void DIA_CARDEN_SELLFUR_BLACKWOLF() {
    CARDEN_FURINSTANCE = 35350;
    CARDEN_FURVALUE = VALUE_BLACKWOLFFUR;
    DIA_CARDEN_SELLFUR_AMMOUNT();
}

func void DIA_CARDEN_SELLFUR_KEILER() {
    CARDEN_FURINSTANCE = 33860;
    CARDEN_FURVALUE = VALUE_KEILERFUR;
    DIA_CARDEN_SELLFUR_AMMOUNT();
}

func void DIA_CARDEN_SELLFUR_YKEILER() {
    CARDEN_FURINSTANCE = 35332;
    CARDEN_FURVALUE = VALUE_YKEILERFUR;
    DIA_CARDEN_SELLFUR_AMMOUNT();
}

func void DIA_CARDEN_SELLFUR_ALL() {
    var int MAX;
    if ((NPC_HASITEMS(OTHER, CARDEN_FURINSTANCE)) >= (1)) {
        MAX = NPC_HASITEMS(HERO, CARDEN_FURINSTANCE);
        B_GIVEINVITEMS(OTHER, SELF, CARDEN_FURINSTANCE, MAX);
        CREATEINVITEMS(SELF, 34203, (MAX) * (CARDEN_FURVALUE));
        B_GIVEINVITEMS(SELF, OTHER, 34203, (MAX) * (CARDEN_FURVALUE));
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        B_SAY(SELF, OTHER, "$REWARD_CALM");
        AI_RESETFACEANI(SELF);
        if (((CARDEN_FURINSTANCE) == (33860)) || ((CARDEN_FURINSTANCE) == (35332))) {
            CARDENNEEDFUR_KEILER_COUNT = (CARDENNEEDFUR_KEILER_COUNT) + (MAX);
            if ((CARDENNEEDFUR_KEILER_COUNT) >= (6)) {
                CARDENNEEDFUR_KEILER_ENOUGH = TRUE;
                if ((CARDENNEEDFUR_KEILER_COUNT) > (6)) {
                    if ((CARDEN_FURINSTANCE) == (33860)) {
                        AI_FUNCTION(SELF, 85822);
                    } else if ((CARDEN_FURINSTANCE) == (35332)) {
                        AI_FUNCTION(SELF, 85823);
                    };
                };
            };
        } else if (((CARDEN_FURINSTANCE) == (33848)) || ((CARDEN_FURINSTANCE) == (35350))) {
            CARDENNEEDFUR_WOLF_COUNT = (CARDENNEEDFUR_WOLF_COUNT) + (MAX);
            if ((CARDENNEEDFUR_WOLF_COUNT) >= (14)) {
                CARDENNEEDFUR_WOLF_ENOUGH = TRUE;
                if ((CARDENNEEDFUR_WOLF_COUNT) > (14)) {
                    if ((CARDEN_FURINSTANCE) == (33848)) {
                        AI_FUNCTION(SELF, 85824);
                    } else if ((CARDEN_FURINSTANCE) == (35350)) {
                        AI_FUNCTION(SELF, 85825);
                    };
                };
            };
        } else if (((CARDEN_FURINSTANCE) == (35341)) || ((CARDEN_FURINSTANCE) == (35342))) {
            CARDENNEEDFUR_RAT_COUNT = (CARDENNEEDFUR_RAT_COUNT) + (MAX);
            if ((CARDENNEEDFUR_RAT_COUNT) >= (16)) {
                CARDENNEEDFUR_RAT_ENOUGH = TRUE;
                if ((CARDENNEEDFUR_RAT_COUNT) > (16)) {
                    if ((CARDEN_FURINSTANCE) == (35341)) {
                        AI_FUNCTION(SELF, 85826);
                    } else if ((CARDEN_FURINSTANCE) == (35342)) {
                        AI_FUNCTION(SELF, 85827);
                    };
                };
            };
        };
        DIA_CARDEN_SELLFUR_CHOICES();
    };
    DIA_CARDEN_SELLFUR_CHOICES();
}

func void DIA_CARDEN_SELLFUR_5() {
    var int MAX;
    if ((NPC_HASITEMS(OTHER, CARDEN_FURINSTANCE)) >= (5)) {
        B_GIVEINVITEMS(OTHER, SELF, CARDEN_FURINSTANCE, 5);
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        B_SAY(SELF, OTHER, "$REWARD_CALM");
        AI_RESETFACEANI(SELF);
        CREATEINVITEMS(SELF, 34203, (5) * (CARDEN_FURVALUE));
        if (((CARDEN_FURINSTANCE) == (33860)) || ((CARDEN_FURINSTANCE) == (35332))) {
            CARDENNEEDFUR_KEILER_COUNT = (CARDENNEEDFUR_KEILER_COUNT) + (5);
            if ((CARDENNEEDFUR_KEILER_COUNT) >= (6)) {
                CARDENNEEDFUR_KEILER_ENOUGH = TRUE;
                if ((CARDENNEEDFUR_KEILER_COUNT) > (6)) {
                    if ((CARDEN_FURINSTANCE) == (33860)) {
                        AI_FUNCTION(SELF, 85822);
                    } else if ((CARDEN_FURINSTANCE) == (35332)) {
                        AI_FUNCTION(SELF, 85823);
                    };
                };
            };
        } else if (((CARDEN_FURINSTANCE) == (33848)) || ((CARDEN_FURINSTANCE) == (35350))) {
            CARDENNEEDFUR_WOLF_COUNT = (CARDENNEEDFUR_WOLF_COUNT) + (5);
            if ((CARDENNEEDFUR_WOLF_COUNT) >= (14)) {
                CARDENNEEDFUR_WOLF_ENOUGH = TRUE;
                if ((CARDENNEEDFUR_WOLF_COUNT) > (14)) {
                    if ((CARDEN_FURINSTANCE) == (33848)) {
                        AI_FUNCTION(SELF, 85824);
                    } else if ((CARDEN_FURINSTANCE) == (35350)) {
                        AI_FUNCTION(SELF, 85825);
                    };
                };
            };
        } else if (((CARDEN_FURINSTANCE) == (35341)) || ((CARDEN_FURINSTANCE) == (35342))) {
            CARDENNEEDFUR_RAT_COUNT = (CARDENNEEDFUR_RAT_COUNT) + (5);
            if ((CARDENNEEDFUR_RAT_COUNT) >= (16)) {
                CARDENNEEDFUR_RAT_ENOUGH = TRUE;
                if ((CARDENNEEDFUR_RAT_COUNT) > (16)) {
                    if ((CARDEN_FURINSTANCE) == (35341)) {
                        AI_FUNCTION(SELF, 85826);
                    } else if ((CARDEN_FURINSTANCE) == (35342)) {
                        AI_FUNCTION(SELF, 85827);
                    };
                };
            };
        };
        if ((((((((CARDEN_FURINSTANCE) == (35341)) && ((CARDENNEEDFUR_RAT_ENOUGH) == (FALSE))) || (((CARDEN_FURINSTANCE) == (35342)) && ((CARDENNEEDFUR_RAT_ENOUGH) == (FALSE)))) || (((CARDEN_FURINSTANCE) == (33848)) && ((CARDENNEEDFUR_WOLF_ENOUGH) == (FALSE)))) || (((CARDEN_FURINSTANCE) == (35350)) && ((CARDENNEEDFUR_WOLF_ENOUGH) == (FALSE)))) || (((CARDEN_FURINSTANCE) == (33860)) && ((CARDENNEEDFUR_KEILER_ENOUGH) == (FALSE)))) || (((CARDEN_FURINSTANCE) == (35332)) && ((CARDENNEEDFUR_KEILER_ENOUGH) == (FALSE)))) {
            DIA_CARDEN_SELLFUR_AMMOUNT();
        } else {
            DIA_CARDEN_SELLFUR_CHOICES();
        };
    };
    if (((NPC_HASITEMS(OTHER, CARDEN_FURINSTANCE)) >= (1)) && ((NPC_HASITEMS(OTHER, CARDEN_FURINSTANCE)) < (5))) {
        MAX = NPC_HASITEMS(HERO, CARDEN_FURINSTANCE);
        B_GIVEINVITEMS(OTHER, SELF, CARDEN_FURINSTANCE, MAX);
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        B_SAY(SELF, OTHER, "$REWARD_CALM");
        AI_RESETFACEANI(SELF);
        CREATEINVITEMS(SELF, 34203, (MAX) * (CARDEN_FURVALUE));
        if (((CARDEN_FURINSTANCE) == (33860)) || ((CARDEN_FURINSTANCE) == (35332))) {
            CARDENNEEDFUR_KEILER_COUNT = (CARDENNEEDFUR_KEILER_COUNT) + (MAX);
            if ((CARDENNEEDFUR_KEILER_COUNT) >= (6)) {
                CARDENNEEDFUR_KEILER_ENOUGH = TRUE;
                if ((CARDENNEEDFUR_KEILER_COUNT) > (6)) {
                    if ((CARDEN_FURINSTANCE) == (33860)) {
                        AI_FUNCTION(SELF, 85822);
                    } else if ((CARDEN_FURINSTANCE) == (35332)) {
                        AI_FUNCTION(SELF, 85823);
                    };
                };
            };
        } else if (((CARDEN_FURINSTANCE) == (33848)) || ((CARDEN_FURINSTANCE) == (35350))) {
            CARDENNEEDFUR_WOLF_COUNT = (CARDENNEEDFUR_WOLF_COUNT) + (MAX);
            if ((CARDENNEEDFUR_WOLF_COUNT) >= (14)) {
                CARDENNEEDFUR_WOLF_ENOUGH = TRUE;
                if ((CARDENNEEDFUR_WOLF_COUNT) > (14)) {
                    if ((CARDEN_FURINSTANCE) == (33848)) {
                        AI_FUNCTION(SELF, 85824);
                    } else if ((CARDEN_FURINSTANCE) == (35350)) {
                        AI_FUNCTION(SELF, 85825);
                    };
                };
            };
        } else if (((CARDEN_FURINSTANCE) == (35341)) || ((CARDEN_FURINSTANCE) == (35342))) {
            CARDENNEEDFUR_RAT_COUNT = (CARDENNEEDFUR_RAT_COUNT) + (MAX);
            if ((CARDENNEEDFUR_RAT_COUNT) >= (16)) {
                CARDENNEEDFUR_RAT_ENOUGH = TRUE;
                if ((CARDENNEEDFUR_RAT_COUNT) > (16)) {
                    if ((CARDEN_FURINSTANCE) == (35341)) {
                        AI_FUNCTION(SELF, 85826);
                    } else if ((CARDEN_FURINSTANCE) == (35342)) {
                        AI_FUNCTION(SELF, 85827);
                    };
                };
            };
        };
        if ((((((((CARDEN_FURINSTANCE) == (35341)) && ((CARDENNEEDFUR_RAT_ENOUGH) == (FALSE))) || (((CARDEN_FURINSTANCE) == (35342)) && ((CARDENNEEDFUR_RAT_ENOUGH) == (FALSE)))) || (((CARDEN_FURINSTANCE) == (33848)) && ((CARDENNEEDFUR_WOLF_ENOUGH) == (FALSE)))) || (((CARDEN_FURINSTANCE) == (35350)) && ((CARDENNEEDFUR_WOLF_ENOUGH) == (FALSE)))) || (((CARDEN_FURINSTANCE) == (33860)) && ((CARDENNEEDFUR_KEILER_ENOUGH) == (FALSE)))) || (((CARDEN_FURINSTANCE) == (35332)) && ((CARDENNEEDFUR_KEILER_ENOUGH) == (FALSE)))) {
            DIA_CARDEN_SELLFUR_AMMOUNT();
        } else {
            DIA_CARDEN_SELLFUR_CHOICES();
        };
    };
    if ((NPC_HASITEMS(OTHER, CARDEN_FURINSTANCE)) == (0)) {
        DIA_CARDEN_SELLFUR_CHOICES();
    };
}

func void DIA_CARDEN_SELLFUR_1() {
    if ((NPC_HASITEMS(OTHER, CARDEN_FURINSTANCE)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, CARDEN_FURINSTANCE, 1);
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        B_SAY(SELF, OTHER, "$REWARD_CALM");
        AI_RESETFACEANI(SELF);
        CREATEINVITEMS(SELF, 34203, CARDEN_FURVALUE);
        if (((CARDEN_FURINSTANCE) == (33860)) || ((CARDEN_FURINSTANCE) == (35332))) {
            CARDENNEEDFUR_KEILER_COUNT = (CARDENNEEDFUR_KEILER_COUNT) + (1);
            if ((CARDENNEEDFUR_KEILER_COUNT) >= (6)) {
                CARDENNEEDFUR_KEILER_ENOUGH = TRUE;
                if ((CARDENNEEDFUR_KEILER_COUNT) > (6)) {
                    if ((CARDEN_FURINSTANCE) == (33860)) {
                        AI_FUNCTION(SELF, 85822);
                    } else if ((CARDEN_FURINSTANCE) == (35332)) {
                        AI_FUNCTION(SELF, 85823);
                    };
                };
            };
        } else if (((CARDEN_FURINSTANCE) == (33848)) || ((CARDEN_FURINSTANCE) == (35350))) {
            CARDENNEEDFUR_WOLF_COUNT = (CARDENNEEDFUR_WOLF_COUNT) + (1);
            if ((CARDENNEEDFUR_WOLF_COUNT) >= (14)) {
                CARDENNEEDFUR_WOLF_ENOUGH = TRUE;
                if ((CARDENNEEDFUR_WOLF_COUNT) > (14)) {
                    if ((CARDEN_FURINSTANCE) == (33848)) {
                        AI_FUNCTION(SELF, 85824);
                    } else if ((CARDEN_FURINSTANCE) == (35350)) {
                        AI_FUNCTION(SELF, 85825);
                    };
                };
            };
        } else if (((CARDEN_FURINSTANCE) == (35341)) || ((CARDEN_FURINSTANCE) == (35342))) {
            CARDENNEEDFUR_RAT_COUNT = (CARDENNEEDFUR_RAT_COUNT) + (1);
            if ((CARDENNEEDFUR_RAT_COUNT) >= (16)) {
                CARDENNEEDFUR_RAT_ENOUGH = TRUE;
                if ((CARDENNEEDFUR_RAT_COUNT) > (16)) {
                    if ((CARDEN_FURINSTANCE) == (35341)) {
                        AI_FUNCTION(SELF, 85826);
                    } else if ((CARDEN_FURINSTANCE) == (35342)) {
                        AI_FUNCTION(SELF, 85827);
                    };
                };
            };
        };
        if ((((((((CARDEN_FURINSTANCE) == (35341)) && ((CARDENNEEDFUR_RAT_ENOUGH) == (FALSE))) || (((CARDEN_FURINSTANCE) == (35342)) && ((CARDENNEEDFUR_RAT_ENOUGH) == (FALSE)))) || (((CARDEN_FURINSTANCE) == (33848)) && ((CARDENNEEDFUR_WOLF_ENOUGH) == (FALSE)))) || (((CARDEN_FURINSTANCE) == (35350)) && ((CARDENNEEDFUR_WOLF_ENOUGH) == (FALSE)))) || (((CARDEN_FURINSTANCE) == (33860)) && ((CARDENNEEDFUR_KEILER_ENOUGH) == (FALSE)))) || (((CARDEN_FURINSTANCE) == (35332)) && ((CARDENNEEDFUR_KEILER_ENOUGH) == (FALSE)))) {
            DIA_CARDEN_SELLFUR_AMMOUNT();
        } else {
            DIA_CARDEN_SELLFUR_CHOICES();
        };
    };
    if ((NPC_HASITEMS(OTHER, CARDEN_FURINSTANCE)) == (0)) {
        DIA_CARDEN_SELLFUR_CHOICES();
    };
}

func void CARDEN_GIVEBACKSTUFF_KEILER() {
    NPC_REMOVEINVITEMS(NONE_6262_CARDEN, 34203, (VALUE_KEILERFUR) * ((CARDENNEEDFUR_KEILER_COUNT) - (6)));
    PRINTSCREENS(PRINT_CARDENFUR, -(1), -(1), FONT_SCREENSMALL, 4);
    B_GIVEINVITEMS(HERO, NONE_6262_CARDEN, 34203, (VALUE_KEILERFUR) * ((CARDENNEEDFUR_KEILER_COUNT) - (6)));
}

func void CARDEN_GIVEBACKSTUFF_YKEILER() {
    NPC_REMOVEINVITEMS(NONE_6262_CARDEN, 34203, (VALUE_YKEILERFUR) * ((CARDENNEEDFUR_KEILER_COUNT) - (6)));
    PRINTSCREENS(PRINT_CARDENFUR, -(1), -(1), FONT_SCREENSMALL, 4);
    B_GIVEINVITEMS(HERO, NONE_6262_CARDEN, 34203, (VALUE_YKEILERFUR) * ((CARDENNEEDFUR_KEILER_COUNT) - (6)));
}

func void CARDEN_GIVEBACKSTUFF_WOLF() {
    NPC_REMOVEINVITEMS(NONE_6262_CARDEN, 34203, (VALUE_WOLFFUR) * ((CARDENNEEDFUR_WOLF_COUNT) - (14)));
    PRINTSCREENS(PRINT_CARDENFUR, -(1), -(1), FONT_SCREENSMALL, 4);
    B_GIVEINVITEMS(HERO, NONE_6262_CARDEN, 34203, (VALUE_WOLFFUR) * ((CARDENNEEDFUR_WOLF_COUNT) - (14)));
}

func void CARDEN_GIVEBACKSTUFF_BLACKWOLF() {
    NPC_REMOVEINVITEMS(NONE_6262_CARDEN, 34203, (VALUE_BLACKWOLFFUR) * ((CARDENNEEDFUR_WOLF_COUNT) - (14)));
    PRINTSCREENS(PRINT_CARDENFUR, -(1), -(1), FONT_SCREENSMALL, 4);
    B_GIVEINVITEMS(HERO, NONE_6262_CARDEN, 34203, (VALUE_BLACKWOLFFUR) * ((CARDENNEEDFUR_WOLF_COUNT) - (14)));
}

func void CARDEN_GIVEBACKSTUFF_RAT() {
    NPC_REMOVEINVITEMS(NONE_6262_CARDEN, 34203, (VALUE_RATFUR) * ((CARDENNEEDFUR_RAT_COUNT) - (16)));
    PRINTSCREENS(PRINT_CARDENFUR, -(1), -(1), FONT_SCREENSMALL, 4);
    B_GIVEINVITEMS(HERO, NONE_6262_CARDEN, 34203, (VALUE_RATFUR) * ((CARDENNEEDFUR_RAT_COUNT) - (16)));
}

func void CARDEN_GIVEBACKSTUFF_BLACKRAT() {
    NPC_REMOVEINVITEMS(NONE_6262_CARDEN, 34203, (VALUE_BLACKRATFUR) * ((CARDENNEEDFUR_RAT_COUNT) - (16)));
    PRINTSCREENS(PRINT_CARDENFUR, -(1), -(1), FONT_SCREENSMALL, 4);
    B_GIVEINVITEMS(HERO, NONE_6262_CARDEN, 34203, (VALUE_BLACKRATFUR) * ((CARDENNEEDFUR_RAT_COUNT) - (16)));
}

