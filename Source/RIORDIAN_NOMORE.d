var int RIORDIAN_NOMORE;
instance DIA_RIORDIAN_EXIT(C_INFO) {
    NPC = 56616;
    NR = 999;
    CONDITION = DIA_RIORDIAN_EXIT_CONDITION;
    INFORMATION = DIA_RIORDIAN_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_RIORDIAN_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_RIORDIAN_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_RIORDIAN_Q108_BUSY(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_Q108_BUSY_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q108_BUSY_INFO;
    PERMANENT = TRUE;
    IMPORTANT = TRUE;
}

func int DIA_RIORDIAN_Q108_BUSY_CONDITION() {
    if (((NPC_ISINSTATE(SELF, 61599)) && ((NPC_KNOWSINFO(OTHER, 88391)) == (FALSE))) && ((KAPITEL) == (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_Q108_BUSY_INFO() {
    B_SAY(SELF, OTHER, "$IMBUSY_CALM");
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_RIORDIAN_Q108_HELLO(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_Q108_HELLO_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q108_HELLO_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "You're Riordian, right?";
}

func int DIA_RIORDIAN_Q108_HELLO_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q108)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 88391))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_Q108_HELLO_INFO() {
    ACH_6_RIORDIAN = TRUE;
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q108_Hello_15_01");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q108_Hello_03_02");
    AI_RESETFACEANI(OTHER);
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q108_Hello_15_03");
    B_GIVEINVITEMS(OTHER, SELF, 37005, 1);
    B_USEFAKESCROLL();
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q108_Hello_03_04");
    B_GIVEINVITEMS(SELF, OTHER, 37005, 1);
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q108_Hello_03_05");
    AI_LOGENTRY(TOPIC_Q108, LOG_Q108_RIORDIAN_AGREE);
}

instance DIA_RIORDIAN_Q108_LETSGO(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_Q108_LETSGO_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q108_LETSGO_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Let's go.";
}

func int DIA_RIORDIAN_Q108_LETSGO_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q108)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 79564))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_Q108_LETSGO_INFO() {
    SELF.AIVAR[15] = TRUE;
    B_SAY(OTHER, SELF, "$MARVIN_LETSGO");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q108_LetsGo_03_02");
    NPC_EXCHANGEROUTINE(SELF, "Q108_GUIDE");
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_RIORDIAN_Q108_RIGHTPLACE(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_Q108_RIGHTPLACE_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q108_RIGHTPLACE_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_RIORDIAN_Q108_RIGHTPLACE_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_Q108)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 79567))) && ((NPC_GETDISTTOWP(SELF, "PART15_ADANOS")) <= (500))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_Q108_RIGHTPLACE_INFO() {
    SELF.AIVAR[15] = FALSE;
    NPC_EXCHANGEROUTINE(SELF, "Q108_ADANOS");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q108_RightPlace_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q108_RightPlace_03_02");
    AI_TURNAWAY(SELF, OTHER);
    AI_PLAYANI(SELF, T_PLUNDER);
    AI_TURNTONPC(SELF, OTHER);
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q108_RightPlace_03_03");
    CREATEINVITEMS(SELF, 37008, 1);
    B_GIVEINVITEMS(SELF, OTHER, 37008, 1);
    AI_STARTFACEANI(SELF, S_THINK, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q108_RightPlace_03_04");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q108_RightPlace_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q108_RightPlace_03_06");
    AI_LOGENTRY(TOPIC_Q108, LOG_Q108_RIORDIAN_RIGHTPLACE);
    CREATEINVITEMS(SELF, 38182, 1);
    B_GIVEINVITEMS(SELF, OTHER, 38182, 1);
}

instance DIA_RIORDIAN_Q108_GOTPLANTS(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_Q108_GOTPLANTS_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q108_GOTPLANTS_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I already have all the plants I need.";
}

func int DIA_RIORDIAN_Q108_GOTPLANTS_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_Q108)) == (LOG_RUNNING)) && (Q108_IGOTPLANTS(HERO))) && ((NPC_KNOWSINFO(OTHER, 88395)) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_Q108_GOTPLANTS_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q108_GotPlants_15_01");
    AI_STARTFACEANI(SELF, S_SURPRISE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q108_GotPlants_03_02");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q108_GotPlants_03_03");
    AI_LOGENTRY(TOPIC_Q108, LOG_Q108_RIORDIAN_DONTWAIT);
}

instance DIA_RIORDIAN_ASK(C_INFO) {
    NPC = 56616;
    NR = 900;
    CONDITION = DIA_RIORDIAN_ASK_CONDITION;
    INFORMATION = DIA_RIORDIAN_ASK_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "I wanted to ask you something else...";
}

var int RIORDIAN_ASK_MAGES;
var int RIORDIAN_ASK_NOVIZE;
var int RIORDIAN_ASK_MAGIC;
var int RIORDIAN_ASK_COUNT;
var int RIORDIAN_ASK_ABOUTQUEST;
func int DIA_RIORDIAN_ASK_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q108)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 79570))) {
        if ((((RIORDIAN_ASK_MAGES) == (FALSE)) || ((RIORDIAN_ASK_NOVIZE) == (FALSE))) || ((RIORDIAN_ASK_MAGIC) == (FALSE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_ASK_CHOICES() {
    INFO_CLEARCHOICES(79576);
    INFO_ADDCHOICE(79576, DIALOG_BACK, 79588);
    if ((RIORDIAN_ASK_MAGES) == (FALSE)) {
        INFO_ADDCHOICE(79576, "Are there more novices and mages living on the island?", 79585);
    };
    if ((RIORDIAN_ASK_NOVIZE) == (FALSE)) {
        INFO_ADDCHOICE(79576, "Could I become a novice too?", 79586);
    };
    if ((RIORDIAN_ASK_MAGIC) == (FALSE)) {
        INFO_ADDCHOICE(79576, "So there's no way I can practice magic?", 79587);
    };
}

func void DIA_RIORDIAN_ASK_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Ask_15_01");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Ask_03_02");
    DIA_RIORDIAN_ASK_CHOICES();
}

func void DIA_RIORDIAN_ASK_MAGES() {
    RIORDIAN_ASK_COUNT = (RIORDIAN_ASK_COUNT) + (1);
    RIORDIAN_ASK_MAGES = TRUE;
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Ask_Mages_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Ask_Mages_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Ask_Mages_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Ask_Mages_03_04");
    AI_RESETFACEANI(OTHER);
    DIA_RIORDIAN_ASK_CHOICES();
}

func void DIA_RIORDIAN_ASK_NOVIZE() {
    RIORDIAN_ASK_COUNT = (RIORDIAN_ASK_COUNT) + (1);
    RIORDIAN_ASK_NOVIZE = TRUE;
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Ask_Novize_15_01");
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Ask_Novize_03_02");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Ask_Novize_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Ask_Novize_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Ask_Novize_03_05");
    DIA_RIORDIAN_ASK_CHOICES();
}

func void DIA_RIORDIAN_ASK_MAGIC() {
    RIORDIAN_ASK_COUNT = (RIORDIAN_ASK_COUNT) + (1);
    RIORDIAN_ASK_MAGIC = TRUE;
    AI_STARTFACEANI(OTHER, S_NOPE, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Ask_Magic_15_01");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Ask_Magic_03_02");
    CREATEINVITEMS(SELF, 34688, 1);
    B_GIVEINVITEMS(SELF, OTHER, 34688, 1);
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Ask_Magic_03_03");
    AI_STARTFACEANI(SELF, S_THINK, 1, -(1));
    AI_PLAYANI(SELF, T_SEARCH);
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Ask_Magic_03_04");
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Ask_Magic_03_05");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    LOG_CREATETOPIC(TOPIC_MAGIC, LOG_NOTE);
    AI_LOGENTRY(TOPIC_MAGIC, LOG_MAGIC_RIORDIAN_INTRODUCE);
    DIA_RIORDIAN_ASK_CHOICES();
}

func void DIA_RIORDIAN_ASK_BACK() {
    if ((RIORDIAN_ASK_ABOUTQUEST) == (FALSE)) {
        if ((RIORDIAN_ASK_COUNT) >= (2)) {
            RIORDIAN_ASK_ABOUTQUEST = TRUE;
            Q108_RIORDIANWANTSTOMEETUP = TRUE;
            AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Ask_BACK_03_01");
            AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Ask_BACK_03_02");
            AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Ask_BACK_03_03");
            AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Ask_BACK_03_04");
            LOG_CREATETOPIC(TOPIC_MAGIC, LOG_NOTE);
            AI_LOGENTRY(TOPIC_MAGIC, LOG_MAGIC_RIORDIAN_QUEST);
            LOG_CREATETOPIC(TOPIC_SQ121, LOG_MISSION);
            LOG_SETSTATUS(_@(MIS_SQ121), TOPIC_SQ121, LOG_RUNNING);
            AI_LOGENTRY(TOPIC_SQ121, LOG_MAGIC_RIORDIAN_QUEST);
        };
    };
    INFO_CLEARCHOICES(79576);
}

instance DIA_RIORDIAN_SQ121_START(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_SQ121_START_CONDITION;
    INFORMATION = DIA_RIORDIAN_SQ121_START_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Then what's the job?";
}

func int DIA_RIORDIAN_SQ121_START_CONDITION() {
    if (((((LOG_GETSTATUS(MIS_Q108)) == (LOG_SUCCESS)) && ((Q108_RIORDIANWANTSTOMEETUP) == (TRUE))) && ((SQ118_EZEKIEL_SEARCHFLORA) != (2))) && ((KAPITEL) == (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_SQ121_START_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_SQ121_Start_15_01");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_Start_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_Start_03_03");
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_Start_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_Start_03_05");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_Start_03_06");
    AI_RESETFACEANI(OTHER);
    INFO_CLEARCHOICES(79589);
    INFO_ADDCHOICE(79589, "I think I know where this is going...", 79594);
    INFO_ADDCHOICE(79589, "But I can't transcribe scrolls!", 79593);
}

func void DIA_RIORDIAN_SQ121_START_NEXT() {
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_RESETFACEANI(OTHER);
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_Start_Next_03_01");
    INFO_CLEARCHOICES(79589);
    INFO_ADDCHOICE(79589, "I don't think this is for me. I quit.", 79596);
    INFO_ADDCHOICE(79589, "All right, let's get to work.", 79595);
}

func void DIA_RIORDIAN_SQ121_START_CANT() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_SQ121_Start_Cant_15_01");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_Start_Cant_03_02");
    DIA_RIORDIAN_SQ121_START_NEXT();
}

func void DIA_RIORDIAN_SQ121_START_KNOW() {
    AI_STARTFACEANI(OTHER, S_THINK, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_SQ121_Start_Know_15_01");
    AI_STARTFACEANI(SELF, S_DOUBT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_Start_Know_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_Start_Know_03_03");
    DIA_RIORDIAN_SQ121_START_NEXT();
}

func void DIA_RIORDIAN_SQ121_START_KNOW_NEXT_YES() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_SQ121_Start_Yes_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_Start_Yes_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_Start_Yes_03_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_SQ121_Start_Yes_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_Start_Yes_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_Start_Yes_03_06");
    INFO_CLEARCHOICES(79589);
    AI_STOPPROCESSINFOS(SELF);
    AI_FUNCTION(SELF, 62080);
}

func void DIA_RIORDIAN_SQ121_START_KNOW_NEXT_NO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_SQ121_Start_No_15_01");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_Start_No_03_02");
    LOG_CREATETOPIC(TOPIC_SQ121, LOG_MISSION);
    LOG_SETSTATUS(_@(MIS_SQ121), TOPIC_SQ121, LOG_FAILED);
    AI_LOGENTRY(TOPIC_SQ121, LOG_SQ121_FAILED);
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_RIORDIAN_SQ121_SCROLLTIME(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_SQ121_SCROLLTIME_CONDITION;
    INFORMATION = DIA_RIORDIAN_SQ121_SCROLLTIME_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_RIORDIAN_SQ121_SCROLLTIME_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_SQ121)) == (LOG_RUNNING)) && ((SQ121_LOKVARSLEEPINGTIME) == (TRUE))) && ((KAPITEL) == (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_SQ121_SCROLLTIME_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_ScrollTime_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_ScrollTime_03_02");
    CREATEINVITEMS(SELF, 35988, 5);
    B_GIVEINVITEMS(SELF, OTHER, 35988, 5);
    CREATEINVITEMS(SELF, 34688, 1);
    B_GIVEINVITEMS(SELF, OTHER, 34688, 1);
    CREATEINVITEMS(SELF, 35989, 15);
    B_GIVEINVITEMS(SELF, OTHER, 35989, 15);
    CREATEINVITEMS(SELF, 36066, 1);
    B_GIVEINVITEMS(SELF, OTHER, 36066, 1);
    AI_LOGENTRY(TOPIC_SQ121, LOG_SQ121_RIORDIAN_SCROLLTIME);
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_RIORDIAN_SQ121_MYTURN(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_SQ121_MYTURN_CONDITION;
    INFORMATION = DIA_RIORDIAN_SQ121_MYTURN_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_RIORDIAN_SQ121_MYTURN_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_SQ121)) == (LOG_RUNNING)) && ((SQ121_CREATESCROLLCOUNT) == (5))) && ((KAPITEL) == (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_SQ121_GIVESCROLLS() {
    if ((NPC_HASITEMS(OTHER, 34688)) == (0)) {
        SQ121_CREATESCROLLSUCCESSCOUNT = 0;
    };
    if ((SQ121_CREATESCROLLSUCCESSCOUNT) >= (1)) {
        B_USEFAKESCROLL();
        B_GIVEINVITEMS(OTHER, SELF, 34688, (SQ121_CREATESCROLLSUCCESSCOUNT) + (1));
        B_GIVEPLAYERXP((XP_SQ121_SCROLLSUCCESS) * (SQ121_CREATESCROLLSUCCESSCOUNT));
    };
    B_GIVEINVITEMS(OTHER, SELF, 34688, 1);
}

func void DIA_RIORDIAN_SQ121_MYTURN_INFO() {
    if ((NPC_HASITEMS(OTHER, 36066)) == (0)) {
        CREATEINVITEMS(SELF, 36066, 1);
        B_GIVEINVITEMS(SELF, OTHER, 36066, 1);
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_MyTurn_03_05");
    DIA_RIORDIAN_SQ121_GIVESCROLLS();
    if ((SQ121_CREATESCROLLSUCCESSCOUNT) == (0)) {
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_MyTurn_03_02");
    };
    if (((SQ121_CREATESCROLLSUCCESSCOUNT) >= (1)) && ((SQ121_CREATESCROLLSUCCESSCOUNT) < (5))) {
        AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_MyTurn_03_03");
    };
    if ((SQ121_CREATESCROLLSUCCESSCOUNT) == (5)) {
        AI_STARTFACEANI(SELF, S_SURPRISE, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_MyTurn_03_04");
    };
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_MyTurn_03_06");
    AI_STARTFACEANI(OTHER, S_TIRED, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_SQ121_MyTurn_15_07");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_MyTurn_03_08");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    CREATEINVITEMS(SELF, 34695, 1);
    B_GIVEINVITEMS(SELF, OTHER, 34695, 1);
    NPC_EXCHANGEROUTINE(SELF, "SQ121_MYTURN");
    AI_LOGENTRY(TOPIC_SQ121, LOG_SQ121_RIORDIAN_MYTURN);
    AI_STOPPROCESSINFOS(SELF);
    AI_FUNCTION(SELF, 62087);
}

instance DIA_RIORDIAN_SQ121_AFTERLOKVAR(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_SQ121_AFTERLOKVAR_CONDITION;
    INFORMATION = DIA_RIORDIAN_SQ121_AFTERLOKVAR_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Lokvar almost woke up, but went back to sleep.";
}

func int DIA_RIORDIAN_SQ121_AFTERLOKVAR_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_SQ121)) == (LOG_RUNNING)) && ((SQ121_LOKVARSLEEPINGTIME) == (3))) && ((KAPITEL) == (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_SQ121_AFTERLOKVAR_INFO() {
    if ((NPC_HASITEMS(OTHER, 36066)) == (0)) {
        CREATEINVITEMS(SELF, 36066, 1);
        B_GIVEINVITEMS(SELF, OTHER, 36066, 1);
    };
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_SQ121_AfterLokvar_15_01");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_AfterLokvar_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_AfterLokvar_03_03");
    CREATEINVITEMS(SELF, 35988, 1);
    B_GIVEINVITEMS(SELF, OTHER, 35988, 1);
    CREATEINVITEMS(SELF, 34701, 1);
    B_GIVEINVITEMS(SELF, OTHER, 34701, 1);
    CREATEINVITEMS(SELF, 35989, 15);
    B_GIVEINVITEMS(SELF, OTHER, 35989, 15);
    AI_STOPPROCESSINFOS(SELF);
    NPC_EXCHANGEROUTINE(SELF, "SQ121_INSIDEHOUSE");
    AI_FUNCTION(SELF, 62090);
}

instance DIA_RIORDIAN_SQ121_FINISH(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_SQ121_FINISH_CONDITION;
    INFORMATION = DIA_RIORDIAN_SQ121_FINISH_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I failed to transcribe the last scroll.";
}

func int DIA_RIORDIAN_SQ121_FINISH_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_SQ121)) == (LOG_RUNNING)) && ((SQ121_CREATEFINALSCROLL) == (TRUE))) && ((KAPITEL) == (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_SQ121_FINISH_INFO() {
    B_GIVEINVITEMS(OTHER, SELF, 34701, 1);
    AI_STARTFACEANI(OTHER, S_TIRED, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_SQ121_Finish_15_01");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_Finish_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_Finish_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_Finish_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_Finish_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_Finish_03_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_Finish_03_07");
    AI_RESETFACEANI(OTHER);
    INFO_CLEARCHOICES(79607);
    INFO_ADDCHOICE(79607, "No, I prefer to stay away from magic.", 79612);
    INFO_ADDCHOICE(79607, "I'd like to learn something about magic.", 79611);
}

func void DIA_RIORDIAN_SQ121_FINISH_NEXT() {
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_Finish_Next_03_01");
    CREATEINVITEMS(SELF, 35988, 10);
    B_GIVEINVITEMS(SELF, OTHER, 35988, 10);
    CREATEINVITEMS(SELF, 34691, 1);
    B_GIVEINVITEMS(SELF, OTHER, 34691, 1);
    CREATEINVITEMS(SELF, 33715, 1);
    B_GIVEINVITEMS(SELF, OTHER, 33715, 1);
    CREATEINVITEMS(SELF, 35989, 10);
    B_GIVEINVITEMS(SELF, OTHER, 35989, 10);
    CREATEINVITEMS(SELF, 36066, 2);
    B_GIVEINVITEMS(SELF, OTHER, 36066, 2);
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_Finish_Next_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_Finish_Next_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_Finish_Next_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_Finish_Next_03_05");
    AI_LOGENTRY(TOPIC_SQ121, LOG_SQ121_FINISH);
    LOG_SETSTATUS(_@(MIS_SQ121), TOPIC_SQ121, LOG_SUCCESS);
    B_GIVEPLAYERXP(XP_SQ121_FINISH);
    LOG_CREATETOPIC(TOPIC_SCROLLS, LOG_NOTE);
    AI_LOGENTRY(TOPIC_SCROLLS, LOG_MAGIC_RIORDIAN_SCROLLS);
    INFO_CLEARCHOICES(79607);
    AI_STOPPROCESSINFOS(SELF);
    NPC_EXCHANGEROUTINE(SELF, "SQ121_MYTURN");
    AI_FUNCTION(SELF, 62091);
}

func void DIA_RIORDIAN_SQ121_FINISH_YES() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_SQ121_Finish_Yes_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_Finish_Yes_03_02");
    CREATEINVITEMS(SELF, 40834, 1);
    B_GIVEINVITEMS(SELF, OTHER, 40834, 1);
    LOG_CREATETOPIC(TOPIC_MAGIC, LOG_NOTE);
    AI_LOGENTRY(TOPIC_MAGIC, LOG_MAGIC_RIORDIAN_BOOK);
    DIA_RIORDIAN_SQ121_FINISH_NEXT();
}

func void DIA_RIORDIAN_SQ121_FINISH_NO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_SQ121_Finish_No_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ121_Finish_No_03_02");
    DIA_RIORDIAN_SQ121_FINISH_NEXT();
}

var int Q501_AMBIENTBLOCK;
instance DIA_RIORDIAN_Q501_START(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_Q501_START_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q501_START_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_RIORDIAN_Q501_START_CONDITION() {
    if ((KAPITEL) == (5)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_Q501_START_INFO() {
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Start_03_01");
    Q501_AMBIENTBLOCK = TRUE;
    INFO_CLEARCHOICES(79614);
    INFO_ADDCHOICE(79614, "Where am I? What happened?", 79618);
    INFO_ADDCHOICE(79614, "Riordian? Since when are you a mage?", 79617);
}

func void DIA_RIORDIAN_Q501_START_MAGE() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q501_Start_Mage_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Start_Mage_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Start_Mage_03_03");
    AI_RESETFACEANI(OTHER);
}

func void DIA_RIORDIAN_Q501_START_WHERE() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q501_Start_Where_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Start_Where_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Start_Where_03_03");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Start_Where_03_04");
    AI_RESETFACEANI(OTHER);
    AI_RESETFACEANI(SELF);
    LOG_CREATETOPIC(TOPIC_Q501, LOG_MISSION);
    LOG_SETSTATUS(_@(MIS_Q501), TOPIC_Q501, LOG_RUNNING);
    AI_LOGENTRY(TOPIC_Q501, LOG_Q501_START);
    INFO_CLEARCHOICES(79614);
}

instance DIA_RIORDIAN_Q501_MYSTUFF(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_Q501_MYSTUFF_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q501_MYSTUFF_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Where's all my stuff?";
}

func int DIA_RIORDIAN_Q501_MYSTUFF_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q501)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 79614))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_Q501_MYSTUFF_INFO() {
    AI_STARTFACEANI(OTHER, S_THINK, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q501_MyStuff_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_MyStuff_03_02");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_MyStuff_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_MyStuff_03_04");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_MyStuff_03_05");
    AI_RESETFACEANI(SELF);
    AI_LOGENTRY(TOPIC_Q501, LOG_Q501_RIORDIAN_STUFF);
    INFO_CLEARCHOICES(79619);
    INFO_ADDCHOICE(79619, "Does this whole Prior know about all that happened?", 79622);
}

func void DIA_RIORDIAN_Q501_MYSTUFF_PRIOR() {
    AI_STARTFACEANI(OTHER, S_SERIOUS, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q501_MyStuff_Prior_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_MyStuff_Prior_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_MyStuff_Prior_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_MyStuff_Prior_03_04");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_MyStuff_Prior_03_05");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    INFO_CLEARCHOICES(79619);
}

instance DIA_RIORDIAN_Q501_KESSEL(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_Q501_KESSEL_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q501_KESSEL_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "What state is Kessel in?";
}

func int DIA_RIORDIAN_Q501_KESSEL_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q501)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 79614))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_Q501_KESSEL_INFO() {
    AI_STARTFACEANI(OTHER, S_TIRED, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q501_Kessel_15_01");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Kessel_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Kessel_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Kessel_03_04");
    AI_LOGENTRY(TOPIC_Q501, LOG_Q501_RIORDIAN_KESSELSTATUS);
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

instance DIA_RIORDIAN_Q501_VOLKER(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_Q501_VOLKER_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q501_VOLKER_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "We must stop the Usurer as soon as possible!";
}

func int DIA_RIORDIAN_Q501_VOLKER_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q501)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 79614))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_Q501_VOLKER_INFO() {
    AI_STARTFACEANI(OTHER, S_ANGRY, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q501_Volker_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Volker_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Volker_03_03");
    AI_RESETFACEANI(OTHER);
}

instance DIA_RIORDIAN_Q501_HEAL(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_Q501_HEAL_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q501_HEAL_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Isn't there some quicker way to heal?";
}

func int DIA_RIORDIAN_Q501_HEAL_CONDITION() {
    if (((((LOG_GETSTATUS(MIS_Q501)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 79619))) && (NPC_KNOWSINFO(OTHER, 79623))) && (NPC_KNOWSINFO(OTHER, 79626))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_Q501_HEAL_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q501_Heal_15_01");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Heal_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Heal_03_03");
    INFO_CLEARCHOICES(79629);
    INFO_ADDCHOICE(79629, "In that case, give me my weapons back, I'll finish this matter.", 79632);
}

func void DIA_RIORDIAN_Q501_HEAL_WEAPON() {
    AI_STARTFACEANI(OTHER, S_SERIOUS, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q501_Heal_Weapon_15_01");
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Heal_Weapon_03_02");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Heal_Weapon_03_03");
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q501_Heal_Weapon_15_04");
    AI_RESETFACEANI(OTHER);
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Heal_Weapon_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Heal_Weapon_03_06");
    AI_STARTFACEANI(SELF, S_THINK, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Heal_Weapon_03_07");
    INFO_CLEARCHOICES(79629);
    INFO_ADDCHOICE(79629, "How do I convince him to help?", 79633);
}

func void DIA_RIORDIAN_Q501_HEAL_WEAPON_HELP() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q501_Heal_Help_15_01");
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Heal_Help_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q501_Heal_Help_15_03");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Heal_Help_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Heal_Help_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Heal_Help_03_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Heal_Help_03_07");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Heal_Help_03_08");
    AI_LOGENTRY(TOPIC_Q501, LOG_Q501_RIORDIAN_TALKWITHRIEROL);
    INFO_CLEARCHOICES(79629);
    AI_STOPPROCESSINFOS(SELF);
    NPC_EXCHANGEROUTINE(SELF, "Q501_HEALREFUGEE");
    Q501_AMBIENTBLOCK = FALSE;
}

instance DIA_RIORDIAN_Q501_WHATWITHKESSEL(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_Q501_WHATWITHKESSEL_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q501_WHATWITHKESSEL_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "What about Kessel? Do you see any improvement?";
}

func int DIA_RIORDIAN_Q501_WHATWITHKESSEL_CONDITION() {
    if ((LOG_GETSTATUS(MIS_Q501)) == (LOG_RUNNING)) {
        if (((Q501_MARVINGOTOSLEEP) == (2)) || ((Q501_MARVINGOTOSLEEP) == (3))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_Q501_WHATWITHKESSEL_INFO() {
    AI_STARTFACEANI(OTHER, S_TIRED, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q501_WhatWithKessel_15_01");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_WhatWithKessel_03_02");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

instance DIA_RIORDIAN_Q501_GOTRECIPE(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_Q501_GOTRECIPE_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q501_GOTRECIPE_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I managed to get the recipe.";
}

func int DIA_RIORDIAN_Q501_GOTRECIPE_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_Q501)) == (LOG_RUNNING)) && ((Q501_MARVINGOTOSLEEP) == (2))) && ((NPC_HASITEMS(OTHER, 37513)) >= (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_Q501_GOTRECIPE_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q501_GotRecipe_15_01");
    AI_PLAYANI(SELF, T_SEARCH);
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_GotRecipe_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_GotRecipe_03_03");
    B_STANDUP();
    B_USEFAKESCROLL();
    AI_PLAYANI(SELF, T_STAND_2_COUNTING);
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_GotRecipe_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_GotRecipe_03_05");
    AI_PLAYANI(SELF, T_COUNTING_2_STAND);
    B_GIVEINVITEMS(OTHER, SELF, 37513, 1);
    AI_RESETFACEANI(SELF);
}

instance DIA_RIORDIAN_Q501_LETSDOIT(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_Q501_LETSDOIT_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q501_LETSDOIT_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Let's not waste time, let's make this potion!";
}

func int DIA_RIORDIAN_Q501_LETSDOIT_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q501)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 79637))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_Q501_LETSDOIT_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q501_LetsDoIt_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_LetsDoIt_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_LetsDoIt_03_03");
    INFO_CLEARCHOICES(79640);
    INFO_ADDCHOICE(79640, "You're right, I'm feeling a little tired already...", 79644);
    INFO_ADDCHOICE(79640, "The Usurer is still at large, and I am to sleep?", 79645);
}

func void DIA_RIORDIAN_Q501_LETSDOIT_END() {
    Q501_MARVINGOTOSLEEP = 3;
    INFO_CLEARCHOICES(79640);
    AI_STOPPROCESSINFOS(SELF);
    AI_LOGENTRY(TOPIC_Q501, LOG_Q501_RIORDIAN_TIMETOSLEEP);
}

func void DIA_RIORDIAN_Q501_LETSDOIT_TIRED() {
    AI_STARTFACEANI(OTHER, S_TIRED, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q501_LetsDoIt_Tired_15_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q501_LetsDoIt_Tired_15_02");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_LetsDoIt_Tired_03_03");
    DIA_RIORDIAN_Q501_LETSDOIT_END();
}

func void DIA_RIORDIAN_Q501_LETSDOIT_VOLKER() {
    AI_STARTFACEANI(OTHER, S_ANGRY, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q501_LetsDoIt_Volker_15_01");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_LetsDoIt_Volker_03_02");
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_LetsDoIt_Volker_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_LetsDoIt_Volker_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_LetsDoIt_Volker_03_05");
    DIA_RIORDIAN_Q501_LETSDOIT_END();
}

instance DIA_RIORDIAN_Q501_THIRDDAY(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_Q501_THIRDDAY_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q501_THIRDDAY_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_RIORDIAN_Q501_THIRDDAY_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q501)) == (LOG_RUNNING)) && ((Q501_MARVINGOTOSLEEP) == (4))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_Q501_THIRDDAY_INFO() {
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_ThirdDay_03_01");
    INFO_CLEARCHOICES(79646);
    INFO_ADDCHOICE(79646, "You look like you've been up all night.", 79649);
}

func void DIA_RIORDIAN_Q501_THIRDDAY_TIRED() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q501_ThirdDay_Tired_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_ThirdDay_Tired_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_ThirdDay_Tired_03_03");
}

instance DIA_RIORDIAN_Q501_READY(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_Q501_READY_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q501_READY_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "So, can we get it ready now?";
}

func int DIA_RIORDIAN_Q501_READY_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q501)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 79646))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_Q501_READY_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q501_Ready_15_01");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Ready_03_02");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Ready_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Ready_03_04");
    INFO_CLEARCHOICES(79650);
    INFO_ADDCHOICE(79650, "Can't we use someone else's table?", 79654);
    INFO_ADDCHOICE(79650, "You're a mage, don't you have access to a table?", 79653);
}

func void DIA_RIORDIAN_Q501_READY_MAGE() {
    AI_STARTFACEANI(OTHER, S_SURPRISE, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q501_Ready_Mage_15_01");
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Ready_Mage_03_02");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Ready_Mage_03_03");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Ready_Mage_03_04");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

func void DIA_RIORDIAN_Q501_READY_TABLE() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q501_Ready_Table_15_01");
    AI_STARTFACEANI(SELF, S_DOUBT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Ready_Table_03_02");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Ready_Table_03_03");
    INFO_CLEARCHOICES(79650);
    INFO_ADDCHOICE(79650, "Why do you suddenly care about making this concoction?", 79655);
}

func void DIA_RIORDIAN_Q501_READY_TABLE_POTION() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q501_Ready_Potion_15_01");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Ready_Potion_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Ready_Potion_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Ready_Potion_03_04");
    INFO_CLEARCHOICES(79650);
}

instance DIA_RIORDIAN_Q501_WORK(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_Q501_WORK_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q501_WORK_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Let's get to work.";
}

func int DIA_RIORDIAN_Q501_WORK_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q501)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 79650))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_Q501_WORK_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q501_Work_15_01");
    CREATEINVITEMS(SELF, 37514, 1);
    B_GIVEINVITEMS(SELF, OTHER, 37514, 1);
    B_STANDUP();
    B_USEFAKESCROLL();
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Work_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Work_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_Work_03_04");
    NPC_EXCHANGEROUTINE(SELF, "Q501_HEALREFUGEE");
    AI_LOGENTRY(TOPIC_Q501, LOG_Q501_RIORDIAN_NEXTPLAN);
}

instance DIA_RIORDIAN_Q501_GOTEVERYTHING(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_Q501_GOTEVERYTHING_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q501_GOTEVERYTHING_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I already have everything you asked for.";
}

func int DIA_RIORDIAN_Q501_GOTEVERYTHING_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_Q501)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 79656))) && ((Q501_STUFF) >= (5))) {
        if (((((NPC_HASITEMS(OTHER, 37534)) >= (1)) && ((NPC_HASITEMS(OTHER, 37535)) >= (1))) && ((NPC_HASITEMS(OTHER, 37533)) >= (1))) && ((NPC_HASITEMS(OTHER, 37514)) >= (1))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_Q501_GOTEVERYTHING_INFO() {
    Q501_MARVINGOTOSLEEP = 5;
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q501_GotEverything_15_01");
    B_GIVEINVITEMS(OTHER, SELF, 37514, 1);
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_GotEverything_03_02");
    B_GIVEINVITEMS(OTHER, SELF, 37533, 1);
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_GotEverything_03_03");
    B_GIVEINVITEMS(OTHER, SELF, 37535, 1);
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_GotEverything_03_04");
    B_GIVEINVITEMS(OTHER, SELF, 37534, 1);
    AI_LOGENTRY(TOPIC_Q501, LOG_Q501_RIORDIAN_GOTEVERYTHING);
    Q501_NOVIZENORMALRTN();
}

instance DIA_RIORDIAN_Q502_HELLO(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_Q502_HELLO_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q502_HELLO_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_RIORDIAN_Q502_HELLO_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q502)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 80136))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_Q502_HELLO_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q502_Hello_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q502_Hello_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q502_Hello_03_03");
    AI_STOPPROCESSINFOS(SELF);
    NPC_EXCHANGEROUTINE(SELF, START);
    AI_FUNCTION(SELF, 63421);
}

instance DIA_RIORDIAN_Q503_GATE(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_Q503_GATE_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q503_GATE_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I found a large gate leading inside.";
}

func int DIA_RIORDIAN_Q503_GATE_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q503)) == (LOG_RUNNING)) && ((Q503_GOTOVOLFZACKE) == (7))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_Q503_GATE_INFO() {
    AI_STARTFACEANI(OTHER, S_THINK, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q503_Gate_15_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q503_Gate_15_02");
    AI_STARTFACEANI(SELF, S_THINK, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q503_Gate_03_03");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q503_Gate_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q503_Gate_03_05");
    AI_LOGENTRY(TOPIC_Q503, LOG_Q503_NEEDKEY);
}

instance DIA_RIORDIAN_Q503_GOTKEY(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_Q503_GOTKEY_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q503_GOTKEY_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Do you think this fragment has anything to do with the gate?";
}

func int DIA_RIORDIAN_Q503_GOTKEY_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q503)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 79665))) {
        if (((NPC_HASITEMS(OTHER, 37542)) >= (1)) || ((NPC_HASITEMS(OTHER, 37543)) >= (1))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_Q503_GOTKEY_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q503_GotKey_15_01");
    Q503_SHOWKEYS();
    B_USEFAKEVOLFZACKKEY_START();
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q503_GotKey_03_02");
    AI_STARTFACEANI(SELF, S_THINK, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q503_GotKey_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q503_GotKey_03_04");
    B_USEFAKEVOLFZACKKEY_REMOVE();
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q503_GotKey_03_05");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q503_GotKey_03_06");
    Q503_SHOWKEYS_BACK();
    if ((Q503_KEYCOUNT) == (1)) {
        AI_LOGENTRY(TOPIC_Q503, LOG_Q503_NEEDMOREKEYS_V1);
    };
    if ((Q503_KEYCOUNT) == (2)) {
        AI_LOGENTRY(TOPIC_Q503, LOG_Q503_NEEDMOREKEYS_V2);
    };
}

instance DIA_RIORDIAN_Q503_GOTLASTKEY(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_Q503_GOTLASTKEY_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q503_GOTLASTKEY_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I got the key at the museum.";
}

func int DIA_RIORDIAN_Q503_GOTLASTKEY_CONDITION() {
    if (((((LOG_GETSTATUS(MIS_Q503)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 79668))) && ((NPC_HASITEMS(OTHER, 37544)) >= (1))) && ((Q503_GOTMUSEUMKEY) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_Q503_GOTLASTKEY_INFO() {
    Q503_KEYCOUNT = 0;
    Q503_GIVEKEYS();
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q503_GotLastKey_15_01");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q503_GotLastKey_03_02");
    if ((Q503_KEYCOUNT) < (3)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q503_GotLastKey_03_03");
        Q503_REMOVEALLKEYS();
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q503_GotLastKey_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q503_GotLastKey_03_05");
    AI_RESETFACEANI(SELF);
    LOG_SETSTATUS(_@(MIS_Q503), TOPIC_Q503, LOG_SUCCESS);
    AI_LOGENTRY(TOPIC_Q503, LOG_Q503_FINISH);
    B_GIVEPLAYERXP(XP_Q503_FINISH);
    LOG_CREATETOPIC(TOPIC_Q505, LOG_MISSION);
    LOG_SETSTATUS(_@(MIS_Q505), TOPIC_Q505, LOG_RUNNING);
    AI_LOGENTRY(TOPIC_Q505, LOG_Q505_START);
}

instance DIA_RIORDIAN_Q503_BOOK(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_Q503_BOOK_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q503_BOOK_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "We're not the first to want to explore the ruins...";
}

func int DIA_RIORDIAN_Q503_BOOK_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_Q503)) == (LOG_RUNNING)) && ((Q503_GOTOVOLFZACKE) >= (5))) && ((NPC_HASITEMS(OTHER, 39869)) >= (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_Q503_BOOK_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q503_Book_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q503_Book_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q503_Book_03_03");
    B_GIVEINVITEMS(OTHER, SELF, 39869, 1);
}

instance DIA_RIORDIAN_SQ504_HEARDTHENEWS(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_SQ504_HEARDTHENEWS_CONDITION;
    INFORMATION = DIA_RIORDIAN_SQ504_HEARDTHENEWS_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_RIORDIAN_SQ504_HEARDTHENEWS_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ504)) == (LOG_SUCCESS)) && ((SQ504_JOINEDWATERCIRCLE) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_SQ504_HEARDTHENEWS_INFO() {
    if ((RIORDIAN_NOMORE) == (TRUE)) {
        RIORDIAN_NOMORE = FALSE;
    };
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ504_HeardTheNews_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ504_HeardTheNews_03_02");
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_SQ504_HeardTheNews_03_03");
    AI_RESETFACEANI(SELF);
}

instance DIA_RIORDIAN_CANYOUTEACHCIRCLE(C_INFO) {
    NPC = 56616;
    NR = 50;
    CONDITION = DIA_RIORDIAN_CANYOUTEACHCIRCLE_CONDITION;
    INFORMATION = DIA_RIORDIAN_CANYOUTEACHCIRCLE_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Can you teach me magic circles?";
}

func int DIA_RIORDIAN_CANYOUTEACHCIRCLE_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 79677)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_CANYOUTEACHCIRCLE_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_CanYouTeachCircle_15_01");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_CanYouTeachCircle_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_CanYouTeachCircle_03_03");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    CREATEINVITEMS(SELF, 34377, 1);
    B_GIVEINVITEMS(SELF, OTHER, 34377, 1);
    LOG_CREATETOPIC(TOPIC_MAGIC, LOG_NOTE);
    AI_LOGENTRY(TOPIC_MAGIC, LOG_RIORDIACH_TEACHCIRCLE);
}

instance DIA_RIORDIAN_TEACHMECIRCLE(C_INFO) {
    NPC = 56616;
    NR = 50;
    CONDITION = DIA_RIORDIAN_TEACHMECIRCLE_CONDITION;
    INFORMATION = DIA_RIORDIAN_TEACHMECIRCLE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Teach me about magic...";
}

func int DIA_RIORDIAN_TEACHMECIRCLE_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 79680)) {
        if (((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_MAGE)) == (4)) && ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_SCROLLWRITING)) == (1))) {
            return FALSE;
        };
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

const int CIRCLEKOSTEN_BOOK = 10;
const int CIRCLEKOSTEN_01 = 20;
const int CIRCLEKOSTEN_02 = 30;
const int CIRCLEKOSTEN_03 = 40;
const int CIRCLEKOSTEN_04 = 50;
func void DIA_RIORDIAN_TEACHMECIRCLE_CHOICES() {
    INFO_CLEARCHOICES(79683);
    INFO_ADDCHOICE(79683, DIALOG_BACK, 79692);
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_SCROLLWRITING)) == (0)) {
        INFO_ADDCHOICE(79683, B_BUILDLEARNSTRING2(PRINT_LEARN_MAGICSCROLL, 5, 0), 79697);
    };
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_MAGE)) == (0)) {
        INFO_ADDCHOICE(79683, B_BUILDLEARNSTRING2(PRINT_LEARN_CIRCLE1, (CIRCLEKOSTEN_01) - ((CIRCLEKOSTEN_BOOK) * (MARVIN_MAGELEARNING_TIER1)), 0), 79693);
    };
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_MAGE)) == (1)) {
        INFO_ADDCHOICE(79683, B_BUILDLEARNSTRING2(PRINT_LEARN_CIRCLE2, (CIRCLEKOSTEN_02) - ((CIRCLEKOSTEN_BOOK) * (MARVIN_MAGELEARNING_TIER2)), 0), 79694);
    };
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_MAGE)) == (2)) {
        INFO_ADDCHOICE(79683, B_BUILDLEARNSTRING2(PRINT_LEARN_CIRCLE3, (CIRCLEKOSTEN_03) - ((CIRCLEKOSTEN_BOOK) * (MARVIN_MAGELEARNING_TIER3)), 0), 79695);
    };
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_MAGE)) == (3)) {
        INFO_ADDCHOICE(79683, B_BUILDLEARNSTRING2(PRINT_LEARN_CIRCLE4, (CIRCLEKOSTEN_04) - ((CIRCLEKOSTEN_BOOK) * (MARVIN_MAGELEARNING_TIER4)), 0), 79696);
    };
}

func void DIA_RIORDIAN_TEACHMECIRCLE_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_TeachMeCircle_15_01");
    DIA_RIORDIAN_TEACHMECIRCLE_CHOICES();
}

func void DIA_RIORDIAN_TEACHMECIRCLE_BACK() {
    INFO_CLEARCHOICES(79683);
}

func void DIA_RIORDIAN_TEACHMECIRCLE_TIER1() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_TeachMeCircle_Tier1_15_01");
    if ((HERO.LP) >= ((CIRCLEKOSTEN_01) - ((CIRCLEKOSTEN_BOOK) * (MARVIN_MAGELEARNING_TIER1)))) {
        HERO.LP = (HERO.LP) - ((CIRCLEKOSTEN_01) - ((CIRCLEKOSTEN_BOOK) * (MARVIN_MAGELEARNING_TIER1)));
        LOG_CREATETOPIC(TOPIC_MAGIC, LOG_NOTE);
        B_LOGENTRY(TOPIC_MAGIC, LOG_MAGIC_CIRCLES);
        PRINTSCREEN(PRINT_LEARNCIRCLE_1, -(1), -(1), FONT_SCREEN, 2);
        NPC_SETTALENTSKILL(HERO, NPC_TALENT_MAGE, 1);
        LOG_CREATETOPIC(TOPIC_MAGIC, LOG_NOTE);
        B_LOGENTRY(TOPIC_MAGIC, LOG_CIRCLETIER1_VOLFZACKE);
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_TeachMeCircle_Tier1_03_02");
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_TeachMeCircle_Tier1_03_03");
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_TeachMeCircle_Tier1_03_04");
    };
    PRINTSCREEN(PRINT_NOTENOUGHLP, -(1), -(1), FONT_SCREEN, 2);
    B_SAY(SELF, OTHER, "$NOLEARNNOPOINTS");
    DIA_RIORDIAN_TEACHMECIRCLE_CHOICES();
}

func void DIA_RIORDIAN_TEACHMECIRCLE_TIER2() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_TeachMeCircle_Tier2_15_01");
    if ((HERO.LP) >= ((CIRCLEKOSTEN_02) - ((CIRCLEKOSTEN_BOOK) * (MARVIN_MAGELEARNING_TIER2)))) {
        HERO.LP = (HERO.LP) - ((CIRCLEKOSTEN_02) - ((CIRCLEKOSTEN_BOOK) * (MARVIN_MAGELEARNING_TIER2)));
        PRINTSCREEN(PRINT_LEARNCIRCLE_2, -(1), -(1), FONT_SCREEN, 2);
        NPC_SETTALENTSKILL(HERO, NPC_TALENT_MAGE, 2);
        LOG_CREATETOPIC(TOPIC_MAGIC, LOG_NOTE);
        B_LOGENTRY(TOPIC_MAGIC, LOG_CIRCLETIER2_VOLFZACKE);
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_TeachMeCircle_Tier2_03_02");
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_TeachMeCircle_Tier2_03_03");
    };
    PRINTSCREEN(PRINT_NOTENOUGHLP, -(1), -(1), FONT_SCREEN, 2);
    B_SAY(SELF, OTHER, "$NOLEARNNOPOINTS");
    DIA_RIORDIAN_TEACHMECIRCLE_CHOICES();
}

func void DIA_RIORDIAN_TEACHMECIRCLE_TIER3() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_TeachMeCircle_Tier3_15_01");
    if ((HERO.LP) >= ((CIRCLEKOSTEN_03) - ((CIRCLEKOSTEN_BOOK) * (MARVIN_MAGELEARNING_TIER3)))) {
        HERO.LP = (HERO.LP) - ((CIRCLEKOSTEN_03) - ((CIRCLEKOSTEN_BOOK) * (MARVIN_MAGELEARNING_TIER3)));
        PRINTSCREEN(PRINT_LEARNCIRCLE_3, -(1), -(1), FONT_SCREEN, 2);
        NPC_SETTALENTSKILL(HERO, NPC_TALENT_MAGE, 3);
        LOG_CREATETOPIC(TOPIC_MAGIC, LOG_NOTE);
        B_LOGENTRY(TOPIC_MAGIC, LOG_CIRCLETIER3_VOLFZACKE);
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_TeachMeCircle_Tier3_03_02");
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_TeachMeCircle_Tier3_03_03");
    };
    PRINTSCREEN(PRINT_NOTENOUGHLP, -(1), -(1), FONT_SCREEN, 2);
    B_SAY(SELF, OTHER, "$NOLEARNNOPOINTS");
    DIA_RIORDIAN_TEACHMECIRCLE_CHOICES();
}

func void DIA_RIORDIAN_TEACHMECIRCLE_TIER4() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_TeachMeCircle_Tier4_15_01");
    if ((HERO.LP) >= ((CIRCLEKOSTEN_04) - ((CIRCLEKOSTEN_BOOK) * (MARVIN_MAGELEARNING_TIER4)))) {
        HERO.LP = (HERO.LP) - ((CIRCLEKOSTEN_04) - ((CIRCLEKOSTEN_BOOK) * (MARVIN_MAGELEARNING_TIER4)));
        BUFF_APPLYORREFRESH(HERO, 32525);
        NPC_SETTALENTSKILL(HERO, NPC_TALENT_MAGE, 4);
        PRINTSCREEN(PRINT_LEARNCIRCLE_4, -(1), -(1), FONT_SCREEN, 2);
        LOG_CREATETOPIC(TOPIC_MAGIC, LOG_NOTE);
        B_LOGENTRY(TOPIC_MAGIC, LOG_CIRCLETIER4_VOLFZACKE);
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_TeachMeCircle_Tier4_03_02");
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_TeachMeCircle_Tier4_03_03");
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_TeachMeCircle_Tier4_03_04");
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_TeachMeCircle_Tier4_03_05");
    };
    PRINTSCREEN(PRINT_NOTENOUGHLP, -(1), -(1), FONT_SCREEN, 2);
    B_SAY(SELF, OTHER, "$NOLEARNNOPOINTS");
    DIA_RIORDIAN_TEACHMECIRCLE_CHOICES();
}

func void DIA_RIORDIAN_TEACHMECIRCLE_SCROLL() {
    if ((HERO.LP) >= (5)) {
        HERO.LP = (HERO.LP) - (5);
        NPC_SETTALENTSKILL(HERO, NPC_TALENT_SCROLLWRITING, 1);
        PRINTSCREEN(PRINT_LEARNMAGICSCROLL, -(1), -(1), FONT_SCREEN, 2);
        SND_PLAY("LEVELUP");
        LOG_CREATETOPIC(TOPIC_SCROLLS, LOG_NOTE);
        AI_LOGENTRY(TOPIC_SCROLLS, LOG_MAGIC_LEARNEDSCROLLSVOLFZACKE);
        B_SAY(SELF, OTHER, "$YouLearnedSomething");
    };
    PRINTSCREEN(PRINT_NOTENOUGHLP, -(1), -(1), FONT_SCREEN, 2);
    B_SAY(SELF, OTHER, "$NoLearnNoPoints");
    DIA_RIORDIAN_TEACHMECIRCLE_CHOICES();
}

instance DIA_RIORDIAN_Q515_START(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_Q515_START_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q515_START_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_RIORDIAN_Q515_START_CONDITION() {
    if ((LOG_GETSTATUS(MIS_Q514)) == (LOG_SUCCESS)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_Q515_START_INFO() {
    NONE_15_ULRYK.AIVAR[15] = TRUE;
    B_GIVEPLAYERXP(XP_Q514_FINISH);
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q515_Start_03_01");
    AI_STOPPROCESSINFOS(SELF);
    NPC_EXCHANGEROUTINE(SELF, "Q515GUIDE");
    SELF.AIVAR[15] = TRUE;
    LOG_CREATETOPIC(TOPIC_Q515, LOG_MISSION);
    LOG_SETSTATUS(_@(MIS_Q515), TOPIC_Q515, LOG_RUNNING);
    AI_LOGENTRY(TOPIC_Q515, LOG_Q515_START);
}

instance DIA_RIORDIAN_Q515_ULRYK(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_Q515_ULRYK_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q515_ULRYK_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_RIORDIAN_Q515_ULRYK_CONDITION() {
    if (((NPC_KNOWSINFO(OTHER, 79698)) && ((NPC_GETDISTTOWP(SELF, "PART_VOLFZACKE_15")) <= (500))) && ((LOG_GETSTATUS(MIS_Q515)) == (LOG_RUNNING))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_Q515_ULRYK_INFO() {
    AI_STOPLOOKAT(OTHER);
    AI_STOPLOOKAT(SELF);
    SQ204_DETLOWWILLTEACH = 2;
    B_STANDUP();
    AI_SETWALKMODE(SELF, NPC_RUN);
    AI_GOTONPC(SELF, HERO);
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q515_Ulryk_03_01");
    AI_LOGENTRY(TOPIC_Q515, LOG_Q515_WOLFSONS);
    AI_STOPPROCESSINFOS(SELF);
    AI_FUNCTION(SELF, 79704);
}

func void RIORDIAN_Q515_TELEPORT() {
    DIACAM_DISABLE();
    WLD_SENDTRIGGER("KM_ULRYK_01");
    TELEPORTNPCTOWP(1819, "PART5_VOLFZACKE_RIORDIAN_HERO");
    TELEPORTNPCTOWP(56616, "PART5_VOLFZACKE_RIORDIAN_ULRYK");
    NPC_EXCHANGEROUTINE(KDW_203_RIORDIAN, "Q515_TRIALOG");
}

instance DIA_RIORDIAN_DIFFERENCE(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_DIFFERENCE_CONDITION;
    INFORMATION = DIA_RIORDIAN_DIFFERENCE_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "How's that for Volfzack and Vardhal?";
}

func int DIA_RIORDIAN_DIFFERENCE_CONDITION() {
    if (((((LOG_GETSTATUS(MIS_Q505)) >= (LOG_RUNNING)) && ((LOG_GETSTATUS(MIS_Q514)) != (LOG_SUCCESS))) && (NPC_KNOWSINFO(OTHER, 80244))) && ((VARDHAL_VOLFZACKE) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_DIFFERENCE_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Difference_15_01");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Difference_03_02");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Difference_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Difference_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Difference_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Difference_03_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Difference_03_07");
}

instance DIA_RIORDIAN_FANEISDEAD(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_FANEISDEAD_CONDITION;
    INFORMATION = DIA_RIORDIAN_FANEISDEAD_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_RIORDIAN_FANEISDEAD_CONDITION() {
    if (((Q509_FANEVOLFZACKE) >= (3)) && (NPC_ISDEAD(NONE_10024_FANE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_FANEISDEAD_INFO() {
    GAMESERVICES_UNLOCKACHIEVEMENT(ACH_17);
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_FaneIsDead_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_FaneIsDead_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_FaneIsDead_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_FaneIsDead_03_04");
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_FaneIsDead_15_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_FaneIsDead_03_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_FaneIsDead_03_07");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_FaneIsDead_03_08");
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_FaneIsDead_15_09");
    NPC_EXCHANGEROUTINE(SELF, "Q505_WAITCAMP");
    LOG_SETSTATUS(_@(MIS_SQ113), TOPIC_SQ113, LOG_SUCCESS);
    AI_LOGENTRY(TOPIC_SQ113, LOG_SQ113_FANEISDEAD_V2);
    B_GIVEPLAYERXP(XP_SQ113_FANEDEAD_TIER1);
}

instance DIA_RIORDIAN_AMBIENT(C_INFO) {
    NPC = 56616;
    NR = 950;
    CONDITION = DIA_RIORDIAN_AMBIENT_CONDITION;
    INFORMATION = DIA_RIORDIAN_AMBIENT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "How are you doing?";
}

func int DIA_RIORDIAN_AMBIENT_CONDITION() {
    if (((KAPITEL) == (5)) && ((Q501_AMBIENTBLOCK) == (FALSE))) {
        if ((LOG_GETSTATUS(MIS_Q515)) == (LOG_RUNNING)) {
            return FALSE;
        };
        if ((((LOG_GETSTATUS(MIS_Q501)) == (LOG_RUNNING)) || ((LOG_GETSTATUS(MIS_Q502)) == (LOG_RUNNING))) || ((LOG_GETSTATUS(MIS_Q503)) == (LOG_SUCCESS))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_AMBIENT_INFO() {
    if (NPC_KNOWSINFO(OTHER, 79665)) {
        NPC_INITAMBIENTS(SELF, 4);
    };
    if ((LOG_GETSTATUS(MIS_Q501)) == (LOG_SUCCESS)) {
        NPC_INITAMBIENTS(SELF, 3);
    };
    NPC_INITAMBIENTS(SELF, 1);
    AI_STARTFACEANI(OTHER, S_SMILE, 1, -(1));
    B_SAY(OTHER, SELF, "$MARVIN_WhatNew2");
    if ((NPC_GETLASTAMBIENT(SELF)) == (1)) {
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Ambient_03_02");
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Ambient_03_03");
    };
    if ((NPC_GETLASTAMBIENT(SELF)) == (2)) {
        AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Ambient_03_01");
    };
    if ((NPC_GETLASTAMBIENT(SELF)) == (3)) {
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Ambient_03_04");
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Ambient_03_05");
    };
    if ((NPC_GETLASTAMBIENT(SELF)) == (4)) {
        if (NPC_KNOWSINFO(OTHER, 79671)) {
            AI_STARTFACEANI(SELF, "S_SURPRISE", 1, -(1));
            AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Ambient_03_08");
        } else {
            AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Ambient_03_06");
            AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Ambient_03_07");
        };
    };
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

instance DIA_RIORDIAN_Q502_ABOUTVARDHAL(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_Q502_ABOUTVARDHAL_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q502_ABOUTVARDHAL_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Could you tell me more about Vardhal?";
}

func int DIA_RIORDIAN_Q502_ABOUTVARDHAL_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 80147)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_Q502_ABOUTVARDHAL_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q502_AboutVardhal_15_01");
    AI_STARTFACEANI(SELF, S_THINK, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q502_AboutVardhal_03_02");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q502_AboutVardhal_03_03");
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q502_AboutVardhal_03_04");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q502_AboutVardhal_03_05");
    AI_RESETFACEANI(OTHER);
    if ((LOG_GETSTATUS(MIS_Q502)) == (LOG_RUNNING)) {
        AI_LOGENTRY(TOPIC_Q502, LOG_Q502_RIORDIAN_BOOKS);
    };
}

instance DIA_RIORDIAN_ABOUTMONASTERY(C_INFO) {
    NPC = 56616;
    NR = 40;
    CONDITION = DIA_RIORDIAN_ABOUTMONASTERY_CONDITION;
    INFORMATION = DIA_RIORDIAN_ABOUTMONASTERY_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Tell me something about the monastery.";
}

func int DIA_RIORDIAN_ABOUTMONASTERY_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_Q501)) >= (1)) && ((LOG_GETSTATUS(MIS_Q503)) == (0))) && (NPC_KNOWSINFO(OTHER, 79629))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_ABOUTMONASTERY_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_AboutMonastery_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_AboutMonastery_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_AboutMonastery_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_AboutMonastery_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_AboutMonastery_03_05");
}

instance DIA_RIORDIAN_Q514_LETSGO(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_Q514_LETSGO_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q514_LETSGO_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Let's go!";
}

func int DIA_RIORDIAN_Q514_LETSGO_CONDITION() {
    if ((LOG_GETSTATUS(MIS_Q514)) == (LOG_RUNNING)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_Q514_LETSGO_INFO() {
    B_SAY(OTHER, SELF, "$MARVIN_LETSGO");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_LetsGo_03_02");
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q514_LetsGo_03_03");
    AI_LOGENTRY(TOPIC_Q514, LOG_Q514_OPENGATE);
    NPC_EXCHANGEROUTINE(SELF, "Q505_WAITCAMP");
    AI_STOPPROCESSINFOS(SELF);
    AI_RESETFACEANI(SELF);
    WLD_SENDTRIGGER("Q514_MOVER_OPENGATE");
}

instance DIA_RIORDIAN_ADANOSSHRINE(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_ADANOSSHRINE_CONDITION;
    INFORMATION = DIA_RIORDIAN_ADANOSSHRINE_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "What's with the shrines?";
}

func int DIA_RIORDIAN_ADANOSSHRINE_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 79567)) && ((KAPITEL) == (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_ADANOSSHRINE_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_AdanosShrine_15_01");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_AdanosShrine_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_AdanosShrine_03_03");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_AdanosShrine_03_04");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

var int RIORDIANCURRENTMANALEVEL;
var string RIORDIAN_PRINTS;
instance DIA_RIORDIAN_TEACHMANA(C_INFO) {
    NPC = 56616;
    NR = 99;
    CONDITION = DIA_RIORDIAN_TEACHMANA_CONDITION;
    INFORMATION = DIA_RIORDIAN_TEACHMANA_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Can you teach me something about magic?";
}

func int DIA_RIORDIAN_TEACHMANA_CONDITION() {
    if ((((KAPITEL) == (5)) && ((RIORDIAN_NOMORE) == (FALSE))) && (NPC_KNOWSINFO(OTHER, 79629))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_TEACHMANA_CHOICES() {
    var int RIORDIAN_GOLDCOST;
    RIORDIAN_GOLDCOST = 0;
    INFO_CLEARCHOICES(79728);
    INFO_ADDCHOICE(79728, DIALOG_BACK, 79737);
    INFO_ADDCHOICE(79728, B_BUILDLEARNSTRING2(PRINT_LEARNMANA1, B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 1), RIORDIAN_GOLDCOST), 79739);
    INFO_ADDCHOICE(79728, B_BUILDLEARNSTRING2(PRINT_LEARNMANA5, B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 5), (RIORDIAN_GOLDCOST) * (5)), 79740);
}

func void DIA_RIORDIAN_TEACHMANA_CHECKMANALEVEL() {
    if ((((SQ504_JOINEDWATERCIRCLE) == (FALSE)) && ((OTHER.AIVAR[83]) < (120))) || (((SQ504_JOINEDWATERCIRCLE) == (TRUE)) && ((OTHER.AIVAR[83]) < (200)))) {
        DIA_RIORDIAN_TEACHMANA_CHOICES();
    };
    if ((((SQ504_JOINEDWATERCIRCLE) == (FALSE)) && ((OTHER.AIVAR[83]) >= (120))) || (((SQ504_JOINEDWATERCIRCLE) == (TRUE)) && ((OTHER.AIVAR[83]) >= (200)))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_TeachMana_03_03");
        RIORDIAN_NOMORE = TRUE;
        INFO_CLEARCHOICES(79728);
    };
}

func void DIA_RIORDIAN_TEACHMANA_INFO() {
    var int RIORDIAN_TEACHMANA_LOGENTRY_CHECK;
    var int RIORDIAN_TEACHMANA_COMMENT_V1;
    var int RIORDIAN_TEACHMANA_COMMENT_V2;
    B_SAY(OTHER, SELF, "$MARVIN_CanYouTeachMeMagic");
    RIORDIANCURRENTMANALEVEL = OTHER.AIVAR[83];
    if ((SQ504_JOINEDWATERCIRCLE) == (TRUE)) {
        if ((RIORDIAN_TEACHMANA_COMMENT_V2) == (FALSE)) {
            RIORDIAN_TEACHMANA_COMMENT_V2 = TRUE;
            AI_OUTPUT(SELF, OTHER, "DIA_Riordian_TeachMana_03_02");
        };
    };
    if ((RIORDIAN_TEACHMANA_COMMENT_V1) == (FALSE)) {
        RIORDIAN_TEACHMANA_COMMENT_V1 = TRUE;
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_TeachMana_03_01");
    };
    if ((RIORDIAN_TEACHMANA_LOGENTRY_CHECK) == (FALSE)) {
        RIORDIAN_TEACHMANA_LOGENTRY_CHECK = TRUE;
        LOG_CREATETOPIC(TOPIC_TEACHER, LOG_NOTE);
        AI_LOGENTRY(TOPIC_TEACHER, LOG_RIORDIAN_TEACHMANA);
    };
    DIA_RIORDIAN_TEACHMANA_CHECKMANALEVEL();
}

func void DIA_RIORDIAN_TEACHMANA_BACK() {
    var int RNGANWSER;
    if ((RIORDIANCURRENTMANALEVEL) < (OTHER.AIVAR[83])) {
        RNGANWSER = HLP_RANDOM(2);
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        if ((RNGANWSER) == (0)) {
            AI_OUTPUT(SELF, OTHER, "DIA_Riordian_TeachMana_03_04");
        } else if ((RNGANWSER) == (1)) {
            AI_OUTPUT(SELF, OTHER, "DIA_Riordian_TeachMana_03_05");
        };
    };
    INFO_CLEARCHOICES(79728);
    AI_RESETFACEANI(SELF);
}

func void DIA_RIORDIAN_TEACHMANA1() {
    if ((SQ504_JOINEDWATERCIRCLE) == (FALSE)) {
    };
    B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_MANA_MAX, 1, 200);
    DIA_RIORDIAN_TEACHMANA_CHECKMANALEVEL();
}

func void DIA_RIORDIAN_TEACHMANA5() {
    if ((SQ504_JOINEDWATERCIRCLE) == (FALSE)) {
    };
    B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_MANA_MAX, 5, 200);
    DIA_RIORDIAN_TEACHMANA_CHECKMANALEVEL();
}

instance DIA_RIORDIAN_OTHERTELEPORTATION(C_INFO) {
    NPC = 56616;
    NR = 20;
    CONDITION = DIA_RIORDIAN_OTHERTELEPORTATION_CONDITION;
    INFORMATION = DIA_RIORDIAN_OTHERTELEPORTATION_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I came across some other teleportation circle...";
}

func int DIA_RIORDIAN_OTHERTELEPORTATION_CONDITION() {
    if (((NPC_ISDEAD(VOLFZACKEMAGE_BOSS)) && ((Q503_GOTOVOLFZACKE) >= (5))) && ((LOG_GETSTATUS(MIS_Q514)) == (0))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_RIORDIAN_OTHERTELEPORTATION_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_OtherTeleportation_15_01");
    AI_STARTFACEANI(SELF, S_THINK, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_OtherTeleportation_03_02");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_OtherTeleportation_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_OtherTeleportation_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_OtherTeleportation_03_05");
}

instance DIA_RIORDIAN_Q501_NOSCROLL(C_INFO) {
    NPC = 56616;
    NR = 1;
    CONDITION = DIA_RIORDIAN_Q501_NOSCROLL_CONDITION;
    INFORMATION = DIA_RIORDIAN_Q501_NOSCROLL_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "I need scrolls to get the items I need.";
}

func int DIA_RIORDIAN_Q501_NOSCROLL_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_Q501)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 79656))) && ((Q501_MARVINGOTOSLEEP) == (4))) {
        if ((((((((Q501_CONTESTCUTSCENESTATUS) == (3)) && ((Q501_SLOWEDDOWNNOVIZE) == (0))) && ((NPC_HASITEMS(HERO, 38183)) == (0))) || ((((Q501_SCARENOVIZEINKITCHEN) == (FALSE)) && (NPC_KNOWSINFO(HERO, 80489))) && ((NPC_HASITEMS(HERO, 38184)) == (0)))) || ((((Q501_INDARKROOM_LOGENTRY) == (TRUE)) && ((Q501_LIGHTINROOM) == (FALSE))) && ((NPC_HASITEMS(HERO, 34686)) == (0)))) || (((((Q501_HEROCHANGEDINTOMEATBUG) == (TRUE)) && ((HERO.GUILD) != (GIL_MEATBUG))) && ((NPC_HASITEMS(HERO, 37535)) == (0))) && ((NPC_HASITEMS(HERO, 38188)) == (0)))) || ((((Q501_CLEANBOOKS) == (1)) && ((MOB_HASITEMS("KM_BOOKSHELF_MONASTERY_MAGIC", 38182)) == (0))) && ((NPC_HASITEMS(HERO, 38182)) == (0)))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void RIORDIAN_Q501_GIVEMISSINGSCROLL() {
    if ((((Q501_CONTESTCUTSCENESTATUS) == (3)) && ((Q501_SLOWEDDOWNNOVIZE) == (0))) && ((NPC_HASITEMS(HERO, 38183)) == (0))) {
        CREATEINVITEMS(KDW_203_RIORDIAN, 38183, 1);
        B_GIVEINVITEMS(KDW_203_RIORDIAN, HERO, 38183, 1);
    };
    if ((((Q501_SCARENOVIZEINKITCHEN) == (FALSE)) && (NPC_KNOWSINFO(HERO, 80489))) && ((NPC_HASITEMS(HERO, 38184)) == (0))) {
        CREATEINVITEMS(KDW_203_RIORDIAN, 38184, 1);
        B_GIVEINVITEMS(KDW_203_RIORDIAN, HERO, 38184, 1);
    };
    if ((((Q501_INDARKROOM_LOGENTRY) == (TRUE)) && ((Q501_LIGHTINROOM) == (FALSE))) && ((NPC_HASITEMS(HERO, 34686)) == (0))) {
        CREATEINVITEMS(KDW_203_RIORDIAN, 34686, 1);
        B_GIVEINVITEMS(KDW_203_RIORDIAN, HERO, 34686, 1);
    };
    if (((((Q501_HEROCHANGEDINTOMEATBUG) == (TRUE)) && ((HERO.GUILD) != (GIL_MEATBUG))) && ((NPC_HASITEMS(HERO, 37535)) == (0))) && ((NPC_HASITEMS(HERO, 38188)) == (0))) {
        CREATEINVITEMS(KDW_203_RIORDIAN, 38188, 1);
        B_GIVEINVITEMS(KDW_203_RIORDIAN, HERO, 38188, 1);
    };
    if ((((Q501_CLEANBOOKS) == (1)) && ((MOB_HASITEMS("KM_BOOKSHELF_MONASTERY_MAGIC", 38182)) == (0))) && ((NPC_HASITEMS(HERO, 38182)) == (0))) {
        CREATEINVITEMS(KDW_203_RIORDIAN, 38182, 1);
        B_GIVEINVITEMS(KDW_203_RIORDIAN, HERO, 38182, 1);
    };
}

func void DIA_RIORDIAN_Q501_NOSCROLL_INFO() {
    var int Q501_NOSCROLL;
    Q501_NOSCROLL = (Q501_NOSCROLL) + (1);
    AI_OUTPUT(OTHER, SELF, "DIA_Riordian_Q501_NoScroll_15_01");
    if ((Q501_NOSCROLL) == (2)) {
        Q501_MARVINGOTOSLEEP = 5;
        if ((NPC_HASITEMS(OTHER, 37534)) >= (1)) {
            B_GIVEINVITEMS(OTHER, SELF, 37534, 1);
        };
        if ((NPC_HASITEMS(OTHER, 37535)) >= (1)) {
            B_GIVEINVITEMS(OTHER, SELF, 37535, 1);
        };
        if ((NPC_HASITEMS(OTHER, 37533)) >= (1)) {
            B_GIVEINVITEMS(OTHER, SELF, 37533, 1);
        };
        if ((NPC_HASITEMS(OTHER, 37514)) >= (1)) {
            B_GIVEINVITEMS(OTHER, SELF, 37514, 1);
        };
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_NoScroll_03_04");
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_NoScroll_03_05");
        AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_NoScroll_03_06");
        AI_LOGENTRY(TOPIC_Q501, LOG_Q501_RIORDIAN_GOTEVERYTHING_V2);
        Q501_NOVIZENORMALRTN();
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_NoScroll_03_02");
    RIORDIAN_Q501_GIVEMISSINGSCROLL();
    AI_OUTPUT(SELF, OTHER, "DIA_Riordian_Q501_NoScroll_03_03");
}

