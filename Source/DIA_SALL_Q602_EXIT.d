instance DIA_SALL_Q602_EXIT(C_INFO) {
    NPC = 59789;
    NR = 999;
    CONDITION = DIA_SALL_Q602_EXIT_CONDITION;
    INFORMATION = DIA_SALL_Q602_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_SALL_Q602_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_SALL_Q602_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_SALL_Q602_STOP(C_INFO) {
    NPC = 59789;
    NR = 1;
    CONDITION = DIA_SALL_Q602_STOP_CONDITION;
    INFORMATION = DIA_SALL_Q602_STOP_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_SALL_Q602_STOP_CONDITION() {
    if ((LOG_GETSTATUS(MIS_Q602)) == (LOG_RUNNING)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_SALL_Q602_STOP_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Sall_Q602_Stop_03_01");
    AI_DRAWWEAPON(SELF);
    if (((HERO.GUILD) == (GIL_MIL)) || ((MARVIN_LOSTGUILDMILITA) == (1))) {
        AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Sall_Q602_Stop_03_02");
        AI_OUTPUT(OTHER, SELF, "DIA_Sall_Q602_Stop_15_03");
    };
    AI_STARTFACEANI(SELF, S_DOUBT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Sall_Q602_Stop_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Sall_Q602_Stop_03_05");
    AI_OUTPUT(OTHER, SELF, "DIA_Sall_Q602_Stop_15_06");
    AI_RESETFACEANI(SELF);
    AI_REMOVEWEAPON(SELF);
    AI_OUTPUT(OTHER, SELF, "DIA_Sall_Q602_Stop_15_07");
    AI_OUTPUT(SELF, OTHER, "DIA_Sall_Q602_Stop_03_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Sall_Q602_Stop_03_09");
    AI_LOGENTRY(TOPIC_Q602, LOG_Q602_SALL_HELLO);
    INFO_CLEARCHOICES(90397);
    INFO_ADDCHOICE(90397, "What happened to Oktav and the others?", 90401);
    INFO_ADDCHOICE(90397, "Why Old Town?", 90400);
}

func void DIA_SALL_Q602_STOP_OLDCITY() {
    AI_OUTPUT(OTHER, SELF, "DIA_Sall_Q602_Stop_OldCity_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Sall_Q602_Stop_OldCity_03_02");
}

func void DIA_SALL_Q602_STOP_OKTAV() {
    AI_OUTPUT(OTHER, SELF, "DIA_Sall_Q602_Stop_Oktav_15_01");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Sall_Q602_Stop_Oktav_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Sall_Q602_Stop_Oktav_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Sall_Q602_Stop_Oktav_03_04");
    AI_RESETFACEANI(SELF);
    INFO_CLEARCHOICES(90397);
    INFO_ADDCHOICE(90397, "I don't have time to save the Fire Mages right now.", 90404);
    INFO_ADDCHOICE(90397, "I'll help you get to the Fire Mages.", 90403);
    if (((MARVIN_MILITIASPECIALIZATION) == (MILITIA_SPECIALIZATION_FIGHTER)) || ((MARVIN_MILITIASPECIALIZATION) == (MILITIA_SPECIALIZATION_CROSSBOWMAN))) {
        INFO_ADDCHOICE(90397, "I'm taking command of your unit.", 90402);
    };
}

func void DIA_SALL_Q602_STOP_OKTAV_LEADER() {
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Sall_Q602_Stop_Leader_15_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Sall_Q602_Stop_Leader_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Sall_Q602_Stop_Leader_03_03");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Sall_Q602_Stop_Leader_03_04");
    AI_PLAYANI(SELF, T_GREETGRD);
    INFO_CLEARCHOICES(90397);
    AI_STOPPROCESSINFOS(SELF);
    AI_LOGENTRY(TOPIC_Q602, LOG_Q602_SALL_LEADER);
    AI_FUNCTION(SELF, 90405);
}

func void DIA_SALL_Q602_STOP_OKTAV_HELP() {
    AI_OUTPUT(OTHER, SELF, "DIA_Sall_Q602_Stop_Help_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Sall_Q602_Stop_Help_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Sall_Q602_Stop_Help_03_03");
    INFO_CLEARCHOICES(90397);
    AI_STOPPROCESSINFOS(SELF);
    AI_LOGENTRY(TOPIC_Q602, LOG_Q602_SALL_HELP);
    AI_FUNCTION(SELF, 90405);
}

func void DIA_SALL_Q602_STOP_OKTAV_GOODBYE() {
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Sall_Q602_Stop_Goodbye_15_01");
    if (((HERO.GUILD) == (GIL_MIL)) || ((MARVIN_LOSTGUILDMILITA) == (1))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Sall_Q602_Stop_Goodbye_03_02");
    };
    if (((HERO.GUILD) == (GIL_SLD)) || ((MARVIN_LOSTGUILDARAXOS) == (1))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Sall_Q602_Stop_Goodbye_03_03");
    };
    INFO_CLEARCHOICES(90397);
    AI_STOPPROCESSINFOS(SELF);
    AI_LOGENTRY(TOPIC_Q602, LOG_Q602_SALL_NOHELP);
}

func void SALL_Q602_JOINPARTY() {
    Q602_HELPSALL = 1;
    MIL_4044_SALL_Q602.AIVAR[15] = TRUE;
    MIL_4048_MILITIA_Q602.AIVAR[15] = TRUE;
    MIL_4049_MILITIA_Q602.AIVAR[15] = TRUE;
    NPC_EXCHANGEROUTINE(MIL_4044_SALL_Q602, "Q602_FOLLOW_V1");
    B_STARTOTHERROUTINE(MIL_4048_MILITIA_Q602, "Q602_FOLLOW_V1");
    NPC_REFRESH(MIL_4048_MILITIA_Q602);
    B_STARTOTHERROUTINE(MIL_4049_MILITIA_Q602, "Q602_FOLLOW_V1");
    NPC_REFRESH(MIL_4049_MILITIA_Q602);
}

instance DIA_SALL_Q602_BLOCKEDWAY(C_INFO) {
    NPC = 59789;
    NR = 1;
    CONDITION = DIA_SALL_Q602_BLOCKEDWAY_CONDITION;
    INFORMATION = DIA_SALL_Q602_BLOCKEDWAY_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_SALL_Q602_BLOCKEDWAY_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_Q602)) == (LOG_RUNNING)) && ((Q602_HELPSALL) == (1))) && ((NPC_GETDISTTOWP(SELF, "PARTM3_PATH_51")) <= (1000))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_SALL_Q602_BLOCKEDWAY_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Sall_Q602_BlockedWay_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Sall_Q602_BlockedWay_03_02");
    AI_STOPPROCESSINFOS(SELF);
    AI_LOGENTRY(TOPIC_Q602, LOG_Q602_SALL_BLOCKEDWAY);
}

instance DIA_SALL_Q602_DEADBODIES(C_INFO) {
    NPC = 59789;
    NR = 1;
    CONDITION = DIA_SALL_Q602_DEADBODIES_CONDITION;
    INFORMATION = DIA_SALL_Q602_DEADBODIES_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_SALL_Q602_DEADBODIES_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_Q602)) == (LOG_RUNNING)) && ((Q602_FIREMAGESHOUSE_LOGENTRY) == (1))) && ((Q602_HELPSALL) == (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_SALL_Q602_DEADBODIES_INFO() {
    AI_STARTFACEANI(SELF, S_FRIGHTENED, 1, -(1));
    AI_FUNCTION(SELF, 90414);
    AI_OUTPUT(SELF, OTHER, "DIA_Sall_Q602_DeadBodies_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Sall_Q602_DeadBodies_03_02");
    INFO_CLEARCHOICES(90409);
    INFO_ADDCHOICE(90409, "If you're afraid to risk your life for the priests of Innos himself...", 90413);
    INFO_ADDCHOICE(90409, "Calm down! We have a task to complete!", 90412);
}

func void DIA_SALL_Q602_DEADBODIES_CALMDOWN() {
    Q602_SALLFLEE = 1;
    AI_OUTPUT(OTHER, SELF, "DIA_Sall_Q602_DeadBodies_CalmDown_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Sall_Q602_DeadBodies_CalmDown_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Sall_Q602_DeadBodies_CalmDown_03_03");
    INFO_CLEARCHOICES(90409);
    AI_STOPPROCESSINFOS(SELF);
    NPC_EXCHANGEROUTINE(SELF, "Q602_FLEE");
    MIL_4044_SALL_Q602.AIVAR[15] = FALSE;
    AI_LOGENTRY(TOPIC_Q602, LOG_Q602_SALL_FLEE);
}

func void DIA_SALL_Q602_DEADBODIES_COWARD() {
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(OTHER, SELF, "DIA_Sall_Q602_DeadBodies_Coward_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Sall_Q602_DeadBodies_Coward_03_02");
    INFO_CLEARCHOICES(90409);
    AI_STOPPROCESSINFOS(SELF);
    AI_LOGENTRY(TOPIC_Q602, LOG_Q602_SALL_STAY);
}

func void SALL_Q602_FRIENDSRUNAWAY() {
    Q602_SALLFRINED_FLEE_01 = 1;
    Q602_SALLFRINED_FLEE_02 = 1;
    MIL_4048_MILITIA_Q602.AIVAR[15] = FALSE;
    MIL_4049_MILITIA_Q602.AIVAR[15] = FALSE;
    B_STARTOTHERROUTINE(MIL_4048_MILITIA_Q602, "Q602_FLEE");
    NPC_REFRESH(MIL_4048_MILITIA_Q602);
    B_STARTOTHERROUTINE(MIL_4049_MILITIA_Q602, "Q602_FLEE");
    NPC_REFRESH(MIL_4049_MILITIA_Q602);
}

instance DIA_SALL_Q602_HAVEN(C_INFO) {
    NPC = 59789;
    NR = 1;
    CONDITION = DIA_SALL_Q602_HAVEN_CONDITION;
    INFORMATION = DIA_SALL_Q602_HAVEN_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_SALL_Q602_HAVEN_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_Q602)) == (LOG_RUNNING)) && ((Q602_HAVEN_LOGENTRY) == (1))) && ((Q602_HELPSALL) == (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_SALL_Q602_HAVEN_INFO() {
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Sall_Q602_Haven_03_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Sall_Q602_Haven_15_02");
    AI_RESETFACEANI(SELF);
    AI_STOPPROCESSINFOS(SELF);
}

