instance DIA_AMJAK_EXIT(C_INFO) {
    NPC = 58926;
    NR = 999;
    CONDITION = DIA_AMJAK_EXIT_CONDITION;
    INFORMATION = DIA_AMJAK_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_AMJAK_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_AMJAK_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_AMJAK_HELLO(C_INFO) {
    NPC = 58926;
    NR = 1;
    CONDITION = DIA_AMJAK_HELLO_CONDITION;
    INFORMATION = DIA_AMJAK_HELLO_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_AMJAK_HELLO_CONDITION() {
    return TRUE;
}

func void DIA_AMJAK_HELLO_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Amjak_Hello_03_01");
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Amjak_Hello_03_02");
    AI_RESETFACEANI(SELF);
}

instance DIA_AMJAK_WHAT(C_INFO) {
    NPC = 58926;
    NR = 1;
    CONDITION = DIA_AMJAK_WHAT_CONDITION;
    INFORMATION = DIA_AMJAK_WHAT_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "What's the problem?";
}

func int DIA_AMJAK_WHAT_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 85104)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_AMJAK_WHAT_AMBIENT() {
    AI_STARTFACEANI(SELF, "S_ANGRY", 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Amjak_What_03_05");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    AI_STOPPROCESSINFOS(SELF);
}

func void DIA_AMJAK_WHAT_INFO() {
    MOB_CHANGEFOCUSNAME("KAJMA_BARREL", "MOBNAME_KAJMABARREL");
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    B_SAY(OTHER, SELF, "$MARVIN_QuestAboutTask");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Amjak_What_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Amjak_What_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Amjak_What_03_04");
    DIA_AMJAK_WHAT_AMBIENT();
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_AMJAK_WHATAMBIENTTRUE(C_INFO) {
    NPC = 58926;
    NR = 1;
    CONDITION = DIA_AMJAK_WHATAMBIENTTRUE_CONDITION;
    INFORMATION = DIA_AMJAK_WHATAMBIENTTRUE_INFO;
    PERMANENT = TRUE;
    IMPORTANT = TRUE;
}

func int DIA_AMJAK_WHATAMBIENTTRUE_CONDITION() {
    if (((NPC_KNOWSINFO(OTHER, 85107)) && ((NS72_BARRELOFFORTUNECANYOU) == (0))) && (NPC_ISINSTATE(SELF, 61599))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_AMJAK_WHATAMBIENTTRUE_INFO() {
    DIA_AMJAK_WHAT_AMBIENT();
}

instance DIA_AMJAK_AFTERBARREL(C_INFO) {
    NPC = 58926;
    NR = 2;
    CONDITION = DIA_AMJAK_AFTERBARREL_CONDITION;
    INFORMATION = DIA_AMJAK_AFTERBARREL_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_AMJAK_AFTERBARREL_CONDITION() {
    if ((NS72_BARRELOFFORTUNECANYOU) == (1)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_AMJAK_AFTERBARREL_INFO() {
    var int RND_KAJMA;
    AI_OUTPUT(SELF, OTHER, "DIA_Amjak_AfterBarrel_03_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Amjak_AfterBarrel_15_02");
    RND_KAJMA = HLP_RANDOM(3);
    if ((RND_KAJMA) == (0)) {
        NS72_BARRELOFFORTUNE = 0;
        AI_OUTPUT(OTHER, SELF, "DIA_Amjak_AfterBarrel_15_03");
    };
    if ((RND_KAJMA) == (1)) {
        NS72_BARRELOFFORTUNE = 1;
        AI_OUTPUT(OTHER, SELF, "DIA_Amjak_AfterBarrel_15_04");
    };
    NS72_BARRELOFFORTUNE = 2;
    AI_OUTPUT(OTHER, SELF, "DIA_Amjak_AfterBarrel_15_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Amjak_AfterBarrel_03_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Amjak_AfterBarrel_03_07");
    B_GIVEPLAYERXP(XP_SECRET_KAJMA);
    NS72_STATUS = 1;
    NS72_DAY = WLD_GETDAY();
    NPC_EXCHANGEROUTINE(SELF, TOT);
    NPC_EXCHANGEROUTINE(PIR_14125_PIRATE, TOT);
    NPC_EXCHANGEROUTINE(PIR_14126_PIRATE, TOT);
    NPC_EXCHANGEROUTINE(PIR_14127_PIRATE, TOT);
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_AMJAK_AFTERAFTERBARREL(C_INFO) {
    NPC = 58926;
    NR = 3;
    CONDITION = DIA_AMJAK_AFTERAFTERBARREL_CONDITION;
    INFORMATION = DIA_AMJAK_AFTERAFTERBARREL_INFO;
    PERMANENT = TRUE;
    IMPORTANT = TRUE;
}

func int DIA_AMJAK_AFTERAFTERBARREL_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 85114)) && (NPC_ISINSTATE(SELF, 61599))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_AMJAK_AFTERAFTERBARREL_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Amjak_AfterAfterBarrel_03_01");
    AI_STOPPROCESSINFOS(SELF);
}

