instance DIA_WEGAR_EXIT(C_INFO) {
    NPC = 52847;
    NR = 999;
    CONDITION = DIA_WEGAR_EXIT_CONDITION;
    INFORMATION = DIA_WEGAR_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_WEGAR_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_WEGAR_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_WEGAR_FMQ003(C_INFO) {
    NPC = 52847;
    NR = 1;
    CONDITION = DIA_WEGAR_FMQ003_CONDITION;
    INFORMATION = DIA_WEGAR_FMQ003_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Good evening.";
}

func int DIA_WEGAR_FMQ003_CONDITION() {
    if (((WLD_ISTIME(22, 0, 2, 0)) && (NPC_KNOWSINFO(OTHER, 66029))) && ((NPC_GETDISTTOWP(SELF, "PARTM3_LEAN_03")) <= (800))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_FMQ003CHOOSELOCATION() {
    if ((FMQ003_CHANGEWEGARRTN) == (2)) {
        FMQ003_CHANGEWEGARRTN = 0;
    };
    if (((SELF.AIVAR[15]) == (FALSE)) && ((SELF.NPCTYPE) != (NPCTYPE_FRIEND))) {
        SELF.AIVAR[15] = TRUE;
        (SELF.NPCTYPE) == (NPCTYPE_FRIEND);
    };
    if ((FMQ003_PATROLSLUMSCHOSEN) == (TRUE)) {
        if ((((((NPC_GETDISTTOWP(SELF, "PARTM1_WEGAR_WAIT")) <= (800)) && ((FMQ003_PATROLVILLACHOSEN) == (FALSE))) || (((NPC_GETDISTTOWP(SELF, "PARTM3_LEAN_03")) <= (800)) && ((FMQ003_PATROLVILLACHOSEN) == (FALSE)))) || (((FMQ003_PATROLCOUNTEVENTDONE) >= (3)) && ((FMQ003_PATROLVILLACHOSEN) == (FALSE)))) || (((FMQ003_PATROLCOUNTEVENTDONE) < (3)) && ((FMQ003_PATROLVILLACHOSEN) == (FALSE)))) {
            INFO_ADDCHOICE(66487, "To the Usurer's villa.", 66495);
            INFO_ADDCHOICE(66512, "To the Usurer's villa.", 66495);
            INFO_ADDCHOICE(66515, "To the Usurer's villa.", 66495);
            INFO_ADDCHOICE(66518, "To the Usurer's villa.", 66495);
            INFO_ADDCHOICE(66521, "To the Usurer's villa.", 66495);
            INFO_ADDCHOICE(66524, "To the Usurer's villa.", 66495);
            INFO_ADDCHOICE(66527, "To the Usurer's villa.", 66495);
            INFO_ADDCHOICE(66530, "To the Usurer's villa.", 66495);
        };
        if ((((((NPC_GETDISTTOWP(SELF, "PARTM8_WEAGER_WAIT")) <= (800)) && ((FMQ003_PATROLGUILDCHOSEN) == (FALSE))) || (((NPC_GETDISTTOWP(SELF, "PARTM1_WEGAR_WAIT")) <= (800)) && ((FMQ003_PATROLGUILDCHOSEN) == (FALSE)))) || (((NPC_GETDISTTOWP(SELF, "PARTM3_LEAN_03")) <= (800)) && ((FMQ003_PATROLCRAFTCHOSEN) == (FALSE)))) || (((FMQ003_PATROLCOUNTEVENTDONE) >= (3)) && ((FMQ003_PATROLGUILDCHOSEN) == (FALSE)))) {
            INFO_ADDCHOICE(66487, "To the Merchant's Guild.", 66496);
            INFO_ADDCHOICE(66512, "To the Merchant's Guild.", 66496);
            INFO_ADDCHOICE(66515, "To the Merchant's Guild.", 66496);
            INFO_ADDCHOICE(66518, "To the Merchant's Guild.", 66496);
            INFO_ADDCHOICE(66521, "To the Merchant's Guild.", 66496);
            INFO_ADDCHOICE(66524, "To the Merchant's Guild.", 66496);
            INFO_ADDCHOICE(66527, "To the Merchant's Guild.", 66496);
            INFO_ADDCHOICE(66530, "To the Merchant's Guild.", 66496);
        };
        if ((((((NPC_GETDISTTOWP(SELF, "PARTM8_WEAGER_WAIT")) <= (800)) && ((FMQ003_PATROLFIREMAGESCHOSEN) == (FALSE))) || (((NPC_GETDISTTOWP(SELF, "PARTM3_LEAN_01")) <= (800)) && ((FMQ003_PATROLFIREMAGESCHOSEN) == (FALSE)))) || (((NPC_GETDISTTOWP(SELF, "PARTM1_GUILD_WEGAR_WAIT")) <= (800)) && ((FMQ003_PATROLFIREMAGESCHOSEN) == (FALSE)))) || (((FMQ003_PATROLCOUNTEVENTDONE) >= (3)) && ((FMQ003_PATROLFIREMAGESCHOSEN) == (FALSE)))) {
            INFO_ADDCHOICE(66487, "To the mages' residence.", 66497);
            INFO_ADDCHOICE(66512, "To the mages' residence.", 66497);
            INFO_ADDCHOICE(66515, "To the mages' residence.", 66497);
            INFO_ADDCHOICE(66518, "To the mages' residence.", 66497);
            INFO_ADDCHOICE(66521, "To the mages' residence.", 66497);
            INFO_ADDCHOICE(66524, "To the mages' residence.", 66497);
            INFO_ADDCHOICE(66527, "To the mages' residence.", 66497);
            INFO_ADDCHOICE(66530, "To the mages' residence.", 66497);
        };
        if (((((((NPC_GETDISTTOWP(SELF, "HARBOUR_WAIT_WEAGER")) <= (800)) && ((FMQ003_PATROLCRAFTCHOSEN) == (FALSE))) || (((NPC_GETDISTTOWP(SELF, "PARTM1_WEGAR_WAIT")) <= (800)) && ((FMQ003_PATROLCRAFTCHOSEN) == (FALSE)))) || (((NPC_GETDISTTOWP(SELF, "PARTM1_GUILD_WEGAR_WAIT")) <= (800)) && ((FMQ003_PATROLCRAFTCHOSEN) == (FALSE)))) || (((NPC_GETDISTTOWP(SELF, "PARTM3_LEAN_03")) <= (800)) && ((FMQ003_PATROLCRAFTCHOSEN) == (FALSE)))) || (((FMQ003_PATROLCOUNTEVENTDONE) >= (3)) && ((FMQ003_PATROLCRAFTCHOSEN) == (FALSE)))) {
            INFO_ADDCHOICE(66487, "To the Artisan's District.", 66498);
            INFO_ADDCHOICE(66512, "To the Artisan's District.", 66498);
            INFO_ADDCHOICE(66515, "To the Artisan's District.", 66498);
            INFO_ADDCHOICE(66518, "To the Artisan's District.", 66498);
            INFO_ADDCHOICE(66521, "To the Artisan's District.", 66498);
            INFO_ADDCHOICE(66524, "To the Artisan's District.", 66498);
            INFO_ADDCHOICE(66527, "To the Artisan's District.", 66498);
            INFO_ADDCHOICE(66530, "To the Artisan's District.", 66498);
        };
        if (((((NPC_GETDISTTOWP(SELF, "SLUMS_STAND_WEGAR_AFTER_SLUMS")) <= (800)) && ((FMQ003_PATROLWATERMAGESCHOSEN) == (FALSE))) || (((NPC_GETDISTTOWP(SELF, "PARTM3_LEAN_01")) <= (800)) && ((FMQ003_PATROLWATERMAGESCHOSEN) == (FALSE)))) || (((FMQ003_PATROLCOUNTEVENTDONE) >= (3)) && ((FMQ003_PATROLWATERMAGESCHOSEN) == (FALSE)))) {
            INFO_ADDCHOICE(66487, "To the shrine of Adanos.", 66493);
            INFO_ADDCHOICE(66512, "To the shrine of Adanos.", 66493);
            INFO_ADDCHOICE(66515, "To the shrine of Adanos.", 66493);
            INFO_ADDCHOICE(66518, "To the shrine of Adanos.", 66493);
            INFO_ADDCHOICE(66521, "To the shrine of Adanos.", 66493);
            INFO_ADDCHOICE(66524, "To the shrine of Adanos.", 66493);
            INFO_ADDCHOICE(66527, "To the shrine of Adanos.", 66493);
            INFO_ADDCHOICE(66530, "To the shrine of Adanos.", 66493);
        };
        if (((((((NPC_GETDISTTOWP(SELF, "PARTM3_LEAN_03")) <= (800)) && ((FMQ003_PATROLCHURCHCHOSEN) == (FALSE))) || (((NPC_GETDISTTOWP(SELF, "PARTM8_WEAGER_WAIT")) <= (800)) && ((FMQ003_PATROLCHURCHCHOSEN) == (FALSE)))) || (((NPC_GETDISTTOWP(SELF, "PARTM1_GUILD_WEGAR_WAIT")) <= (800)) && ((FMQ003_PATROLCHURCHCHOSEN) == (FALSE)))) || (((FMQ003_PATROLCOUNTEVENTDONE) >= (3)) && ((FMQ003_PATROLCHURCHCHOSEN) == (FALSE)))) || (((FMQ003_PATROLCOUNTEVENTDONE) < (3)) && ((FMQ003_PATROLCHURCHCHOSEN) == (FALSE)))) {
            INFO_ADDCHOICE(66487, "To the Church of Innos.", 66494);
            INFO_ADDCHOICE(66512, "To the Church of Innos.", 66494);
            INFO_ADDCHOICE(66515, "To the Church of Innos.", 66494);
            INFO_ADDCHOICE(66518, "To the Church of Innos.", 66494);
            INFO_ADDCHOICE(66521, "To the Church of Innos.", 66494);
            INFO_ADDCHOICE(66524, "To the Church of Innos.", 66494);
            INFO_ADDCHOICE(66527, "To the Church of Innos.", 66494);
            INFO_ADDCHOICE(66530, "To the Church of Innos.", 66494);
        };
        if ((FMQ003_PATROLCOUNTEVENTDONE) >= (3)) {
            INFO_ADDCHOICE(66512, "Let's go back.", 66499);
            INFO_ADDCHOICE(66515, "Let's go back.", 66499);
            INFO_ADDCHOICE(66518, "Let's go back.", 66499);
            INFO_ADDCHOICE(66521, "Let's go back.", 66499);
            INFO_ADDCHOICE(66524, "Let's go back.", 66499);
            INFO_ADDCHOICE(66527, "Let's go back.", 66499);
            INFO_ADDCHOICE(66530, "Let's go back.", 66499);
        };
    };
    if ((FMQ003_PATROLCOUNTEVENTDONE) == (0)) {
        INFO_ADDCHOICE(66487, "To the Poor District.", 66492);
        INFO_ADDCHOICE(66512, "To the Poor District.", 66492);
        INFO_ADDCHOICE(66515, "To the Poor District.", 66492);
        INFO_ADDCHOICE(66518, "To the Poor District.", 66492);
        INFO_ADDCHOICE(66521, "To the Poor District.", 66492);
        INFO_ADDCHOICE(66524, "To the Poor District.", 66492);
        INFO_ADDCHOICE(66527, "To the Poor District.", 66492);
        INFO_ADDCHOICE(66530, "To the Poor District.", 66492);
    };
}

func void DIA_WEGAR_FMQ003_INFO() {
    var C_ITEM ITM;
    SELF.AIVAR[15] = TRUE;
    FMQ003_CHECKTIME = 1;
    FMQ003_WEARARMOR = 1;
    if ((NPC_HASITEMS(OTHER, 35485)) == (0)) {
        CREATEINVITEMS(SELF, 35485, 1);
        B_GIVEINVITEMS(SELF, OTHER, 35485, 1);
    };
    ITM = NPC_GETEQUIPPEDARMOR(OTHER);
    if ((NPC_HASEQUIPPEDARMOR(OTHER)) == (TRUE)) {
        if ((HLP_ISITEM(ITM, 35485)) == (FALSE)) {
            AI_EQUIPARMOR(OTHER, 35485);
        };
    };
    AI_EQUIPARMOR(OTHER, 35485);
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_FMQ003_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_FMQ003_02_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_FMQ003_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_FMQ003_02_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_FMQ003_02_04");
    FMQ003_PATROLSLUMSCHOSEN = FALSE;
    if ((NPC_HASITEMS(OTHER, 34742)) == (0)) {
        CREATEINVITEMS(SELF, 34742, 2);
        B_GIVEINVITEMS(SELF, OTHER, 34742, 2);
    };
    PATROL_AVOID_RANDOM_TRAPS();
    AI_LOGENTRY(TOPIC_FMQ003, LOG_FMQ003_AFTERFIRSTTALK);
    INFO_CLEARCHOICES(66487);
    DIA_WEGAR_FMQ003CHOOSELOCATION();
}

func void DIA_WEGAR_FMQ003_GOINGTOSLUMS() {
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_FMQ003_GoingToSlums_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_FMQ003_GoingToSlums_02_01");
    AI_STOPPROCESSINFOS(SELF);
    FMQ003_PATROLSLUMSCHOSEN = TRUE;
    FMQ003_CHANGEWEGARRTN = 1;
    NPC_EXCHANGEROUTINE(SELF, "GuideToSlums");
    INFO_CLEARCHOICES(66487);
    INFO_CLEARCHOICES(66512);
    INFO_CLEARCHOICES(66515);
    INFO_CLEARCHOICES(66518);
    INFO_CLEARCHOICES(66521);
    INFO_CLEARCHOICES(66524);
    INFO_CLEARCHOICES(66527);
    INFO_CLEARCHOICES(66530);
}

func void DIA_WEGAR_FMQ003_GOINGTOADANOSTEMPLE() {
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_FMQ003_GoingToAdanosTemple_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_FMQ003_GoingToSlums_02_01");
    AI_STOPPROCESSINFOS(SELF);
    FMQ003_PATROLWATERMAGESCHOSEN = TRUE;
    FMQ003_CHANGEWEGARRTN = 1;
    NPC_EXCHANGEROUTINE(SELF, "GuideToAdanosTemple");
    WLD_INSERTNPC(55156, "HARBOUR_PATH_73");
    INFO_CLEARCHOICES(66487);
    INFO_CLEARCHOICES(66512);
    INFO_CLEARCHOICES(66515);
    INFO_CLEARCHOICES(66518);
    INFO_CLEARCHOICES(66521);
    INFO_CLEARCHOICES(66524);
    INFO_CLEARCHOICES(66527);
    INFO_CLEARCHOICES(66530);
}

func void DIA_WEGAR_FMQ003_GOINGTOCHURCH() {
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_FMQ003_GoingToChurch_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_FMQ003_GoingToSlums_02_01");
    AI_STOPPROCESSINFOS(SELF);
    FMQ003_PATROLCHURCHCHOSEN = TRUE;
    FMQ003_CHANGEWEGARRTN = 1;
    NPC_EXCHANGEROUTINE(SELF, "GuideToChurch");
    WLD_INSERTNPC(55445, "PARTM8_THIEF");
    INFO_CLEARCHOICES(66487);
    INFO_CLEARCHOICES(66512);
    INFO_CLEARCHOICES(66515);
    INFO_CLEARCHOICES(66518);
    INFO_CLEARCHOICES(66521);
    INFO_CLEARCHOICES(66524);
    INFO_CLEARCHOICES(66527);
    INFO_CLEARCHOICES(66530);
}

func void DIA_WEGAR_FMQ003_GOINGTOVILLA() {
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_FMQ003_GoingToVilla_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_FMQ003_GoingToSlums_02_01");
    AI_STOPPROCESSINFOS(SELF);
    FMQ003_PATROLVILLACHOSEN = TRUE;
    FMQ003_CHANGEWEGARRTN = 1;
    NPC_EXCHANGEROUTINE(SELF, "GuideToVilla");
    WLD_INSERTNPC(53233, "PARTM4_MADVLK_PATROL_01");
    WLD_INSERTNPC(53238, "PARTM4_MADVLK_PATROL_01");
    INFO_CLEARCHOICES(66487);
    INFO_CLEARCHOICES(66512);
    INFO_CLEARCHOICES(66515);
    INFO_CLEARCHOICES(66518);
    INFO_CLEARCHOICES(66521);
    INFO_CLEARCHOICES(66524);
    INFO_CLEARCHOICES(66527);
    INFO_CLEARCHOICES(66530);
}

func void DIA_WEGAR_FMQ003_GOINGTOGUILD() {
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_FMQ003_GoingToGuild_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_FMQ003_GoingToSlums_02_01");
    AI_STOPPROCESSINFOS(SELF);
    FMQ003_PATROLGUILDCHOSEN = TRUE;
    FMQ003_CHANGEWEGARRTN = 1;
    NPC_EXCHANGEROUTINE(SELF, "GuideToGuild");
    WLD_INSERTNPC(51937, "PARTM1_GUILD_SMALLTALK_02");
    WLD_INSERTNPC(51940, "PARTM1_GUILD_SMALLTALK_02");
    INFO_CLEARCHOICES(66487);
    INFO_CLEARCHOICES(66512);
    INFO_CLEARCHOICES(66515);
    INFO_CLEARCHOICES(66518);
    INFO_CLEARCHOICES(66521);
    INFO_CLEARCHOICES(66524);
    INFO_CLEARCHOICES(66527);
    INFO_CLEARCHOICES(66530);
}

func void DIA_WEGAR_FMQ003_GOINGTOFIREMAGES() {
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_FMQ003_GoingToFireMages_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_FMQ003_GoingToSlums_02_01");
    AI_STOPPROCESSINFOS(SELF);
    FMQ003_PATROLFIREMAGESCHOSEN = TRUE;
    FMQ003_CHANGEWEGARRTN = 1;
    NPC_EXCHANGEROUTINE(SELF, "GuideToFireMages");
    B_STARTOTHERROUTINE(NONE_6239_CASPAR, START);
    NPC_REFRESH(NONE_6239_CASPAR);
    TELEPORTNPCTOWP(51954, NONE_6239_CASPAR.WP);
    INFO_CLEARCHOICES(66487);
    INFO_CLEARCHOICES(66512);
    INFO_CLEARCHOICES(66515);
    INFO_CLEARCHOICES(66518);
    INFO_CLEARCHOICES(66521);
    INFO_CLEARCHOICES(66524);
    INFO_CLEARCHOICES(66527);
    INFO_CLEARCHOICES(66530);
}

func void DIA_WEGAR_FMQ003_GOINGTOCRAFT() {
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_FMQ003_GoingToCraft_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_FMQ003_GoingToSlums_02_01");
    AI_STOPPROCESSINFOS(SELF);
    FMQ003_PATROLCRAFTCHOSEN = TRUE;
    FMQ003_CHANGEWEGARRTN = 1;
    NPC_EXCHANGEROUTINE(SELF, "GuideToCraft");
    WLD_INSERTNPC(52638, "PARTM3_PATROL_HOMELESS");
    INFO_CLEARCHOICES(66487);
    INFO_CLEARCHOICES(66512);
    INFO_CLEARCHOICES(66515);
    INFO_CLEARCHOICES(66518);
    INFO_CLEARCHOICES(66521);
    INFO_CLEARCHOICES(66524);
    INFO_CLEARCHOICES(66527);
    INFO_CLEARCHOICES(66530);
}

func void DIA_WEGAR_FMQ003_COMEBACK() {
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_FMQ003_15_07");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_FMQ003_02_08");
    FMQ003_PATROLQUESTDONE = TRUE;
    FMQ003_CHANGEWEGARRTN = 1;
    AI_STOPPROCESSINFOS(SELF);
    NPC_EXCHANGEROUTINE(SELF, "GuideToFinishQuest");
    INFO_CLEARCHOICES(66487);
    INFO_CLEARCHOICES(66512);
    INFO_CLEARCHOICES(66515);
    INFO_CLEARCHOICES(66518);
    INFO_CLEARCHOICES(66521);
    INFO_CLEARCHOICES(66524);
    INFO_CLEARCHOICES(66527);
    INFO_CLEARCHOICES(66530);
}

instance DIA_WEGAR_DONE(C_INFO) {
    NPC = 52847;
    NR = 2;
    CONDITION = DIA_WEGAR_DONE_CONDITION;
    INFORMATION = DIA_WEGAR_DONE_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_WEGAR_DONE_CONDITION() {
    if (((NPC_GETDISTTOWP(SELF, "PARTM3_PATH_05")) < (500)) && ((FMQ003_PATROLQUESTDONE) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_DONE_INFO() {
    SELF.AIVAR[15] = FALSE;
    FMQ003_WEARARMOR = FALSE;
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_Done_03_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_Done_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_Done_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_Done_03_04");
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_Done_15_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_Done_03_06");
    if ((FMQ003_CHECKTIME) == (2)) {
        SETHOLDTIME(FALSE);
        CHANGETIMESPEED(100);
    };
    FMQ003_CHECKTIME = 0;
    FMQ003_RODERICH_RTNCHECK = 1;
    NPC_EXCHANGEROUTINE(SELF, "RoderichWait");
    NPC_EXCHANGEROUTINE(MIL_4000_RODERICH, "FMQ003_RoderichWait");
    AI_LOGENTRY(TOPIC_FMQ003, LOG_FMQ003_AFTERPATROL);
}

instance DIA_WEGAR_QUESTION(C_INFO) {
    NPC = 52847;
    NR = 3;
    CONDITION = DIA_WEGAR_QUESTION_CONDITION;
    INFORMATION = DIA_WEGAR_QUESTION_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I have a question.";
}

func int DIA_WEGAR_QUESTION_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 66500)) && ((KAPITEL) < (5))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_QUESTION_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_Question_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_Question_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_Question_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_Question_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_Question_03_07");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_Question_03_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_Question_03_09");
}

instance DIA_WEGAR_RATISDEAD(C_INFO) {
    NPC = 52847;
    NR = 1;
    CONDITION = DIA_WEGAR_RATISDEAD_CONDITION;
    INFORMATION = DIA_WEGAR_RATISDEAD_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_WEGAR_RATISDEAD_CONDITION() {
    if (((((LOG_GETSTATUS(MIS_FMQ003)) == (LOG_RUNNING)) && (NPC_ISDEAD(GIANT_RAT_SLUMS))) && ((FMQ003_PATROLSLUMSCHOSEN) == (TRUE))) && ((GIANTRATATTACKED) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_RATISDEAD_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_RatIsDead_02_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_RatIsDead_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_RatIsDead_02_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_RatIsDead_02_04");
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_RatIsDead_15_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_RatIsDead_02_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_RatIsDead_02_07");
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_RatIsDead_15_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_RatIsDead_02_09");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_RatIsDead_02_10");
    NPC_EXCHANGEROUTINE(SELF, "WaitingOutsideSlums");
    INFO_CLEARCHOICES(66506);
    INFO_ADDCHOICE(66506, "Yes, sir!", 66511);
    INFO_ADDCHOICE(66506, "You want me to go alone?", 66510);
}

func void DIA_WEGAR_RATISDEAD_LOGENTRY() {
    AI_LOGENTRY(TOPIC_FMQ003, LOG_FMQ003_WEIGAR_CHECKSLUMS);
    AI_STOPPROCESSINFOS(SELF);
}

func void DIA_WEGAR_RATISDEAD_GOALONE() {
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_RatIsDead_GoAlone_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_RatIsDead_GoAlone_02_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_RatIsDead_GoAlone_02_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_RatIsDead_GoAlone_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_RatIsDead_GoAlone_02_04");
    INFO_CLEARCHOICES(66506);
    DIA_WEGAR_RATISDEAD_LOGENTRY();
}

func void DIA_WEGAR_RATISDEAD_YESSIR() {
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_RatIsDead_YesSir_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_RatIsDead_YesSir_02_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_RatIsDead_YesSir_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_RatIsDead_YesSir_02_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_RatIsDead_YesSir_15_04");
    INFO_CLEARCHOICES(66506);
    DIA_WEGAR_RATISDEAD_LOGENTRY();
}

instance DIA_WEGAR_EXITSLUMS(C_INFO) {
    NPC = 52847;
    NR = 1;
    CONDITION = DIA_WEGAR_EXITSLUMS_CONDITION;
    INFORMATION = DIA_WEGAR_EXITSLUMS_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_WEGAR_EXITSLUMS_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 74961)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_EXITSLUMS_INFO() {
    AI_FUNCTION(SELF, 62810);
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_ExitSlums_02_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_ExitSlums_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_ExitSlums_02_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_ExitSlums_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_ExitSlums_02_05");
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_ExitSlums_15_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_ExitSlums_02_07");
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_ExitSlums_15_08");
    FMQ003_PATROLCOUNTEVENTDONE = (FMQ003_PATROLCOUNTEVENTDONE) + (1);
    B_GIVEPLAYERXP(XP_FMQ003_EVENTDONE_TIER_3);
    if ((FMQ003_PATROLCOUNTEVENTDONE) == (3)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_FMQ003_02_05");
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_FMQ003_15_06");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_ExitSlums_02_09");
    INFO_CLEARCHOICES(66512);
    DIA_WEGAR_FMQ003CHOOSELOCATION();
}

instance DIA_WEGAR_ADANOSTEMPLEDONE(C_INFO) {
    NPC = 52847;
    NR = 1;
    CONDITION = DIA_WEGAR_ADANOSTEMPLEDONE_CONDITION;
    INFORMATION = DIA_WEGAR_ADANOSTEMPLEDONE_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_WEGAR_ADANOSTEMPLEDONE_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 75431)) && ((NPC_REFUSETALK(SELF)) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_ADANOSTEMPLEDONE_INFO() {
    if ((FMQ003_FANATICTALK) == (1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_AdanosTempleDone_03_01");
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_AdanosTempleDone_15_02");
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_AdanosTempleDone_03_03");
        B_GIVEPLAYERXP(XP_FMQ003_EVENTDONE_TIER_3);
    };
    if ((FMQ003_FANATICTALK) == (2)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_AdanosTempleDone_03_04");
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_AdanosTempleDone_15_05");
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_AdanosTempleDone_03_06");
        B_GIVEPLAYERXP(XP_FMQ003_EVENTDONE_TIER_1);
    };
    FMQ003_PATROLCOUNTEVENTDONE = (FMQ003_PATROLCOUNTEVENTDONE) + (1);
    if ((FMQ003_PATROLCOUNTEVENTDONE) == (3)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_FMQ003_02_05");
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_FMQ003_15_06");
    };
    AI_LOGENTRY(TOPIC_FMQ003, LOG_FMQ003_TOWER);
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_ExitSlums_02_09");
    INFO_CLEARCHOICES(66515);
    DIA_WEGAR_FMQ003CHOOSELOCATION();
}

instance DIA_WEGAR_CHURCHDONE(C_INFO) {
    NPC = 52847;
    NR = 1;
    CONDITION = DIA_WEGAR_CHURCHDONE_CONDITION;
    INFORMATION = DIA_WEGAR_CHURCHDONE_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_WEGAR_CHURCHDONE_CONDITION() {
    if (((NPC_KNOWSINFO(OTHER, 75448)) && ((NPC_REFUSETALK(SELF)) == (FALSE))) || ((NPC_KNOWSINFO(OTHER, 75441)) && ((FMQ003_THIEFTALK) == (1)))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_CHURCHDONE_INFO() {
    if ((FMQ003_THIEFTALK) == (1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_ChurchDone_03_01");
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_ChurchDone_15_02");
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_ChurchDone_03_03");
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_ChurchDone_03_04");
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_ChurchDone_15_05");
        B_GIVEPLAYERXP(XP_FMQ003_EVENTDONE_TIER_1);
    };
    if ((FMQ003_THIEFTALK) == (3)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_ChurchDone_03_06");
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_ChurchDone_15_07");
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_ChurchDone_03_08");
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_ChurchDone_15_09");
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_ChurchDone_03_10");
        B_GIVEPLAYERXP(XP_FMQ003_EVENTDONE_TIER_3);
    };
    if ((FMQ003_THIEFTALK) == (4)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_ChurchDone_03_11");
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_ChurchDone_15_12");
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_ChurchDone_03_13");
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_ChurchDone_15_14");
        B_GIVEPLAYERXP(XP_FMQ003_EVENTDONE_TIER_2);
    };
    AI_LOGENTRY(TOPIC_FMQ003, LOG_FMQ003_CHURCH);
    FMQ003_PATROLCOUNTEVENTDONE = (FMQ003_PATROLCOUNTEVENTDONE) + (1);
    if ((FMQ003_PATROLCOUNTEVENTDONE) == (3)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_FMQ003_02_05");
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_FMQ003_15_06");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_ExitSlums_02_09");
    INFO_CLEARCHOICES(66518);
    DIA_WEGAR_FMQ003CHOOSELOCATION();
}

instance DIA_WEGAR_FIREMAGESDONE(C_INFO) {
    NPC = 52847;
    NR = 1;
    CONDITION = DIA_WEGAR_FIREMAGESDONE_CONDITION;
    INFORMATION = DIA_WEGAR_FIREMAGESDONE_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_WEGAR_FIREMAGESDONE_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 68880)) && ((NPC_REFUSETALK(SELF)) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_FIREMAGESDONE_INFO() {
    if ((FMQ003_NOVICETALK) == (1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_FireMagesDone_03_01");
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_FireMagesDone_03_02");
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_FireMagesDone_03_03");
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_FireMagesDone_15_04");
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_FireMagesDone_03_05");
        B_GIVEPLAYERXP(XP_FMQ003_EVENTDONE_TIER_1);
    };
    if ((FMQ003_NOVICETALK) == (2)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_FireMagesDone_03_06");
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_FireMagesDone_15_07");
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_FireMagesDone_03_08");
        B_GIVEPLAYERXP(XP_FMQ003_EVENTDONE_TIER_2);
    };
    if ((FMQ003_NOVICETALK) == (3)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_FireMagesDone_03_09");
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_FireMagesDone_15_10");
        B_GIVEPLAYERXP(XP_FMQ003_EVENTDONE_TIER_3);
    };
    FMQ003_PATROLCOUNTEVENTDONE = (FMQ003_PATROLCOUNTEVENTDONE) + (1);
    AI_LOGENTRY(TOPIC_FMQ003, LOG_FMQ003_FIRENOVICE);
    if ((FMQ003_PATROLCOUNTEVENTDONE) == (3)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_FMQ003_02_05");
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_FMQ003_15_06");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_ExitSlums_02_09");
    INFO_CLEARCHOICES(66521);
    DIA_WEGAR_FMQ003CHOOSELOCATION();
}

instance DIA_WEGAR_CRAFTDONE(C_INFO) {
    NPC = 52847;
    NR = 1;
    CONDITION = DIA_WEGAR_CRAFTDONE_CONDITION;
    INFORMATION = DIA_WEGAR_CRAFTDONE_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_WEGAR_CRAFTDONE_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 68913)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_CRAFTDONE_INFO() {
    if ((FMQ003_HOMELESSTALK) == (1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_CraftDone_03_01");
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_CraftDone_15_02");
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_CraftDone_03_03");
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_CraftDone_03_04");
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_CraftDone_15_05");
        B_GIVEPLAYERXP(XP_FMQ003_EVENTDONE_TIER_1);
    };
    if ((FMQ003_HOMELESSTALK) == (2)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_CraftDone_03_06");
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_CraftDone_03_07");
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_CraftDone_15_08");
        B_GIVEPLAYERXP(XP_FMQ003_EVENTDONE_TIER_2);
    };
    if ((FMQ003_HOMELESSTALK) == (3)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_CraftDone_03_09");
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_CraftDone_03_10");
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_CraftDone_15_11");
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_CraftDone_03_12");
        B_GIVEPLAYERXP(XP_FMQ003_EVENTDONE_TIER_3);
    };
    FMQ003_PATROLCOUNTEVENTDONE = (FMQ003_PATROLCOUNTEVENTDONE) + (1);
    AI_LOGENTRY(TOPIC_FMQ003, LOG_FMQ003_HOMELESS);
    if ((FMQ003_PATROLCOUNTEVENTDONE) == (3)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_FMQ003_02_05");
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_FMQ003_15_06");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_ExitSlums_02_09");
    INFO_CLEARCHOICES(66524);
    DIA_WEGAR_FMQ003CHOOSELOCATION();
}

instance DIA_WEGAR_VILLADONE(C_INFO) {
    NPC = 52847;
    NR = 3;
    CONDITION = DIA_WEGAR_VILLADONE_CONDITION;
    INFORMATION = DIA_WEGAR_VILLADONE_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_WEGAR_VILLADONE_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 75457)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_VILLADONE_INFO() {
    if ((FMQ003_ANGRYVLKTALK) == (1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_VillaDone_03_01");
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_VillaDone_03_02");
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_VillaDone_15_03");
        B_GIVEPLAYERXP(XP_FMQ003_EVENTDONE_TIER_3);
    };
    if ((FMQ003_ANGRYVLKTALK) == (2)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_VillaDone_03_04");
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_VillaDone_15_05");
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_VillaDone_03_06");
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_VillaDone_15_07");
        B_GIVEPLAYERXP(XP_FMQ003_EVENTDONE_TIER_2);
    };
    if ((FMQ003_ANGRYVLKTALK) == (3)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_VillaDone_03_08");
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_VillaDone_15_09");
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_VillaDone_03_10");
        B_GIVEPLAYERXP(XP_FMQ003_EVENTDONE_TIER_1);
    };
    FMQ003_PATROLCOUNTEVENTDONE = (FMQ003_PATROLCOUNTEVENTDONE) + (1);
    AI_LOGENTRY(TOPIC_FMQ003, LOG_FMQ003_TWOGUYS);
    if ((FMQ003_PATROLCOUNTEVENTDONE) == (3)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_FMQ003_02_05");
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_FMQ003_15_06");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_ExitSlums_02_09");
    INFO_CLEARCHOICES(66527);
    DIA_WEGAR_FMQ003CHOOSELOCATION();
}

instance DIA_WEGAR_GUILDDONE(C_INFO) {
    NPC = 52847;
    NR = 1;
    CONDITION = DIA_WEGAR_GUILDDONE_CONDITION;
    INFORMATION = DIA_WEGAR_GUILDDONE_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_WEGAR_GUILDDONE_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 75467)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_GUILDDONE_INFO() {
    if ((FMQ003_CITIZENTALK) == (1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_GuildDone_03_01");
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_GuildDone_15_02");
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_GuildDone_03_03");
        B_GIVEPLAYERXP(XP_FMQ003_EVENTDONE_TIER_1);
    };
    if ((FMQ003_CITIZENTALK) == (2)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_GuildDone_03_04");
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_GuildDone_15_05");
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_GuildDone_03_06");
        B_GIVEPLAYERXP(XP_FMQ003_EVENTDONE_TIER_2);
    };
    if ((FMQ003_CITIZENTALK) == (3)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_GuildDone_03_07");
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_GuildDone_15_08");
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_GuildDone_03_09");
        B_GIVEPLAYERXP(XP_FMQ003_EVENTDONE_TIER_3);
    };
    FMQ003_PATROLCOUNTEVENTDONE = (FMQ003_PATROLCOUNTEVENTDONE) + (1);
    AI_LOGENTRY(TOPIC_FMQ003, LOG_FMQ003_LOVESTORY);
    if ((FMQ003_PATROLCOUNTEVENTDONE) == (3)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_FMQ003_02_05");
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_FMQ003_15_06");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_ExitSlums_02_09");
    INFO_CLEARCHOICES(66530);
    DIA_WEGAR_FMQ003CHOOSELOCATION();
}

instance DIA_WEGAR_NOTME(C_INFO) {
    NPC = 52847;
    NR = 4;
    CONDITION = DIA_WEGAR_NOTME_CONDITION;
    INFORMATION = DIA_WEGAR_NOTME_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_WEGAR_NOTME_CONDITION() {
    if ((((NPC_ISINSTATE(SELF, 61599)) && (NPC_KNOWSINFO(OTHER, 66500))) && (WLD_ISTIME(8, 0, 22, 0))) && ((LOG_GETSTATUS(MIS_FMQ003)) == (LOG_RUNNING))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_NOTME_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_NotMe_03_01");
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_WEGAR_WELCOMEMIL(C_INFO) {
    NPC = 52847;
    NR = 1;
    CONDITION = DIA_WEGAR_WELCOMEMIL_CONDITION;
    INFORMATION = DIA_WEGAR_WELCOMEMIL_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_WEGAR_WELCOMEMIL_CONDITION() {
    if (((OTHER.GUILD) == (GIL_MIL)) && ((BECOMEAGUARD_TAVERNPART) == (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_WELCOMEMIL_INFO() {
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_WELCOMEMIL_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_WELCOMEMIL_03_02");
    AI_RESETFACEANI(SELF);
}

instance DIA_WEGAR_QM201_START(C_INFO) {
    NPC = 52847;
    NR = 1;
    CONDITION = DIA_WEGAR_QM201_START_CONDITION;
    INFORMATION = DIA_WEGAR_QM201_START_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
    DESCRIPTION = "What are you looking at?";
}

func int DIA_WEGAR_QM201_START_CONDITION() {
    if ((((NPC_GETDISTTOWP(SELF, "SLUMS_WEGAR_STAND")) <= (1000)) && ((LOG_GETSTATUS(MIS_Q203)) == (LOG_SUCCESS))) && ((LOG_GETSTATUS(MIS_FMQ003)) == (LOG_SUCCESS))) {
        if ((((SQ313_KICKDOOR_CHECK) == (TRUE)) && ((LOG_GETSTATUS(MIS_SQ313)) == (LOG_RUNNING))) && ((NPC_KNOWSINFO(OTHER, 67748)) == (FALSE))) {
            return FALSE;
        };
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_QM201_START_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM201_Start_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_Start_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_Start_03_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM201_Start_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_Start_03_05");
    AI_RESETFACEANI(OTHER);
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM201_Start_15_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_Start_03_07");
}

instance DIA_WEGAR_QM201_HOW(C_INFO) {
    NPC = 52847;
    NR = 1;
    CONDITION = DIA_WEGAR_QM201_HOW_CONDITION;
    INFORMATION = DIA_WEGAR_QM201_HOW_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "How do we do that?";
}

func int DIA_WEGAR_QM201_HOW_CONDITION() {
    if (((((NPC_KNOWSINFO(OTHER, 66539)) && ((NPC_GETDISTTOWP(SELF, "SLUMS_WEGAR_STAND")) <= (1000))) && ((LOG_GETSTATUS(MIS_Q203)) == (LOG_SUCCESS))) && ((LOG_GETSTATUS(MIS_FMQ003)) == (LOG_SUCCESS))) && ((HERO.GUILD) == (GIL_MIL))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

var int WEGAR_QM201_HOW_WHAT;
var int WEGAR_QM201_HOW_WHERE;
var int WEGAR_QM201_HOW_THINK;
func void DIA_WEGAR_QM201_HOW_NEXT() {
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_How_Next_03_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM201_How_Next_15_02");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_How_Next_03_03");
    AI_RESETFACEANI(SELF);
    LOG_CREATETOPIC(TOPIC_QM201, LOG_MISSION);
    LOG_SETSTATUS(_@(MIS_QM201), TOPIC_QM201, LOG_RUNNING);
    AI_LOGENTRY(TOPIC_QM201, LOG_QM201_START);
    INFO_CLEARCHOICES(66542);
}

func void DIA_WEGAR_QM201_HOW_CHOCIES() {
    INFO_CLEARCHOICES(66542);
    AI_RESETFACEANI(OTHER);
    if ((((WEGAR_QM201_HOW_WHAT) == (TRUE)) && ((WEGAR_QM201_HOW_WHERE) == (TRUE))) && ((WEGAR_QM201_HOW_THINK) == (TRUE))) {
        DIA_WEGAR_QM201_HOW_NEXT();
    };
    if ((WEGAR_QM201_HOW_THINK) == (FALSE)) {
        INFO_ADDCHOICE(66542, "Do you think they'll fall for a ruse like that?", 66552);
    };
    if ((WEGAR_QM201_HOW_WHERE) == (FALSE)) {
        INFO_ADDCHOICE(66542, "Where is the 'exchange' to take place?", 66551);
    };
    if ((WEGAR_QM201_HOW_WHAT) == (FALSE)) {
        INFO_ADDCHOICE(66542, "What goods are we talking about?", 66550);
    };
}

func void DIA_WEGAR_QM201_HOW_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM201_How_15_01");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_How_03_02");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_How_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_How_03_04");
    DIA_WEGAR_QM201_HOW_CHOCIES();
}

func void DIA_WEGAR_QM201_HOW_WHAT() {
    WEGAR_QM201_HOW_WHAT = TRUE;
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM201_How_What_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_How_What_03_02");
    DIA_WEGAR_QM201_HOW_CHOCIES();
}

func void DIA_WEGAR_QM201_HOW_WHERE() {
    WEGAR_QM201_HOW_WHERE = TRUE;
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM201_How_Where_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_How_Where_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_How_Where_03_03");
    DIA_WEGAR_QM201_HOW_CHOCIES();
}

func void DIA_WEGAR_QM201_HOW_THINK() {
    WEGAR_QM201_HOW_THINK = TRUE;
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM201_How_Think_15_01");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_How_Think_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_How_Think_03_03");
    AI_RESETFACEANI(SELF);
    DIA_WEGAR_QM201_HOW_CHOCIES();
}

instance DIA_WEGAR_QM201_AGREE(C_INFO) {
    NPC = 52847;
    NR = 1;
    CONDITION = DIA_WEGAR_QM201_AGREE_CONDITION;
    INFORMATION = DIA_WEGAR_QM201_AGREE_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "He agreed to the terms of the exchange.";
}

func int DIA_WEGAR_QM201_AGREE_CONDITION() {
    if (((LOG_GETSTATUS(MIS_QM201)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 74970))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_QM201_AGREE_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM201_Agree_15_01");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_Agree_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM201_Agree_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_Agree_03_04");
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM201_Agree_15_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_Agree_03_06");
    AI_FUNCTION(SELF, 62810);
    AI_LOGENTRY(TOPIC_QM201, LOG_QM201_WEIGAR_MEETLATER);
    AI_STOPPROCESSINFOS(SELF);
    NPC_EXCHANGEROUTINE(SELF, "QM201_TREE");
    QM201_TELEPORTNPC();
    QM201_SPAWNNPC();
}

instance DIA_WEGAR_QM201_READY(C_INFO) {
    NPC = 52847;
    NR = 1;
    CONDITION = DIA_WEGAR_QM201_READY_CONDITION;
    INFORMATION = DIA_WEGAR_QM201_READY_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "He hasn't shown up yet?";
}

func int DIA_WEGAR_QM201_READY_CONDITION() {
    if (((((LOG_GETSTATUS(MIS_QM201)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 66553))) && ((NPC_GETDISTTOWP(SELF, "HARBOUR_QM201_WEIGAR")) <= (800))) && ((QM201_CUTSCENEFINISH) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_QM201_READY_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM201_Ready_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_Ready_03_02");
    AI_RESETFACEANI(OTHER);
    INFO_CLEARCHOICES(66556);
    INFO_ADDCHOICE(66556, DIALOG_BACK, 66560);
    INFO_ADDCHOICE(66556, "(Wait for the thugs to arrive)", 66559);
}

func void DIA_WEGAR_QM201_READY_WAIT() {
    INFO_CLEARCHOICES(66556);
    AI_STOPPROCESSINFOS(SELF);
    NPC_EXCHANGEROUTINE(SELF, "QM201_WAIT");
    AI_FUNCTION(SELF, 62969);
}

func void DIA_WEGAR_QM201_READY_BACK() {
    INFO_CLEARCHOICES(66556);
}

instance DIA_WEGAR_QM201_AFTERCUTSCENE(C_INFO) {
    NPC = 52847;
    NR = 1;
    CONDITION = DIA_WEGAR_QM201_AFTERCUTSCENE_CONDITION;
    INFORMATION = DIA_WEGAR_QM201_AFTERCUTSCENE_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_WEGAR_QM201_AFTERCUTSCENE_CONDITION() {
    if (((LOG_GETSTATUS(MIS_QM201)) == (LOG_RUNNING)) && ((QM201_CUTSCENEFINISH) == (TRUE))) {
        if (((NPC_ISDEAD(NONE_13585_THUG)) && (NPC_ISDEAD(NONE_13586_THUG))) && (NPC_ISDEAD(NONE_13587_THUG))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_QM201_AFTERCUTSCENE_INFO() {
    MIL_13583_MILITIA.AIVAR[15] = FALSE;
    MIL_4016_WEGAR.AIVAR[15] = FALSE;
    NONE_13584_PRISONER.AIVAR[15] = FALSE;
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_AfterCutscene_03_01");
    AI_STOPPROCESSINFOS(SELF);
    AI_RESETFACEANI(SELF);
    AI_LOGENTRY(TOPIC_QM201, LOG_QM201_WEIGAR_AFTERFIGHT);
}

instance DIA_WEGAR_QM201_GOTLETTER(C_INFO) {
    NPC = 52847;
    NR = 1;
    CONDITION = DIA_WEGAR_QM201_GOTLETTER_CONDITION;
    INFORMATION = DIA_WEGAR_QM201_GOTLETTER_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "One of them had this.";
}

func int DIA_WEGAR_QM201_GOTLETTER_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_QM201)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 66561))) && ((NPC_HASITEMS(OTHER, 37075)) >= (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_QM201_GOTLETTER_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM201_GotLetter_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_GotLetter_03_02");
    NPC_REMOVEINVITEMS(SELF, 37075, 1);
    B_STANDUP();
    B_GIVEINVITEMS(OTHER, SELF, 37075, 1);
    B_USEFAKESCROLL();
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_GotLetter_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_GotLetter_03_04");
    INFO_CLEARCHOICES(66564);
    INFO_ADDCHOICE(66564, "I'll check the alchemist's plot.", 66568);
    INFO_ADDCHOICE(66564, "I'll check Hershlik's plot.", 66569);
}

func void DIA_WEGAR_QM201_GOTLETTER_END() {
    INFO_CLEARCHOICES(66564);
    AI_STOPPROCESSINFOS(SELF);
    QM201_TELEPORTLEADER();
}

func void DIA_WEGAR_QM201_GOTLETTER_SISTERS() {
    QM201_ALCHEMICVISIT = 1;
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM201_GotLetter_Sisters_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_GotLetter_Sisters_03_02");
    AI_LOGENTRY(TOPIC_QM201, LOG_QM201_WEIGAR_NEXTMOVE_V1);
    DIA_WEGAR_QM201_GOTLETTER_END();
}

func void DIA_WEGAR_QM201_GOTLETTER_HERSHLIK() {
    QM201_ALCHEMICVISIT = 2;
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM201_GotLetter_Hershlik_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_GotLetter_Hershlik_03_02");
    AI_LOGENTRY(TOPIC_QM201, LOG_QM201_WEIGAR_NEXTMOVE_V2);
    DIA_WEGAR_QM201_GOTLETTER_END();
}

instance DIA_WEGAR_QM201_FINISH(C_INFO) {
    NPC = 52847;
    NR = 1;
    CONDITION = DIA_WEGAR_QM201_FINISH_CONDITION;
    INFORMATION = DIA_WEGAR_QM201_FINISH_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_WEGAR_QM201_FINISH_CONDITION() {
    if ((LOG_GETSTATUS(MIS_QM201)) == (LOG_RUNNING)) {
        if (((QM201_FIGHTWITHLEADER) == (2)) || ((QM201_CHECKHERSHLIKHOUSE) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_QM201_FINISH_INFO() {
    if ((((QM201_ALCHEMICVISIT) == (1)) && ((QM201_CHECKHERSHLIKHOUSE) == (TRUE))) || (((QM201_ALCHEMICVISIT) == (2)) && ((QM201_FIGHTWITHLEADER) == (2)))) {
        AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_Finish_03_01");
    };
    if ((QM201_FIGHTWITHLEADER) == (2)) {
        AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_Finish_03_02");
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM201_Finish_15_03");
        AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_Finish_03_04");
    };
    if ((QM201_CHECKHERSHLIKHOUSE) == (TRUE)) {
        AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_Finish_03_05");
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM201_Finish_15_06");
        if ((QM201_ALCHEMICVISIT) == (1)) {
            AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
            AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_Finish_03_07");
            AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_Finish_03_08");
        } else {
            AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
            AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_Finish_03_09");
            AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_Finish_03_10");
        };
    };
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM201_Finish_15_11");
    AI_RESETFACEANI(OTHER);
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_Finish_03_12");
    if ((QM201_FIGHTWITHLEADER) == (2)) {
        AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_Finish_03_14");
        AI_LOGENTRY(TOPIC_QM201, LOG_QM201_FINISH_V1);
        B_GIVEPLAYERXP(QM201_FINISH_V2);
        CREATEINVITEMS(SELF, 34203, QM201_REWARD_V2);
    };
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_Finish_03_13");
    AI_LOGENTRY(TOPIC_QM201, LOG_QM201_FINISH_V2);
    B_GIVEPLAYERXP(QM201_FINISH_V1);
    CREATEINVITEMS(SELF, 34203, QM201_REWARD_V1);
    B_GIVEINVITEMS(SELF, OTHER, 34203, QM201_REWARD_V1);
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM201_Finish_03_15");
    LOG_SETSTATUS(_@(MIS_QM201), TOPIC_QM201, LOG_SUCCESS);
    QM201_WEIGARPROMOTION();
}

instance DIA_WEGAR_QM301_WAIT(C_INFO) {
    NPC = 52847;
    NR = 1;
    CONDITION = DIA_WEGAR_QM301_WAIT_CONDITION;
    INFORMATION = DIA_WEGAR_QM301_WAIT_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_WEGAR_QM301_WAIT_CONDITION() {
    if ((MARVIN_MILITIASPECIALIZATION) == (MILITIA_SPECIALIZATION_CROSSBOWMAN)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_QM301_WAIT_INFO() {
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Wait_03_01");
}

instance DIA_WEGAR_QM301_START(C_INFO) {
    NPC = 52847;
    NR = 1;
    CONDITION = DIA_WEGAR_QM301_START_CONDITION;
    INFORMATION = DIA_WEGAR_QM301_START_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "What kind of a job is that?";
}

func int DIA_WEGAR_QM301_START_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 66573)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

var int WEGAR_QM301_START_PRETEND;
var int WEGAR_QM301_START_TIME;
var int WEGAR_QM301_START_BAD;
var int WEGAR_QM301_START_COUNT;
func void DIA_WEGAR_QM301_START_CHOICES() {
    INFO_CLEARCHOICES(66576);
    if ((WEGAR_QM301_START_BAD) == (FALSE)) {
        INFO_ADDCHOICE(66576, "Maybe this post is actually misplaced?", 66588);
    };
    if ((WEGAR_QM301_START_PRETEND) == (FALSE)) {
        INFO_ADDCHOICE(66576, "Maybe we should prove that we can hit from that distance?", 66586);
    };
    if ((WEGAR_QM301_START_TIME) == (FALSE)) {
        INFO_ADDCHOICE(66576, "What if someone showed that he can get there on time?", 66587);
    };
}

func void DIA_WEGAR_QM301_START_NEXT() {
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Start_Next_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Start_Next_03_02");
    AI_STARTFACEANI(SELF, S_DOUBT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Start_Next_03_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM301_Start_Next_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Start_Next_03_05");
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM301_Start_Next_15_06");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Start_Next_03_07");
    INFO_CLEARCHOICES(66576);
    LOG_CREATETOPIC(TOPIC_QM301, LOG_MISSION);
    LOG_SETSTATUS(_@(MIS_QM301), TOPIC_QM301, LOG_RUNNING);
    AI_LOGENTRY(TOPIC_QM301, LOG_QM301_START);
    B_STARTOTHERROUTINE(MIL_4017_ARWID, START);
    NPC_REFRESH(MIL_4017_ARWID);
    TELEPORTNPCTOWP(52384, MIL_4017_ARWID.WP);
    QM301_STARTCOUNTING = 1;
    QM301_STARTCOUNTING_DAY = WLD_GETDAY();
}

func void DIA_WEGAR_QM301_START_COUNT() {
    WEGAR_QM301_START_COUNT = (WEGAR_QM301_START_COUNT) + (1);
    if ((WEGAR_QM301_START_COUNT) == (3)) {
        DIA_WEGAR_QM301_START_NEXT();
    };
    DIA_WEGAR_QM301_START_CHOICES();
}

func void DIA_WEGAR_QM301_START_INFO() {
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM301_Start_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Start_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Start_03_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM301_Start_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Start_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Start_03_06");
    DIA_WEGAR_QM301_START_CHOICES();
}

func void DIA_WEGAR_QM301_START_PRETEND() {
    WEGAR_QM301_START_PRETEND = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM301_Start_Pretend_15_01");
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Start_Pretend_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Start_Pretend_03_03");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM301_Start_Pretend_15_04");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Start_Pretend_03_05");
    DIA_WEGAR_QM301_START_COUNT();
}

func void DIA_WEGAR_QM301_START_TIME() {
    WEGAR_QM301_START_TIME = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM301_Start_Time_15_01");
    AI_STARTFACEANI(SELF, S_THINK, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Start_Time_03_02");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Start_Time_03_03");
    DIA_WEGAR_QM301_START_COUNT();
}

func void DIA_WEGAR_QM301_START_BAD() {
    WEGAR_QM301_START_BAD = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM301_Start_Bad_15_01");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Start_Bad_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Start_Bad_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Start_Bad_03_04");
    DIA_WEGAR_QM301_START_COUNT();
}

instance DIA_WEGAR_QM301_ARWID(C_INFO) {
    NPC = 52847;
    NR = 1;
    CONDITION = DIA_WEGAR_QM301_ARWID_CONDITION;
    INFORMATION = DIA_WEGAR_QM301_ARWID_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Before Arwid runs the route, something needs to be done.";
}

func int DIA_WEGAR_QM301_ARWID_CONDITION() {
    if (((LOG_GETSTATUS(MIS_QM301)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 66723))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_QM301_ARWID_INFO() {
    QM301_CLEANSTREETS = 1;
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM301_Arwid_15_01");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Arwid_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM301_Arwid_15_03");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Arwid_03_04");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Arwid_03_05");
    AI_STARTFACEANI(OTHER, S_ANGRY, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM301_Arwid_15_06");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Arwid_03_07");
    AI_STOPPROCESSINFOS(SELF);
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    AI_LOGENTRY(TOPIC_QM301, LOG_QM301_WEGAR_CLEAN);
    QM301_CLEANUPMOVERS();
}

instance DIA_WEGAR_QM301_READY(C_INFO) {
    NPC = 52847;
    NR = 1;
    CONDITION = DIA_WEGAR_QM301_READY_CONDITION;
    INFORMATION = DIA_WEGAR_QM301_READY_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Everything's ready.";
}

func int DIA_WEGAR_QM301_READY_CONDITION() {
    if (((LOG_GETSTATUS(MIS_QM301)) == (LOG_RUNNING)) && ((QM301_GOTEVERYTHING) == (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_QM301_READY_INFO() {
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM301_Ready_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Ready_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Ready_03_03");
    AI_STOPPROCESSINFOS(SELF);
    AI_LOGENTRY(TOPIC_QM301, LOG_QM301_WEGAR_READY);
}

instance DIA_WEGAR_QM301_FINISH(C_INFO) {
    NPC = 52847;
    NR = 1;
    CONDITION = DIA_WEGAR_QM301_FINISH_CONDITION;
    INFORMATION = DIA_WEGAR_QM301_FINISH_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Elid is pleased with our abilities.";
}

func int DIA_WEGAR_QM301_FINISH_CONDITION() {
    if (((LOG_GETSTATUS(MIS_QM301)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 69266))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

var int WEGAR_QM301_BONUSPOINTS;
func void WEGAR_QM301_ADDBONUSPOINTS() {
    WEGAR_QM301_BONUSPOINTS = (WEGAR_QM301_BONUSPOINTS) + (1);
}

func void WEGAR_QM301_FINISHQUEST() {
    var int WEGAR_QM301_FINISHGOLD;
    var int WEGAR_QM301_FINISHXP;
    QM301_FINISH = TRUE;
    QM301_FINISH_DAY = WLD_GETDAY();
    WEGAR_QM301_FINISHXP = (XP_QM301_FINISH) + ((WEGAR_QM301_BONUSPOINTS) * (XP_QM301_BONUS));
    WEGAR_QM301_FINISHGOLD = (QM301_FINISHREWARD) + ((WEGAR_QM301_BONUSPOINTS) * (QM301_BONUS));
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Finish_03_21");
    AI_STARTFACEANI(OTHER, S_SMILE, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM301_Finish_15_22");
    AI_LOGENTRY(TOPIC_QM301, LOG_QM301_FINISH);
    LOG_SETSTATUS(_@(MIS_QM301), TOPIC_QM301, LOG_SUCCESS);
    B_GIVEPLAYERXP(WEGAR_QM301_FINISHXP);
    CREATEINVITEMS(SELF, 34203, WEGAR_QM301_FINISHGOLD);
    B_GIVEINVITEMS(SELF, OTHER, 34203, WEGAR_QM301_FINISHGOLD);
    RESTOREROUTINE_ARWID();
}

func void DIA_WEGAR_QM301_FINISH_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM301_Finish_15_01");
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Finish_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM301_Finish_15_03");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Finish_03_04");
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Finish_03_05");
    if ((QM301_ELIDPOCKET) == (1)) {
        WEGAR_QM301_ADDBONUSPOINTS();
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM301_Finish_15_06");
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Finish_03_07");
    };
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM301_Finish_15_08");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Finish_03_09");
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Finish_03_10");
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM301_Finish_15_11");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Finish_03_12");
    if ((QM301_SAMBOR_BETTERREWARD) == (1)) {
        WEGAR_QM301_ADDBONUSPOINTS();
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM301_Finish_15_13");
        AI_RESETFACEANI(SELF);
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Finish_03_14");
    };
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM301_Finish_15_15");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Finish_03_16");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Finish_03_18");
    if ((QM301_STARTCOUNTING_DAY) <= ((WLD_GETDAY()) - (3))) {
        WEGAR_QM301_ADDBONUSPOINTS();
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Finish_03_19");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM301_Finish_03_20");
    WEGAR_QM301_FINISHQUEST();
    AI_STOPPROCESSINFOS(SELF);
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

instance DIA_WEGAR_KQ402_ARMOR(C_INFO) {
    NPC = 52847;
    NR = 1;
    CONDITION = DIA_WEGAR_KQ402_ARMOR_CONDITION;
    INFORMATION = DIA_WEGAR_KQ402_ARMOR_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "And what do you think of our new uniforms?";
}

func int DIA_WEGAR_KQ402_ARMOR_CONDITION() {
    if (((LOG_GETSTATUS(MIS_KQ402)) == (LOG_RUNNING)) && ((KQ402_DECISION) == (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_KQ402_ARMOR_INFO() {
    AI_STARTFACEANI(SELF, S_ANGRY, 0, 1);
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_KQ402_Armor_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_KQ402_Armor_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_KQ402_Armor_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_KQ402_Armor_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_KQ402_Armor_03_05");
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_KQ402_Armor_15_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_KQ402_Armor_03_07");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_KQ402_Armor_03_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_KQ402_Armor_03_09");
    AI_STARTFACEANI(OTHER, S_SMUG, 0, 1);
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_KQ402_Armor_15_10");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_KQ402_Armor_03_11");
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_KQ402_Armor_15_12");
    AI_RESETFACEANI(OTHER);
    AI_LOGENTRY(TOPIC_KQ402, LOG_KQ402_WEGAR_ARMOR);
}

instance DIA_WEGAR_QM402_START(C_INFO) {
    NPC = 52847;
    NR = 1;
    CONDITION = DIA_WEGAR_QM402_START_CONDITION;
    INFORMATION = DIA_WEGAR_QM402_START_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Why so moody?";
}

func int DIA_WEGAR_QM402_START_CONDITION() {
    if (((HERO.GUILD) == (GIL_MIL)) && ((KQ407_BLOCK_WEIGARQUEST) == (FALSE))) {
        if (((MARVIN_MILITIASPECIALIZATION) == (MILITIA_SPECIALIZATION_MASTERFIGHTER)) || ((MARVIN_MILITIASPECIALIZATION) == (MILITIA_SPECIALIZATION_MASTERCROSSBOWMAN))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_QM402_START_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM402_Start_15_01");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM402_Start_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM402_Start_03_03");
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM402_Start_15_04");
    AI_STARTFACEANI(OTHER, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM402_Start_03_05");
    AI_STARTFACEANI(OTHER, S_SMILE, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM402_Start_15_06");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM402_Start_03_07");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    LOG_CREATETOPIC(TOPIC_QM402, LOG_MISSION);
    LOG_SETSTATUS(_@(MIS_QM402), TOPIC_QM402, LOG_RUNNING);
    AI_LOGENTRY(TOPIC_QM402, LOG_QM402_START);
}

instance DIA_WEGAR_QM402_READY(C_INFO) {
    NPC = 52847;
    NR = 1;
    CONDITION = DIA_WEGAR_QM402_READY_CONDITION;
    INFORMATION = DIA_WEGAR_QM402_READY_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "I'm ready.";
}

func int DIA_WEGAR_QM402_READY_CONDITION() {
    if (((LOG_GETSTATUS(MIS_QM402)) == (LOG_RUNNING)) && ((KQ407_BLOCK_WEIGARQUEST) == (FALSE))) {
        if (((QM402_GOONPATORL) == (FALSE)) && ((NPC_GETDISTTOWP(SELF, "PARTM3_WEIGAR_STAND")) <= (2500))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_QM402_READY_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM402_Ready_15_01");
    if (WLD_ISTIME(0, 0, 2, 0)) {
        QM402_GOONPATORL = TRUE;
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM402_Ready_03_03");
        AI_LOGENTRY(TOPIC_QM402, LOG_QM402_WEIGAR_LETSGO);
        SELF.AIVAR[15] = TRUE;
        NPC_EXCHANGEROUTINE(SELF, "QM402_GUIDE_SLUMS");
        QM402_WEIGAR_RTNCHECK = 1;
        AI_STOPPROCESSINFOS(SELF);
        QM402_PREPARENPC();
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM402_Ready_03_04");
}

instance DIA_WEGAR_QM402_REFUGEE(C_INFO) {
    NPC = 52847;
    NR = 1;
    CONDITION = DIA_WEGAR_QM402_REFUGEE_CONDITION;
    INFORMATION = DIA_WEGAR_QM402_REFUGEE_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_WEGAR_QM402_REFUGEE_CONDITION() {
    if (((LOG_GETSTATUS(MIS_QM402)) == (LOG_RUNNING)) && ((QM402_GOONPATORL) == (4))) {
        if (((NPC_GETDISTTOWP(MIL_4016_WEGAR, "HARBOUR_QM402_REFUGEE_02")) <= (500)) && ((NPC_GETDISTTOWP(NONE_13599_REFUGEE, "HARBOUR_QM402_WEGAR_STAND")) <= (500))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_QM402_REFUGEE_INFO() {
    TRIA_INVITE(NONE_13599_REFUGEE);
    TRIA_START();
    AI_TURNTONPC(SELF, NONE_13599_REFUGEE);
    AI_TURNTONPC(NONE_13599_REFUGEE, SELF);
    AI_LOOKATNPC(OTHER, SELF);
    AI_STOPLOOKAT(SELF);
    TRIA_WAIT();
    TRIA_NEXT(NONE_13599_REFUGEE);
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM402_Refugee_03_01");
    TRIA_WAIT();
    TRIA_NEXT(MIL_4016_WEGAR);
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM402_Refugee_03_02");
    TRIA_WAIT();
    TRIA_NEXT(NONE_13599_REFUGEE);
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM402_Refugee_03_03");
    TRIA_WAIT();
    TRIA_NEXT(MIL_4016_WEGAR);
    AI_TURNTONPC(SELF, OTHER);
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM402_Refugee_03_04");
    INFO_CLEARCHOICES(66612);
    INFO_ADDCHOICE(66612, "I don't have any gold on me.", 66616);
    if ((NPC_HASITEMS(OTHER, 34203)) >= (QM402_REFUGEEGOLD)) {
        INFO_ADDCHOICE(66612, "I will give you some coins. (Pay 50 GP)", 66617);
    };
}

func void DIA_WEGAR_QM402_REFUGEE_YES_NEXT() {
    TRIA_WAIT();
    TRIA_NEXT(MIL_4016_WEGAR);
    AI_TURNTONPC(SELF, NONE_13599_REFUGEE);
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM402_Refugee_Next_03_01");
    TRIA_WAIT();
    TRIA_NEXT(NONE_13599_REFUGEE);
    AI_TURNTONPC(SELF, NONE_13599_REFUGEE);
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM402_Refugee_Next_03_02");
    TRIA_WAIT();
    TRIA_NEXT(MIL_4016_WEGAR);
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM402_Refugee_Next_03_03");
    TRIA_WAIT();
    TRIA_NEXT(NONE_13599_REFUGEE);
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM402_Refugee_Next_03_04");
    TRIA_FINISH();
    AI_STOPLOOKAT(OTHER);
    INFO_CLEARCHOICES(66612);
    AI_STOPPROCESSINFOS(SELF);
    AI_FUNCTION(SELF, 62869);
}

func void DIA_WEGAR_QM402_REFUGEE_NO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM402_Refugee_No_15_01");
    TRIA_WAIT();
    TRIA_NEXT(NONE_13599_REFUGEE);
    AI_TURNTONPC(SELF, OTHER);
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM402_Refugee_No_03_02");
    AI_LOGENTRY(TOPIC_QM402, LOG_QM402_WEIGAR_NOMONEY);
    DIA_WEGAR_QM402_REFUGEE_YES_NEXT();
}

func void DIA_WEGAR_QM402_REFUGEE_YES() {
    QM402_HELPEDREFUGEE = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM402_Refugee_Yes_15_01");
    B_GIVEINVITEMS(OTHER, SELF, 34203, QM402_REFUGEEGOLD);
    TRIA_WAIT();
    TRIA_NEXT(NONE_13599_REFUGEE);
    AI_TURNTONPC(SELF, OTHER);
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM402_Refugee_Yes_03_02");
    AI_LOGENTRY(TOPIC_QM402, LOG_QM402_WEIGAR_GAVEMONEY);
    DIA_WEGAR_QM402_REFUGEE_YES_NEXT();
}

instance DIA_WEGAR_QM402_TOBARRACKS(C_INFO) {
    NPC = 52847;
    NR = 1;
    CONDITION = DIA_WEGAR_QM402_TOBARRACKS_CONDITION;
    INFORMATION = DIA_WEGAR_QM402_TOBARRACKS_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_WEGAR_QM402_TOBARRACKS_CONDITION() {
    if (((LOG_GETSTATUS(MIS_QM402)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 66612))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_QM402_TOBARRACKS_INFO() {
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM402_ToBarracks_03_01");
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM402_ToBarracks_15_02");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM402_ToBarracks_03_03");
    AI_STOPPROCESSINFOS(SELF);
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    NPC_EXCHANGEROUTINE(SELF, "QM402_GUIDE_BARRACK_WAIT");
    QM402_WEIGAR_RTNCHECK = 3;
    QM402_SPAWNSOUTHERNER();
}

instance DIA_WEGAR_QM402_FINISH(C_INFO) {
    NPC = 52847;
    NR = 1;
    CONDITION = DIA_WEGAR_QM402_FINISH_CONDITION;
    INFORMATION = DIA_WEGAR_QM402_FINISH_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_WEGAR_QM402_FINISH_CONDITION() {
    if ((LOG_GETSTATUS(MIS_QM402)) == (LOG_RUNNING)) {
        if ((((QM402_SOUTHERNERFIGHT) == (2)) && ((QM402_HELPEDREFUGEE) == (FALSE))) || (NPC_KNOWSINFO(OTHER, 68350))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_QM402_FINISH_INFO() {
    AI_STARTFACEANI(SELF, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM402_Finish_03_01");
    if ((QM402_HELPEDREFUGEE) == (TRUE)) {
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM402_Finish_03_02");
    };
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_QM402_Finish_15_03");
    AI_STARTFACEANI(OTHER, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_QM402_Finish_03_04");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    AI_LOGENTRY(TOPIC_QM402, LOG_QM402_FINISH);
    LOG_SETSTATUS(_@(MIS_QM402), TOPIC_QM402, LOG_SUCCESS);
    B_GIVEPLAYERXP(XP_QM402_FINISH);
    RESTOREROUTINE_WEIGAR();
    QM402_REMOVENPC();
}

instance DIA_WEGAR_KQ407_READY(C_INFO) {
    NPC = 52847;
    NR = 1;
    CONDITION = DIA_WEGAR_KQ407_READY_CONDITION;
    INFORMATION = DIA_WEGAR_KQ407_READY_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "You ready?";
}

func int DIA_WEGAR_KQ407_READY_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_KQ407)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 70589))) && ((NPC_GETDISTTOWP(SELF, "PART13_KQ407_MILITIA_01")) <= (700))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_KQ407_READY_INFO() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_KQ407_Ready_15_01");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_KQ407_Ready_03_02");
    AI_STARTFACEANI(OTHER, S_SMUG, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_KQ407_Ready_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_KQ407_Ready_03_04");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    INFO_CLEARCHOICES(66624);
    INFO_ADDCHOICE(66624, "(Run after Weigar)", 66627);
    INFO_ADDCHOICE(66624, "(Fast travel to the beach)", 66628);
}

func void DIA_WEGAR_KQ407_READY_GO() {
    AI_STOPPROCESSINFOS(SELF);
    AI_FUNCTION(SELF, 61807);
}

func void DIA_WEGAR_KQ407_READY_TELEPORT() {
    AI_STOPPROCESSINFOS(SELF);
    AI_FUNCTION(SELF, 61808);
}

instance DIA_WEGAR_KQ407_AFTERFIGHT(C_INFO) {
    NPC = 52847;
    NR = 1;
    CONDITION = DIA_WEGAR_KQ407_AFTERFIGHT_CONDITION;
    INFORMATION = DIA_WEGAR_KQ407_AFTERFIGHT_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_WEGAR_KQ407_AFTERFIGHT_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_KQ407)) == (LOG_RUNNING)) && ((NPC_GETDISTTOWP(SELF, "PART13_KQ407_ORC_LEADER")) <= (700))) && (NPC_KNOWSINFO(OTHER, 66624))) {
        if (NPC_ISDEAD(ORCLEADER_PART13)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_KQ407_AFTERFIGHT_INFO() {
    KQ407_ORCLEADER_PART13_DEAD = TRUE;
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_KQ407_AfterFight_03_01");
    AI_STARTFACEANI(OTHER, S_SMUG, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_KQ407_AfterFight_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_KQ407_AfterFight_03_03");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    AI_LOGENTRY(TOPIC_KQ407, LOG_KQ407_WEIGAR_PART13CLEAR);
    AI_STOPPROCESSINFOS(SELF);
    AI_FUNCTION(SELF, 61810);
}

instance DIA_WEGAR_CANYOUTEACH(C_INFO) {
    NPC = 52847;
    NR = 3;
    CONDITION = DIA_WEGAR_CANYOUTEACH_CONDITION;
    INFORMATION = DIA_WEGAR_CANYOUTEACH_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Could I train with you?";
}

func int DIA_WEGAR_CANYOUTEACH_CONDITION() {
    if (((OTHER.GUILD) == (GIL_MIL)) && ((BECOMEAGUARD_TAVERNPART) >= (2))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_CANYOUTEACH_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_CanYouTeach_15_00");
    if (((MARVIN_MILITIASPECIALIZATION) == (MILITIA_SPECIALIZATION_MASTERFIGHTER)) || ((MARVIN_MILITIASPECIALIZATION) == (MILITIA_SPECIALIZATION_MASTERCROSSBOWMAN))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_CanYouTeach_03_01");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_CanYouTeach_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_CanYouTeach_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_CanYouTeach_03_04");
    LOG_CREATETOPIC(TOPIC_MILITIATEACHER, LOG_NOTE);
    AI_LOGENTRY(TOPIC_MILITIATEACHER, LOG_MILITIATEACHER_WEIGAR);
}

var int WEGAR_NOMORE;
var int WEGAR_CURRENTCBLEVEL;
var int WEGAR_CURRENTDEXLEVEL;
var string WEGAR_PRINTS;
const int WEGAR_RLEVEL = 60;
const int WEGAR_RLEVELDEX = 120;
instance DIA_WEGAR_TEACH(C_INFO) {
    NPC = 52847;
    NR = 1;
    CONDITION = DIA_WEGAR_TEACH_CONDITION;
    INFORMATION = DIA_WEGAR_TEACH_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "I want to train.";
}

func int DIA_WEGAR_TEACH_CONDITION() {
    if (((NPC_KNOWSINFO(OTHER, 66632)) && ((WEGAR_NOMORE) == (FALSE))) && ((OTHER.GUILD) == (GIL_MIL))) {
        if ((MARVIN_MILITIASPECIALIZATION) >= (3)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_TEACH_CHOICES() {
    var int WEGAR_GOLDCOST;
    WEGAR_CURRENTCBLEVEL = OTHER.AIVAR[87];
    WEGAR_CURRENTDEXLEVEL = OTHER.AIVAR[82];
    WEGAR_GOLDCOST = 0;
    INFO_CLEARCHOICES(66641);
    INFO_ADDCHOICE(66641, DIALOG_BACK, 66646);
    INFO_ADDCHOICE(66641, B_BUILDLEARNSTRING2(PRINT_LEARNCROSSBOW1, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 1), WEGAR_GOLDCOST), 66647);
    INFO_ADDCHOICE(66641, B_BUILDLEARNSTRING2(PRINT_LEARNCROSSBOW5, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 5), (WEGAR_GOLDCOST) * (5)), 66648);
    INFO_ADDCHOICE(66641, B_BUILDLEARNSTRING2(PRINT_LEARNDEX1, B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 1), WEGAR_GOLDCOST), 66649);
    INFO_ADDCHOICE(66641, B_BUILDLEARNSTRING2(PRINT_LEARNDEX5, B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 5), (WEGAR_GOLDCOST) * (5)), 66650);
}

func void DIA_WEGAR_TEACH_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_Teach_15_00");
    if (((OTHER.AIVAR[87]) >= (100)) && ((OTHER.AIVAR[82]) >= (160))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_NoMore_03_01");
        WEGAR_NOMORE = TRUE;
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_Teach_03_01");
    DIA_WEGAR_TEACH_CHOICES();
}

func void DIA_WEGAR_TEACH_BACK() {
    INFO_CLEARCHOICES(66641);
}

func void DIA_WEGAR_TEACH_CB1() {
    if ((OTHER.AIVAR[87]) < (60)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_Teach_CB1_03_00");
        WEGAR_PRINTS = CONCATSTRINGS(PRINT_MINSKILL, INTTOSTRING(WEGAR_RLEVEL));
    };
    if ((WEGAR_CURRENTCBLEVEL) < (OTHER.AIVAR[87])) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_Teach_CB1_03_01");
    };
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_CROSSBOW, 1, 100);
    DIA_WEGAR_TEACH_CHOICES();
}

func void DIA_WEGAR_TEACH_CB5() {
    if ((OTHER.AIVAR[87]) < (60)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_Teach_CB5_03_02");
        WEGAR_PRINTS = CONCATSTRINGS(PRINT_MINSKILL, INTTOSTRING(WEGAR_RLEVEL));
    };
    if ((WEGAR_CURRENTCBLEVEL) < (OTHER.AIVAR[87])) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_Teach_CB5_03_03");
    };
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_CROSSBOW, 5, 100);
    DIA_WEGAR_TEACH_CHOICES();
}

func void DIA_WEGAR_TEACHDEX1() {
    if ((OTHER.AIVAR[82]) < (120)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_TeachDEX1_03_00");
        WEGAR_PRINTS = CONCATSTRINGS(PRINT_MINATR, INTTOSTRING(WEGAR_RLEVELDEX));
    };
    if ((WEGAR_CURRENTDEXLEVEL) < (OTHER.AIVAR[82])) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_TeachDEX1_03_01");
    };
    B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_DEXTERITY, 1, 160);
    DIA_WEGAR_TEACH_CHOICES();
}

func void DIA_WEGAR_TEACHDEX5() {
    if ((OTHER.AIVAR[82]) < (120)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_TeachDEX5_03_00");
        WEGAR_PRINTS = CONCATSTRINGS(PRINT_MINATR, INTTOSTRING(WEGAR_RLEVELDEX));
    };
    if ((WEGAR_CURRENTDEXLEVEL) < (OTHER.AIVAR[82])) {
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_TeachDEX5_03_01");
    };
    B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_DEXTERITY, 5, 160);
    DIA_WEGAR_TEACH_CHOICES();
}

instance DIA_WEGAR_PROMOTION_TIER1_QUESTION(C_INFO) {
    NPC = 52847;
    NR = 1;
    CONDITION = DIA_WEGAR_PROMOTION_TIER1_QUESTION_CONDITION;
    INFORMATION = DIA_WEGAR_PROMOTION_TIER1_QUESTION_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I hear you want me in your unit.";
}

func int DIA_WEGAR_PROMOTION_TIER1_QUESTION_CONDITION() {
    if ((HERO.GUILD) == (GIL_MIL)) {
        if (((MARVIN_MILITIASPECIALIZATION) == (MILITIA_SPECIALIZATION_NONE)) && ((MARVIN_MILITIASPECIALIZATION_CANJOIN_CROSSBOWMAN) == (TRUE))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_PROMOTION_TIER1_QUESTION_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_Promotion_Tier1_Question_15_01");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_Promotion_Tier1_Question_03_02");
}

instance DIA_WEGAR_PROMOTION_TIER1_READY(C_INFO) {
    NPC = 52847;
    NR = 1;
    CONDITION = DIA_WEGAR_PROMOTION_TIER1_READY_CONDITION;
    INFORMATION = DIA_WEGAR_PROMOTION_TIER1_READY_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "I'm ready to join your unit.";
}

func int DIA_WEGAR_PROMOTION_TIER1_READY_CONDITION() {
    if ((HERO.GUILD) == (GIL_MIL)) {
        if (NPC_KNOWSINFO(OTHER, 66651)) {
            if (((MARVIN_MILITIASPECIALIZATION) == (MILITIA_SPECIALIZATION_NONE)) && ((MARVIN_MILITIASPECIALIZATION_CANJOIN_CROSSBOWMAN) == (TRUE))) {
                return TRUE;
            };
        };
    };
    return 0 /* !broken stack! */;
}

func void WEGAR_ARWIDSPECIALIZATION_TIER1() {
    if ((ARWID_TIERARMOR) == (3)) {
        ARWID_TIERARMOR = 4;
        NPC_CHANGEARMOR(MIL_4017_ARWID, 35498);
        NPC_REMOVEINVITEMS(MIL_4017_ARWID, 35493, 1);
        CREATEINVITEMS(MIL_4017_ARWID, 39734, 1);
    };
    ARWID_TIERARMOR = 3;
    NPC_CHANGEARMOR(MIL_4017_ARWID, 35493);
    NPC_REMOVEINVITEMS(MIL_4017_ARWID, 35488, 1);
    CREATEINVITEMS(MIL_4017_ARWID, 34386, 1);
}

func void DIA_WEGAR_PROMOTION_TIER1_READY_INFO() {
    var string WEGAR_CHECKSMARVINCBOWLEVEL;
    var string MARVIN_CURRENTCBOWLEVEL_WEGAR;
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_Promotion_Tier1_Ready_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_Promotion_Tier1_Ready_03_02");
    if ((OTHER.HITCHANCE[4]) >= (40)) {
        MARVIN_MILITIA_WHEREJOINED = 2;
        MARVIN_MILITIASPECIALIZATION = MILITIA_SPECIALIZATION_CROSSBOWMAN;
        SND_PLAY("LEVELUP");
        B_GIVEPLAYERXP(XP_MILITIA_PROMOTION_TIER2);
        AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_Promotion_Tier1_Ready_03_03");
        B_STANDUP();
        B_USEFAKESCROLL();
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_Promotion_Tier1_Ready_03_04");
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_Promotion_Tier1_Ready_03_05");
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_Promotion_Tier1_Ready_03_06");
        AI_STARTFACEANI(OTHER, S_SMILE, 1, -(1));
        AI_OUTPUT(OTHER, SELF, "DIA_Wegar_Promotion_Tier1_Ready_15_07");
        AI_OUTPUT(SELF, OTHER, "DIA_Wegar_Promotion_Tier1_Ready_03_08");
        AI_FUNCTION(SELF, 66656);
    };
    MARVIN_CURRENTCBOWLEVEL_WEGAR = INTTOSTRING((40) - (HERO.HITCHANCE[4]));
    WEGAR_CHECKSMARVINCBOWLEVEL = CONCATSTRINGS(MARVIN_CURRENTCBOWLEVEL_WEGAR, PRINT_NEEDEDCBOWLEVEL);
    AI_PRINTSCREEN(WEGAR_CHECKSMARVINCBOWLEVEL, -(1), -(1), FONT_SCREEN, 3);
    AI_STARTFACEANI(SELF, S_DOUBT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_Promotion_Tier1_Ready_03_09");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_Promotion_Tier1_Ready_03_10");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

instance DIA_WEGAR_PROMOTION_FINALTIER(C_INFO) {
    NPC = 52847;
    NR = 1;
    CONDITION = DIA_WEGAR_PROMOTION_FINALTIER_CONDITION;
    INFORMATION = DIA_WEGAR_PROMOTION_FINALTIER_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_WEGAR_PROMOTION_FINALTIER_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 66297)) && ((MARVIN_MILITIASPECIALIZATION) == (MILITIA_SPECIALIZATION_MASTERCROSSBOWMAN))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_PROMOTION_FINALTIER_INFO() {
    CREATEINVITEMS(SELF, 35498, 1);
    B_GIVEINVITEMS(SELF, OTHER, 35498, 1);
    AI_EQUIPARMOR(SELF, 35498);
    PROMOTION_WEIGAR_RTNCHECK = 0;
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_STARTFACEANI(OTHER, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_Promotion_FinalTier_03_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_Promotion_FinalTier_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_Promotion_FinalTier_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_Promotion_FinalTier_03_04");
    AI_WAITTILLEND(OTHER, SELF);
    AI_EQUIPARMOR(OTHER, 35498);
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_Promotion_FinalTier_03_05");
    AI_OUTPUT(OTHER, SELF, "DIA_Wegar_Promotion_FinalTier_15_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Wegar_Promotion_FinalTier_03_07");
    AI_STOPPROCESSINFOS(SELF);
    RESTOREROUTINE_WEIGAR();
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

instance DIA_WEGAR_AMBIENT(C_INFO) {
    NPC = 52847;
    NR = 997;
    CONDITION = DIA_WEGAR_AMBIENT_CONDITION;
    INFORMATION = DIA_WEGAR_AMBIENT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "How are you doing?";
}

func int DIA_WEGAR_AMBIENT_CONDITION() {
    return TRUE;
}

func void DIA_WEGAR_AMBIENT_INFO() {
    B_SAY(OTHER, SELF, "$MARVIN_WhatNew2");
    if ((OTHER.GUILD) == (GIL_MIL)) {
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        B_SAY(SELF, OTHER, "$GREETINGS_FromFriend");
        B_SAY(SELF, OTHER, "$IMBUSY_CALM");
    };
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    B_SAY(SELF, OTHER, "$SQ311_MilitiaMiner_LeaveMeV2");
    AI_RESETFACEANI(SELF);
}

instance DIA_WEGAR_PICKPOCKET(C_INFO) {
    NPC = 52847;
    NR = 900;
    CONDITION = DIA_WEGAR_PICKPOCKET_CONDITION;
    INFORMATION = DIA_WEGAR_PICKPOCKET_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = PICKPOCKET_80;
}

func int DIA_WEGAR_PICKPOCKET_CONDITION() {
    if (((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) && ((SELF.AIVAR[6]) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_WEGAR_PICKPOCKET_INFO() {
    INFO_CLEARCHOICES(66666);
    INFO_ADDCHOICE(66666, DIALOG_BACK, 66670);
    INFO_ADDCHOICE(66666, DIALOG_PICKPOCKET, 66669);
}

func void DIA_WEGAR_PICKPOCKET_DOIT() {
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (2)) {
        CREATEINVITEMS(SELF, 34384, 5);
        B_GIVEINVITEMS(SELF, OTHER, 34384, 5);
        B_PICKPOCKET_AMBIENT_TIER_2();
        SELF.AIVAR[6] = TRUE;
        INFO_CLEARCHOICES(66666);
    };
    AI_PLAYANI(HERO, T_CANNOTTAKE);
    PRINTSCREEN(PRINT_CANTPICKPOCKETTHISPERSON, -(1), -(1), FONT_SCREEN, 4);
    INFO_CLEARCHOICES(66666);
}

func void DIA_WEGAR_PICKPOCKET_BACK() {
    INFO_CLEARCHOICES(66666);
}

