instance DIA_GERHARD_EXIT(C_INFO) {
    NPC = 53410;
    NR = 999;
    CONDITION = DIA_GERHARD_EXIT_CONDITION;
    INFORMATION = DIA_GERHARD_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_GERHARD_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_GERHARD_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_GERHARD_SQ225_NEWS(C_INFO) {
    NPC = 53410;
    NR = 1;
    CONDITION = DIA_GERHARD_SQ225_NEWS_CONDITION;
    INFORMATION = DIA_GERHARD_SQ225_NEWS_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_GERHARD_SQ225_NEWS_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_SQ225)) == (LOG_RUNNING)) && ((SQ225_ANDERASWAY_AGREED) == (1))) && (NPC_KNOWSINFO(OTHER, 72217))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_GERHARD_SQ225_NEWS_INFO() {
    SQ225_GERHARD_WAITFORACTION = TRUE;
    SQ225_GERHARD_WAITFORACTION_DAY = WLD_GETDAY();
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Gerhard_SQ225_News_03_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Gerhard_SQ225_News_15_02");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Gerhard_SQ225_News_03_03");
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Gerhard_SQ225_News_15_04");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Gerhard_SQ225_News_03_05");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Gerhard_SQ225_News_03_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Gerhard_SQ225_News_03_07");
    AI_RESETFACEANI(OTHER);
    CREATEINVITEMS(SELF, 34739, 1);
    B_GIVEINVITEMS(SELF, OTHER, 34739, 1);
    AI_LOGENTRY(TOPIC_SQ225, LOG_SQ225_GERHARD_PLAN);
    AI_STOPPROCESSINFOS(SELF);
    NPC_EXCHANGEROUTINE(SELF, "SQ225_TAVERN");
}

