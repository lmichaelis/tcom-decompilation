instance DIA_ASTOL_EXIT(C_INFO) {
    NPC = 56420;
    NR = 999;
    CONDITION = DIA_ASTOL_EXIT_CONDITION;
    INFORMATION = DIA_ASTOL_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_ASTOL_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_ASTOL_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_ASTOL_HELLO(C_INFO) {
    NPC = 56420;
    NR = 1;
    CONDITION = DIA_ASTOL_HELLO_CONDITION;
    INFORMATION = DIA_ASTOL_HELLO_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_ASTOL_HELLO_CONDITION() {
    return TRUE;
}

func void DIA_ASTOL_HELLO_INFO() {
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Astol_HELLO_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Astol_HELLO_03_02");
    INFO_CLEARCHOICES(79323);
    INFO_ADDCHOICE(79323, "Maybe another time.", 79327);
    INFO_ADDCHOICE(79323, "Thanks, sleep will do me some good.", 79326);
}

func void DIA_ASTOL_HELLO_YES() {
    AI_OUTPUT(OTHER, SELF, "DIA_Astol_HELLO_Yes_15_01");
    AI_WAITTILLEND(SELF, OTHER);
    INFO_CLEARCHOICES(79323);
    AI_STOPPROCESSINFOS(SELF);
}

func void DIA_ASTOL_HELLO_NO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Astol_HELLO_No_15_01");
    AI_WAITTILLEND(SELF, OTHER);
    INFO_CLEARCHOICES(79323);
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_ASTOL_AFTERSLEEP(C_INFO) {
    NPC = 56420;
    NR = 1;
    CONDITION = DIA_ASTOL_AFTERSLEEP_CONDITION;
    INFORMATION = DIA_ASTOL_AFTERSLEEP_INFO;
    PERMANENT = TRUE;
    IMPORTANT = TRUE;
}

func int DIA_ASTOL_AFTERSLEEP_CONDITION() {
    if ((SLEPTINARAXOSMINEBED) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ASTOL_AFTERSLEEP_INFO() {
    var int ASTOL_AFTERSLEEP_FIRSTTIME;
    SLEPTINARAXOSMINEBED = FALSE;
    if ((ASTOL_AFTERSLEEP_FIRSTTIME) == (FALSE)) {
        ASTOL_AFTERSLEEP_FIRSTTIME = TRUE;
        AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Astol_AfterSleep_03_01");
        AI_OUTPUT(OTHER, SELF, "DIA_Astol_AfterSleep_15_02");
        AI_OUTPUT(SELF, OTHER, "DIA_Astol_AfterSleep_03_03");
        AI_STARTFACEANI(OTHER, S_ANGRY, 1, -(1));
        AI_OUTPUT(OTHER, SELF, "DIA_Astol_AfterSleep_15_04");
        AI_OUTPUT(SELF, OTHER, "DIA_Astol_AfterSleep_03_05");
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Astol_AfterSleep_03_06");
    INFO_CLEARCHOICES(79328);
    INFO_ADDCHOICE(79328, "You're not getting anything.", 79333);
    if ((NPC_HASITEMS(OTHER, 33660)) >= (7)) {
        INFO_ADDCHOICE(79328, "Fine, take the nuggets.", 79332);
    };
}

func void DIA_ASTOL_AFTERSLEEP_PAY() {
    B_GIVEINVITEMS(OTHER, SELF, 33660, 7);
    AI_OUTPUT(OTHER, SELF, "DIA_Astol_AfterSleep_Pay_15_01");
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Astol_AfterSleep_Pay_03_02");
    INFO_CLEARCHOICES(79328);
    NPC_EXCHANGEROUTINE(SELF, START);
    AI_RESETFACEANI(OTHER);
}

func void DIA_ASTOL_AFTERSLEEP_NO() {
    ASTOL_AFTERSLEEP_FIGHT = TRUE;
    SQ119_SOMEONEATTACKEDUS = TRUE;
    SELF.AIVAR[45] = AF_RUNNING;
    AI_STARTFACEANI(OTHER, S_ANGRY, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Astol_AfterSleep_No_15_01");
    AI_RESETFACEANI(OTHER);
    AI_WAITTILLEND(SELF, OTHER);
    INFO_CLEARCHOICES(79328);
    AI_STOPPROCESSINFOS(SELF);
    B_ATTACK(SELF, OTHER, AR_SUDDENENEMYINFERNO, 1);
}

instance DIA_ASTOL_AFTERFIGHT(C_INFO) {
    NPC = 56420;
    NR = 1;
    CONDITION = DIA_ASTOL_AFTERFIGHT_CONDITION;
    INFORMATION = DIA_ASTOL_AFTERFIGHT_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_ASTOL_AFTERFIGHT_CONDITION() {
    if (((ASTOL_AFTERSLEEP_FIGHT) == (TRUE)) || (NPC_KNOWSINFO(OTHER, 79328))) {
        if (((SELF.AIVAR[64]) == (FALSE)) && ((SELF.AIVAR[0]) != (FIGHT_NONE))) {
            if ((SELF.AIVAR[45]) != (AF_NONE)) {
                return TRUE;
            };
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_ASTOL_AFTERFIGHT_INFO() {
    if ((SELF.AIVAR[0]) == (FIGHT_WON)) {
        ASTOL_AFTERSLEEP_FIGHT = 0;
        AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_Astol_AfterFight_03_02");
    };
    ASTOL_AFTERSLEEP_FIGHT = 2;
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Astol_AfterFight_03_01");
    AI_STOPPROCESSINFOS(SELF);
    NPC_EXCHANGEROUTINE(SELF, START);
    SELF.AIVAR[45] = AF_NONE;
    SELF.AIVAR[64] = TRUE;
}

instance DIA_ASTOL_PICKPOCKET(C_INFO) {
    NPC = 56420;
    NR = 900;
    CONDITION = DIA_ASTOL_PICKPOCKET_CONDITION;
    INFORMATION = DIA_ASTOL_PICKPOCKET_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = PICKPOCKET_40;
}

func int DIA_ASTOL_PICKPOCKET_CONDITION() {
    if (((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) && ((SELF.AIVAR[6]) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ASTOL_PICKPOCKET_INFO() {
    INFO_CLEARCHOICES(79337);
    INFO_ADDCHOICE(79337, DIALOG_BACK, 79341);
    INFO_ADDCHOICE(79337, DIALOG_PICKPOCKET, 79340);
}

func void DIA_ASTOL_PICKPOCKET_DOIT() {
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) {
        CREATEINVITEMS(SELF, 33660, 1);
        B_GIVEINVITEMS(SELF, OTHER, 33660, 1);
        B_PICKPOCKET_AMBIENT_TIER_1();
        SELF.AIVAR[6] = TRUE;
        INFO_CLEARCHOICES(79337);
    };
    AI_PLAYANI(HERO, T_CANNOTTAKE);
    PRINTSCREEN(PRINT_CANTPICKPOCKETTHISPERSON, -(1), -(1), FONT_SCREEN, 4);
    INFO_CLEARCHOICES(79337);
}

func void DIA_ASTOL_PICKPOCKET_BACK() {
    INFO_CLEARCHOICES(79337);
}

