instance CH(NPC_DEFAULT) {
    NPC_DEFAULT();
    NAME[0] = "Character Helper";
    GUILD = GIL_NONE;
    ID = 0;
    VOICE = 15;
    FLAGS = 0;
    NPCTYPE = NPCTYPE_FRIEND;
    B_SETATTRIBUTESTOCHAPTER(CH, 1);
    B_GIVENPCTALENTS(CH);
    FIGHT_TACTIC = FAI_HUMAN_MASTER;
    B_CREATEAMBIENTINV(CH);
    B_SETNPCVISUAL(CH, MALE, HUMHEADPONY, FACE_N_CHARACTERHELPER, BODYTEX_PLAYER, -(1));
    MDL_SETMODELFATNESS(CH, 0);
    MDL_APPLYOVERLAYMDS(CH, HUMANSRELAXEDMDS);
    DAILY_ROUTINE = RTN_START_0;
}

func void RTN_START_0() {
    TA_STAND_ARMSCROSSED(8, 0, 23, 0, "XXX");
    TA_STAND_ARMSCROSSED(23, 0, 8, 0, "XXX");
}

func void B_SETHEROEXP() {
    var string ATTRIBUTES;
    HERO.EXP = ((250) * ((HERO.LEVEL) + (1))) * (HERO.LEVEL);
    HERO.EXP_NEXT = ((250) * ((HERO.LEVEL) + (2))) * ((HERO.LEVEL) + (1));
    HERO.LP = (HERO.LEVEL) * (LP_PER_LEVEL);
    HERO.ATTRIBUTE[1] = (40) + ((10) * (HERO.LEVEL));
    HERO.ATTRIBUTE[0] = HERO.ATTRIBUTE[1];
    ATTRIBUTES = "Nowy poziom!  Punkty nauki:";
    ATTRIBUTES = CONCATSTRINGS(ATTRIBUTES, INTTOSTRING(HERO.LP));
    ATTRIBUTES = CONCATSTRINGS(ATTRIBUTES, " Punkty trafieñ:");
    ATTRIBUTES = CONCATSTRINGS(ATTRIBUTES, INTTOSTRING(HERO.ATTRIBUTE[1]));
    PRINTSCREEN(ATTRIBUTES, -(1), -(1), FONT_SCREEN, 3);
    SND_PLAY("LEVELUP");
}

func void B_SETHEROWEAPON() {
    if ((HERO.LEVEL) <= (6)) {
        CREATEINVITEMS(HERO, 34411, 1);
    };
    if ((HERO.LEVEL) <= (12)) {
        CREATEINVITEMS(HERO, 34394, 1);
        CREATEINVITEMS(HERO, 34414, 1);
    };
    if ((HERO.LEVEL) <= (18)) {
        CREATEINVITEMS(HERO, 34419, 1);
    };
    if ((HERO.LEVEL) <= (24)) {
        CREATEINVITEMS(HERO, 34400, 1);
        CREATEINVITEMS(HERO, 34422, 1);
    };
    if ((HERO.LEVEL) <= (30)) {
        CREATEINVITEMS(HERO, 34405, 1);
        CREATEINVITEMS(HERO, 34424, 1);
    };
    if ((HERO.LEVEL) <= (36)) {
        CREATEINVITEMS(HERO, 34409, 1);
        CREATEINVITEMS(HERO, 34394, 1);
    };
    AI_EQUIPBESTRANGEDWEAPON(HERO);
}

func void B_SETHEROEQUIPMENT() {
    CREATEINVITEMS(HERO, 34383, 100);
    CREATEINVITEMS(HERO, 34384, 100);
    CREATEINVITEMS(HERO, 34742, 30);
    CREATEINVITEMS(HERO, 34203, 500);
    CREATEINVITEMS(HERO, 34357, 5);
    CREATEINVITEMS(HERO, 34344, 5);
    CREATEINVITEMS(HERO, 33994, 30);
}

func void B_SETKDFRUNES() {
    if ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_MAGE)) == (1)) {
        CREATEINVITEMS(HERO, 34595, 1);
        CREATEINVITEMS(HERO, 34596, 1);
        CREATEINVITEMS(HERO, 34598, 1);
        CREATEINVITEMS(HERO, 34599, 1);
        CREATEINVITEMS(HERO, 34597, 1);
    };
    if ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_MAGE)) == (2)) {
        CREATEINVITEMS(HERO, 34600, 1);
        CREATEINVITEMS(HERO, 34601, 1);
        CREATEINVITEMS(HERO, 34602, 1);
        CREATEINVITEMS(HERO, 34603, 1);
        CREATEINVITEMS(HERO, 34604, 1);
    };
    if ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_MAGE)) == (3)) {
        CREATEINVITEMS(HERO, 34605, 1);
        CREATEINVITEMS(HERO, 34615, 1);
        CREATEINVITEMS(HERO, 34611, 1);
        CREATEINVITEMS(HERO, 34608, 1);
        CREATEINVITEMS(HERO, 34609, 1);
        CREATEINVITEMS(HERO, 34610, 1);
    };
    if ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_MAGE)) == (4)) {
        CREATEINVITEMS(HERO, 34612, 1);
        CREATEINVITEMS(HERO, 34613, 1);
        CREATEINVITEMS(HERO, 34606, 1);
        CREATEINVITEMS(HERO, 34607, 1);
    };
    if ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_MAGE)) == (5)) {
        CREATEINVITEMS(HERO, 34614, 1);
        CREATEINVITEMS(HERO, 34616, 1);
        CREATEINVITEMS(HERO, 34617, 1);
        CREATEINVITEMS(HERO, 34618, 1);
    };
    if ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_MAGE)) == (6)) {
        CREATEINVITEMS(HERO, 34619, 1);
        CREATEINVITEMS(HERO, 34620, 1);
        CREATEINVITEMS(HERO, 34621, 1);
        CREATEINVITEMS(HERO, 34623, 1);
        CREATEINVITEMS(HERO, 34624, 1);
    };
}

func void B_SETPALADINEQUIPMENT() {
    CREATEINVITEMS(HERO, 34586, 1);
    CREATEINVITEMS(HERO, 34587, 1);
    CREATEINVITEMS(HERO, 34590, 1);
    CREATEINVITEMS(HERO, 34588, 1);
    CREATEINVITEMS(HERO, 34591, 1);
    CREATEINVITEMS(HERO, 34589, 1);
    CREATEINVITEMS(HERO, 34592, 1);
    CREATEINVITEMS(HERO, 34593, 1);
}

instance CH_KRIEGEN(C_INFO) {
    NPC = 93028;
    NR = 999;
    CONDITION = CH_KRIEGEN_CONDITION;
    INFORMATION = CH_KRIEGEN_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "1 Erz geben";
}

func int CH_KRIEGEN_CONDITION() {
    if (((((((LEVELSTART) == (FALSE)) && ((MAGIESTART) == (FALSE))) && ((ATTRIBUTESTART) == (FALSE))) && ((KAMPFSTART) == (FALSE))) && ((DIEBSTART) == (FALSE))) && ((MISCSTART) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void CH_KRIEGEN_INFO() {
    B_GIVEINVITEMS(OTHER, SELF, 34202, 1);
}

instance CH_GEBEN(C_INFO) {
    NPC = 93028;
    NR = 999;
    CONDITION = CH_GEBEN_CONDITION;
    INFORMATION = CH_GEBEN_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Poka¿ coœ";
}

func int CH_GEBEN_CONDITION() {
    if (((((((LEVELSTART) == (FALSE)) && ((MAGIESTART) == (FALSE))) && ((ATTRIBUTESTART) == (FALSE))) && ((KAMPFSTART) == (FALSE))) && ((DIEBSTART) == (FALSE))) && ((MISCSTART) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void CH_GEBEN_INFO() {
    AI_PRINTSCREEN("Daj kie³basê", -(1), 43, FONT_SCREENSMALL, 2);
}

instance CH_EXIT(C_INFO) {
    NPC = 93028;
    NR = 999;
    CONDITION = CH_EXIT_CONDITION;
    INFORMATION = CH_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int CH_EXIT_CONDITION() {
    if (((((((LEVELSTART) == (FALSE)) && ((MAGIESTART) == (FALSE))) && ((ATTRIBUTESTART) == (FALSE))) && ((KAMPFSTART) == (FALSE))) && ((DIEBSTART) == (FALSE))) && ((MISCSTART) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void CH_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance CH_RESET(C_INFO) {
    NPC = 93028;
    NR = 20;
    CONDITION = CH_RESET_CONDITION;
    INFORMATION = CH_RESET_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Totalny reset";
}

func int CH_RESET_CONDITION() {
    if ((LEVELSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void CH_RESET_INFO() {
    HERO.GUILD = GIL_NONE;
    NPC_SETTRUEGUILD(HERO, GIL_NONE);
    HERO.LP = 0;
    HERO.LEVEL = 0;
    HERO.EXP = 0;
    HERO.EXP_NEXT = 500;
    HERO.ATTRIBUTE[4] = 10;
    HERO.ATTRIBUTE[5] = 10;
    HERO.ATTRIBUTE[3] = 5;
    HERO.ATTRIBUTE[2] = 5;
    HERO.ATTRIBUTE[0] = 40;
    HERO.ATTRIBUTE[1] = 40;
    NPC_SETTALENTSKILL(HERO, NPC_TALENT_SMITH, 0);
    NPC_SETTALENTSKILL(HERO, NPC_TALENT_ALCHEMY, 0);
    NPC_SETTALENTSKILL(HERO, NPC_TALENT_RUNES, 0);
    NPC_SETTALENTSKILL(HERO, NPC_TALENT_MAGE, 0);
    NPC_SETTALENTSKILL(HERO, NPC_TALENT_BOW, 0);
    OTHER.HITCHANCE[3] = 0;
    NPC_SETTALENTSKILL(HERO, NPC_TALENT_CROSSBOW, 0);
    OTHER.HITCHANCE[4] = 0;
    NPC_SETTALENTSKILL(HERO, NPC_TALENT_1H, 0);
    OTHER.HITCHANCE[1] = 0;
    NPC_SETTALENTSKILL(HERO, NPC_TALENT_2H, 0);
    NPC_SETTALENTSKILL(HERO, NPC_TALENT_MAGE, 0);
    OTHER.HITCHANCE[2] = 0;
    AI_UNEQUIPARMOR(HERO);
    PRINTSCREEN("PC_Hero przywrócony do stanu pocz¹tkowego", -(1), -(1), FONT_SCREEN, 2);
}

instance CH_GUILD(C_INFO) {
    NPC = 93028;
    NR = 7;
    CONDITION = CH_GUILD_CONDITION;
    INFORMATION = CH_GUILD_INFO;
    IMPORTANT = 0;
    PERMANENT = 1;
    DESCRIPTION = "Wybór gildii";
}

func int CH_GUILD_CONDITION() {
    if ((LEVELSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void CH_GUILD_INFO() {
    INFO_CLEARCHOICES(93048);
    INFO_ADDCHOICE(93048, DIALOG_BACK, 93051);
    INFO_ADDCHOICE(93048, "Nowicjusz", 93053);
    INFO_ADDCHOICE(93048, "Mag ognia", 93054);
    INFO_ADDCHOICE(93048, "Najemnik", 93055);
    INFO_ADDCHOICE(93048, "£owca smoków", 93056);
    INFO_ADDCHOICE(93048, "Stra¿nik", 93057);
    INFO_ADDCHOICE(93048, "Paladyn", 93058);
    INFO_ADDCHOICE(93048, "Brak", 93059);
    INFO_ADDCHOICE(93048, "Fa³szywy bandyta", 93052);
}

func void CH_GUILD_BACK() {
    INFO_CLEARCHOICES(93048);
}

func void CH_FAKEBANDIT() {
    CREATEINVITEMS(HERO, 33922, 1);
    CREATEINVITEMS(HERO, 33923, 1);
    AI_EQUIPBESTARMOR(HERO);
}

func void CH_NOV() {
    INFO_CLEARCHOICES(93048);
    OTHER.GUILD = GIL_NOV;
    NPC_SETTRUEGUILD(OTHER, GIL_NOV);
    CREATEINVITEM(HERO, 33913);
    AI_EQUIPARMOR(HERO, 33913);
}

func void CH_KDF() {
    INFO_CLEARCHOICES(93048);
    OTHER.GUILD = GIL_KDF;
    NPC_SETTRUEGUILD(OTHER, GIL_KDF);
    CREATEINVITEM(HERO, 33916);
    AI_EQUIPARMOR(HERO, 33916);
}

func void CH_SLD() {
    INFO_CLEARCHOICES(93048);
    OTHER.GUILD = GIL_SLD;
    NPC_SETTRUEGUILD(OTHER, GIL_SLD);
}

func void CH_DJG() {
    INFO_CLEARCHOICES(93048);
    OTHER.GUILD = GIL_DJG;
    NPC_SETTRUEGUILD(OTHER, GIL_DJG);
}

func void CH_MIL() {
    INFO_CLEARCHOICES(93048);
    OTHER.GUILD = GIL_MIL;
    NPC_SETTRUEGUILD(OTHER, GIL_MIL);
    CREATEINVITEM(HERO, 33903);
    AI_EQUIPARMOR(HERO, 33903);
}

func void CH_PAL() {
    INFO_CLEARCHOICES(93048);
    OTHER.GUILD = GIL_PAL;
    NPC_SETTRUEGUILD(OTHER, GIL_PAL);
    CREATEINVITEM(HERO, 35621);
    AI_EQUIPARMOR(HERO, 35621);
    B_SETPALADINEQUIPMENT();
}

func void CH_NONE() {
    INFO_CLEARCHOICES(93048);
    OTHER.GUILD = GIL_NONE;
    NPC_SETTRUEGUILD(OTHER, GIL_NONE);
    AI_UNEQUIPARMOR(HERO);
}

var int LEVELSTART;
instance CH_LEVEL_START(C_INFO) {
    NPC = 93028;
    CONDITION = CH_LEVEL_START_CONDITION;
    INFORMATION = CH_LEVEL_START_INFO;
    DESCRIPTION = "Poziom, punkty nauki i gildia";
    PERMANENT = TRUE;
}

func int CH_LEVEL_START_CONDITION() {
    if (((((((LEVELSTART) == (FALSE)) && ((MAGIESTART) == (FALSE))) && ((ATTRIBUTESTART) == (FALSE))) && ((KAMPFSTART) == (FALSE))) && ((DIEBSTART) == (FALSE))) && ((MISCSTART) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void CH_LEVEL_START_INFO() {
    LEVELSTART = TRUE;
}

instance CH_LEVEL_STOPPER(C_INFO) {
    NPC = 93028;
    NR = 99;
    CONDITION = CH_LEVEL_STOPPER_CONDITION;
    INFORMATION = CH_LEVEL_STOPPER_INFO;
    DESCRIPTION = DIALOG_BACK;
    PERMANENT = TRUE;
}

func int CH_LEVEL_STOPPER_CONDITION() {
    if ((LEVELSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void CH_LEVEL_STOPPER_INFO() {
    INFO_CLEARCHOICES(93064);
    LEVELSTART = FALSE;
}

instance CH_LERNPUNKTE(C_INFO) {
    NPC = 93028;
    NR = 5;
    CONDITION = CH_LERNPUNKTE_CONDITION;
    INFORMATION = CH_LERNPUNKTE_INFO;
    DESCRIPTION = "Punkty Nauki";
    PERMANENT = TRUE;
}

func int CH_LERNPUNKTE_CONDITION() {
    if ((LEVELSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void CH_LERNPUNKTE_INFO() {
    INFO_CLEARCHOICES(93067);
    INFO_ADDCHOICE(93067, DIALOG_BACK, 93070);
    INFO_ADDCHOICE(93067, "Punkty Nauki + 50", 93071);
    INFO_ADDCHOICE(93067, "Punkty Nauki + 25", 93072);
    INFO_ADDCHOICE(93067, "Punkty Nauki + 10", 93073);
    INFO_ADDCHOICE(93067, "Punkty Nauki + 5", 93074);
}

func void CH_LERNPUNKTE_BACK() {
    INFO_CLEARCHOICES(93067);
}

func void CH_LERNPUNKTE_50() {
    INFO_CLEARCHOICES(93067);
    HERO.LP = (HERO.LP) + (50);
    PRINTSCREEN("+ 50 Punktów Nauki", -(1), -(1), FONT_SCREEN, 3);
    SND_PLAY("LEVELUP");
}

func void CH_LERNPUNKTE_25() {
    INFO_CLEARCHOICES(93067);
    HERO.LP = (HERO.LP) + (25);
    PRINTSCREEN("+ 25 Punktów Nauki", -(1), -(1), FONT_SCREEN, 3);
    SND_PLAY("LEVELUP");
}

func void CH_LERNPUNKTE_10() {
    INFO_CLEARCHOICES(93067);
    HERO.LP = (HERO.LP) + (10);
    PRINTSCREEN("+ 10 Punktów Nauki", -(1), -(1), FONT_SCREEN, 3);
    SND_PLAY("LEVELUP");
}

func void CH_LERNPUNKTE_5() {
    INFO_CLEARCHOICES(93067);
    HERO.LP = (HERO.LP) + (5);
    PRINTSCREEN("+ 5 Punktów Nauki", -(1), -(1), FONT_SCREEN, 3);
    SND_PLAY("LEVELUP");
}

instance CH_LEVEL_NIEDRIG(C_INFO) {
    NPC = 93028;
    NR = 2;
    CONDITION = CH_LEVEL_NIEDRIG_CONDITION;
    INFORMATION = CH_LEVEL_NIEDRIG_INFO;
    DESCRIPTION = "Poziom  1 - 25";
    PERMANENT = TRUE;
}

func int CH_LEVEL_NIEDRIG_CONDITION() {
    if ((LEVELSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void CH_LEVEL_NIEDRIG_INFO() {
    INFO_CLEARCHOICES(93075);
    INFO_ADDCHOICE(93075, DIALOG_BACK, 93091);
    INFO_ADDCHOICE(93075, "Poziom 21 - 25", 93086);
    INFO_ADDCHOICE(93075, "Poziom 16 - 20", 93087);
    INFO_ADDCHOICE(93075, "Poziom 11 - 15", 93088);
    INFO_ADDCHOICE(93075, "Poziom  6 - 10", 93089);
    INFO_ADDCHOICE(93075, "Poziom  1 -  5", 93090);
}

instance CH_LEVEL_HOCH(C_INFO) {
    NPC = 93028;
    NR = 3;
    CONDITION = CH_LEVEL_HOCH_CONDITION;
    INFORMATION = CH_LEVEL_HOCH_INFO;
    DESCRIPTION = "Poziom   26 - 50";
    PERMANENT = TRUE;
}

func int CH_LEVEL_HOCH_CONDITION() {
    if ((LEVELSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void CH_LEVEL_HOCH_INFO() {
    INFO_CLEARCHOICES(93078);
    INFO_ADDCHOICE(93078, DIALOG_BACK, 93092);
    INFO_ADDCHOICE(93078, "Poziom 46 - 50", 93081);
    INFO_ADDCHOICE(93078, "Poziom 41 - 45", 93082);
    INFO_ADDCHOICE(93078, "Poziom 36 - 40", 93083);
    INFO_ADDCHOICE(93078, "Poziom 31 - 35", 93084);
    INFO_ADDCHOICE(93078, "Poziom 26 - 30", 93085);
}

func void CH_LEVEL46() {
    INFO_CLEARCHOICES(93078);
    INFO_ADDCHOICE(93078, DIALOG_BACK, 93092);
    INFO_ADDCHOICE(93078, "Poziom 50", 93142);
    INFO_ADDCHOICE(93078, "Poziom 49", 93141);
    INFO_ADDCHOICE(93078, "Poziom 48", 93140);
    INFO_ADDCHOICE(93078, "Poziom 47", 93139);
    INFO_ADDCHOICE(93078, "Poziom 46", 93138);
}

func void CH_LEVEL41() {
    INFO_CLEARCHOICES(93078);
    INFO_ADDCHOICE(93078, DIALOG_BACK, 93092);
    INFO_ADDCHOICE(93078, "Poziom 45", 93137);
    INFO_ADDCHOICE(93078, "Poziom 44", 93136);
    INFO_ADDCHOICE(93078, "Poziom 43", 93135);
    INFO_ADDCHOICE(93078, "Poziom 42", 93134);
    INFO_ADDCHOICE(93078, "Poziom 41", 93133);
}

func void CH_LEVEL36() {
    INFO_CLEARCHOICES(93078);
    INFO_ADDCHOICE(93078, DIALOG_BACK, 93092);
    INFO_ADDCHOICE(93078, "Poziom 40", 93132);
    INFO_ADDCHOICE(93078, "Poziom 39", 93131);
    INFO_ADDCHOICE(93078, "Poziom 38", 93130);
    INFO_ADDCHOICE(93078, "Poziom 37", 93129);
    INFO_ADDCHOICE(93078, "Poziom 36", 93128);
}

func void CH_LEVEL31() {
    INFO_CLEARCHOICES(93078);
    INFO_ADDCHOICE(93078, DIALOG_BACK, 93092);
    INFO_ADDCHOICE(93078, "Poziom 35", 93127);
    INFO_ADDCHOICE(93078, "Poziom 34", 93126);
    INFO_ADDCHOICE(93078, "Poziom 33", 93125);
    INFO_ADDCHOICE(93078, "Poziom 32", 93124);
    INFO_ADDCHOICE(93078, "Poziom 31", 93123);
}

func void CH_LEVEL26() {
    INFO_CLEARCHOICES(93078);
    INFO_ADDCHOICE(93078, DIALOG_BACK, 93092);
    INFO_ADDCHOICE(93078, "Poziom 30", 93122);
    INFO_ADDCHOICE(93078, "Poziom 29", 93121);
    INFO_ADDCHOICE(93078, "Poziom 28", 93120);
    INFO_ADDCHOICE(93078, "Poziom 27", 93119);
    INFO_ADDCHOICE(93078, "Poziom 26", 93118);
}

func void CH_LEVEL21() {
    INFO_CLEARCHOICES(93075);
    INFO_ADDCHOICE(93075, DIALOG_BACK, 93091);
    INFO_ADDCHOICE(93075, "Poziom 25", 93117);
    INFO_ADDCHOICE(93075, "Poziom 24", 93116);
    INFO_ADDCHOICE(93075, "Poziom 23", 93115);
    INFO_ADDCHOICE(93075, "Poziom 22", 93114);
    INFO_ADDCHOICE(93075, "Poziom 21", 93113);
}

func void CH_LEVEL16() {
    INFO_CLEARCHOICES(93075);
    INFO_ADDCHOICE(93075, DIALOG_BACK, 93091);
    INFO_ADDCHOICE(93075, "Poziom 20", 93112);
    INFO_ADDCHOICE(93075, "Poziom 19", 93111);
    INFO_ADDCHOICE(93075, "Poziom 18", 93110);
    INFO_ADDCHOICE(93075, "Poziom 17", 93109);
    INFO_ADDCHOICE(93075, "Poziom 16", 93108);
}

func void CH_LEVEL11() {
    INFO_CLEARCHOICES(93075);
    INFO_ADDCHOICE(93075, DIALOG_BACK, 93091);
    INFO_ADDCHOICE(93075, "Poziom 15", 93107);
    INFO_ADDCHOICE(93075, "Poziom 14", 93106);
    INFO_ADDCHOICE(93075, "Poziom 13", 93105);
    INFO_ADDCHOICE(93075, "Poziom 12", 93104);
    INFO_ADDCHOICE(93075, "Poziom 11", 93103);
}

func void CH_LEVEL6() {
    INFO_CLEARCHOICES(93075);
    INFO_ADDCHOICE(93075, DIALOG_BACK, 93091);
    INFO_ADDCHOICE(93075, "Poziom 10", 93102);
    INFO_ADDCHOICE(93075, "Poziom  9", 93101);
    INFO_ADDCHOICE(93075, "Poziom  8", 93100);
    INFO_ADDCHOICE(93075, "Poziom  7", 93099);
    INFO_ADDCHOICE(93075, "Poziom  6", 93098);
}

func void CH_LEVEL1() {
    INFO_CLEARCHOICES(93075);
    INFO_ADDCHOICE(93075, DIALOG_BACK, 93091);
    INFO_ADDCHOICE(93075, "Poziom 5", 93097);
    INFO_ADDCHOICE(93075, "Poziom 4", 93096);
    INFO_ADDCHOICE(93075, "Poziom 3", 93095);
    INFO_ADDCHOICE(93075, "Poziom 2", 93094);
    INFO_ADDCHOICE(93075, "Poziom 1", 93093);
}

func void CH_LEVEL_NIEDRIG_BACK() {
    INFO_CLEARCHOICES(93075);
}

func void CH_LEVEL_HOCH_BACK() {
    INFO_CLEARCHOICES(93078);
}

func void CH_LEVEL_1() {
    INFO_CLEARCHOICES(93075);
    HERO.LEVEL = 1;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_2() {
    INFO_CLEARCHOICES(93075);
    HERO.LEVEL = 2;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_3() {
    INFO_CLEARCHOICES(93075);
    HERO.LEVEL = 3;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_4() {
    INFO_CLEARCHOICES(93075);
    HERO.LEVEL = 4;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_5() {
    INFO_CLEARCHOICES(93075);
    HERO.LEVEL = 5;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_6() {
    INFO_CLEARCHOICES(93075);
    HERO.LEVEL = 6;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_7() {
    INFO_CLEARCHOICES(93075);
    HERO.LEVEL = 7;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_8() {
    INFO_CLEARCHOICES(93075);
    HERO.LEVEL = 8;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_9() {
    INFO_CLEARCHOICES(93075);
    HERO.LEVEL = 9;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_10() {
    INFO_CLEARCHOICES(93075);
    HERO.LEVEL = 10;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_11() {
    INFO_CLEARCHOICES(93075);
    HERO.LEVEL = 11;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_12() {
    INFO_CLEARCHOICES(93075);
    HERO.LEVEL = 12;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_13() {
    INFO_CLEARCHOICES(93075);
    HERO.LEVEL = 13;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_14() {
    INFO_CLEARCHOICES(93075);
    HERO.LEVEL = 14;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_15() {
    INFO_CLEARCHOICES(93075);
    HERO.LEVEL = 15;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_16() {
    INFO_CLEARCHOICES(93075);
    HERO.LEVEL = 16;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_17() {
    INFO_CLEARCHOICES(93075);
    HERO.LEVEL = 17;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_18() {
    INFO_CLEARCHOICES(93075);
    HERO.LEVEL = 18;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_19() {
    INFO_CLEARCHOICES(93075);
    HERO.LEVEL = 19;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_20() {
    INFO_CLEARCHOICES(93075);
    HERO.LEVEL = 20;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_21() {
    INFO_CLEARCHOICES(93075);
    HERO.LEVEL = 21;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_22() {
    INFO_CLEARCHOICES(93075);
    HERO.LEVEL = 22;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_23() {
    INFO_CLEARCHOICES(93075);
    HERO.LEVEL = 23;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_24() {
    INFO_CLEARCHOICES(93075);
    HERO.LEVEL = 24;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_25() {
    INFO_CLEARCHOICES(93075);
    HERO.LEVEL = 25;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_26() {
    INFO_CLEARCHOICES(93078);
    HERO.LEVEL = 26;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_27() {
    INFO_CLEARCHOICES(93078);
    HERO.LEVEL = 27;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_28() {
    INFO_CLEARCHOICES(93078);
    HERO.LEVEL = 28;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_29() {
    INFO_CLEARCHOICES(93078);
    HERO.LEVEL = 29;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_30() {
    INFO_CLEARCHOICES(93078);
    HERO.LEVEL = 30;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_31() {
    INFO_CLEARCHOICES(93078);
    HERO.LEVEL = 31;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_32() {
    INFO_CLEARCHOICES(93078);
    HERO.LEVEL = 32;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_33() {
    INFO_CLEARCHOICES(93078);
    HERO.LEVEL = 33;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_34() {
    INFO_CLEARCHOICES(93078);
    HERO.LEVEL = 34;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_35() {
    INFO_CLEARCHOICES(93078);
    HERO.LEVEL = 35;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_36() {
    INFO_CLEARCHOICES(93078);
    HERO.LEVEL = 36;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_37() {
    INFO_CLEARCHOICES(93078);
    HERO.LEVEL = 37;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_38() {
    INFO_CLEARCHOICES(93078);
    HERO.LEVEL = 38;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_39() {
    INFO_CLEARCHOICES(93078);
    HERO.LEVEL = 39;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_40() {
    INFO_CLEARCHOICES(93078);
    HERO.LEVEL = 40;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_41() {
    INFO_CLEARCHOICES(93078);
    HERO.LEVEL = 41;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_42() {
    INFO_CLEARCHOICES(93078);
    HERO.LEVEL = 42;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_43() {
    INFO_CLEARCHOICES(93078);
    HERO.LEVEL = 43;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_44() {
    INFO_CLEARCHOICES(93078);
    HERO.LEVEL = 44;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_45() {
    INFO_CLEARCHOICES(93078);
    HERO.LEVEL = 45;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_46() {
    INFO_CLEARCHOICES(93078);
    HERO.LEVEL = 46;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_47() {
    INFO_CLEARCHOICES(93078);
    HERO.LEVEL = 47;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_48() {
    INFO_CLEARCHOICES(93078);
    HERO.LEVEL = 48;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_49() {
    INFO_CLEARCHOICES(93078);
    HERO.LEVEL = 49;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

func void CH_LEVEL_50() {
    INFO_CLEARCHOICES(93078);
    HERO.LEVEL = 50;
    B_SETHEROEXP();
    B_SETHEROWEAPON();
    B_SETHEROEQUIPMENT();
}

var int ATTRIBUTESTART;
instance DIA_CH_ATTRIBUTE_START(C_INFO) {
    NPC = 93028;
    NR = 3;
    CONDITION = DIA_CH_ATTRIBUTE_START_CONDITION;
    INFORMATION = DIA_CH_ATTRIBUTE_START_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Stärke und Geschick";
}

func int DIA_CH_ATTRIBUTE_START_CONDITION() {
    if (((((((LEVELSTART) == (FALSE)) && ((MAGIESTART) == (FALSE))) && ((ATTRIBUTESTART) == (FALSE))) && ((KAMPFSTART) == (FALSE))) && ((DIEBSTART) == (FALSE))) && ((MISCSTART) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_ATTRIBUTE_START_INFO() {
    ATTRIBUTESTART = TRUE;
}

instance DIA_CH_ATTRIBUTE_STOPPER(C_INFO) {
    NPC = 93028;
    NR = 99;
    CONDITION = DIA_CH_ATTRIBUTE_STOPPER_CONDITION;
    INFORMATION = DIA_CH_ATTRIBUTE_STOPPER_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_BACK;
}

func int DIA_CH_ATTRIBUTE_STOPPER_CONDITION() {
    if ((ATTRIBUTESTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_ATTRIBUTE_STOPPER_INFO() {
    ATTRIBUTESTART = FALSE;
}

instance DIA_CH_STRENGTH(C_INFO) {
    NPC = 93028;
    NR = 2;
    CONDITION = DIA_CH_STRENGTH_CONDITION;
    INFORMATION = DIA_CH_STRENGTH_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Zwiêksz si³ê";
}

func int DIA_CH_STRENGTH_CONDITION() {
    if ((ATTRIBUTESTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_STRENGTH_INFO() {
    INFO_CLEARCHOICES(93150);
    INFO_ADDCHOICE(93150, DIALOG_BACK, 93153);
    INFO_ADDCHOICE(93150, B_BUILDLEARNSTRING("Si³a + 20", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 20)), 93157);
    INFO_ADDCHOICE(93150, B_BUILDLEARNSTRING("Si³a + 10", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 10)), 93156);
    INFO_ADDCHOICE(93150, B_BUILDLEARNSTRING("Si³a + 5", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 5)), 93155);
    INFO_ADDCHOICE(93150, B_BUILDLEARNSTRING("Si³a + 1", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 1)), 93154);
}

func void DIA_CH_STRENGTH_BACK() {
    INFO_CLEARCHOICES(93150);
}

func void DIA_CH_STRENGTH_1() {
    B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_STRENGTH, 1, T_MAX);
    INFO_CLEARCHOICES(93150);
    INFO_ADDCHOICE(93150, DIALOG_BACK, 93153);
    INFO_ADDCHOICE(93150, B_BUILDLEARNSTRING("Si³a + 20", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 20)), 93157);
    INFO_ADDCHOICE(93150, B_BUILDLEARNSTRING("Si³a + 10", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 10)), 93156);
    INFO_ADDCHOICE(93150, B_BUILDLEARNSTRING("Si³a + 5", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 5)), 93155);
    INFO_ADDCHOICE(93150, B_BUILDLEARNSTRING("Si³a + 1", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 1)), 93154);
}

func void DIA_CH_STRENGTH_5() {
    B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_STRENGTH, 5, T_MAX);
    INFO_CLEARCHOICES(93150);
    INFO_ADDCHOICE(93150, DIALOG_BACK, 93153);
    INFO_ADDCHOICE(93150, B_BUILDLEARNSTRING("Si³a + 20", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 20)), 93157);
    INFO_ADDCHOICE(93150, B_BUILDLEARNSTRING("Si³a + 10", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 10)), 93156);
    INFO_ADDCHOICE(93150, B_BUILDLEARNSTRING("Si³a + 5", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 5)), 93155);
    INFO_ADDCHOICE(93150, B_BUILDLEARNSTRING("Si³a + 1", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 1)), 93154);
}

func void DIA_CH_STRENGTH_10() {
    B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_STRENGTH, 10, T_MAX);
    INFO_CLEARCHOICES(93150);
    INFO_ADDCHOICE(93150, DIALOG_BACK, 93153);
    INFO_ADDCHOICE(93150, B_BUILDLEARNSTRING("Si³a + 20", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 20)), 93157);
    INFO_ADDCHOICE(93150, B_BUILDLEARNSTRING("Si³a + 10", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 10)), 93156);
    INFO_ADDCHOICE(93150, B_BUILDLEARNSTRING("Si³a + 5", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 5)), 93155);
    INFO_ADDCHOICE(93150, B_BUILDLEARNSTRING("Si³a + 1", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 1)), 93154);
}

func void DIA_CH_STRENGTH_20() {
    B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_STRENGTH, 20, T_MAX);
    INFO_CLEARCHOICES(93150);
    INFO_ADDCHOICE(93150, DIALOG_BACK, 93153);
    INFO_ADDCHOICE(93150, B_BUILDLEARNSTRING("Si³a + 20", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 20)), 93157);
    INFO_ADDCHOICE(93150, B_BUILDLEARNSTRING("Si³a + 10", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 10)), 93156);
    INFO_ADDCHOICE(93150, B_BUILDLEARNSTRING("Si³a + 5", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 5)), 93155);
    INFO_ADDCHOICE(93150, B_BUILDLEARNSTRING("Si³a + 1", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 1)), 93154);
}

instance DIA_CH_DEX(C_INFO) {
    NPC = 93028;
    NR = 3;
    CONDITION = DIA_CH_DEX_CONDITION;
    INFORMATION = DIA_CH_DEX_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Zwiêksz zrêcznoœæ";
}

func int DIA_CH_DEX_CONDITION() {
    if ((ATTRIBUTESTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_DEX_INFO() {
    INFO_CLEARCHOICES(93158);
    INFO_ADDCHOICE(93158, DIALOG_BACK, 93161);
    INFO_ADDCHOICE(93158, B_BUILDLEARNSTRING("Zrêcznoœæ + 20", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 20)), 93165);
    INFO_ADDCHOICE(93158, B_BUILDLEARNSTRING("Zrêcznoœæ + 10", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 10)), 93164);
    INFO_ADDCHOICE(93158, B_BUILDLEARNSTRING("Zrêcznoœæ + 5", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 5)), 93163);
    INFO_ADDCHOICE(93158, B_BUILDLEARNSTRING("Zrêcznoœæ + 1", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 1)), 93162);
}

func void DIA_CH_DEX_BACK() {
    INFO_CLEARCHOICES(93158);
}

func void DIA_CH_DEX_1() {
    B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_DEXTERITY, 1, T_MAX);
    INFO_CLEARCHOICES(93158);
    INFO_ADDCHOICE(93158, DIALOG_BACK, 93161);
    INFO_ADDCHOICE(93158, B_BUILDLEARNSTRING("Zrêcznoœæ + 20", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 20)), 93165);
    INFO_ADDCHOICE(93158, B_BUILDLEARNSTRING("Zrêcznoœæ + 10", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 10)), 93164);
    INFO_ADDCHOICE(93158, B_BUILDLEARNSTRING("Zrêcznoœæ + 5", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 5)), 93163);
    INFO_ADDCHOICE(93158, B_BUILDLEARNSTRING("Zrêcznoœæ + 1", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 1)), 93162);
}

func void DIA_CH_DEX_5() {
    B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_DEXTERITY, 5, T_MAX);
    INFO_CLEARCHOICES(93158);
    INFO_ADDCHOICE(93158, DIALOG_BACK, 93161);
    INFO_ADDCHOICE(93158, B_BUILDLEARNSTRING("Zrêcznoœæ + 20", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 20)), 93165);
    INFO_ADDCHOICE(93158, B_BUILDLEARNSTRING("Zrêcznoœæ + 10", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 10)), 93164);
    INFO_ADDCHOICE(93158, B_BUILDLEARNSTRING("Zrêcznoœæ + 5", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 5)), 93163);
    INFO_ADDCHOICE(93158, B_BUILDLEARNSTRING("Zrêcznoœæ + 1", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 1)), 93162);
}

func void DIA_CH_DEX_10() {
    B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_DEXTERITY, 10, T_MAX);
    INFO_CLEARCHOICES(93158);
    INFO_ADDCHOICE(93158, DIALOG_BACK, 93161);
    INFO_ADDCHOICE(93158, B_BUILDLEARNSTRING("Zrêcznoœæ + 20", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 20)), 93165);
    INFO_ADDCHOICE(93158, B_BUILDLEARNSTRING("Zrêcznoœæ + 10", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 10)), 93164);
    INFO_ADDCHOICE(93158, B_BUILDLEARNSTRING("Zrêcznoœæ + 5", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 5)), 93163);
    INFO_ADDCHOICE(93158, B_BUILDLEARNSTRING("Zrêcznoœæ + 1", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 1)), 93162);
}

func void DIA_CH_DEX_20() {
    B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_DEXTERITY, 20, T_MAX);
    INFO_CLEARCHOICES(93158);
    INFO_ADDCHOICE(93158, DIALOG_BACK, 93161);
    INFO_ADDCHOICE(93158, B_BUILDLEARNSTRING("Zrêcznoœæ + 20", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 20)), 93165);
    INFO_ADDCHOICE(93158, B_BUILDLEARNSTRING("Zrêcznoœæ + 10", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 10)), 93164);
    INFO_ADDCHOICE(93158, B_BUILDLEARNSTRING("Zrêcznoœæ + 5", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 5)), 93163);
    INFO_ADDCHOICE(93158, B_BUILDLEARNSTRING("Zrêcznoœæ + 1", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 1)), 93162);
}

var int MAGIESTART;
instance DIA_CH_MAGIE(C_INFO) {
    NPC = 93028;
    NR = 3;
    CONDITION = DIA_CH_MAGIE_CONDITION;
    INFORMATION = DIA_CH_MAGIE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "MAGIA: Mana, runy, krêgi";
}

func int DIA_CH_MAGIE_CONDITION() {
    if (((((((LEVELSTART) == (FALSE)) && ((MAGIESTART) == (FALSE))) && ((ATTRIBUTESTART) == (FALSE))) && ((KAMPFSTART) == (FALSE))) && ((DIEBSTART) == (FALSE))) && ((MISCSTART) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MAGIE_INFO() {
    MAGIESTART = TRUE;
}

instance DIA_CH_MAGIE_STOPPER(C_INFO) {
    NPC = 93028;
    NR = 99;
    CONDITION = DIA_CH_MAGIE_STOPPER_CONDITION;
    INFORMATION = DIA_CH_MAGIE_STOPPER_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_BACK;
}

func int DIA_CH_MAGIE_STOPPER_CONDITION() {
    if ((MAGIESTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MAGIE_STOPPER_INFO() {
    MAGIESTART = FALSE;
}

instance DIA_CH_MANA(C_INFO) {
    NPC = 93028;
    NR = 3;
    CONDITION = DIA_CH_MANA_CONDITION;
    INFORMATION = DIA_CH_MANA_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Zwiêksz manê";
}

func int DIA_CH_MANA_CONDITION() {
    if ((MAGIESTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MANA_INFO() {
    INFO_CLEARCHOICES(93173);
    INFO_ADDCHOICE(93173, B_BUILDLEARNSTRING("Mana + 20", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 20)), 93180);
    INFO_ADDCHOICE(93173, B_BUILDLEARNSTRING("Mana + 10", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 10)), 93179);
    INFO_ADDCHOICE(93173, B_BUILDLEARNSTRING("Mana + 5", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 5)), 93178);
    INFO_ADDCHOICE(93173, B_BUILDLEARNSTRING("Mana + 1", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_DEXTERITY, 1)), 93177);
}

func void DIA_CH_MANA_BACK() {
    INFO_CLEARCHOICES(93173);
}

func void DIA_CH_MANA_1() {
    B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_MANA_MAX, 1, T_MAX);
    INFO_CLEARCHOICES(93173);
    INFO_ADDCHOICE(93173, DIALOG_BACK, 93176);
    INFO_ADDCHOICE(93173, B_BUILDLEARNSTRING("Mana + 20", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 20)), 93180);
    INFO_ADDCHOICE(93173, B_BUILDLEARNSTRING("Mana + 10", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 10)), 93179);
    INFO_ADDCHOICE(93173, B_BUILDLEARNSTRING("Mana + 5", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 5)), 93178);
    INFO_ADDCHOICE(93173, B_BUILDLEARNSTRING("Mana + 1", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 1)), 93177);
}

func void DIA_CH_MANA_5() {
    B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_MANA_MAX, 5, T_MAX);
    INFO_CLEARCHOICES(93173);
    INFO_ADDCHOICE(93173, DIALOG_BACK, 93176);
    INFO_ADDCHOICE(93173, B_BUILDLEARNSTRING("Mana + 20", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 20)), 93180);
    INFO_ADDCHOICE(93173, B_BUILDLEARNSTRING("Mana + 10", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 10)), 93179);
    INFO_ADDCHOICE(93173, B_BUILDLEARNSTRING("Mana + 5", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 5)), 93178);
    INFO_ADDCHOICE(93173, B_BUILDLEARNSTRING("Mana + 1", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 1)), 93177);
}

func void DIA_CH_MANA_10() {
    B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_MANA_MAX, 10, T_MAX);
    INFO_CLEARCHOICES(93173);
    INFO_ADDCHOICE(93173, DIALOG_BACK, 93176);
    INFO_ADDCHOICE(93173, B_BUILDLEARNSTRING("Mana + 20", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 20)), 93180);
    INFO_ADDCHOICE(93173, B_BUILDLEARNSTRING("Mana + 10", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 10)), 93179);
    INFO_ADDCHOICE(93173, B_BUILDLEARNSTRING("Mana + 5", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 5)), 93178);
    INFO_ADDCHOICE(93173, B_BUILDLEARNSTRING("Mana + 1", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 1)), 93177);
}

func void DIA_CH_MANA_20() {
    B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_MANA_MAX, 20, T_MAX);
    INFO_CLEARCHOICES(93173);
    INFO_ADDCHOICE(93173, DIALOG_BACK, 93176);
    INFO_ADDCHOICE(93173, B_BUILDLEARNSTRING("Mana + 20", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 20)), 93180);
    INFO_ADDCHOICE(93173, B_BUILDLEARNSTRING("Mana + 10", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 10)), 93179);
    INFO_ADDCHOICE(93173, B_BUILDLEARNSTRING("Mana + 5", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 5)), 93178);
    INFO_ADDCHOICE(93173, B_BUILDLEARNSTRING("Mana + 1", B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 1)), 93177);
}

instance DIA_CH_KREISE(C_INFO) {
    NPC = 93028;
    NR = 4;
    CONDITION = DIA_CH_KREISE_CONDITION;
    INFORMATION = DIA_CH_KREISE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Magiczne Krêgi";
}

func int DIA_CH_KREISE_CONDITION() {
    if ((MAGIESTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_KREISE_INFO() {
    INFO_CLEARCHOICES(93181);
    INFO_ADDCHOICE(93181, DIALOG_BACK, 93184);
    INFO_ADDCHOICE(93181, "Szósty Kr¹g", 93190);
    INFO_ADDCHOICE(93181, "Pi¹ty Kr¹g", 93189);
    INFO_ADDCHOICE(93181, "Czwarty Kr¹g", 93188);
    INFO_ADDCHOICE(93181, "Trzeci Kr¹g", 93187);
    INFO_ADDCHOICE(93181, "Drugi Kr¹g", 93186);
    INFO_ADDCHOICE(93181, "Pierwszy Kr¹g", 93185);
}

func void CH_KREISE_BACK() {
    INFO_CLEARCHOICES(93181);
}

func void CH_KREISE_1() {
    INFO_CLEARCHOICES(93181);
    B_TEACHMAGICCIRCLE(SELF, OTHER, 1);
    B_SETKDFRUNES();
}

func void CH_KREISE_2() {
    INFO_CLEARCHOICES(93181);
    B_TEACHMAGICCIRCLE(SELF, OTHER, 2);
    B_SETKDFRUNES();
}

func void CH_KREISE_3() {
    INFO_CLEARCHOICES(93181);
    B_TEACHMAGICCIRCLE(SELF, OTHER, 3);
    B_SETKDFRUNES();
}

func void CH_KREISE_4() {
    INFO_CLEARCHOICES(93181);
    B_TEACHMAGICCIRCLE(SELF, OTHER, 4);
    B_SETKDFRUNES();
}

func void CH_KREISE_5() {
    INFO_CLEARCHOICES(93181);
    B_TEACHMAGICCIRCLE(SELF, OTHER, 5);
    B_SETKDFRUNES();
}

func void CH_KREISE_6() {
    INFO_CLEARCHOICES(93181);
    B_TEACHMAGICCIRCLE(SELF, OTHER, 6);
    B_SETKDFRUNES();
}

var int KAMPFSTART;
instance DIA_CH_KAMPF_START(C_INFO) {
    NPC = 93028;
    NR = 6;
    CONDITION = DIA_CH_KAMPF_START_CONDITION;
    INFORMATION = DIA_CH_KAMPF_START_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Talenty bojowe (wrêcz i dystansowe)";
}

func int DIA_CH_KAMPF_START_CONDITION() {
    if (((((((KAMPFSTART) == (FALSE)) && ((MAGIESTART) == (FALSE))) && ((ATTRIBUTESTART) == (FALSE))) && ((LEVELSTART) == (FALSE))) && ((DIEBSTART) == (FALSE))) && ((MISCSTART) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_KAMPF_START_INFO() {
    KAMPFSTART = TRUE;
}

instance DIA_CH_KAMPF_STOPPER(C_INFO) {
    NPC = 93028;
    NR = 99;
    CONDITION = DIA_CH_KAMPF_STOPPER_CONDITION;
    INFORMATION = DIA_CH_KAMPF_STOPPER_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_BACK;
}

func int DIA_CH_KAMPF_STOPPER_CONDITION() {
    if ((KAMPFSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_KAMPF_STOPPER_INFO() {
    KAMPFSTART = FALSE;
}

instance DIA_CH_KAMPF_EINHAND(C_INFO) {
    NPC = 93028;
    NR = 6;
    CONDITION = DIA_CH_KAMPF_EINHAND_CONDITION;
    INFORMATION = DIA_CH_KAMPF_EINHAND_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Broñ jednorêczna";
}

func int DIA_CH_KAMPF_EINHAND_CONDITION() {
    if ((KAMPFSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_KAMPF_EINHAND_INFO() {
    INFO_CLEARCHOICES(93198);
    INFO_ADDCHOICE(93198, DIALOG_BACK, 93201);
    INFO_ADDCHOICE(93198, B_BUILDLEARNSTRING("Broñ jednorêczna + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 20)), 93205);
    INFO_ADDCHOICE(93198, B_BUILDLEARNSTRING("Broñ jednorêczna + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 10)), 93204);
    INFO_ADDCHOICE(93198, B_BUILDLEARNSTRING("Broñ jednorêczna + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 5)), 93203);
    INFO_ADDCHOICE(93198, B_BUILDLEARNSTRING("Broñ jednorêczna + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 1)), 93202);
}

func void DIA_CH_KAMPF_EINHAND_BACK() {
    INFO_CLEARCHOICES(93198);
}

func void CH_TRAINING_COMBAT_1H_1() {
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_1H, 1, 100);
    INFO_CLEARCHOICES(93198);
    INFO_ADDCHOICE(93198, DIALOG_BACK, 93201);
    INFO_ADDCHOICE(93198, B_BUILDLEARNSTRING("Broñ jednorêczna + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 20)), 93205);
    INFO_ADDCHOICE(93198, B_BUILDLEARNSTRING("Broñ jednorêczna + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 10)), 93204);
    INFO_ADDCHOICE(93198, B_BUILDLEARNSTRING("Broñ jednorêczna + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 5)), 93203);
    INFO_ADDCHOICE(93198, B_BUILDLEARNSTRING("Broñ jednorêczna + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 1)), 93202);
}

func void CH_TRAINING_COMBAT_1H_5() {
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_1H, 5, 100);
    INFO_CLEARCHOICES(93198);
    INFO_ADDCHOICE(93198, DIALOG_BACK, 93201);
    INFO_ADDCHOICE(93198, B_BUILDLEARNSTRING("Broñ jednorêczna + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 20)), 93205);
    INFO_ADDCHOICE(93198, B_BUILDLEARNSTRING("Broñ jednorêczna + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 10)), 93204);
    INFO_ADDCHOICE(93198, B_BUILDLEARNSTRING("Broñ jednorêczna + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 5)), 93203);
    INFO_ADDCHOICE(93198, B_BUILDLEARNSTRING("Broñ jednorêczna + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 1)), 93202);
}

func void CH_TRAINING_COMBAT_1H_10() {
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_1H, 10, 100);
    INFO_CLEARCHOICES(93198);
    INFO_ADDCHOICE(93198, DIALOG_BACK, 93201);
    INFO_ADDCHOICE(93198, B_BUILDLEARNSTRING("Broñ jednorêczna + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 20)), 93205);
    INFO_ADDCHOICE(93198, B_BUILDLEARNSTRING("Broñ jednorêczna + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 10)), 93204);
    INFO_ADDCHOICE(93198, B_BUILDLEARNSTRING("Broñ jednorêczna + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 5)), 93203);
    INFO_ADDCHOICE(93198, B_BUILDLEARNSTRING("Broñ jednorêczna + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 1)), 93202);
}

func void CH_TRAINING_COMBAT_1H_20() {
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_1H, 20, 100);
    INFO_CLEARCHOICES(93198);
    INFO_ADDCHOICE(93198, DIALOG_BACK, 93201);
    INFO_ADDCHOICE(93198, B_BUILDLEARNSTRING("Broñ jednorêczna + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 20)), 93205);
    INFO_ADDCHOICE(93198, B_BUILDLEARNSTRING("Broñ jednorêczna + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 10)), 93204);
    INFO_ADDCHOICE(93198, B_BUILDLEARNSTRING("Broñ jednorêczna + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 5)), 93203);
    INFO_ADDCHOICE(93198, B_BUILDLEARNSTRING("Broñ jednorêczna + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_1H, 1)), 93202);
}

instance DIA_CH_KAMPF_ZWEIHAND(C_INFO) {
    NPC = 93028;
    NR = 7;
    CONDITION = DIA_CH_KAMPF_ZWEIHAND_CONDITION;
    INFORMATION = DIA_CH_KAMPF_ZWEIHAND_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Broñ dwurêczna";
}

func int DIA_CH_KAMPF_ZWEIHAND_CONDITION() {
    if ((KAMPFSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_KAMPF_ZWEIHAND_INFO() {
    INFO_CLEARCHOICES(93206);
    INFO_ADDCHOICE(93206, DIALOG_BACK, 93209);
    INFO_ADDCHOICE(93206, B_BUILDLEARNSTRING("Broñ dwurêczna + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 20)), 93213);
    INFO_ADDCHOICE(93206, B_BUILDLEARNSTRING("Broñ dwurêczna + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 10)), 93212);
    INFO_ADDCHOICE(93206, B_BUILDLEARNSTRING("Broñ dwurêczna + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 5)), 93211);
    INFO_ADDCHOICE(93206, B_BUILDLEARNSTRING("Broñ dwurêczna + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 1)), 93210);
}

func void DIA_CH_KAMPF_ZWEIHAND_BACK() {
    INFO_CLEARCHOICES(93206);
}

func void CH_TRAINING_COMBAT_2H_1() {
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_2H, 1, 100);
    INFO_CLEARCHOICES(93206);
    INFO_ADDCHOICE(93206, DIALOG_BACK, 93209);
    INFO_ADDCHOICE(93206, B_BUILDLEARNSTRING("Broñ dwurêczna + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 20)), 93213);
    INFO_ADDCHOICE(93206, B_BUILDLEARNSTRING("Broñ dwurêczna + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 10)), 93212);
    INFO_ADDCHOICE(93206, B_BUILDLEARNSTRING("Broñ dwurêczna + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 5)), 93211);
    INFO_ADDCHOICE(93206, B_BUILDLEARNSTRING("Broñ dwurêczna + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 1)), 93210);
}

func void CH_TRAINING_COMBAT_2H_5() {
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_2H, 5, 100);
    INFO_CLEARCHOICES(93206);
    INFO_ADDCHOICE(93206, DIALOG_BACK, 93209);
    INFO_ADDCHOICE(93206, B_BUILDLEARNSTRING("Broñ dwurêczna + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 20)), 93213);
    INFO_ADDCHOICE(93206, B_BUILDLEARNSTRING("Broñ dwurêczna + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 10)), 93212);
    INFO_ADDCHOICE(93206, B_BUILDLEARNSTRING("Broñ dwurêczna + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 5)), 93211);
    INFO_ADDCHOICE(93206, B_BUILDLEARNSTRING("Broñ dwurêczna + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 1)), 93210);
}

func void CH_TRAINING_COMBAT_2H_10() {
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_2H, 10, 100);
    INFO_CLEARCHOICES(93206);
    INFO_ADDCHOICE(93206, DIALOG_BACK, 93209);
    INFO_ADDCHOICE(93206, B_BUILDLEARNSTRING("Broñ dwurêczna + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 20)), 93213);
    INFO_ADDCHOICE(93206, B_BUILDLEARNSTRING("Broñ dwurêczna + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 10)), 93212);
    INFO_ADDCHOICE(93206, B_BUILDLEARNSTRING("Broñ dwurêczna + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 5)), 93211);
    INFO_ADDCHOICE(93206, B_BUILDLEARNSTRING("Broñ dwurêczna + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 1)), 93210);
}

func void CH_TRAINING_COMBAT_2H_20() {
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_2H, 20, 100);
    INFO_CLEARCHOICES(93206);
    INFO_ADDCHOICE(93206, DIALOG_BACK, 93209);
    INFO_ADDCHOICE(93206, B_BUILDLEARNSTRING("Broñ dwurêczna + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 20)), 93213);
    INFO_ADDCHOICE(93206, B_BUILDLEARNSTRING("Broñ dwurêczna + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 10)), 93212);
    INFO_ADDCHOICE(93206, B_BUILDLEARNSTRING("Broñ dwurêczna + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 5)), 93211);
    INFO_ADDCHOICE(93206, B_BUILDLEARNSTRING("Broñ dwurêczna + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 1)), 93210);
}

instance DIA_CH_KAMPF_BOGEN(C_INFO) {
    NPC = 93028;
    NR = 8;
    CONDITION = DIA_CH_KAMPF_BOGEN_CONDITION;
    INFORMATION = DIA_CH_KAMPF_BOGEN_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "£uki";
}

func int DIA_CH_KAMPF_BOGEN_CONDITION() {
    if ((KAMPFSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_KAMPF_BOGEN_INFO() {
    INFO_CLEARCHOICES(93214);
    INFO_ADDCHOICE(93214, DIALOG_BACK, 93217);
    INFO_ADDCHOICE(93214, B_BUILDLEARNSTRING("£uki + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 20)), 93221);
    INFO_ADDCHOICE(93214, B_BUILDLEARNSTRING("£uki + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 10)), 93220);
    INFO_ADDCHOICE(93214, B_BUILDLEARNSTRING("£uki + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 5)), 93219);
    INFO_ADDCHOICE(93214, B_BUILDLEARNSTRING("£uki + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 1)), 93218);
}

func void DIA_CH_KAMPF_BOGEN_BACK() {
    INFO_CLEARCHOICES(93214);
}

func void CH_TRAINING_COMBAT_BOW_1() {
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_BOW, 1, 100);
    INFO_CLEARCHOICES(93214);
    INFO_ADDCHOICE(93214, DIALOG_BACK, 93217);
    INFO_ADDCHOICE(93214, B_BUILDLEARNSTRING("£uki + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 20)), 93221);
    INFO_ADDCHOICE(93214, B_BUILDLEARNSTRING("£uki + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 10)), 93220);
    INFO_ADDCHOICE(93214, B_BUILDLEARNSTRING("£uki + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 5)), 93219);
    INFO_ADDCHOICE(93214, B_BUILDLEARNSTRING("£uki + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 1)), 93218);
}

func void CH_TRAINING_COMBAT_BOW_5() {
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_BOW, 5, 100);
    INFO_CLEARCHOICES(93214);
    INFO_ADDCHOICE(93214, DIALOG_BACK, 93217);
    INFO_ADDCHOICE(93214, B_BUILDLEARNSTRING("£uki + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 20)), 93221);
    INFO_ADDCHOICE(93214, B_BUILDLEARNSTRING("£uki + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 10)), 93220);
    INFO_ADDCHOICE(93214, B_BUILDLEARNSTRING("£uki + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 5)), 93219);
    INFO_ADDCHOICE(93214, B_BUILDLEARNSTRING("£uki + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 1)), 93218);
}

func void CH_TRAINING_COMBAT_BOW_10() {
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_BOW, 10, 100);
    INFO_CLEARCHOICES(93214);
    INFO_ADDCHOICE(93214, DIALOG_BACK, 93217);
    INFO_ADDCHOICE(93214, B_BUILDLEARNSTRING("£uki + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 20)), 93221);
    INFO_ADDCHOICE(93214, B_BUILDLEARNSTRING("£uki + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 10)), 93220);
    INFO_ADDCHOICE(93214, B_BUILDLEARNSTRING("£uki + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 5)), 93219);
    INFO_ADDCHOICE(93214, B_BUILDLEARNSTRING("£uki + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 1)), 93218);
}

func void CH_TRAINING_COMBAT_BOW_20() {
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_BOW, 20, 100);
    INFO_CLEARCHOICES(93214);
    INFO_ADDCHOICE(93214, DIALOG_BACK, 93217);
    INFO_ADDCHOICE(93214, B_BUILDLEARNSTRING("£uki + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 20)), 93221);
    INFO_ADDCHOICE(93214, B_BUILDLEARNSTRING("£uki + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 10)), 93220);
    INFO_ADDCHOICE(93214, B_BUILDLEARNSTRING("£uki + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 5)), 93219);
    INFO_ADDCHOICE(93214, B_BUILDLEARNSTRING("£uki + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_BOW, 1)), 93218);
}

instance DIA_CH_KAMPF_ARMBRUST(C_INFO) {
    NPC = 93028;
    NR = 8;
    CONDITION = DIA_CH_KAMPF_ARMBRUST_CONDITION;
    INFORMATION = DIA_CH_KAMPF_ARMBRUST_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Kusze";
}

func int DIA_CH_KAMPF_ARMBRUST_CONDITION() {
    if ((KAMPFSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_KAMPF_ARMBRUST_INFO() {
    INFO_CLEARCHOICES(93222);
    INFO_ADDCHOICE(93222, DIALOG_BACK, 93225);
    INFO_ADDCHOICE(93222, B_BUILDLEARNSTRING("Kusze + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 20)), 93229);
    INFO_ADDCHOICE(93222, B_BUILDLEARNSTRING("Kusze + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 10)), 93228);
    INFO_ADDCHOICE(93222, B_BUILDLEARNSTRING("Kusze + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 5)), 93227);
    INFO_ADDCHOICE(93222, B_BUILDLEARNSTRING("Kusze + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 1)), 93226);
}

func void DIA_CH_KAMPF_ARMBRUST_BACK() {
    INFO_CLEARCHOICES(93222);
}

func void CH_TRAINING_COMBAT_CROSSBOW_1() {
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_CROSSBOW, 1, 100);
    INFO_CLEARCHOICES(93222);
    INFO_ADDCHOICE(93222, DIALOG_BACK, 93225);
    INFO_ADDCHOICE(93222, B_BUILDLEARNSTRING("Kusze + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 20)), 93229);
    INFO_ADDCHOICE(93222, B_BUILDLEARNSTRING("Kusze + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 10)), 93228);
    INFO_ADDCHOICE(93222, B_BUILDLEARNSTRING("Kusze + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 5)), 93227);
    INFO_ADDCHOICE(93222, B_BUILDLEARNSTRING("Kusze + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 1)), 93226);
}

func void CH_TRAINING_COMBAT_CROSSBOW_5() {
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_CROSSBOW, 5, 100);
    INFO_CLEARCHOICES(93222);
    INFO_ADDCHOICE(93222, DIALOG_BACK, 93225);
    INFO_ADDCHOICE(93222, B_BUILDLEARNSTRING("Kusze + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 20)), 93229);
    INFO_ADDCHOICE(93222, B_BUILDLEARNSTRING("Kusze + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 10)), 93228);
    INFO_ADDCHOICE(93222, B_BUILDLEARNSTRING("Kusze + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 5)), 93227);
    INFO_ADDCHOICE(93222, B_BUILDLEARNSTRING("Kusze + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 1)), 93226);
}

func void CH_TRAINING_COMBAT_CROSSBOW_10() {
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_CROSSBOW, 10, 100);
    INFO_CLEARCHOICES(93222);
    INFO_ADDCHOICE(93222, DIALOG_BACK, 93225);
    INFO_ADDCHOICE(93222, B_BUILDLEARNSTRING("Kusze + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 20)), 93229);
    INFO_ADDCHOICE(93222, B_BUILDLEARNSTRING("Kusze + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 10)), 93228);
    INFO_ADDCHOICE(93222, B_BUILDLEARNSTRING("Kusze + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 5)), 93227);
    INFO_ADDCHOICE(93222, B_BUILDLEARNSTRING("Kusze + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 1)), 93226);
}

func void CH_TRAINING_COMBAT_CROSSBOW_20() {
    B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_CROSSBOW, 20, 100);
    INFO_CLEARCHOICES(93222);
    INFO_ADDCHOICE(93222, DIALOG_BACK, 93225);
    INFO_ADDCHOICE(93222, B_BUILDLEARNSTRING("Kusze + 1", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 1)), 93226);
    INFO_ADDCHOICE(93222, B_BUILDLEARNSTRING("Kusze + 5", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 5)), 93227);
    INFO_ADDCHOICE(93222, B_BUILDLEARNSTRING("Kusze + 10", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 10)), 93228);
    INFO_ADDCHOICE(93222, B_BUILDLEARNSTRING("Kusze + 20", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 20)), 93229);
}

var int DIEBSTART;
instance DIA_CH_DIEB_START(C_INFO) {
    NPC = 93028;
    NR = 6;
    CONDITION = DIA_CH_DIEB_START_CONDITION;
    INFORMATION = DIA_CH_DIEB_START_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Z³odziejskie talenty";
}

func int DIA_CH_DIEB_START_CONDITION() {
    if (((((((KAMPFSTART) == (FALSE)) && ((MAGIESTART) == (FALSE))) && ((ATTRIBUTESTART) == (FALSE))) && ((LEVELSTART) == (FALSE))) && ((DIEBSTART) == (FALSE))) && ((MISCSTART) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_DIEB_START_INFO() {
    DIEBSTART = TRUE;
}

instance DIA_CH_DIEB_STOPPER(C_INFO) {
    NPC = 93028;
    NR = 99;
    CONDITION = DIA_CH_DIEB_STOPPER_CONDITION;
    INFORMATION = DIA_CH_DIEB_STOPPER_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_BACK;
}

func int DIA_CH_DIEB_STOPPER_CONDITION() {
    if ((DIEBSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_DIEB_STOPPER_INFO() {
    DIEBSTART = FALSE;
}

instance DIA_CH_DIEB_STEAL(C_INFO) {
    NPC = 93028;
    NR = 7;
    CONDITION = DIA_CH_DIEB_STEAL_CONDITION;
    INFORMATION = DIA_CH_DIEB_STEAL_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Kradzie¿ kieszonkowa";
}

func int DIA_CH_DIEB_STEAL_CONDITION() {
    if ((DIEBSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_DIEB_STEAL_INFO() {
    INFO_CLEARCHOICES(93237);
    INFO_ADDCHOICE(93237, DIALOG_BACK, 93252);
    INFO_ADDCHOICE(93237, B_BUILDLEARNSTRING("Kradzie¿ kieszonkowa", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_PICKPOCKET, 1)), 93258);
}

instance DIA_CH_DIEB_SCHLEICHEN(C_INFO) {
    NPC = 93028;
    NR = 8;
    CONDITION = DIA_CH_DIEB_SCHLEICHEN_CONDITION;
    INFORMATION = DIA_CH_DIEB_SCHLEICHEN_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Skradanie";
}

func int DIA_CH_DIEB_SCHLEICHEN_CONDITION() {
    if ((DIEBSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_DIEB_SCHLEICHEN_INFO() {
    INFO_CLEARCHOICES(93240);
    INFO_ADDCHOICE(93240, DIALOG_BACK, 93253);
    INFO_ADDCHOICE(93240, B_BUILDLEARNSTRING("Skradanie", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_SNEAK, 1)), 93259);
}

instance DIA_CH_DIEB_PICKLOCK(C_INFO) {
    NPC = 93028;
    NR = 9;
    CONDITION = DIA_CH_DIEB_PICKLOCK_CONDITION;
    INFORMATION = DIA_CH_DIEB_PICKLOCK_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Otwieranie zamków";
}

func int DIA_CH_DIEB_PICKLOCK_CONDITION() {
    if ((DIEBSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_DIEB_PICKLOCK_INFO() {
    INFO_CLEARCHOICES(93243);
    INFO_ADDCHOICE(93243, DIALOG_BACK, 93254);
    INFO_ADDCHOICE(93243, B_BUILDLEARNSTRING("Otwieranie zamków - mistrz", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_PICKLOCK, 3)), 93257);
    INFO_ADDCHOICE(93243, B_BUILDLEARNSTRING("Otwieranie zamków - z³odziej", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_PICKLOCK, 2)), 93256);
    INFO_ADDCHOICE(93243, B_BUILDLEARNSTRING("Otwieranie zamków - zielony", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_PICKLOCK, 1)), 93255);
}

instance DIA_CH_DIEB_ALLE(C_INFO) {
    NPC = 93028;
    NR = 12;
    CONDITION = DIA_CH_DIEB_ALLE_CONDITION;
    INFORMATION = DIA_CH_DIEB_ALLE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Naucz siê wszystkich talentów z³odziejskich";
}

func int DIA_CH_DIEB_ALLE_CONDITION() {
    if ((DIEBSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_DIEB_ALLE_INFO() {
    var int KOSTEN_ALLE;
    KOSTEN_ALLE = ((B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_PICKLOCK, 1)) + (B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_SNEAK, 1))) + (B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_PICKPOCKET, 1));
    INFO_CLEARCHOICES(93246);
    INFO_ADDCHOICE(93246, DIALOG_BACK, 93250);
    INFO_ADDCHOICE(93246, B_BUILDLEARNSTRING("Wszystkie talenty z³odziejskie", KOSTEN_ALLE), 93251);
}

func void DIA_CH_DIEB_ALLE_BACK() {
    INFO_CLEARCHOICES(93246);
    B_TEACHTHIEFTALENT(SELF, OTHER, NPC_TALENT_SNEAK, 1);
}

func void CH_TRAINING_THIEF_ALLE() {
    INFO_CLEARCHOICES(93246);
}

func void DIA_CH_DIEB_STEAL_BACK() {
    INFO_CLEARCHOICES(93237);
}

func void DIA_CH_DIEB_SCHLEICHEN_BACK() {
    INFO_CLEARCHOICES(93240);
}

func void DIA_CH_DIEB_PICKLOCK_BACK() {
    INFO_CLEARCHOICES(93243);
}

func void CH_TRAINING_THIEF_PICKLOCK1() {
    INFO_CLEARCHOICES(93243);
    B_TEACHTHIEFTALENT(SELF, OTHER, NPC_TALENT_PICKLOCK, 1);
}

func void CH_TRAINING_THIEF_PICKLOCK2() {
    INFO_CLEARCHOICES(93243);
    B_TEACHTHIEFTALENT(SELF, OTHER, NPC_TALENT_PICKLOCK, 2);
}

func void CH_TRAINING_THIEF_PICKLOCK3() {
    INFO_CLEARCHOICES(93243);
    B_TEACHTHIEFTALENT(SELF, OTHER, NPC_TALENT_PICKLOCK, 3);
}

func void CH_TRAINING_THIEF_PICKPOCKET() {
    INFO_CLEARCHOICES(93237);
    B_TEACHTHIEFTALENT(SELF, OTHER, NPC_TALENT_PICKPOCKET, 1);
}

func void CH_TRAINING_THIEF_SNEAK() {
    INFO_CLEARCHOICES(93240);
    B_TEACHTHIEFTALENT(SELF, OTHER, NPC_TALENT_SNEAK, 1);
}

var int MISCSTART;
instance DIA_CH_MISC_START(C_INFO) {
    NPC = 93028;
    NR = 20;
    CONDITION = DIA_CH_MISC_START_CONDITION;
    INFORMATION = DIA_CH_MISC_START_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Inne (mikstury, trofea, kucie, runy paladyna, jêzyk)";
}

func int DIA_CH_MISC_START_CONDITION() {
    if (((((((KAMPFSTART) == (FALSE)) && ((MAGIESTART) == (FALSE))) && ((ATTRIBUTESTART) == (FALSE))) && ((LEVELSTART) == (FALSE))) && ((DIEBSTART) == (FALSE))) && ((MISCSTART) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MISC_START_INFO() {
    MISCSTART = TRUE;
}

instance DIA_CH_MISC_STOPPER(C_INFO) {
    NPC = 93028;
    NR = 99;
    CONDITION = DIA_CH_MISC_STOPPER_CONDITION;
    INFORMATION = DIA_CH_MISC_STOPPER_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_BACK;
}

func int DIA_CH_MISC_STOPPER_CONDITION() {
    if (((((MISCSTART) == (TRUE)) && ((ALCHEMYSTART) == (FALSE))) && ((ANIMALSTART) == (FALSE))) && ((PALADINSTART) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MISC_STOPPER_INFO() {
    MISCSTART = FALSE;
}

var int ALCHEMYSTART;
instance DIA_CH_MISC_ALCHEMIE(C_INFO) {
    NPC = 93028;
    NR = 10;
    CONDITION = DIA_CH_MISC_ALCHEMIE_CONDITION;
    INFORMATION = DIA_CH_MISC_ALCHEMIE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Alchemia - sztuka warzenia mikstur";
}

func int DIA_CH_MISC_ALCHEMIE_CONDITION() {
    if (((((MISCSTART) == (TRUE)) && ((ALCHEMYSTART) == (FALSE))) && ((ANIMALSTART) == (FALSE))) && ((PALADINSTART) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MISC_ALCHEMIE_INFO() {
    ALCHEMYSTART = TRUE;
}

instance DIA_CH_MISC_ALCHEMIE_STOPPER(C_INFO) {
    NPC = 93028;
    NR = 99;
    CONDITION = DIA_CH_MISC_ALCHEMIE_STOPPER_CONDITION;
    INFORMATION = DIA_CH_MISC_ALCHEMIE_STOPPER_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_BACK;
}

func int DIA_CH_MISC_ALCHEMIE_STOPPER_CONDITION() {
    if ((ALCHEMYSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MISC_ALCHEMIE_STOPPER_INFO() {
    ALCHEMYSTART = FALSE;
}

instance DIA_CH_MISC_ALCHEMIE_1(C_INFO) {
    NPC = 93028;
    NR = 5;
    CONDITION = DIA_CH_MISC_ALCHEMIE_1_CONDITION;
    INFORMATION = DIA_CH_MISC_ALCHEMIE_1_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Nowicjusz";
}

func int DIA_CH_MISC_ALCHEMIE_1_CONDITION() {
    if (((ALCHEMYSTART) == (TRUE)) && ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_ALCHEMY)) == (0))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MISC_ALCHEMIE_1_INFO() {
    B_TEACHPLAYERTALENTALCHEMY(SELF, OTHER, 1);
}

instance DIA_CH_MISC_ALCHEMIE_2(C_INFO) {
    NPC = 93028;
    NR = 5;
    CONDITION = DIA_CH_MISC_ALCHEMIE_2_CONDITION;
    INFORMATION = DIA_CH_MISC_ALCHEMIE_2_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Alchemik";
}

func int DIA_CH_MISC_ALCHEMIE_2_CONDITION() {
    if (((ALCHEMYSTART) == (TRUE)) && ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_ALCHEMY)) == (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MISC_ALCHEMIE_2_INFO() {
    B_TEACHPLAYERTALENTALCHEMY(SELF, OTHER, 2);
}

instance DIA_CH_MISC_ALCHEMIE_3(C_INFO) {
    NPC = 93028;
    NR = 5;
    CONDITION = DIA_CH_MISC_ALCHEMIE_3_CONDITION;
    INFORMATION = DIA_CH_MISC_ALCHEMIE_3_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Mistrz";
}

func int DIA_CH_MISC_ALCHEMIE_3_CONDITION() {
    if (((ALCHEMYSTART) == (TRUE)) && ((NPC_GETTALENTSKILL(HERO, NPC_TALENT_ALCHEMY)) == (2))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MISC_ALCHEMIE_3_INFO() {
    B_TEACHPLAYERTALENTALCHEMY(SELF, OTHER, 3);
}

var int ANIMALSTART;
instance DIA_CH_MISC_ANIMAL_START(C_INFO) {
    NPC = 93028;
    NR = 8;
    CONDITION = DIA_CH_MISC_ANIMAL_START_CONDITION;
    INFORMATION = DIA_CH_MISC_ANIMAL_START_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Trofea";
}

func int DIA_CH_MISC_ANIMAL_START_CONDITION() {
    if (((((MISCSTART) == (TRUE)) && ((ALCHEMYSTART) == (FALSE))) && ((ANIMALSTART) == (FALSE))) && ((PALADINSTART) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MISC_ANIMAL_START_INFO() {
    ANIMALSTART = TRUE;
}

instance DIA_CH_MISC_ANIMAL_STOPPER(C_INFO) {
    NPC = 93028;
    NR = 99;
    CONDITION = DIA_CH_MISC_ANIMAL_STOPPER_CONDITION;
    INFORMATION = DIA_CH_MISC_ANIMAL_STOPPER_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_BACK;
}

func int DIA_CH_MISC_ANIMAL_STOPPER_CONDITION() {
    if ((ANIMALSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MISC_ANIMAL_STOPPER_INFO() {
    ANIMALSTART = FALSE;
}

instance DIA_CH_MISC_ANIMAL_ALLG(C_INFO) {
    NPC = 93028;
    NR = 5;
    CONDITION = DIA_CH_MISC_ANIMAL_ALLG_CONDITION;
    INFORMATION = DIA_CH_MISC_ANIMAL_ALLG_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Zêby, skóry (gadów te¿), pazury, serca, nasiona";
}

func int DIA_CH_MISC_ANIMAL_ALLG_CONDITION() {
    if ((ANIMALSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MISC_ANIMAL_ALLG_INFO() {
    INFO_CLEARCHOICES(93290);
    INFO_ADDCHOICE(93290, DIALOG_BACK, 93301);
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[0]) == (FALSE)) {
        INFO_ADDCHOICE(93290, B_BUILDLEARNSTRING("Zdobywanie zêbów", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_TEETH)), 93293);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[1]) == (FALSE)) {
        INFO_ADDCHOICE(93290, B_BUILDLEARNSTRING("Zdobywanie pazurów", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_CLAWS)), 93294);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[2]) == (FALSE)) {
        INFO_ADDCHOICE(93290, B_BUILDLEARNSTRING("Skórowanie", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_FUR)), 93295);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[13]) == (FALSE)) {
        INFO_ADDCHOICE(93290, B_BUILDLEARNSTRING("Skórowanie jaszczurów", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_REPTILESKIN)), 93298);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[3]) == (FALSE)) {
        INFO_ADDCHOICE(93290, B_BUILDLEARNSTRING("Zdobywanie serc", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_HEART)), 93296);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[14]) == (FALSE)) {
        INFO_ADDCHOICE(93290, B_BUILDLEARNSTRING("Zdobywanie nasion", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_SEEDS)), 93297);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[15]) == (FALSE)) {
        INFO_ADDCHOICE(93290, B_BUILDLEARNSTRING("Zdobywanie t³uszczy", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_FATS)), 93299);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[17]) == (FALSE)) {
        INFO_ADDCHOICE(93290, B_BUILDLEARNSTRING("Zdobywanie skorup b³otniaków", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_SHELLS)), 93300);
    };
}

func void CH_TRAINING_TROPHYS_TEETH() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_TEETH);
}

func void CH_TRAINING_TROPHYS_CLAWS() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_CLAWS);
}

func void CH_TRAINING_TROPHYS_FUR() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_FUR);
}

func void CH_TRAINING_TROPHYS_HEART() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_HEART);
}

func void CH_TRAINING_TROPHYS_SEEDS() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_SEEDS);
}

func void CH_TRAINING_TROPHYS_REPTILESKIN() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_REPTILESKIN);
}

func void CH_TRAINING_TROPHYS_FATS() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_FATS);
}

func void CH_TRAINING_TROPHYS_SHELLS() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_SHELLS);
}

func void DIA_CH_MISC_ANIMAL_ALLG_BACK() {
    INFO_CLEARCHOICES(93290);
}

instance DIA_CH_MISC_ANIMAL_SPEZIELL(C_INFO) {
    NPC = 93028;
    NR = 6;
    CONDITION = DIA_CH_MISC_ANIMAL_SPEZIELL_CONDITION;
    INFORMATION = DIA_CH_MISC_ANIMAL_SPEZIELL_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Skrzyd³a, ¿¹d³o, szczypce, p³ytki";
}

func int DIA_CH_MISC_ANIMAL_SPEZIELL_CONDITION() {
    if ((ANIMALSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MISC_ANIMAL_SPEZIELL_INFO() {
    INFO_CLEARCHOICES(93302);
    INFO_ADDCHOICE(93302, DIALOG_BACK, 93305);
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[7]) == (FALSE)) {
        INFO_ADDCHOICE(93302, B_BUILDLEARNSTRING("Blutfliegenstachel", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_BFSTING)), 93306);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[6]) == (FALSE)) {
        INFO_ADDCHOICE(93302, B_BUILDLEARNSTRING("Blutfliegenflügel", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_BFWING)), 93307);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[9]) == (FALSE)) {
        INFO_ADDCHOICE(93302, B_BUILDLEARNSTRING("Crawlerplatten nehmen", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_CRAWLERPLATE)), 93308);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[8]) == (FALSE)) {
        INFO_ADDCHOICE(93302, B_BUILDLEARNSTRING("Zangen rausschneiden", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_MANDIBLES)), 93309);
    };
}

func void DIA_CH_MISC_ANIMAL_SPEZIELL_BACK() {
    INFO_CLEARCHOICES(93302);
}

func void CH_TRAINING_TROPHYS_BFSTING() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_BFWING);
}

func void CH_TRAINING_TROPHYS_BFWING() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_BFSTING);
}

func void CH_TRAINING_TROPHYS_CRAWLERPLATE() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_MANDIBLES);
}

func void CH_TRAINING_TROPHYS_MANDIBLES() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_CRAWLERPLATE);
}

instance DIA_CH_MISC_ANIMAL_OTHER(C_INFO) {
    NPC = 93028;
    NR = 7;
    CONDITION = DIA_CH_MISC_ANIMAL_OTHER_CONDITION;
    INFORMATION = DIA_CH_MISC_ANIMAL_OTHER_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Blut, Schuppen, Hörner, Zunge";
}

func int DIA_CH_MISC_ANIMAL_OTHER_CONDITION() {
    if ((ANIMALSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MISC_ANIMAL_OTHER_INFO() {
    INFO_CLEARCHOICES(93310);
    INFO_ADDCHOICE(93310, DIALOG_BACK, 93313);
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[4]) == (FALSE)) {
        INFO_ADDCHOICE(93310, B_BUILDLEARNSTRING("Horn des Schattenläufers", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_SHADOWHORN)), 93314);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[5]) == (FALSE)) {
        INFO_ADDCHOICE(93310, B_BUILDLEARNSTRING("Feuerzunge", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_FIRETONGUE)), 93315);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[10]) == (FALSE)) {
        INFO_ADDCHOICE(93310, B_BUILDLEARNSTRING("Drachensnapperhorn", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_DRGSNAPPERHORN)), 93316);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[11]) == (FALSE)) {
        INFO_ADDCHOICE(93310, B_BUILDLEARNSTRING("Drachenschuppen ziehen", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_DRAGONSCALE)), 93317);
    };
    if ((PLAYER_TALENT_TAKEANIMALTROPHY[12]) == (FALSE)) {
        INFO_ADDCHOICE(93310, B_BUILDLEARNSTRING("Drachenblut zapfen", B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_TAKEANIMALTROPHY, TROPHY_DRAGONBLOOD)), 93318);
    };
}

func void DIA_CH_MISC_ANIMAL_OTHER_BACK() {
    INFO_CLEARCHOICES(93310);
}

func void CH_TRAINING_TROPHYS_SHADOWHORN() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_SHADOWHORN);
}

func void CH_TRAINING_TROPHYS_FIRETONGUE() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_FIRETONGUE);
}

func void CH_TRAINING_TROPHYS_DRGSNAPPERHORN() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_DRGSNAPPERHORN);
}

func void CH_TRAINING_TROPHYS_DRAGONSCALE() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_DRAGONSCALE);
}

func void CH_TRAINING_TROPHYS_DRAGONBLOOD() {
    B_TEACHPLAYERTALENTTAKEANIMALTROPHY(SELF, OTHER, TROPHY_DRAGONBLOOD);
}

var int PALADINSTART;
instance DIA_CH_MISC_PALADINSTART(C_INFO) {
    NPC = 93028;
    NR = 7;
    CONDITION = DIA_CH_MISC_PALADINSTART_CONDITION;
    INFORMATION = DIA_CH_MISC_PALADINSTART_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Paladin Runen";
}

func int DIA_CH_MISC_PALADINSTART_CONDITION() {
    if (((((MISCSTART) == (TRUE)) && ((ALCHEMYSTART) == (FALSE))) && ((ANIMALSTART) == (FALSE))) && ((PALADINSTART) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MISC_PALADINSTART_INFO() {
    PALADINSTART = TRUE;
}

instance DIA_CH_MISC_PALADINSTOPPER(C_INFO) {
    NPC = 93028;
    NR = 99;
    CONDITION = DIA_CH_MISC_PALADINSTOPPER_CONDITION;
    INFORMATION = DIA_CH_MISC_PALADINSTOPPER_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_BACK;
}

func int DIA_CH_MISC_PALADINSTOPPER_CONDITION() {
    if ((PALADINSTART) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_CH_MISC_PALADINSTOPPER_INFO() {
    PALADINSTART = FALSE;
}

