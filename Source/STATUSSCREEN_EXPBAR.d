var int STATUSSCREEN_EXPBAR;
var int STATUSSCREEN_EXPBAR_EXP;
var int STATUSSCREEN_EXPBAR_NEXT;
instance STATUSSCREENEXPBAR(BAR) {
    BARTOP = 1;
    BARLEFT = 2;
    WIDTH = 175;
    HEIGHT = 22;
    BACKTEX = "BAR_EXPSTATUS_BACK.tga";
    BARTEX = "BAR_EXPSTATUS.tga";
    VALUE = 50;
    VALUEMAX = 100;
}

func string GETPLAYERGUILDTEXT() {
    if ((SQ504_JOINEDWATERCIRCLE) == (TRUE)) {
        return NAME_GUILD_WATERCIRCLE;
    };
    if ((HERO.GUILD) == (GIL_MIL)) {
        if (((MARVIN_MILITIASPECIALIZATION) == (0)) && ((Q205_WEGOTARMOR) == (TRUE))) {
            return NAME_GUILD_MILITIA_VETERAN;
        };
        return MEM_READSTRINGARRAY(_@S(TXT_MILITIA_SPECIALIZATIONS[0]), MARVIN_MILITIASPECIALIZATION);
    };
    if ((HERO.GUILD) == (GIL_SLD)) {
        if (((MARVIN_ARAXOSSPECIALIZATION) == (0)) && (NPC_KNOWSINFO(HERO, 71240))) {
            return NAME_GUILD_ARAXOS_VETERAN;
        };
        return MEM_READSTRINGARRAY(_@S(TXT_ARAXOS_SPECIALIZATIONS[0]), MARVIN_ARAXOSSPECIALIZATION);
    };
    return "";
}

func void STATUSSCREENSHOW_HOOK() {
    var string PLAYERGUILD;
    var string NEXT_PERCENT;
    var string REAL_NEXT;
    var int REAL_HP;
    var string REAL_EXP;
    var int LASTLEVELEXPNEXT;
    LASTLEVELEXPNEXT = (HERO.EXP_NEXT) - (((HERO.LEVEL) + (1)) * (500));
    STATUSSCREEN_EXPBAR_EXP = (HERO.EXP) - (LASTLEVELEXPNEXT);
    STATUSSCREEN_EXPBAR_NEXT = (HERO.EXP_NEXT) - (LASTLEVELEXPNEXT);
    REAL_EXP = I2S(STATUSSCREEN_EXPBAR_EXP);
    REAL_NEXT = I2S(STATUSSCREEN_EXPBAR_NEXT);
    NEXT_PERCENT = CS3(" (", I2S(ROUNDF(MULF(DIVF(MKF(STATUSSCREEN_EXPBAR_EXP), MKF(STATUSSCREEN_EXPBAR_NEXT)), MKF(100)))), "%)");
    REAL_HP = ((40) + ((HERO.LEVEL) * (HP_PER_LEVEL))) - (BELIARSHRINECOST);
    if ((HERO.AIVAR[81]) != (HERO.ATTRIBUTE[4])) {
        UPDATE_MENU_ITEM("MENU_ITEM_ATTRIBUTE_1_BASE", I2S(HERO.AIVAR[81]));
    };
    UPDATE_MENU_ITEM("MENU_ITEM_ATTRIBUTE_1_BASE", "");
    if ((HERO.AIVAR[82]) != (HERO.ATTRIBUTE[5])) {
        UPDATE_MENU_ITEM("MENU_ITEM_ATTRIBUTE_2_BASE", I2S(HERO.AIVAR[82]));
    };
    UPDATE_MENU_ITEM("MENU_ITEM_ATTRIBUTE_2_BASE", "");
    if ((HERO.AIVAR[83]) != (HERO.ATTRIBUTE[3])) {
        UPDATE_MENU_ITEM("MENU_ITEM_ATTRIBUTE_3_BASE", I2S(HERO.AIVAR[83]));
    };
    UPDATE_MENU_ITEM("MENU_ITEM_ATTRIBUTE_3_BASE", "");
    if ((REAL_HP) != (HERO.ATTRIBUTE[1])) {
        UPDATE_MENU_ITEM("MENU_ITEM_ATTRIBUTE_4_BASE", I2S(REAL_HP));
    };
    UPDATE_MENU_ITEM("MENU_ITEM_ATTRIBUTE_4_BASE", "");
    if ((HERO.AIVAR[84]) != (HERO.HITCHANCE[1])) {
        UPDATE_MENU_ITEM("MENU_ITEM_TALENT_1_BASE", CS2(I2S(HERO.AIVAR[84]), "%"));
    };
    UPDATE_MENU_ITEM("MENU_ITEM_TALENT_1_BASE", "");
    if ((HERO.AIVAR[85]) != (HERO.HITCHANCE[2])) {
        UPDATE_MENU_ITEM("MENU_ITEM_TALENT_2_BASE", CS2(I2S(HERO.AIVAR[85]), "%"));
    };
    UPDATE_MENU_ITEM("MENU_ITEM_TALENT_3_BASE", "");
    if ((HERO.AIVAR[86]) != (HERO.HITCHANCE[3])) {
        UPDATE_MENU_ITEM("MENU_ITEM_TALENT_3_BASE", CS2(I2S(HERO.AIVAR[86]), "%"));
    };
    UPDATE_MENU_ITEM("MENU_ITEM_TALENT_3_BASE", "");
    if ((HERO.AIVAR[87]) != (HERO.HITCHANCE[4])) {
        UPDATE_MENU_ITEM("MENU_ITEM_TALENT_4_BASE", CS2(I2S(HERO.AIVAR[87]), "%"));
    };
    UPDATE_MENU_ITEM("MENU_ITEM_TALENT_4_BASE", "");
    UPDATE_MENU_ITEM("MENU_ITEM_TALENT_6_CHANCE", CS2(I2S(HERO_HACKCHANCE), "%"));
    UPDATE_MENU_ITEM("MENU_ITEM_LEVEL_BADGE", I2S(HERO.LEVEL));
    UPDATE_MENU_ITEM("MENU_ITEM_CHAPTER", I2S(KAPITEL));
    UPDATE_MENU_ITEM("MENU_ITEM_LEVEL_NEXT", CS4(REAL_EXP, " / ", REAL_NEXT, NEXT_PERCENT));
    UPDATE_MENU_ITEM("MENU_ITEM_ARMOR_EDGE", I2S(HERO.PROTECTION[2]));
    PLAYERGUILD = GETPLAYERGUILDTEXT();
    if ((HLP_STRCMP(PLAYERGUILD, "")) == (FALSE)) {
        UPDATE_MENU_ITEM("MENU_ITEM_PLAYERGUILD", PLAYERGUILD);
    };
    if ((RESERVED_VAR_INT_05) < (0)) {
        RESERVED_VAR_INT_05 = 0;
    };
    UPDATE_MENU_ITEM(RESERVED_CONST_STRING_26, I2S((RESERVED_VAR_INT_05) * (5)));
    FF_APPLYONCEEXT(21854, 15, 1);
}

func void STATUSSCREEN_CREATEEXPBAR() {
    var int SCALEF;
    STATUSSCREEN_EXPBAR = BAR_CREATE(21845);
    BAR_SETMAX(STATUSSCREEN_EXPBAR, STATUSSCREEN_EXPBAR_NEXT);
    BAR_SETVALUE(STATUSSCREEN_EXPBAR, STATUSSCREEN_EXPBAR_EXP);
    SCALEF = BAR_GETINTERFACESCALING();
    _BAR_MOVETO_INTERNAL(STATUSSCREEN_EXPBAR, PRINT_TOVIRTUAL(((PRINT_SCREEN[0]) / (2)) - (ROUNDF(MULF(MKF(128), SCALEF))), PS_X), PRINT_TOVIRTUAL(((PRINT_SCREEN[1]) / (2)) + (ROUNDF(MULF(MKF(210), SCALEF))), PS_Y));
}

func void STATUSSCREENCLOSE_HOOK() {
    BAR_DELETE(STATUSSCREEN_EXPBAR);
}

