const int SPL_COST_INFLATE = 10;
const int SPL_INFLATE_DAMAGE = 5;
const int SPL_TIME_INFLATE = 19;
instance SPELL_INFLATE(C_SPELL_PROTO) {
    C_SPELL_PROTO();
    TIME_PER_MANA = 0;
    TARGETCOLLECTALGO = TARGET_COLLECT_FOCUS;
}

func int SPELL_LOGIC_INFLATE(var int MANAINVESTED) {
    if (((NPC_GETACTIVESPELLISSCROLL(SELF)) && ((SELF.ATTRIBUTE[2]) >= (SPL_COST_SCROLL))) || ((SELF.ATTRIBUTE[2]) >= (SPL_COST_INFLATE))) {
        if (NPC_GETACTIVESPELLISSCROLL(SELF)) {
            SELF.ATTRIBUTE[2] = (SELF.ATTRIBUTE[2]) - (SPL_COST_SCROLL);
        } else {
            SELF.ATTRIBUTE[2] = (SELF.ATTRIBUTE[2]) - (SPL_COST_INFLATE);
        };
        if (((((((((!(C_BODYSTATECONTAINS(OTHER, BS_SWIM))) && (!(C_BODYSTATECONTAINS(OTHER, BS_DIVE)))) && (!(C_NPCISDOWN(OTHER)))) && ((OTHER.GUILD) < (GIL_SEPERATOR_HUM))) && ((OTHER.FLAGS) != (NPC_FLAG_IMMORTAL))) && ((NPC_GETDISTTONPC(SELF, OTHER)) <= (1000))) && ((OTHER.GUILD) != (GIL_KDF))) && ((OTHER.GUILD) != (GIL_DMT))) && ((OTHER.GUILD) != (GIL_PAL))) {
            NPC_CLEARAIQUEUE(OTHER);
            B_CLEARPERCEPTIONS(OTHER);
            AI_STARTSTATE(OTHER, 43834, 0, "");
        };
        return SPL_SENDCAST;
    };
    return SPL_SENDSTOP;
}

func void SPELL_CAST_INFLATE() {
    SELF.AIVAR[20] += 1;
}

