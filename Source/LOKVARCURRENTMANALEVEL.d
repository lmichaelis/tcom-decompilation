var int LOKVARCURRENTMANALEVEL;
var int LOKVAR_NOMORE;
instance DIA_LOKVAR_EXIT(C_INFO) {
    NPC = 57563;
    NR = 999;
    CONDITION = DIA_LOKVAR_EXIT_CONDITION;
    INFORMATION = DIA_LOKVAR_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_LOKVAR_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_LOKVAR_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_LOKVAR_HELLO(C_INFO) {
    NPC = 57563;
    NR = 1;
    CONDITION = DIA_LOKVAR_HELLO_CONDITION;
    INFORMATION = DIA_LOKVAR_HELLO_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Who are you?";
}

func int DIA_LOKVAR_HELLO_CONDITION() {
    return TRUE;
}

func void DIA_LOKVAR_HELLO_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_Hello_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_Hello_706_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_Hello_706_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_Hello_706_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_Hello_706_04");
}

instance DIA_LOKVAR_TRADE(C_INFO) {
    NPC = 57563;
    NR = 889;
    CONDITION = DIA_LOKVAR_TRADE_CONDITION;
    INFORMATION = DIA_LOKVAR_TRADE_INFO;
    PERMANENT = TRUE;
    TRADE = TRUE;
    DESCRIPTION = "Let's deal.";
}

func int DIA_LOKVAR_TRADE_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 88371)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_LOKVAR_TRADE_INFO() {
    B_SAY(OTHER, SELF, "$MARVIN_LetsTrade");
    TRADER_LOGENTRY_LOKVAR();
    B_GIVETRADEINV(SELF);
}

instance DIA_LOKVAR_PLANTS(C_INFO) {
    NPC = 57563;
    NR = 10;
    CONDITION = DIA_LOKVAR_PLANTS_CONDITION;
    INFORMATION = DIA_LOKVAR_PLANTS_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Are you familiar with herbs?";
}

func int DIA_LOKVAR_PLANTS_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 88371)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_LOKVAR_PLANTS_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_plants_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_plants_706_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_plants_706_02");
    if ((NPC_GETDISTTOWP(SELF, "PART12_LOKVARHOUSE_CHAIR01")) <= (500)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_plants_706_10");
    };
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_plants_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_plants_706_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_plants_706_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_plants_706_06");
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_plants_15_07");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_plants_706_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_plants_706_09");
}

instance DIA_LOKVAR_UCANSPELL(C_INFO) {
    NPC = 57563;
    NR = 10;
    CONDITION = DIA_LOKVAR_UCANSPELL_CONDITION;
    INFORMATION = DIA_LOKVAR_UCANSPELL_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Can you really do magic?";
}

func int DIA_LOKVAR_UCANSPELL_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 88371)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_LOKVAR_UCANSPELL_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_ucanspell_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_ucanspell_706_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_ucanspell_706_02");
    INFO_ADDCHOICE(88380, "Something makes me think you're just a charlatan.", 88383);
    INFO_ADDCHOICE(88380, "What exactly is magic?", 88384);
}

func void DIA_LOKVAR_UCANSPELL_CHARLATAN() {
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_ucanspell_charlatan_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_ucanspell_charlatan_706_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_ucanspell_charlatan_15_02");
    CREATEINVITEMS(SELF, 34610, 1);
    B_READYSPELL(SELF, SPL_ICECUBE, SPL_COST_ICECUBE);
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_ucanspell_charlatan_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_ucanspell_charlatan_706_04");
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_ucanspell_charlatan_15_05");
    AI_UNREADYSPELL(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_ucanspell_charlatan_706_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_ucanspell_charlatan_706_07");
    INFO_CLEARCHOICES(88380);
}

func void DIA_LOKVAR_UCANSPELL_MAGIC() {
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_ucanspell_magic_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_ucanspell_magic_706_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_ucanspell_magic_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_ucanspell_magic_706_03");
    INFO_CLEARCHOICES(88380);
}

instance DIA_LOKVAR_Q108_POTION(C_INFO) {
    NPC = 57563;
    NR = 1;
    CONDITION = DIA_LOKVAR_Q108_POTION_CONDITION;
    INFORMATION = DIA_LOKVAR_Q108_POTION_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I come for my brother's medicine.";
}

func int DIA_LOKVAR_Q108_POTION_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_Q108)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 87816))) && (NPC_KNOWSINFO(OTHER, 88371))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_LOKVAR_Q108_POTION_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_Q108_Potion_15_01");
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_Q108_Potion_706_02");
    AI_RESETFACEANI(SELF);
}

instance DIA_LOKVAR_Q108_KURT(C_INFO) {
    NPC = 57563;
    NR = 1;
    CONDITION = DIA_LOKVAR_Q108_KURT_CONDITION;
    INFORMATION = DIA_LOKVAR_Q108_KURT_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Kurt sent me, I hear you owe him a favor.";
}

func int DIA_LOKVAR_Q108_KURT_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q108)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 88385))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_LOKVAR_Q108_KURT_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_Q108_Kurt_15_01");
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_Q108_Kurt_706_02");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_Q108_Kurt_706_03");
}

instance DIA_LOKVAR_Q108_BROTHER(C_INFO) {
    NPC = 57563;
    NR = 1;
    CONDITION = DIA_LOKVAR_Q108_BROTHER_CONDITION;
    INFORMATION = DIA_LOKVAR_Q108_BROTHER_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "My brother was bitten by a bloodfly.";
}

func int DIA_LOKVAR_Q108_BROTHER_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q108)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 88388))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_LOKVAR_Q108_BROTHER_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_Q108_Brother_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_Q108_Brother_706_02");
    B_STANDUP();
    AI_PLAYANI(SELF, T_STAND_2_COUNTING);
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_Q108_Brother_706_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_Q108_Brother_706_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_Q108_Brother_706_05");
    AI_PLAYANI(SELF, T_COUNTING_2_STAND);
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_Q108_Brother_706_06");
    CREATEINVITEMS(SELF, 37005, 1);
    B_GIVEINVITEMS(SELF, OTHER, 37005, 1);
    AI_LOGENTRY(TOPIC_Q108, LOG_Q108_LOKVAR_LIST);
    INFO_CLEARCHOICES(88391);
    INFO_ADDCHOICE(88391, "Who is Riordian?", 88394);
}

func void DIA_LOKVAR_Q108_BROTHER_RIORDIAN() {
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_Q108_Brother_Riordian_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_Q108_Brother_Riordian_706_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_Q108_Brother_Riordian_706_03");
    AI_RESETFACEANI(OTHER);
    AI_LOGENTRY(TOPIC_Q108, LOG_Q108_LOKVAR_RIORDIAN);
    INFO_CLEARCHOICES(88391);
}

instance DIA_LOKVAR_Q108_PLANTS(C_INFO) {
    NPC = 57563;
    NR = 1;
    CONDITION = DIA_LOKVAR_Q108_PLANTS_CONDITION;
    INFORMATION = DIA_LOKVAR_Q108_PLANTS_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Here are the collected plants, they should still be fresh.";
}

func int DIA_LOKVAR_Q108_PLANTS_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q108)) == (LOG_RUNNING)) && (Q108_IGOTPLANTS(HERO))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_LOKVAR_Q108_PLANTS_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_Q108_Plants_15_01");
    NPC_REMOVEINVITEMS(SELF, 37008, 1);
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    NPC_REMOVEINVITEMS(SELF, 34280, 5);
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_Q108_Plants_706_02");
    NPC_REMOVEINVITEMS(SELF, 37653, 2);
    AI_STOPPROCESSINFOS(SELF);
    B_GIVEINVITEMS(OTHER, SELF, 37008, 1);
    AI_RESETFACEANI(SELF);
    B_GIVEINVITEMS(OTHER, SELF, 34280, 5);
    AI_LOGENTRY(TOPIC_Q108, LOG_Q108_LOKVAR_GOTPLANTS);
    B_GIVEINVITEMS(OTHER, SELF, 37653, 2);
    Q108_TELEPORTKURT();
}

instance DIA_LOKVAR_SQ121_WAKEUP(C_INFO) {
    NPC = 57563;
    NR = 1;
    CONDITION = DIA_LOKVAR_SQ121_WAKEUP_CONDITION;
    INFORMATION = DIA_LOKVAR_SQ121_WAKEUP_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_LOKVAR_SQ121_WAKEUP_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ121)) == (LOG_RUNNING)) && ((SQ121_LOKVARSLEEPINGTIME) == (2))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_LOKVAR_SQ121_WAKEUP_INFO() {
    AI_STARTFACEANI(SELF, S_WHAT, 1, -(1));
    AI_STARTFACEANI(OTHER, S_TIRED, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ121_WakeUp_03_01");
    INFO_CLEARCHOICES(88398);
    INFO_ADDCHOICE(88398, "I, uh...", 88402);
    INFO_ADDCHOICE(88398, "It's not like that...", 88403);
}

func void DIA_LOKVAR_SQ121_WAKEUP_NEXT() {
    SQ121_LOKVARSLEEPINGTIME = 3;
    AI_STARTFACEANI(SELF, "S_EYESCLOSED", 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ121_WakeUp_Next_03_01");
    NPC_EXCHANGEROUTINE(SELF, "SQ121_DEEPSLEEP");
    INFO_CLEARCHOICES(88398);
    AI_STOPPROCESSINFOS(SELF);
    AI_LOGENTRY(TOPIC_SQ121, LOG_SQ121_LOKVARSLEEPTIME_HIMSELF);
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
}

func void DIA_LOKVAR_SQ121_WAKEUP_I() {
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ121_WakeUp_I_15_01");
    DIA_LOKVAR_SQ121_WAKEUP_NEXT();
}

func void DIA_LOKVAR_SQ121_WAKEUP_NOTLIKE() {
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ121_WakeUp_NotLike_15_01");
    DIA_LOKVAR_SQ121_WAKEUP_NEXT();
}

instance DIA_LOKVAR_SQ105_START(C_INFO) {
    NPC = 57563;
    NR = 800;
    CONDITION = DIA_LOKVAR_SQ105_START_CONDITION;
    INFORMATION = DIA_LOKVAR_SQ105_START_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Could you teach me alchemy?";
}

func int DIA_LOKVAR_SQ105_START_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 88377)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

var int LOKVAR_SQ105_TAKEQUEST;
func void DIA_LOKVAR_SQ105_START_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ105_Start_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Start_706_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ105_Start_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Start_706_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ105_Start_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Start_706_05");
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ105_Start_15_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Start_706_07");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Start_706_08");
    INFO_CLEARCHOICES(88404);
    INFO_ADDCHOICE(88404, "Maybe another time.", 88408);
    INFO_ADDCHOICE(88404, "I'm ready.", 88409);
}

func void DIA_LOKVAR_SQ105_START_NO() {
    LOKVAR_SQ105_TAKEQUEST = TRUE;
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ105_Start_NO_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Start_NO_706_01");
    INFO_CLEARCHOICES(88404);
}

func void DIA_LOKVAR_SQ105_START_YES() {
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ105_Start_YES_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Start_YES_706_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Start_YES_706_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ105_Start_YES_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Start_YES_706_04");
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ105_Start_YES_15_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Start_YES_706_06");
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ105_Start_YES_15_07");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Start_YES_706_08");
    SQ105_LOKVARBROOMING = TRUE;
    CREATEINVITEMS(SELF, 34186, 1);
    B_GIVEINVITEMS(SELF, OTHER, 34186, 1);
    LOG_CREATETOPIC(TOPIC_SQ105, LOG_MISSION);
    LOG_SETSTATUS(_@(MIS_SQ105), TOPIC_SQ105, LOG_RUNNING);
    AI_LOGENTRY(TOPIC_SQ105, LOG_SQ105_START);
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_LOKVAR_SQ105_TAKEQUEST(C_INFO) {
    NPC = 57563;
    NR = 2;
    CONDITION = DIA_LOKVAR_SQ105_TAKEQUEST_CONDITION;
    INFORMATION = DIA_LOKVAR_SQ105_TAKEQUEST_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I'm ready to learn.";
}

func int DIA_LOKVAR_SQ105_TAKEQUEST_CONDITION() {
    if (((LOKVAR_SQ105_TAKEQUEST) == (TRUE)) && (NPC_KNOWSINFO(OTHER, 88404))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_LOKVAR_SQ105_TAKEQUEST_INFO() {
    DIA_LOKVAR_SQ105_START_YES();
}

instance DIA_LOKVAR_SQ105_AFTERSWEEP(C_INFO) {
    NPC = 57563;
    NR = 2;
    CONDITION = DIA_LOKVAR_SQ105_AFTERSWEEP_CONDITION;
    INFORMATION = DIA_LOKVAR_SQ105_AFTERSWEEP_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I did what you asked.";
}

func int DIA_LOKVAR_SQ105_AFTERSWEEP_CONDITION() {
    if ((((SQ105_LOKVARBROOMING) == (TRUE)) && ((SQ105_LOKVARBROOMINGFIRSTPART) == (TRUE))) && ((SQ105_LOKVARBROOMINGSECONDPART) == (TRUE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_LOKVAR_SQ105_AFTERSWEEP_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ105_Aftersweep_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Aftersweep_706_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Aftersweep_706_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ105_Aftersweep_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Aftersweep_706_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Aftersweep_706_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Aftersweep_706_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Aftersweep_706_07");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Aftersweep_706_08");
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ105_Aftersweep_15_09");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Aftersweep_706_10");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Aftersweep_706_11");
    AI_LOGENTRY(TOPIC_SQ105, LOG_SQ105_SECONDTEST);
    if (NPC_KNOWSINFO(OTHER, 88140)) {
        AI_LOGENTRY(TOPIC_SQ105, LOG_SQ105_MARTHAALREADYCAUGHT);
    };
}

instance DIA_LOKVAR_SQ105_SECOND(C_INFO) {
    NPC = 57563;
    NR = 2;
    CONDITION = DIA_LOKVAR_SQ105_SECOND_CONDITION;
    INFORMATION = DIA_LOKVAR_SQ105_SECOND_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Is that enough?";
}

func int DIA_LOKVAR_SQ105_SECOND_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 88413)) && (((NPC_HASITEMS(HERO, 37057)) >= (1)) || ((NPC_HASITEMS(HERO, 37055)) >= (1)))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_LOKVAR_SQ105_SECOND_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ105_Second_15_00");
    B_STANDUP();
    if ((NPC_HASITEMS(OTHER, 37057)) >= (1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Second_706_01");
        AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Second_706_02");
        B_GIVEINVITEMS(OTHER, SELF, 37057, 1);
        B_USEITEM(SELF, 37057);
        AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Second_706_03");
        if (NPC_KNOWSINFO(OTHER, 88140)) {
            AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ105_Second_15_10");
            if ((SILBACHREPUTATION) < (3)) {
                AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Second_706_11");
                AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Second_706_12");
                AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Second_706_13");
                AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Second_706_14");
            };
        };
        CREATEINVITEMS(SELF, 37057, 1);
        B_USEITEM(SELF, 37057);
        AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Second_706_05");
    };
    if ((NPC_HASITEMS(OTHER, 37055)) >= (1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Second_706_06");
        if (NPC_KNOWSINFO(OTHER, 88140)) {
            AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ105_Second_15_07");
            AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ105_Second_15_04");
        };
        AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Second_706_08");
        B_GIVEINVITEMS(OTHER, SELF, 37055, 1);
        B_USEITEM(SELF, 37055);
        AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Second_706_09");
    };
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ105_Second_15_15");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Second_706_16");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Second_706_17");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Second_706_18");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Second_706_19");
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ105_Second_15_20");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Second_706_21");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Second_706_22");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Second_706_23");
    CREATEINVITEMS(SELF, 36878, 1);
    B_GIVEINVITEMS(SELF, OTHER, 36878, 1);
    INFO_CLEARCHOICES(88416);
    INFO_ADDCHOICE(88416, "Why don't you tell the sentries about them?", 88419);
}

func void DIA_LOKVAR_SQ105_SECOND_MONSTERS() {
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ105_Second_monsters_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Second_monsters_706_01");
    INFO_ADDCHOICE(88416, "Okay, well... I'll see what I can do.", 88420);
    INFO_ADDCHOICE(88416, "What should I use to kill them?", 88421);
}

func void DIA_LOKVAR_SQ105_SECOND_MONSTERS_OK() {
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ105_Second_monsters_ok_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Second_monsters_ok_706_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Second_monsters_ok_706_02");
    AI_LOGENTRY(TOPIC_SQ105, LOG_SQ105_LASTTEST);
    AI_STOPPROCESSINFOS(SELF);
}

func void DIA_LOKVAR_SQ105_SECOND_MONSTERS_WEAPON() {
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ105_Second_monsters_weapon_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Second_monsters_weapon_706_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ105_Second_monsters_weapon_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Second_monsters_weapon_706_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Second_monsters_weapon_706_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_Second_monsters_weapon_706_05");
    AI_LOGENTRY(TOPIC_SQ105, LOG_SQ105_LASTTEST);
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_LOKVAR_SQ105_ALLDONE(C_INFO) {
    NPC = 57563;
    NR = 2;
    CONDITION = DIA_LOKVAR_SQ105_ALLDONE_CONDITION;
    INFORMATION = DIA_LOKVAR_SQ105_ALLDONE_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_LOKVAR_SQ105_ALLDONE_CONDITION() {
    if (((((NPC_KNOWSINFO(OTHER, 88416)) && (NPC_ISDEAD(MEATBUG_BRUTUS1))) && (NPC_ISDEAD(MEATBUG_BRUTUS2))) && (NPC_ISDEAD(MEATBUG_BRUTUS3))) && (NPC_ISDEAD(MEATBUG_BRUTUS4))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_LOKVAR_SQ105_ALLDONE_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_AllDone_706_00");
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ105_AllDone_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_AllDone_706_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_AllDone_706_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ105_AllDone_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_AllDone_706_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_AllDone_706_06");
    CREATEINVITEMS(SELF, 40988, 1);
    B_GIVEINVITEMS(SELF, OTHER, 40988, 1);
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ105_AllDone_15_07");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_AllDone_706_08");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_AllDone_706_09");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ105_AllDone_706_10");
    LOG_CREATETOPIC(TOPIC_SQ105, LOG_MISSION);
    LOG_SETSTATUS(_@(MIS_SQ105), TOPIC_SQ105, LOG_SUCCESS);
    B_GIVEPLAYERXP(XP_SQ105_FINISH);
    GIVEREPUTATION_SILBACH();
    AI_LOGENTRY(TOPIC_SQ105, LOG_SQ105_END);
}

instance DIA_LOKVAR_SQ118_GRAVE(C_INFO) {
    NPC = 57563;
    NR = 3;
    CONDITION = DIA_LOKVAR_SQ118_GRAVE_CONDITION;
    INFORMATION = DIA_LOKVAR_SQ118_GRAVE_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Ezekiel would like to bury his daughter in the local cemetery.";
}

func int DIA_LOKVAR_SQ118_GRAVE_CONDITION() {
    if ((LOG_GETSTATUS(MIS_SQ118)) == (LOG_RUNNING)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_LOKVAR_SQ118_GRAVE_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ118_Grave_15_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ118_Grave_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ118_Grave_706_03");
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ118_Grave_706_04");
    AI_RESETFACEANI(SELF);
    AI_LOGENTRY(TOPIC_SQ118, LOG_SQ118_LOKVAR_TASKS);
}

instance DIA_LOKVAR_SQ118_ABOUTFLORA(C_INFO) {
    NPC = 57563;
    NR = 3;
    CONDITION = DIA_LOKVAR_SQ118_ABOUTFLORA_CONDITION;
    INFORMATION = DIA_LOKVAR_SQ118_ABOUTFLORA_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "About Flora's grave...";
}

func int DIA_LOKVAR_SQ118_ABOUTFLORA_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ118)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 88425))) {
        if (((SQ118_LOKVAR_CLEANED) == (0)) || ((SQ118_LOKVAR_PAYED) == (0))) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

var int LOKVAR_SQ118_ABOUTFLORA_CONVINCE;
func void DIA_LOKVAR_SQ118_ABOUTFLORA_CHOICES() {
    INFO_CLEARCHOICES(88428);
    INFO_ADDCHOICE(88428, DIALOG_BACK, 88432);
    if ((LOKVAR_SQ118_ABOUTFLORA_CONVINCE) == (0)) {
        INFO_ADDCHOICE(88428, "How do I convince the villagers?", 88441);
    };
    if ((SQ118_COUNTWEED) >= (12)) {
        if ((SQ118_LOKVAR_CLEANED) == (0)) {
            INFO_ADDCHOICE(88428, "I pulled all the weeds.", 88442);
        };
    };
    if ((SQ118_LOKVAR_PAYED) == (0)) {
        INFO_ADDCHOICE(88428, "How much do you want for a cemetery grave?", 88437);
    };
}

func void DIA_LOKVAR_SQ118_ABOUTFLORA_BACK() {
    INFO_CLEARCHOICES(88428);
}

func void DIA_LOKVAR_SQ118_ABOUTFLORA_END() {
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ118_AboutFlora_End_706_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ118_AboutFlora_End_706_02");
    AI_LOGENTRY(TOPIC_SQ118, LOG_SQ118_LOKVAR_ALLTASKS);
    INFO_CLEARCHOICES(88428);
    AI_STOPPROCESSINFOS(SELF);
}

func void DIA_LOKVAR_SQ118_ABOUTFLORA_CHECKTASKS() {
    if (((SQ118_LOKVAR_PAYED) == (1)) && ((SQ118_LOKVAR_CLEANED) == (1))) {
        DIA_LOKVAR_SQ118_ABOUTFLORA_END();
    };
    DIA_LOKVAR_SQ118_ABOUTFLORA_CHOICES();
}

func void DIA_LOKVAR_SQ118_ABOUTFLORA_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ118_AboutFlora_15_01");
    DIA_LOKVAR_SQ118_ABOUTFLORA_CHECKTASKS();
}

var int LOKVAR_SQ118_PAYMENT;
func void DIA_LOKVAR_SQ118_ABOUTFLORA_GOLD() {
    if ((SQ118_MARVINKNOWABOUTPAYMENT) == (0)) {
        SQ118_MARVINKNOWABOUTPAYMENT = 1;
    };
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ118_AboutFlora_Gold_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ118_AboutFlora_Gold_706_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ118_AboutFlora_Gold_706_03");
    B_STANDUP();
    AI_PLAYANI(SELF, T_STAND_2_COUNTING);
    if (((LOG_GETSTATUS(MIS_SQ105)) == (LOG_SUCCESS)) || ((SILBACHREPUTATION) >= (3))) {
        LOKVAR_SQ118_PAYMENT = 1;
        if ((LOG_GETSTATUS(MIS_SQ105)) == (LOG_SUCCESS)) {
            AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ118_AboutFlora_Gold_706_04");
        };
        AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ118_AboutFlora_Gold_706_05");
    };
    LOKVAR_SQ118_PAYMENT = 2;
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ118_AboutFlora_Gold_706_06");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ118_AboutFlora_Gold_706_07");
    AI_PLAYANI(SELF, T_COUNTING_2_STAND);
    INFO_CLEARCHOICES(88428);
    INFO_ADDCHOICE(88428, "I'll think about it some more.", 88440);
    if ((LOKVAR_SQ118_PAYMENT) == (1)) {
        INFO_ADDCHOICE(88428, DIALOG_PAY50G, 88439);
    };
    INFO_ADDCHOICE(88428, DIALOG_PAY100G, 88439);
}

func void DIA_LOKVAR_SQ118_ABOUTFLORA_GOLD_PAY_AFTER() {
    SQ118_LOKVAR_PAYED = 1;
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ118_AboutFlora_Pay_706_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ118_AboutFlora_Pay_706_02");
    AI_LOGENTRY(TOPIC_SQ118, LOG_SQ118_LOKVAR_GOLD);
    DIA_LOKVAR_SQ118_ABOUTFLORA_CHECKTASKS();
}

func void DIA_LOKVAR_SQ118_ABOUTFLORA_GOLD_PAY() {
    if ((LOKVAR_SQ118_PAYMENT) == (1)) {
        if ((NPC_HASITEMS(OTHER, 34203)) >= (SQ118_LOKVAR_PAYMENT_V1)) {
            NPC_REMOVEINVITEMS(SELF, 34203, SQ118_LOKVAR_PAYMENT_V1);
            DIA_LOKVAR_SQ118_ABOUTFLORA_GOLD_PAY_AFTER();
        } else {
            B_SAY(SELF, OTHER, "$NOGOLD");
            INFO_CLEARCHOICES(88428);
        };
    };
    if ((NPC_HASITEMS(OTHER, 34203)) >= (SQ118_LOKVAR_PAYMENT_V2)) {
        NPC_REMOVEINVITEMS(SELF, 34203, SQ118_LOKVAR_PAYMENT_V2);
        DIA_LOKVAR_SQ118_ABOUTFLORA_GOLD_PAY_AFTER();
    };
    B_SAY(SELF, OTHER, "$NOGOLD");
    INFO_CLEARCHOICES(88428);
}

func void DIA_LOKVAR_SQ118_ABOUTFLORA_GOLD_THINK() {
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ118_AboutFlora_Think_15_01");
    DIA_LOKVAR_SQ118_ABOUTFLORA_CHECKTASKS();
}

func void DIA_LOKVAR_SQ118_ABOUTFLORA_CONVINCE() {
    LOKVAR_SQ118_ABOUTFLORA_CONVINCE = 1;
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ118_AboutFlora_Convince_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ118_AboutFlora_Convince_706_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ118_AboutFlora_Convince_706_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ118_AboutFlora_Convince_706_04");
    AI_LOGENTRY(TOPIC_SQ118, LOG_SQ118_LOKVAR_WORK);
    SQ118_SPAWNWEED();
    DIA_LOKVAR_SQ118_ABOUTFLORA_CHECKTASKS();
}

func void DIA_LOKVAR_SQ118_ABOUTFLORA_WEEDS() {
    SQ118_LOKVAR_CLEANED = 1;
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_SQ118_AboutFlora_Weeds_15_01");
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ118_AboutFlora_Weeds_706_02");
    AI_LOGENTRY(TOPIC_SQ118, LOG_SQ118_LOKVAR_WORKDONE);
    DIA_LOKVAR_SQ118_ABOUTFLORA_CHECKTASKS();
}

instance DIA_LOKVAR_WHEREISJORN(C_INFO) {
    NPC = 57563;
    NR = 1;
    CONDITION = DIA_LOKVAR_WHEREISJORN_CONDITION;
    INFORMATION = DIA_LOKVAR_WHEREISJORN_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Do you know anything about my brother's disappearance?";
}

func int DIA_LOKVAR_WHEREISJORN_CONDITION() {
    if (((NPC_KNOWSINFO(OTHER, 87898)) && ((LOG_GETSTATUS(MIS_GQ001)) == (LOG_RUNNING))) && ((NPC_KNOWSINFO(OTHER, 87935)) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_LOKVAR_WHEREISJORN_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_WhereIsJorn_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_WhereIsJorn_706_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_WhereIsJorn_706_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_WhereIsJorn_706_04");
    INFO_CLEARCHOICES(88443);
    INFO_ADDCHOICE(88443, "I thought you knew something more about this.", 88446);
    INFO_ADDCHOICE(88443, "Thank you for your prayers.", 88447);
}

func void DIA_LOKVAR_WHEREISJORN_MORE() {
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_WhereIsJorn_More_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_WhereIsJorn_More_706_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_WhereIsJorn_More_706_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_WhereIsJorn_More_706_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_WhereIsJorn_More_706_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_WhereIsJorn_More_706_06");
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_WhereIsJorn_More_15_07");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_WhereIsJorn_More_706_08");
    INFO_CLEARCHOICES(88443);
    AI_STOPPROCESSINFOS(SELF);
}

func void DIA_LOKVAR_WHEREISJORN_THANKYOU() {
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_WhereIsJorn_ThankYou_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_WhereIsJorn_More_706_04");
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_WhereIsJorn_ThankYou_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_WhereIsJorn_ThankYou_706_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_WhereIsJorn_ThankYou_706_04");
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_WhereIsJorn_ThankYou_15_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_WhereIsJorn_ThankYou_706_06");
    INFO_CLEARCHOICES(88443);
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_LOKVAR_SQ416_GOODJOB(C_INFO) {
    NPC = 57563;
    NR = 1;
    CONDITION = DIA_LOKVAR_SQ416_GOODJOB_CONDITION;
    INFORMATION = DIA_LOKVAR_SQ416_GOODJOB_INFO;
    PERMANENT = TRUE;
    IMPORTANT = TRUE;
}

func int DIA_LOKVAR_SQ416_GOODJOB_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ416)) == (LOG_SUCCESS)) && (NPC_ISINSTATE(SELF, 61599))) {
        if ((SQ416_RAMSEYPARTY) != (2)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_LOKVAR_SQ416_GOODJOB_INFO() {
    var int SQ416_AMBIENT_LOKVAR;
    if ((SQ416_AMBIENT_LOKVAR) == (FALSE)) {
        SQ416_AMBIENT_LOKVAR = TRUE;
        B_GIVEPLAYERXP(XP_SQ416_AMBIENT);
    };
    AI_STARTFACEANI(SELF, S_SAD, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_SQ416_GoodJob_706_01");
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_LOKVAR_TEACH_MANA(C_INFO) {
    NPC = 57563;
    NR = 99;
    CONDITION = DIA_LOKVAR_TEACH_MANA_CONDITION;
    INFORMATION = DIA_LOKVAR_TEACH_MANA_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Will you increase my magic power?";
}

func int DIA_LOKVAR_TEACH_MANA_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 88422)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_LOKVAR_TEACH_MANA_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_TEACH_MANA_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_TEACH_MANA_706_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_TEACH_MANA_706_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_TEACH_MANA_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_TEACH_MANA_706_05");
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_TEACH_MANA_15_06");
    LOG_CREATETOPIC(TOPIC_SILBACHTEACHER, LOG_NOTE);
    AI_LOGENTRY(TOPIC_SILBACHTEACHER, LOG_SILBACHTEACHER_LOKVAR);
}

var string LOKVAR_PRINTS;
instance DIA_LOKVAR_TEACH(C_INFO) {
    NPC = 57563;
    NR = 99;
    CONDITION = DIA_LOKVAR_TEACH_CONDITION;
    INFORMATION = DIA_LOKVAR_TEACH_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Increase my magic power.";
}

func int DIA_LOKVAR_TEACH_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 88452)) && ((LOKVAR_NOMORE) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_LOKVAR_TEACH_CHOICES() {
    var int LOKVAR_GOLDCOST;
    LOKVAR_GOLDCOST = 15;
    LOKVARCURRENTMANALEVEL = OTHER.AIVAR[83];
    INFO_CLEARCHOICES(88456);
    INFO_ADDCHOICE(88456, DIALOG_BACK, 88461);
    INFO_ADDCHOICE(88456, B_BUILDLEARNSTRING2(PRINT_LEARNMANA1, B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 1), LOKVAR_GOLDCOST), 88462);
    INFO_ADDCHOICE(88456, B_BUILDLEARNSTRING2(PRINT_LEARNMANA5, B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_MANA_MAX, 5), (LOKVAR_GOLDCOST) * (5)), 88463);
}

func void DIA_LOKVAR_TEACH_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_TEACH_15_00");
    if ((OTHER.AIVAR[83]) < (30)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_TEACH_706_01");
        DIA_LOKVAR_TEACH_CHOICES();
    };
    if ((OTHER.AIVAR[83]) >= (30)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_TEACH_706_02");
        LOKVAR_NOMORE = TRUE;
    };
}

func void DIA_LOKVAR_TEACH_BACK() {
    INFO_CLEARCHOICES(88456);
}

func void DIA_LOKVAR_TEACH1() {
    if ((NPC_HASITEMS(OTHER, 34203)) >= (LOKVAR_PAYMENT1)) {
        if ((LOKVARCURRENTMANALEVEL) < (OTHER.AIVAR[83])) {
            SND_PLAY(GELDBEUTEL);
            B_GIVEINVITEMS(OTHER, SELF, 34203, LOKVAR_PAYMENT1);
            NPC_REMOVEINVITEMS(SELF, 34203, LOKVAR_PAYMENT1);
        };
        B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_MANA_MAX, 1, 30);
        DIA_LOKVAR_TEACH_CHOICES();
    };
    if ((NPC_HASITEMS(OTHER, 34203)) < (LOKVAR_PAYMENT1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_Teach1_706_01");
        LOKVAR_PRINTS = CONCATSTRINGS(PRINT_RGOLD, INTTOSTRING(LOKVAR_PAYMENT1));
        PRINTSCREEN(LOKVAR_PRINTS, -(1), -(1), FONT_SCREEN, 2);
        DIA_LOKVAR_TEACH_CHOICES();
    };
}

func void DIA_LOKVAR_TEACH5() {
    if ((NPC_HASITEMS(OTHER, 34203)) >= (LOKVAR_PAYMENT5)) {
        if ((LOKVARCURRENTMANALEVEL) < (OTHER.AIVAR[83])) {
            SND_PLAY(GELDBEUTEL);
            B_GIVEINVITEMS(OTHER, SELF, 34203, LOKVAR_PAYMENT5);
            NPC_REMOVEINVITEMS(SELF, 34203, LOKVAR_PAYMENT5);
        };
        B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_MANA_MAX, 5, 30);
        DIA_LOKVAR_TEACH_CHOICES();
    };
    if ((NPC_HASITEMS(OTHER, 34203)) < (LOKVAR_PAYMENT5)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_Teach5_706_01");
        LOKVAR_PRINTS = CONCATSTRINGS(PRINT_RGOLD, INTTOSTRING(LOKVAR_PAYMENT5));
        PRINTSCREEN(LOKVAR_PRINTS, -(1), -(1), FONT_SCREEN, 2);
        DIA_LOKVAR_TEACH_CHOICES();
    };
}

instance DIA_LOKVAR_TELEPORTRUNE(C_INFO) {
    NPC = 57563;
    NR = 90;
    CONDITION = DIA_LOKVAR_TELEPORTRUNE_CONDITION;
    INFORMATION = DIA_LOKVAR_TELEPORTRUNE_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Can you tell me anything about this stone?";
}

func int DIA_LOKVAR_TELEPORTRUNE_CONDITION() {
    if (((NPC_HASITEMS(OTHER, 38064)) >= (1)) && (NPC_KNOWSINFO(OTHER, 88371))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_LOKVAR_TELEPORTRUNE_INFO() {
    AI_STARTFACEANI(OTHER, S_THINK, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_TeleportRune_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_TeleportRune_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_TeleportRune_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_TeleportRune_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_TeleportRune_03_05");
    AI_RESETFACEANI(OTHER);
}

instance DIA_LOKVAR_NOUSE(C_INFO) {
    NPC = 57563;
    NR = 91;
    CONDITION = DIA_LOKVAR_NOUSE_CONDITION;
    INFORMATION = DIA_LOKVAR_NOUSE_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "So I won't have any use for it?";
}

func int DIA_LOKVAR_NOUSE_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 88464)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_LOKVAR_NOUSE_INFO() {
    TELEPORT_LOKVARTUTORIAL = TRUE;
    AI_STARTFACEANI(OTHER, S_WHAT, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Lokvar_NoUse_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_NoUse_03_02");
    AI_STARTFACEANI(SELF, S_SERIOUS, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_NoUse_03_03");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    LOG_CREATETOPIC(TOPIC_TELEPORT, LOG_NOTE);
    AI_LOGENTRY(TOPIC_TELEPORT, LOG_TELEPORT_LOKVARTUTORIAL);
    CREATEINVITEMS(SELF, 39863, 1);
    B_GIVEINVITEMS(SELF, OTHER, 39863, 1);
    TELEPORTRUNES_GIVELOGENTRY();
}

instance DIA_LOKVAR_WATERCIRCLE(C_INFO) {
    NPC = 57563;
    NR = 1;
    CONDITION = DIA_LOKVAR_WATERCIRCLE_CONDITION;
    INFORMATION = DIA_LOKVAR_WATERCIRCLE_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_LOKVAR_WATERCIRCLE_CONDITION() {
    if ((((SQ504_JOINEDWATERCIRCLE) == (TRUE)) && ((SQ504_WEARINGRING) == (TRUE))) && ((NPC_GETDISTTOWP(SELF, "PART12_LOKVARHOUSE_01")) <= (7500))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_LOKVAR_WATERCIRCLE_INFO() {
    AI_STARTFACEANI(SELF, S_SMUG, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_WaterCircle_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_WaterCircle_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Lokvar_WaterCircle_03_03");
    AI_RESETFACEANI(SELF);
    CREATEINVITEMS(SELF, 36909, 1);
    B_GIVEINVITEMS(SELF, OTHER, 36909, 1);
}

instance DIA_LOKVAR_PICKPOCKET(C_INFO) {
    NPC = 57563;
    NR = 900;
    CONDITION = DIA_LOKVAR_PICKPOCKET_CONDITION;
    INFORMATION = DIA_LOKVAR_PICKPOCKET_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = PICKPOCKET_40;
}

func int DIA_LOKVAR_PICKPOCKET_CONDITION() {
    if (((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) && ((SELF.AIVAR[6]) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_LOKVAR_PICKPOCKET_INFO() {
    INFO_CLEARCHOICES(88473);
    INFO_ADDCHOICE(88473, DIALOG_BACK, 88477);
    INFO_ADDCHOICE(88473, DIALOG_PICKPOCKET, 88476);
}

func void DIA_LOKVAR_PICKPOCKET_DOIT() {
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) {
        CREATEINVITEMS(SELF, 38248, 1);
        B_GIVEINVITEMS(SELF, OTHER, 38248, 1);
        B_PICKPOCKET_AMBIENT_TIER_2();
        SELF.AIVAR[6] = TRUE;
        INFO_CLEARCHOICES(88473);
    };
    AI_PLAYANI(HERO, T_CANNOTTAKE);
    PRINTSCREEN(PRINT_CANTPICKPOCKETTHISPERSON, -(1), -(1), FONT_SCREEN, 4);
    INFO_CLEARCHOICES(88473);
}

func void DIA_LOKVAR_PICKPOCKET_BACK() {
    INFO_CLEARCHOICES(88473);
}

instance DIA_LOKVAR_SELLPLANTS(C_INFO) {
    NPC = 57563;
    NR = 770;
    CONDITION = DIA_LOKVAR_SELLPLANTS_CONDITION;
    INFORMATION = DIA_LOKVAR_SELLPLANTS_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "I have everything you need. (Sell blue elder)";
}

var int LOKVARNEEDPLANT_ENOUGH;
var int LOKVARNEEDPLANT_COUNT;
func int DIA_LOKVAR_SELLPLANTS_CONDITION() {
    if (((SILBACH_NEWS_LOKVAR) == (TRUE)) && ((LOKVARNEEDPLANT_ENOUGH) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

var int LOKVAR_PLANTINSTANCE;
var int LOKVAR_PLANTVALUE;
func void DIA_LOKVAR_SELLPLANTS_CHOICES() {
    var string ALL_STRING;
    var int MAX;
    LOKVAR_PLANTINSTANCE = 34296;
    LOKVAR_PLANTVALUE = VALUE_BLUEPLANT;
    INFO_CLEARCHOICES(88478);
    MAX = NPC_HASITEMS(HERO, LOKVAR_PLANTINSTANCE);
    ALL_STRING = CS4(DIALOG_ALL, " (", I2S(MAX), ")");
    INFO_ADDCHOICE(88478, ALL_STRING, 88489);
    INFO_ADDCHOICE(88478, CHOICE_NUMBER_5, 88491);
    INFO_ADDCHOICE(88478, CHOICE_NUMBER_1, 88493);
    INFO_ADDCHOICE(88478, DIALOG_BACK, 88488);
}

func void DIA_LOKVAR_SELLPLANTS_INFO() {
    B_SAY(OTHER, SELF, "$MARVIN_GiveItem3");
    DIA_LOKVAR_SELLPLANTS_CHOICES();
}

func void DIA_LOKVAR_SELLPLANTS_BACK() {
    LOKVAR_PLANTINSTANCE = -(1);
    LOKVAR_PLANTVALUE = 0;
    INFO_CLEARCHOICES(88478);
}

func void DIA_LOKVAR_SELLPLANTS_ALL() {
    var int MAX;
    if ((NPC_HASITEMS(OTHER, LOKVAR_PLANTINSTANCE)) >= (1)) {
        MAX = NPC_HASITEMS(HERO, LOKVAR_PLANTINSTANCE);
        B_GIVEINVITEMS(OTHER, SELF, LOKVAR_PLANTINSTANCE, MAX);
        CREATEINVITEMS(SELF, 34203, (MAX) * (LOKVAR_PLANTVALUE));
        B_GIVEINVITEMS(SELF, OTHER, 34203, (MAX) * (LOKVAR_PLANTVALUE));
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        B_SAY(SELF, OTHER, "$REWARD_CALM");
        AI_RESETFACEANI(SELF);
        if ((LOKVAR_PLANTINSTANCE) == (34296)) {
            LOKVARNEEDPLANT_COUNT = (LOKVARNEEDPLANT_COUNT) + (MAX);
            if ((LOKVARNEEDPLANT_COUNT) >= (10)) {
                LOKVARNEEDPLANT_ENOUGH = TRUE;
                if ((LOKVARNEEDPLANT_COUNT) > (10)) {
                    AI_FUNCTION(SELF, 88494);
                };
            };
        };
        if (((LOKVAR_PLANTINSTANCE) == (34296)) && ((LOKVARNEEDPLANT_ENOUGH) == (FALSE))) {
            DIA_LOKVAR_SELLPLANTS_CHOICES();
        } else {
            DIA_LOKVAR_SELLPLANTS_BACK();
        };
    };
    DIA_LOKVAR_SELLPLANTS_BACK();
    B_SAY(SELF, OTHER, "$NOITEMS");
}

func void DIA_LOKVAR_SELLPLANTS_5() {
    var int MAX;
    if ((NPC_HASITEMS(OTHER, LOKVAR_PLANTINSTANCE)) >= (5)) {
        B_GIVEINVITEMS(OTHER, SELF, LOKVAR_PLANTINSTANCE, 5);
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        B_SAY(SELF, OTHER, "$REWARD_CALM");
        AI_RESETFACEANI(SELF);
        CREATEINVITEMS(SELF, 34203, (5) * (LOKVAR_PLANTVALUE));
        if ((LOKVAR_PLANTINSTANCE) == (34296)) {
            LOKVARNEEDPLANT_COUNT = (LOKVARNEEDPLANT_COUNT) + (5);
            if ((LOKVARNEEDPLANT_COUNT) >= (10)) {
                LOKVARNEEDPLANT_ENOUGH = TRUE;
                if ((LOKVARNEEDPLANT_COUNT) > (10)) {
                    AI_FUNCTION(SELF, 88494);
                };
            };
        };
        if (((LOKVAR_PLANTINSTANCE) == (34296)) && ((LOKVARNEEDPLANT_ENOUGH) == (FALSE))) {
            DIA_LOKVAR_SELLPLANTS_CHOICES();
        } else {
            DIA_LOKVAR_SELLPLANTS_BACK();
        };
    };
    if (((NPC_HASITEMS(OTHER, LOKVAR_PLANTINSTANCE)) >= (1)) && ((NPC_HASITEMS(OTHER, LOKVAR_PLANTINSTANCE)) < (5))) {
        MAX = NPC_HASITEMS(HERO, LOKVAR_PLANTINSTANCE);
        B_GIVEINVITEMS(OTHER, SELF, LOKVAR_PLANTINSTANCE, MAX);
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        B_SAY(SELF, OTHER, "$REWARD_CALM");
        AI_RESETFACEANI(SELF);
        CREATEINVITEMS(SELF, 34203, (MAX) * (LOKVAR_PLANTVALUE));
        if ((LOKVAR_PLANTINSTANCE) == (34296)) {
            LOKVARNEEDPLANT_COUNT = (LOKVARNEEDPLANT_COUNT) + (MAX);
            if ((LOKVARNEEDPLANT_COUNT) >= (10)) {
                LOKVARNEEDPLANT_ENOUGH = TRUE;
                if ((LOKVARNEEDPLANT_COUNT) > (10)) {
                    AI_FUNCTION(SELF, 88494);
                };
            };
        };
        if (((LOKVAR_PLANTINSTANCE) == (34296)) && ((LOKVARNEEDPLANT_ENOUGH) == (FALSE))) {
            DIA_LOKVAR_SELLPLANTS_CHOICES();
        } else {
            DIA_LOKVAR_SELLPLANTS_BACK();
        };
    };
    if ((NPC_HASITEMS(OTHER, LOKVAR_PLANTINSTANCE)) == (0)) {
        DIA_LOKVAR_SELLPLANTS_BACK();
        B_SAY(SELF, OTHER, "$NOITEMS");
    };
}

func void DIA_LOKVAR_SELLPLANTS_1() {
    if ((NPC_HASITEMS(OTHER, LOKVAR_PLANTINSTANCE)) >= (1)) {
        B_GIVEINVITEMS(OTHER, SELF, LOKVAR_PLANTINSTANCE, 1);
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        B_SAY(SELF, OTHER, "$REWARD_CALM");
        AI_RESETFACEANI(SELF);
        CREATEINVITEMS(SELF, 34203, LOKVAR_PLANTVALUE);
        if ((LOKVAR_PLANTINSTANCE) == (34296)) {
            LOKVARNEEDPLANT_COUNT = (LOKVARNEEDPLANT_COUNT) + (1);
            if ((LOKVARNEEDPLANT_COUNT) >= (10)) {
                LOKVARNEEDPLANT_ENOUGH = TRUE;
                if ((LOKVARNEEDPLANT_COUNT) > (10)) {
                    AI_FUNCTION(SELF, 88494);
                };
            };
        };
        if (((LOKVAR_PLANTINSTANCE) == (34296)) && ((LOKVARNEEDPLANT_ENOUGH) == (FALSE))) {
            DIA_LOKVAR_SELLPLANTS_CHOICES();
        } else {
            DIA_LOKVAR_SELLPLANTS_BACK();
        };
    };
    if ((NPC_HASITEMS(OTHER, LOKVAR_PLANTINSTANCE)) == (0)) {
        DIA_LOKVAR_SELLPLANTS_BACK();
        B_SAY(SELF, OTHER, "$NOITEMS");
    };
}

func void LOKVAR_GIVEBACKSTUFF_PLANTS() {
    NPC_REMOVEINVITEMS(BAU_706_LOKVAR, 34203, (VALUE_BLUEPLANT) * ((LOKVARNEEDPLANT_COUNT) - (10)));
    PRINTSCREENS(PRINT_LOKVARPLANTS, -(1), -(1), FONT_SCREENSMALL, 4);
    B_GIVEINVITEMS(HERO, BAU_706_LOKVAR, 34203, (VALUE_BLUEPLANT) * ((LOKVARNEEDPLANT_COUNT) - (10)));
}

