instance DIA_ERGO_EXIT(C_INFO) {
    NPC = 56303;
    NR = 999;
    CONDITION = DIA_ERGO_EXIT_CONDITION;
    INFORMATION = DIA_ERGO_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_ERGO_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_ERGO_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_ERGO_SQ224_START(C_INFO) {
    NPC = 56303;
    NR = 1;
    CONDITION = DIA_ERGO_SQ224_START_CONDITION;
    INFORMATION = DIA_ERGO_SQ224_START_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "What kind of honey do you make here?";
}

func int DIA_ERGO_SQ224_START_CONDITION() {
    if (((KAPITEL) >= (2)) && (NPC_KNOWSINFO(OTHER, 79032))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

var int ERGO_SQ224_TAKEQUEST;
func void DIA_ERGO_SQ224_START_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Ergo_SQ224_Start_15_01");
    AI_STARTFACEANI(SELF, S_SMILE, 0, 1);
    AI_OUTPUT(SELF, OTHER, "DIA_Ergo_SQ224_Start_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Ergo_SQ224_Start_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Ergo_SQ224_Start_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Ergo_SQ224_Start_03_05");
    INFO_CLEARCHOICES(79001);
    INFO_ADDCHOICE(79001, "I don't have time right now.", 79008);
    INFO_ADDCHOICE(79001, "What's the idea?", 79007);
    INFO_ADDCHOICE(79001, "I'm in, there's never enough honey!", 79006);
}

func void DIA_ERGO_SQ224_START_HELLYES() {
    ERGO_SQ224_TAKEQUEST = 0;
    AI_STARTFACEANI(SELF, S_SMILE, 0, 1);
    AI_OUTPUT(SELF, OTHER, "DIA_Ergo_SQ224_Start_Yes_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Ergo_SQ224_Start_Yes_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Ergo_SQ224_Start_Yes_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Ergo_SQ224_Start_Yes_03_05");
    INFO_CLEARCHOICES(79001);
    INFO_ADDCHOICE(79001, "What plants do you want to grow?", 79009);
    INFO_CLEARCHOICES(79011);
    INFO_ADDCHOICE(79011, "What plants do you want to grow?", 79009);
}

func void DIA_ERGO_SQ224_START_YES() {
    AI_STARTFACEANI(OTHER, S_SMILE, 0, 1);
    AI_OUTPUT(OTHER, SELF, "DIA_Ergo_SQ224_Start_Yes_15_01");
    AI_RESETFACEANI(SELF);
    DIA_ERGO_SQ224_START_HELLYES();
}

func void DIA_ERGO_SQ224_START_DONTKNOW() {
    AI_OUTPUT(OTHER, SELF, "DIA_Ergo_SQ224_Start_DontKnow_15_01");
    AI_WAITTILLEND(SELF, OTHER);
    AI_STARTFACEANI(SELF, S_DOUBT, 1, -(1));
    AI_PLAYANI(SELF, T_SEARCH);
    AI_OUTPUT(SELF, OTHER, "DIA_Ergo_SQ224_Start_DontKnow_03_02");
}

func void DIA_ERGO_SQ224_START_NO() {
    ERGO_SQ224_TAKEQUEST = 1;
    AI_STARTFACEANI(SELF, S_ANGRY, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Ergo_SQ224_Start_No_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Ergo_SQ224_Start_No_03_02");
    INFO_CLEARCHOICES(79001);
    AI_RESETFACEANI(SELF);
}

func void DIA_ERGO_SQ224_START_YES_WHAT() {
    AI_OUTPUT(OTHER, SELF, "DIA_Ergo_SQ224_Start_What_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Ergo_SQ224_Start_What_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Ergo_SQ224_Start_What_03_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Ergo_SQ224_Start_What_03_04");
    INFO_CLEARCHOICES(79001);
    INFO_ADDCHOICE(79001, "How many seeds do you need?", 79010);
    INFO_CLEARCHOICES(79011);
    INFO_ADDCHOICE(79011, "How many seeds do you need?", 79010);
}

func void DIA_ERGO_SQ224_START_YES_WHAT_HOWMANY() {
    AI_OUTPUT(OTHER, SELF, "DIA_Ergo_SQ224_Start_HowMany_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Ergo_SQ224_Start_HowMany_03_02");
    INFO_CLEARCHOICES(79001);
    INFO_CLEARCHOICES(79011);
    LOG_CREATETOPIC(TOPIC_SQ224, LOG_MISSION);
    LOG_SETSTATUS(_@(MIS_SQ224), TOPIC_SQ224, LOG_RUNNING);
    AI_LOGENTRY(TOPIC_SQ224, LOG_SQ224_START);
}

instance DIA_ERGO_SQ224_TAKEQUEST(C_INFO) {
    NPC = 56303;
    NR = 1;
    CONDITION = DIA_ERGO_SQ224_TAKEQUEST_CONDITION;
    INFORMATION = DIA_ERGO_SQ224_TAKEQUEST_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Let me help you. There's never enough honey!";
}

func int DIA_ERGO_SQ224_TAKEQUEST_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 79001)) && ((ERGO_SQ224_TAKEQUEST) == (1))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ERGO_SQ224_TAKEQUEST_INFO() {
    AI_STARTFACEANI(OTHER, S_SMILE, 0, 1);
    AI_OUTPUT(OTHER, SELF, "DIA_Ergo_SQ224_TakeQuest_15_01");
    AI_RESETFACEANI(SELF);
    DIA_ERGO_SQ224_START_HELLYES();
}

instance DIA_ERGO_SQ224_GOTSEEDS(C_INFO) {
    NPC = 56303;
    NR = 1;
    CONDITION = DIA_ERGO_SQ224_GOTSEEDS_CONDITION;
    INFORMATION = DIA_ERGO_SQ224_GOTSEEDS_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I managed to get the seeds.";
}

func int DIA_ERGO_SQ224_GOTSEEDS_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ224)) == (LOG_RUNNING)) && ((NPC_HASITEMS(OTHER, 35310)) >= (10))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ERGO_SQ224_GOTSEEDS_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_ERGO_SQ224_GotSeeds_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_ERGO_SQ224_GotSeeds_03_02");
    B_USEFAKEBAG();
    B_GIVEINVITEMS(OTHER, SELF, 35310, 10);
    AI_STARTFACEANI(SELF, S_SMILE, 0, 1);
    AI_OUTPUT(SELF, OTHER, "DIA_ERGO_SQ224_GotSeeds_03_03");
    CREATEINVITEMS(SELF, 37080, 5);
    B_GIVEINVITEMS(SELF, OTHER, 37080, 5);
    AI_OUTPUT(SELF, OTHER, "DIA_ERGO_SQ224_GotSeeds_03_04");
    AI_LOGENTRY(TOPIC_SQ224, LOG_SQ224_ERGO_LETSGO);
    AI_STOPPROCESSINFOS(SELF);
    SELF.AIVAR[15] = TRUE;
    NPC_EXCHANGEROUTINE(SELF, "SQ224_GUIDE");
    FF_APPLYONCEEXTGT(62576, 0, -(1));
}

instance DIA_ERGO_SQ224_RIGHTPLACE(C_INFO) {
    NPC = 56303;
    NR = 1;
    CONDITION = DIA_ERGO_SQ224_RIGHTPLACE_CONDITION;
    INFORMATION = DIA_ERGO_SQ224_RIGHTPLACE_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_ERGO_SQ224_RIGHTPLACE_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_SQ224)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 79014))) && ((NPC_GETDISTTOWP(SELF, "PART4_SQ224_ERGO")) <= (700))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ERGO_SQ224_RIGHTPLACE_INFO() {
    AI_STARTFACEANI(SELF, S_SMILE, 0, 1);
    AI_OUTPUT(SELF, OTHER, "DIA_ERGO_SQ224_RightPlace_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_ERGO_SQ224_RightPlace_03_02");
    AI_LOGENTRY(TOPIC_SQ224, LOG_SQ224_ERGO_WORK);
    AI_STOPPROCESSINFOS(SELF);
    NPC_EXCHANGEROUTINE(SELF, "SQ224_WORK");
    SQ224_SPAWNPLUNDERSPOTS();
}

instance DIA_ERGO_SQ224_WORKDONE(C_INFO) {
    NPC = 56303;
    NR = 1;
    CONDITION = DIA_ERGO_SQ224_WORKDONE_CONDITION;
    INFORMATION = DIA_ERGO_SQ224_WORKDONE_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_ERGO_SQ224_WORKDONE_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ224)) == (LOG_RUNNING)) && ((SQ224_SEEDCOUNT) == (5))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ERGO_SQ224_WORKDONE_INFO() {
    AI_STARTFACEANI(SELF, S_SMILE, 0, 1);
    AI_OUTPUT(SELF, OTHER, "DIA_ERGO_SQ224_WorkDone_03_01");
    INFO_CLEARCHOICES(79020);
    INFO_ADDCHOICE(79020, "I think I'll pass.", 79025);
    INFO_ADDCHOICE(79020, "I'd love to.", 79024);
}

func void DIA_ERGO_SQ224_WORKDONE_NEXT() {
    SQ224_WAITFORHONEY = KAPITEL;
    SQ224_MOVER_PLANTS = 1;
    AI_OUTPUT(OTHER, SELF, "DIA_ERGO_SQ224_WorkDone_Next_15_01");
    AI_STARTFACEANI(SELF, S_THINK, 0, 1);
    AI_OUTPUT(SELF, OTHER, "DIA_ERGO_SQ224_WorkDone_Next_03_02");
    AI_STARTFACEANI(OTHER, S_SURPRISE, 0, 1);
    AI_OUTPUT(OTHER, SELF, "DIA_ERGO_SQ224_WorkDone_Next_15_03");
    AI_RESETFACEANI(SELF);
    AI_RESETFACEANI(OTHER);
    AI_OUTPUT(SELF, OTHER, "DIA_ERGO_SQ224_WorkDone_Next_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_ERGO_SQ224_WorkDone_Next_03_05");
    INFO_CLEARCHOICES(79020);
    AI_STOPPROCESSINFOS(SELF);
    SELF.AIVAR[15] = FALSE;
    NPC_EXCHANGEROUTINE(SELF, START);
    if ((LOG_GETSTATUS(MIS_Q405)) == (LOG_SUCCESS)) {
        AI_LOGENTRY(TOPIC_SQ224, LOG_SQ224_ERGO_WORKDONE_V1);
    };
    AI_LOGENTRY(TOPIC_SQ224, LOG_SQ224_ERGO_WORKDONE_V2);
}

func void DIA_ERGO_SQ224_WORKDONE_YES() {
    AI_STARTFACEANI(OTHER, S_SMILE, 0, 1);
    AI_OUTPUT(OTHER, SELF, "DIA_ERGO_SQ224_WorkDone_Yes_15_01");
    AI_WAITTILLEND(SELF, OTHER);
    CREATEINVITEMS(SELF, 36363, 2);
    B_GIVEINVITEMS(SELF, OTHER, 36363, 1);
    B_USEITEM(SELF, 36363);
    AI_WAIT(OTHER, 1045220557);
    B_USEITEM(OTHER, 36363);
    DIA_ERGO_SQ224_WORKDONE_NEXT();
}

func void DIA_ERGO_SQ224_WORKDONE_NO() {
    AI_OUTPUT(OTHER, SELF, "DIA_ERGO_SQ224_WorkDone_No_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_ERGO_SQ224_WorkDone_No_03_02");
    CREATEINVITEMS(SELF, 36363, 1);
    B_USEITEM(SELF, 36363);
    DIA_ERGO_SQ224_WORKDONE_NEXT();
}

instance DIA_ERGO_SQ224_HONEYREADY(C_INFO) {
    NPC = 56303;
    NR = 1;
    CONDITION = DIA_ERGO_SQ224_HONEYREADY_CONDITION;
    INFORMATION = DIA_ERGO_SQ224_HONEYREADY_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Is the honey ready yet?";
}

func int DIA_ERGO_SQ224_HONEYREADY_CONDITION() {
    if (((LOG_GETSTATUS(MIS_SQ224)) == (LOG_RUNNING)) && (NPC_KNOWSINFO(OTHER, 79020))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ERGO_SQ224_HONEYREADY_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_ERGO_SQ224_HoneyReady_15_01");
    if (((KAPITEL) >= ((SQ224_WAITFORHONEY) + (1))) == (TRUE)) {
        AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
        AI_STARTFACEANI(OTHER, S_SMILE, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_ERGO_SQ224_HoneyReady_03_02");
        AI_OUTPUT(OTHER, SELF, "DIA_ERGO_SQ224_HoneyReady_15_03");
        AI_WAITTILLEND(SELF, OTHER);
        B_STANDUP();
        CREATEINVITEMS(SELF, 36443, 4);
        B_GIVEINVITEMS(SELF, OTHER, 36443, 3);
        B_USEITEM(SELF, 36443);
        AI_WAIT(OTHER, 1050253722);
        B_USEITEM(OTHER, 36443);
        AI_STARTFACEANI(SELF, S_DISGUST, 1, -(1));
        AI_STARTFACEANI(OTHER, S_DISGUST, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_ERGO_SQ224_HoneyReady_03_04");
        AI_PLAYANI(SELF, T_STAND_2_COUNTING);
        AI_STARTFACEANI(SELF, S_THINK, 1, -(1));
        AI_OUTPUT(SELF, OTHER, "DIA_ERGO_SQ224_HoneyReady_03_05");
        AI_STARTFACEANI(OTHER, S_ANGRY, 1, -(1));
        AI_OUTPUT(OTHER, SELF, "DIA_ERGO_SQ224_HoneyReady_15_06");
        AI_PLAYANI(OTHER, T_NO);
        AI_RESETFACEANI(OTHER);
        AI_RESETFACEANI(SELF);
        AI_PLAYANI(SELF, T_COUNTING_2_STAND);
        AI_OUTPUT(SELF, OTHER, "DIA_ERGO_SQ224_HoneyReady_03_07");
        AI_OUTPUT(SELF, OTHER, "DIA_ERGO_SQ224_HoneyReady_03_08");
        AI_LOGENTRY(TOPIC_SQ224, LOG_SQ224_FINISH);
        LOG_SETSTATUS(_@(MIS_SQ224), TOPIC_SQ224, LOG_SUCCESS);
        B_GIVEPLAYERXP(XP_SQ224_FINISH);
        AI_STOPPROCESSINFOS(SELF);
    };
    AI_STARTFACEANI(SELF, S_SMILE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_ERGO_SQ224_HoneyReady_03_09");
}

instance DIA_ERGO_BEVINISDEAD(C_INFO) {
    NPC = 56303;
    NR = 1;
    CONDITION = DIA_ERGO_BEVINISDEAD_CONDITION;
    INFORMATION = DIA_ERGO_BEVINISDEAD_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Bevin's dead.";
}

func int DIA_ERGO_BEVINISDEAD_CONDITION() {
    if ((SQ114_FOUNDBEVINCORPSE) == (TRUE)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ERGO_BEVINISDEAD_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_ERGO_BevinIsDead_15_01");
    AI_STARTFACEANI(SELF, "S_SURPRISE", 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_ERGO_BevinIsDead_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_ERGO_BevinIsDead_15_03");
    AI_STARTFACEANI(SELF, "S_SAD", 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_ERGO_BevinIsDead_03_04");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_ERGO_BevinIsDead_03_05");
    B_GIVEPLAYERXP(XP_SQ114_BONUSEXP);
}

instance DIA_ERGO_WHATYOUDOIN(C_INFO) {
    NPC = 56303;
    NR = 990;
    CONDITION = DIA_ERGO_WHATYOUDOIN_CONDITION;
    INFORMATION = DIA_ERGO_WHATYOUDOIN_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "What do you do?";
}

func int DIA_ERGO_WHATYOUDOIN_CONDITION() {
    if (NPC_ISINSTATE(SELF, 61599)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ERGO_WHATYOUDOIN_INFO() {
    B_SAY(OTHER, SELF, "$MARVIN_WhatIsYourJob");
    AI_OUTPUT(SELF, OTHER, "DIA_Ergo_WhatYouDoin_03_01");
}

instance DIA_ERGO_AMBIENT(C_INFO) {
    NPC = 56303;
    NR = 990;
    CONDITION = DIA_ERGO_AMBIENT_CONDITION;
    INFORMATION = DIA_ERGO_AMBIENT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "What's up?";
}

func int DIA_ERGO_AMBIENT_CONDITION() {
    if ((NPC_ISINSTATE(SELF, 61599)) && (NPC_KNOWSINFO(OTHER, 79032))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ERGO_AMBIENT_INFO() {
    B_SAY(OTHER, SELF, "$MARVIN_HowAreYou2");
    if (((LOG_GETSTATUS(MIS_SQ224)) != (LOG_SUCCESS)) && (!(NPC_KNOWSINFO(OTHER, 79029)))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Ergo_Ambient_03_01");
    };
    if (((LOG_GETSTATUS(MIS_SQ224)) == (LOG_SUCCESS)) && (!(NPC_KNOWSINFO(OTHER, 79029)))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Ergo_Ambient_03_02");
    };
    if (NPC_KNOWSINFO(OTHER, 79029)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Ergo_Ambient_03_03");
    };
}

instance DIA_ERGO_PICKPOCKET(C_INFO) {
    NPC = 56303;
    NR = 900;
    CONDITION = DIA_ERGO_PICKPOCKET_CONDITION;
    INFORMATION = DIA_ERGO_PICKPOCKET_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = PICKPOCKET_80;
}

func int DIA_ERGO_PICKPOCKET_CONDITION() {
    if (((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) && ((SELF.AIVAR[6]) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_ERGO_PICKPOCKET_INFO() {
    INFO_CLEARCHOICES(79038);
    INFO_ADDCHOICE(79038, DIALOG_BACK, 79042);
    INFO_ADDCHOICE(79038, DIALOG_PICKPOCKET, 79041);
}

func void DIA_ERGO_PICKPOCKET_DOIT() {
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (2)) {
        CREATEINVITEMS(SELF, 33980, 1);
        B_GIVEINVITEMS(SELF, OTHER, 33980, 1);
        B_PICKPOCKET_AMBIENT_TIER_2();
        SELF.AIVAR[6] = TRUE;
        INFO_CLEARCHOICES(79038);
    };
    AI_PLAYANI(HERO, T_CANNOTTAKE);
    PRINTSCREEN(PRINT_CANTPICKPOCKETTHISPERSON, -(1), -(1), FONT_SCREEN, 4);
    INFO_CLEARCHOICES(79038);
}

func void DIA_ERGO_PICKPOCKET_BACK() {
    INFO_CLEARCHOICES(79038);
}

