var int GARNEK_NERVE;
var int GARNEK_NERVE_COUNT;
const int NERVESEC = 35;
var int GARNEK_NERVEREALIZED;
var int GARNEK_HEROEXP;
var int GARNEK_HEROLEVEL;
var int GARNEK_DAY;
instance DIA_GARNEK_EXIT(C_INFO) {
    NPC = 57794;
    NR = 999;
    CONDITION = DIA_GARNEK_EXIT_CONDITION;
    INFORMATION = DIA_GARNEK_EXIT_INFO;
    PERMANENT = 1;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_GARNEK_EXIT_CONDITION() {
    return 1;
}

func void DIA_GARNEK_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_GARNEK_FIRSTEXIT(C_INFO) {
    NPC = 57794;
    NR = 1;
    CONDITION = DIA_GARNEK_FIRSTEXIT_CONDITION;
    INFORMATION = DIA_GARNEK_FIRSTEXIT_INFO;
    PERMANENT = 0;
    IMPORTANT = 1;
}

func int DIA_GARNEK_FIRSTEXIT_CONDITION() {
    if ((NPC_GETDISTTONPC(SELF, HERO)) < (300)) {
        return 1;
    };
    return 0 /* !broken stack! */;
}

func void DIA_GARNEK_FIRSTEXIT_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_FirstEXIT_07_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_FirstEXIT_07_01");
    GARNEK_HEROEXP = HERO.EXP;
    GARNEK_HEROLEVEL = HERO.LEVEL;
    GARNEK_DAY = WLD_GETDAY();
    NPC_EXCHANGEROUTINE(SELF, "AFTERSTART");
    INFO_CLEARCHOICES(89838);
    INFO_ADDCHOICE(89838, "Leave me alone!", 89841);
    INFO_ADDCHOICE(89838, "I could use a companion.", 89842);
}

func void DIA_GARNEK_FIRSTEXIT_FUCKOFF() {
    GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (3);
    AI_OUTPUT(OTHER, SELF, "DIA_Garnek_FirstEXIT_FuckOff_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_FirstEXIT_FuckOff_07_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_FirstEXIT_FuckOff_07_02");
    INFO_CLEARCHOICES(89838);
    AI_STOPPROCESSINFOS(SELF);
}

func void DIA_GARNEK_FIRSTEXIT_COMEWITHME() {
    AI_OUTPUT(OTHER, SELF, "DIA_Garnek_FirstEXIT_ComeWithMe_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_FirstEXIT_ComeWithMe_07_01");
    INFO_CLEARCHOICES(89838);
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_GARNEK_SHUTUP(C_INFO) {
    NPC = 57794;
    NR = 3;
    CONDITION = DIA_GARNEK_SHUTUP_CONDITION;
    INFORMATION = DIA_GARNEK_SHUTUP_INFO;
    PERMANENT = 0;
    DESCRIPTION = "Can you be quiet for a minute?";
}

func int DIA_GARNEK_SHUTUP_CONDITION() {
    if ((GARNEK_NERVEREALIZED) == (TRUE)) {
        return 1;
    };
    return 0 /* !broken stack! */;
}

func void DIA_GARNEK_SHUTUP_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Garnek_ShutUp_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_ShutUp_07_01");
    if ((GARNEK_HEROEXP) == (HERO.EXP)) {
        GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (5);
    };
    GARNEK_HEROEXP = HERO.EXP;
    GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (7);
    NPC_SETREFUSETALK(SELF, 11);
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_GARNEK_SHUTTHEFUCKUP(C_INFO) {
    NPC = 57794;
    NR = 1;
    CONDITION = DIA_GARNEK_SHUTTHEFUCKUP_CONDITION;
    INFORMATION = DIA_GARNEK_SHUTTHEFUCKUP_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Will you shut up?";
}

func int DIA_GARNEK_SHUTTHEFUCKUP_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 89843)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_GARNEK_SHUTTHEFUCKUP_INFO() {
    AI_STARTFACEANI(HERO, S_ANGRY, 1, -(1));
    AI_OUTPUT(OTHER, SELF, "DIA_Garnek_ShutTheFuckUp_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_ShutTheFuckUp_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_ShutTheFuckUp_03_03");
    INFO_ADDCHOICE(89846, "Just leave me alone!", 89849);
    INFO_ADDCHOICE(89846, "More like full of shit...", 89850);
}

func void DIA_GARNEK_LEAVEMEALONE() {
    AI_OUTPUT(OTHER, SELF, "DIA_Garnek_LeaveMeAlone_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_LeaveMeAlone_03_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Garnek_LeaveMeAlone_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_LeaveMeAlone_03_04");
    NPC_EXCHANGEROUTINE(SELF, TOT);
    AI_STOPPROCESSINFOS(SELF);
}

func void DIA_GARNEK_POTFULLOFSHIT() {
    AI_OUTPUT(OTHER, SELF, "DIA_Garnek_PotFullOfShit_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_PotFullOfShit_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_PotFullOfShit_03_03");
    NONE_13359_GARNEK.FIGHT_TACTIC = FAI_HUMAN_COWARD;
    AI_STOPPROCESSINFOS(SELF);
    B_ATTACK(SELF, OTHER, AR_KILL, 1);
}

instance DIA_GARNEK_ENDNERVE(C_INFO) {
    NPC = 57794;
    NR = 1;
    CONDITION = DIA_GARNEK_ENDNERVE_CONDITION;
    INFORMATION = DIA_GARNEK_ENDNERVE_INFO;
    PERMANENT = FALSE;
    IMPORTANT = 1;
}

func int DIA_GARNEK_ENDNERVE_CONDITION() {
    if ((((GARNEK_NERVE_COUNT) >= (25)) || ((HERO.LEVEL) >= ((GARNEK_HEROLEVEL) + (1)))) || ((WLD_GETDAY()) >= ((GARNEK_DAY) + (1)))) {
        if ((GARNEK_NERVEREALIZED) == (TRUE)) {
            return 1;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_GARNEK_ENDNERVE_INFO() {
    B_GIVEPLAYERXP(XP_EVENT_GARNEK);
    B_SAY(SELF, OTHER, "$RUDE_GOODBYE");
    AI_PRINTSCREENS(SELF, PRINT_GARNEKBORED, -(1), -(1), FONT_SCREENSMALL, 3);
    NPC_EXCHANGEROUTINE(SELF, TOT);
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_GARNEK_WATERNERVE(C_INFO) {
    NPC = 57794;
    NR = 1;
    CONDITION = DIA_GARNEK_WATERNERVE_CONDITION;
    INFORMATION = DIA_GARNEK_WATERNERVE_INFO;
    PERMANENT = FALSE;
    IMPORTANT = 1;
}

func int DIA_GARNEK_WATERNERVE_CONDITION() {
    if ((((C_BODYSTATECONTAINS(HERO, BS_SWIM)) || (C_BODYSTATECONTAINS(NONE_13359_GARNEK, BS_SWIM))) || (C_BODYSTATECONTAINS(HERO, BS_CRAWL))) || (C_BODYSTATECONTAINS(NONE_13359_GARNEK, BS_CRAWL))) {
        return 1;
    };
    return 0 /* !broken stack! */;
}

func void DIA_GARNEK_WATERNERVE_INFO() {
    B_SAY(SELF, OTHER, "$RUDE_GOODBYE");
    AI_PRINTSCREENS(SELF, PRINT_GARNEKBORED, -(1), -(1), FONT_SCREENSMALL, 3);
    NPC_EXCHANGEROUTINE(SELF, TOT);
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_GARNEK_NERVE_0(C_INFO) {
    NPC = 57794;
    NR = 999;
    CONDITION = DIA_GARNEK_NERVE_0_CONDITION;
    INFORMATION = DIA_GARNEK_NERVE_0_INFO;
    PERMANENT = 1;
    IMPORTANT = 1;
}

func int DIA_GARNEK_NERVE_0_CONDITION() {
    if ((((GARNEK_NERVE) == (0)) && ((NPC_REFUSETALK(SELF)) == (FALSE))) && ((NPC_GETDISTTONPC(SELF, HERO)) < (300))) {
        return 1;
    };
    return 0 /* !broken stack! */;
}

func void DIA_GARNEK_NERVE_0_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_0_07_00");
    NPC_SETREFUSETALK(SELF, NERVESEC);
    GARNEK_NERVE = 1;
    if ((GARNEK_HEROEXP) == (HERO.EXP)) {
        GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (1);
    };
    GARNEK_HEROEXP = HERO.EXP;
    GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (2);
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_GARNEK_NERVE_1(C_INFO) {
    NPC = 57794;
    NR = 999;
    CONDITION = DIA_GARNEK_NERVE_1_CONDITION;
    INFORMATION = DIA_GARNEK_NERVE_1_INFO;
    PERMANENT = 1;
    IMPORTANT = 1;
}

func int DIA_GARNEK_NERVE_1_CONDITION() {
    if ((((GARNEK_NERVE) == (1)) && ((NPC_REFUSETALK(SELF)) == (FALSE))) && ((NPC_GETDISTTONPC(SELF, HERO)) < (300))) {
        return 1;
    };
    return 0 /* !broken stack! */;
}

func void DIA_GARNEK_NERVE_1_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_1_07_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_1_07_01");
    NPC_SETREFUSETALK(SELF, NERVESEC);
    GARNEK_NERVE = 2;
    if ((GARNEK_HEROEXP) == (HERO.EXP)) {
        GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (1);
    };
    GARNEK_HEROEXP = HERO.EXP;
    GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (2);
    GARNEK_NERVEREALIZED = TRUE;
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_GARNEK_NERVE_2(C_INFO) {
    NPC = 57794;
    NR = 999;
    CONDITION = DIA_GARNEK_NERVE_2_CONDITION;
    INFORMATION = DIA_GARNEK_NERVE_2_INFO;
    PERMANENT = 1;
    IMPORTANT = 1;
}

func int DIA_GARNEK_NERVE_2_CONDITION() {
    if ((((GARNEK_NERVE) == (2)) && ((NPC_REFUSETALK(SELF)) == (FALSE))) && ((NPC_GETDISTTONPC(SELF, HERO)) < (300))) {
        return 1;
    };
    return 0 /* !broken stack! */;
}

func void DIA_GARNEK_NERVE_2_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_2_07_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_2_07_01");
    NPC_SETREFUSETALK(SELF, NERVESEC);
    GARNEK_NERVE = 3;
    if ((GARNEK_HEROEXP) == (HERO.EXP)) {
        GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (1);
    };
    GARNEK_HEROEXP = HERO.EXP;
    GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (2);
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_GARNEK_NERVE_3(C_INFO) {
    NPC = 57794;
    NR = 999;
    CONDITION = DIA_GARNEK_NERVE_3_CONDITION;
    INFORMATION = DIA_GARNEK_NERVE_3_INFO;
    PERMANENT = 1;
    IMPORTANT = 1;
}

func int DIA_GARNEK_NERVE_3_CONDITION() {
    if ((((GARNEK_NERVE) == (3)) && ((NPC_REFUSETALK(SELF)) == (FALSE))) && ((NPC_GETDISTTONPC(SELF, HERO)) < (300))) {
        return 1;
    };
    return 0 /* !broken stack! */;
}

func void DIA_GARNEK_NERVE_3_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_3_07_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_3_07_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_3_07_02");
    NPC_SETREFUSETALK(SELF, NERVESEC);
    GARNEK_NERVE = 4;
    if ((GARNEK_HEROEXP) == (HERO.EXP)) {
        GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (1);
    };
    GARNEK_HEROEXP = HERO.EXP;
    GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (2);
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_GARNEK_NERVE_4(C_INFO) {
    NPC = 57794;
    NR = 999;
    CONDITION = DIA_GARNEK_NERVE_4_CONDITION;
    INFORMATION = DIA_GARNEK_NERVE_4_INFO;
    PERMANENT = 1;
    IMPORTANT = 1;
}

func int DIA_GARNEK_NERVE_4_CONDITION() {
    if ((((GARNEK_NERVE) == (4)) && ((NPC_REFUSETALK(SELF)) == (FALSE))) && ((NPC_GETDISTTONPC(SELF, HERO)) < (300))) {
        return 1;
    };
    return 0 /* !broken stack! */;
}

func void DIA_GARNEK_NERVE_4_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_4_07_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_4_07_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_4_07_02");
    NPC_SETREFUSETALK(SELF, NERVESEC);
    GARNEK_NERVE = 5;
    if ((GARNEK_HEROEXP) == (HERO.EXP)) {
        GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (1);
    };
    GARNEK_HEROEXP = HERO.EXP;
    GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (2);
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_GARNEK_NERVE_5(C_INFO) {
    NPC = 57794;
    NR = 999;
    CONDITION = DIA_GARNEK_NERVE_5_CONDITION;
    INFORMATION = DIA_GARNEK_NERVE_5_INFO;
    PERMANENT = 1;
    IMPORTANT = 1;
}

func int DIA_GARNEK_NERVE_5_CONDITION() {
    if ((((GARNEK_NERVE) == (5)) && ((NPC_REFUSETALK(SELF)) == (FALSE))) && ((NPC_GETDISTTONPC(SELF, HERO)) < (300))) {
        return 1;
    };
    return 0 /* !broken stack! */;
}

func void DIA_GARNEK_NERVE_5_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_5_07_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_5_07_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_5_07_02");
    NPC_SETREFUSETALK(SELF, NERVESEC);
    if ((GARNEK_HEROEXP) == (HERO.EXP)) {
        GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (1);
    };
    GARNEK_HEROEXP = HERO.EXP;
    GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (2);
    GARNEK_NERVE = 6;
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_GARNEK_NERVE_6(C_INFO) {
    NPC = 57794;
    NR = 999;
    CONDITION = DIA_GARNEK_NERVE_6_CONDITION;
    INFORMATION = DIA_GARNEK_NERVE_6_INFO;
    PERMANENT = 1;
    IMPORTANT = 1;
}

func int DIA_GARNEK_NERVE_6_CONDITION() {
    if ((((GARNEK_NERVE) == (6)) && ((NPC_REFUSETALK(SELF)) == (FALSE))) && ((NPC_GETDISTTONPC(SELF, HERO)) < (300))) {
        return 1;
    };
    return 0 /* !broken stack! */;
}

func void DIA_GARNEK_NERVE_6_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_6_07_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_6_07_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_6_07_02");
    NPC_SETREFUSETALK(SELF, NERVESEC);
    if ((GARNEK_HEROEXP) == (HERO.EXP)) {
        GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (1);
    };
    GARNEK_HEROEXP = HERO.EXP;
    GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (2);
    GARNEK_NERVE = 7;
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_GARNEK_NERVE_7(C_INFO) {
    NPC = 57794;
    NR = 999;
    CONDITION = DIA_GARNEK_NERVE_7_CONDITION;
    INFORMATION = DIA_GARNEK_NERVE_7_INFO;
    PERMANENT = 1;
    IMPORTANT = 1;
}

func int DIA_GARNEK_NERVE_7_CONDITION() {
    if ((((GARNEK_NERVE) == (7)) && ((NPC_REFUSETALK(SELF)) == (FALSE))) && ((NPC_GETDISTTONPC(SELF, HERO)) < (300))) {
        return 1;
    };
    return 0 /* !broken stack! */;
}

func void DIA_GARNEK_NERVE_7_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_7_07_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_7_07_01");
    NPC_SETREFUSETALK(SELF, NERVESEC);
    if ((GARNEK_HEROEXP) == (HERO.EXP)) {
        GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (1);
    };
    GARNEK_HEROEXP = HERO.EXP;
    GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (2);
    GARNEK_NERVE = 8;
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_GARNEK_NERVE_8(C_INFO) {
    NPC = 57794;
    NR = 999;
    CONDITION = DIA_GARNEK_NERVE_8_CONDITION;
    INFORMATION = DIA_GARNEK_NERVE_8_INFO;
    PERMANENT = 1;
    IMPORTANT = 1;
}

func int DIA_GARNEK_NERVE_8_CONDITION() {
    if ((((GARNEK_NERVE) == (8)) && ((NPC_REFUSETALK(SELF)) == (FALSE))) && ((NPC_GETDISTTONPC(SELF, HERO)) < (300))) {
        return 1;
    };
    return 0 /* !broken stack! */;
}

func void DIA_GARNEK_NERVE_8_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_8_07_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_8_07_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_8_07_02");
    NPC_SETREFUSETALK(SELF, NERVESEC);
    if ((GARNEK_HEROEXP) == (HERO.EXP)) {
        GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (1);
    };
    GARNEK_HEROEXP = HERO.EXP;
    GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (2);
    GARNEK_NERVE = 9;
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_GARNEK_NERVE_9(C_INFO) {
    NPC = 57794;
    NR = 999;
    CONDITION = DIA_GARNEK_NERVE_9_CONDITION;
    INFORMATION = DIA_GARNEK_NERVE_9_INFO;
    PERMANENT = 1;
    IMPORTANT = 1;
}

func int DIA_GARNEK_NERVE_9_CONDITION() {
    if ((((GARNEK_NERVE) == (9)) && ((NPC_REFUSETALK(SELF)) == (FALSE))) && ((NPC_GETDISTTONPC(SELF, HERO)) < (300))) {
        return 1;
    };
    return 0 /* !broken stack! */;
}

func void DIA_GARNEK_NERVE_9_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_9_07_00");
    NPC_SETREFUSETALK(SELF, NERVESEC);
    if ((GARNEK_HEROEXP) == (HERO.EXP)) {
        GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (1);
    };
    GARNEK_HEROEXP = HERO.EXP;
    GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (2);
    GARNEK_NERVE = 10;
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_GARNEK_NERVE_10(C_INFO) {
    NPC = 57794;
    NR = 999;
    CONDITION = DIA_GARNEK_NERVE_10_CONDITION;
    INFORMATION = DIA_GARNEK_NERVE_10_INFO;
    PERMANENT = 1;
    IMPORTANT = 1;
}

func int DIA_GARNEK_NERVE_10_CONDITION() {
    if ((((GARNEK_NERVE) == (10)) && ((NPC_REFUSETALK(SELF)) == (FALSE))) && ((NPC_GETDISTTONPC(SELF, HERO)) < (300))) {
        return 1;
    };
    return 0 /* !broken stack! */;
}

func void DIA_GARNEK_NERVE_10_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_10_07_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_10_07_01");
    NPC_SETREFUSETALK(SELF, NERVESEC);
    if ((GARNEK_HEROEXP) == (HERO.EXP)) {
        GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (1);
    };
    GARNEK_HEROEXP = HERO.EXP;
    GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (2);
    GARNEK_NERVE = 11;
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_GARNEK_NERVE_11(C_INFO) {
    NPC = 57794;
    NR = 999;
    CONDITION = DIA_GARNEK_NERVE_11_CONDITION;
    INFORMATION = DIA_GARNEK_NERVE_11_INFO;
    PERMANENT = 1;
    IMPORTANT = 1;
}

func int DIA_GARNEK_NERVE_11_CONDITION() {
    if ((((GARNEK_NERVE) == (11)) && ((NPC_REFUSETALK(SELF)) == (FALSE))) && ((NPC_GETDISTTONPC(SELF, HERO)) < (300))) {
        return 1;
    };
    return 0 /* !broken stack! */;
}

func void DIA_GARNEK_NERVE_11_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_11_07_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_11_07_01");
    if ((GARNEK_HEROEXP) == (HERO.EXP)) {
        GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (1);
    };
    GARNEK_HEROEXP = HERO.EXP;
    GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (2);
    NPC_SETREFUSETALK(SELF, NERVESEC);
    GARNEK_NERVE = 12;
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_GARNEK_NERVE_12(C_INFO) {
    NPC = 57794;
    NR = 999;
    CONDITION = DIA_GARNEK_NERVE_12_CONDITION;
    INFORMATION = DIA_GARNEK_NERVE_12_INFO;
    PERMANENT = 1;
    IMPORTANT = 1;
}

func int DIA_GARNEK_NERVE_12_CONDITION() {
    if ((((GARNEK_NERVE) == (12)) && ((NPC_REFUSETALK(SELF)) == (FALSE))) && ((NPC_GETDISTTONPC(SELF, HERO)) < (300))) {
        return 1;
    };
    return 0 /* !broken stack! */;
}

func void DIA_GARNEK_NERVE_12_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_12_07_00");
    NPC_SETREFUSETALK(SELF, NERVESEC);
    if ((GARNEK_HEROEXP) == (HERO.EXP)) {
        GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (1);
    };
    GARNEK_HEROEXP = HERO.EXP;
    GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (2);
    GARNEK_NERVE = 13;
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_GARNEK_NERVE_13(C_INFO) {
    NPC = 57794;
    NR = 999;
    CONDITION = DIA_GARNEK_NERVE_13_CONDITION;
    INFORMATION = DIA_GARNEK_NERVE_13_INFO;
    PERMANENT = 1;
    IMPORTANT = 1;
}

func int DIA_GARNEK_NERVE_13_CONDITION() {
    if ((((GARNEK_NERVE) == (13)) && ((NPC_REFUSETALK(SELF)) == (FALSE))) && ((NPC_GETDISTTONPC(SELF, HERO)) < (300))) {
        return 1;
    };
    return 0 /* !broken stack! */;
}

func void DIA_GARNEK_NERVE_13_INFO() {
    AI_STARTFACEANI(HERO, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_13_07_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_13_07_01");
    NPC_SETREFUSETALK(SELF, NERVESEC);
    if ((GARNEK_HEROEXP) == (HERO.EXP)) {
        GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (1);
    };
    GARNEK_HEROEXP = HERO.EXP;
    GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (2);
    GARNEK_NERVE = 14;
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_GARNEK_NERVE_14(C_INFO) {
    NPC = 57794;
    NR = 999;
    CONDITION = DIA_GARNEK_NERVE_14_CONDITION;
    INFORMATION = DIA_GARNEK_NERVE_14_INFO;
    PERMANENT = 1;
    IMPORTANT = 1;
}

func int DIA_GARNEK_NERVE_14_CONDITION() {
    if ((((GARNEK_NERVE) == (14)) && ((NPC_REFUSETALK(SELF)) == (FALSE))) && ((NPC_GETDISTTONPC(SELF, HERO)) < (300))) {
        return 1;
    };
    return 0 /* !broken stack! */;
}

func void DIA_GARNEK_NERVE_14_INFO() {
    AI_STARTFACEANI(HERO, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_14_07_00");
    NPC_SETREFUSETALK(SELF, NERVESEC);
    if ((GARNEK_HEROEXP) == (HERO.EXP)) {
        GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (1);
    };
    GARNEK_HEROEXP = HERO.EXP;
    GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (2);
    GARNEK_NERVE = 16;
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_GARNEK_NERVE_16(C_INFO) {
    NPC = 57794;
    NR = 999;
    CONDITION = DIA_GARNEK_NERVE_16_CONDITION;
    INFORMATION = DIA_GARNEK_NERVE_16_INFO;
    PERMANENT = 1;
    IMPORTANT = 1;
}

func int DIA_GARNEK_NERVE_16_CONDITION() {
    if ((((GARNEK_NERVE) == (16)) && ((NPC_REFUSETALK(SELF)) == (FALSE))) && ((NPC_GETDISTTONPC(SELF, HERO)) < (300))) {
        return 1;
    };
    return 0 /* !broken stack! */;
}

func void DIA_GARNEK_NERVE_16_INFO() {
    AI_STARTFACEANI(HERO, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_16_07_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_16_07_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_16_07_02");
    NPC_SETREFUSETALK(SELF, NERVESEC);
    GARNEK_NERVE = 17;
    if ((GARNEK_HEROEXP) == (HERO.EXP)) {
        GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (1);
    };
    GARNEK_HEROEXP = HERO.EXP;
    GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (2);
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_GARNEK_NERVE_17(C_INFO) {
    NPC = 57794;
    NR = 999;
    CONDITION = DIA_GARNEK_NERVE_17_CONDITION;
    INFORMATION = DIA_GARNEK_NERVE_17_INFO;
    PERMANENT = 1;
    IMPORTANT = 1;
}

func int DIA_GARNEK_NERVE_17_CONDITION() {
    if ((((GARNEK_NERVE) == (17)) && ((NPC_REFUSETALK(SELF)) == (FALSE))) && ((NPC_GETDISTTONPC(SELF, HERO)) < (300))) {
        return 1;
    };
    return 0 /* !broken stack! */;
}

func void DIA_GARNEK_NERVE_17_INFO() {
    AI_STARTFACEANI(HERO, S_ANGRY, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_17_07_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_17_07_01");
    NPC_SETREFUSETALK(SELF, NERVESEC);
    if ((GARNEK_HEROEXP) == (HERO.EXP)) {
        GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (1);
    };
    GARNEK_HEROEXP = HERO.EXP;
    GARNEK_NERVE_COUNT = (GARNEK_NERVE_COUNT) + (2);
    GARNEK_NERVE = 0;
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_GARNEK_ANOTHERPLACENERVE(C_INFO) {
    NPC = 57794;
    NR = 1;
    CONDITION = DIA_GARNEK_ANOTHERPLACENERVE_CONDITION;
    INFORMATION = DIA_GARNEK_ANOTHERPLACENERVE_INFO;
    PERMANENT = FALSE;
    IMPORTANT = 1;
}

func int DIA_GARNEK_ANOTHERPLACENERVE_CONDITION() {
    if (((((NPC_GETDISTTOWP(SELF, "PART8_MONASTERY_PLACE_08")) <= (18100)) || ((NPC_GETDISTTOWP(SELF, "WOLFSDEN_CITADEL_THRONE")) <= (18100))) || ((NPC_GETDISTTOWP(SELF, "PART5_VOLFZACKE_ULRYK")) <= (18100))) || ((NPC_GETDISTTOWP(SELF, "P17_GHOST_ENCOUNTER_WAIT")) <= (18100))) {
        if ((GARNEK_NERVEREALIZED) == (TRUE)) {
            return 1;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_GARNEK_ANOTHERPLACENERVE_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_Nerve_11_07_01");
    B_SAY(SELF, OTHER, "$RUDE_GOODBYE");
    AI_PRINTSCREENS(SELF, PRINT_GARNEKBORED, -(1), -(1), FONT_SCREENSMALL, 3);
    NPC_EXCHANGEROUTINE(SELF, TOT);
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_GARNEK_DIEYOUTRAITOR(C_INFO) {
    NPC = 57794;
    NR = 4;
    CONDITION = DIA_GARNEK_DIEYOUTRAITOR_CONDITION;
    INFORMATION = DIA_GARNEK_DIEYOUTRAITOR_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_GARNEK_DIEYOUTRAITOR_CONDITION() {
    if ((((NPC_GETDISTTOWP(SELF, "PARTM1_PATH_29")) <= (18100)) || ((NPC_GETDISTTOWP(SELF, "PARTM2_CONNECTION_PART3")) <= (2000))) || ((NPC_GETDISTTOWP(SELF, "PARTM4_CONNECTION_PART2")) <= (2000))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_GARNEK_DIEYOUTRAITOR_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_DieYouTraitor_03_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_DieYouTraitor_03_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Garnek_DieYouTraitor_03_06");
    NONE_13359_GARNEK.FIGHT_TACTIC = FAI_HUMAN_COWARD;
    B_GIVEPLAYERXP(XP_EVENT_GARNEKSECRET);
    AI_STOPPROCESSINFOS(SELF);
    B_ATTACK(SELF, OTHER, AR_KILL, 1);
}

instance DIA_GARNEK_SILENCE(C_INFO) {
    NPC = 57794;
    NR = 1;
    CONDITION = DIA_GARNEK_SILENCE_CONDITION;
    INFORMATION = DIA_GARNEK_SILENCE_INFO;
    PERMANENT = 0;
    IMPORTANT = 1;
}

func int DIA_GARNEK_SILENCE_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 89843)) && (NPC_ISINSTATE(SELF, 61599))) {
        return 1;
    };
    return 0 /* !broken stack! */;
}

func void DIA_GARNEK_SILENCE_INFO() {
    B_SAY(SELF, OTHER, "$GREETINGS_FromFriend");
    AI_PLAYANI(SELF, "T_GREETCOOL");
    AI_STOPPROCESSINFOS(SELF);
}

