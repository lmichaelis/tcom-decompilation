instance DIA_DAN_EXIT(C_INFO) {
    NPC = 58800;
    NR = 999;
    CONDITION = DIA_DAN_EXIT_CONDITION;
    INFORMATION = DIA_DAN_EXIT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = DIALOG_ENDE;
}

func int DIA_DAN_EXIT_CONDITION() {
    return TRUE;
}

func void DIA_DAN_EXIT_INFO() {
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_DAN_HELLO(C_INFO) {
    NPC = 58800;
    NR = 1;
    CONDITION = DIA_DAN_HELLO_CONDITION;
    INFORMATION = DIA_DAN_HELLO_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "What do you do here?";
}

func int DIA_DAN_HELLO_CONDITION() {
    return TRUE;
}

func void DIA_DAN_HELLO_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Dan_Hello_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Dan_Hello_13_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Dan_Hello_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Dan_Hello_13_03");
}

instance DIA_DAN_CANYOUTRAIN(C_INFO) {
    NPC = 58800;
    NR = 1;
    CONDITION = DIA_DAN_CANYOUTRAIN_CONDITION;
    INFORMATION = DIA_DAN_CANYOUTRAIN_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "Could you train me?";
}

func int DIA_DAN_CANYOUTRAIN_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 84816)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_DAN_CANYOUTRAIN_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Dan_Canyoutrain_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Dan_Canyoutrain_13_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Dan_Canyoutrain_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Dan_Canyoutrain_13_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Dan_Canyoutrain_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Dan_Canyoutrain_13_05");
    LOG_CREATETOPIC(TOPIC_HAVENTEACHER, LOG_NOTE);
    AI_LOGENTRY(TOPIC_HAVENTEACHER, LOG_HAVENTEACHER_DAN);
}

var int DAN_CURRENTCRLEVEL;
var int DAN_CURRENT2HLEVEL;
var int DAN_CURRENTSTRLEVEL;
var int DAN_NOMORE;
var string DAN_PRINTS;
var int DAN_GOODSTUDENT;
instance DIA_DAN_TRAIN(C_INFO) {
    NPC = 58800;
    NR = 7;
    CONDITION = DIA_DAN_TRAIN_CONDITION;
    INFORMATION = DIA_DAN_TRAIN_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "Let's start training.";
}

func int DIA_DAN_TRAIN_CONDITION() {
    if ((NPC_KNOWSINFO(OTHER, 84819)) && ((DAN_NOMORE) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_DAN_TRAIN_CHOICES() {
    var int DAN_GOLDCOST;
    DAN_GOLDCOST = 30;
    DAN_CURRENTCRLEVEL = OTHER.AIVAR[87];
    DAN_CURRENT2HLEVEL = OTHER.AIVAR[85];
    DAN_CURRENTSTRLEVEL = OTHER.AIVAR[81];
    INFO_CLEARCHOICES(84828);
    INFO_ADDCHOICE(84828, DIALOG_BACK, 84833);
    INFO_ADDCHOICE(84828, B_BUILDLEARNSTRING2(PRINT_LEARNCROSSBOW1, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 1), DAN_GOLDCOST), 84834);
    INFO_ADDCHOICE(84828, B_BUILDLEARNSTRING2(PRINT_LEARNCROSSBOW5, (B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_CROSSBOW, 1)) * (5), (DAN_GOLDCOST) * (5)), 84835);
    INFO_ADDCHOICE(84828, B_BUILDLEARNSTRING2(PRINT_LEARN2H1, B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 1), DAN_GOLDCOST), 84836);
    INFO_ADDCHOICE(84828, B_BUILDLEARNSTRING2(PRINT_LEARN2H5, (B_GETLEARNCOSTTALENT(OTHER, NPC_TALENT_2H, 1)) * (5), (DAN_GOLDCOST) * (5)), 84837);
    INFO_ADDCHOICE(84828, B_BUILDLEARNSTRING2(PRINT_LEARNSTR1, B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 1), DAN_GOLDCOST), 84838);
    INFO_ADDCHOICE(84828, B_BUILDLEARNSTRING2(PRINT_LEARNSTR5, B_GETLEARNCOSTATTRIBUTE(OTHER, ATR_STRENGTH, 5), (DAN_GOLDCOST) * (5)), 84839);
}

func void DIA_DAN_TRAIN_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Dan_Train_15_00");
    AI_OUTPUT(SELF, OTHER, "DIA_Dan_Train_03_01");
    DIA_DAN_TRAIN_CHOICES();
}

func void DIA_DAN_TRAIN_BACK() {
    if (((((OTHER.AIVAR[87]) < (100)) && ((OTHER.AIVAR[87]) >= (60))) || (((OTHER.AIVAR[85]) < (100)) && ((OTHER.AIVAR[85]) >= (60)))) || (((OTHER.AIVAR[81]) < (150)) && ((OTHER.AIVAR[81]) >= (60)))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Dan_Train_Back_03_00");
    };
    if ((((OTHER.AIVAR[87]) >= (100)) && ((OTHER.AIVAR[85]) >= (100))) && ((OTHER.AIVAR[81]) >= (150))) {
        AI_OUTPUT(SELF, OTHER, "DIA_Dan_Train_Back_03_01");
        AI_OUTPUT(OTHER, SELF, "DIA_Dan_Train_Back_15_02");
        AI_OUTPUT(SELF, OTHER, "DIA_Dan_Train_Back_03_03");
        DAN_NOMORE = TRUE;
    };
    INFO_CLEARCHOICES(84828);
}

func void DIA_DAN_TRAIN_CR_1() {
    if ((NPC_HASITEMS(OTHER, 34203)) >= (DAN_PAYMENT1)) {
        if ((DAN_CURRENTCRLEVEL) < (OTHER.AIVAR[87])) {
            SND_PLAY(GELDBEUTEL);
            B_GIVEINVITEMS(OTHER, SELF, 34203, DAN_PAYMENT1);
            NPC_REMOVEINVITEMS(SELF, 34203, DAN_PAYMENT1);
        };
        B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_CROSSBOW, 1, 100);
        DIA_DAN_TRAIN_CHOICES();
    };
    if ((NPC_HASITEMS(OTHER, 34203)) < (DAN_PAYMENT1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Dan_Train_CR1_13_01");
        DAN_PRINTS = CONCATSTRINGS(PRINT_RGOLD, INTTOSTRING(DAN_PAYMENT1));
        PRINTSCREEN(DAN_PRINTS, -(1), -(1), FONT_SCREEN, 2);
        DIA_DAN_TRAIN_CHOICES();
    };
}

func void DIA_DAN_TRAIN_CR_5() {
    if ((NPC_HASITEMS(OTHER, 34203)) >= (DAN_PAYMENT5)) {
        if ((DAN_CURRENTCRLEVEL) < (OTHER.AIVAR[87])) {
            SND_PLAY(GELDBEUTEL);
            B_GIVEINVITEMS(OTHER, SELF, 34203, DAN_PAYMENT5);
            NPC_REMOVEINVITEMS(SELF, 34203, DAN_PAYMENT5);
        };
        B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_CROSSBOW, 5, 100);
        DIA_DAN_TRAIN_CHOICES();
    };
    if ((NPC_HASITEMS(OTHER, 34203)) < (DAN_PAYMENT5)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Dan_Train_CR5_13_01");
        DAN_PRINTS = CONCATSTRINGS(PRINT_RGOLD, INTTOSTRING(DAN_PAYMENT5));
        PRINTSCREEN(DAN_PRINTS, -(1), -(1), FONT_SCREEN, 2);
        DIA_DAN_TRAIN_CHOICES();
    };
}

func void DIA_DAN_TRAIN_2H_1() {
    if ((NPC_HASITEMS(OTHER, 34203)) >= (DAN_PAYMENT1)) {
        if ((DAN_CURRENT2HLEVEL) < (OTHER.AIVAR[85])) {
            SND_PLAY(GELDBEUTEL);
            B_GIVEINVITEMS(OTHER, SELF, 34203, DAN_PAYMENT1);
            NPC_REMOVEINVITEMS(SELF, 34203, DAN_PAYMENT1);
        };
        B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_2H, 1, 100);
        DIA_DAN_TRAIN_CHOICES();
    };
    if ((NPC_HASITEMS(OTHER, 34203)) < (DAN_PAYMENT1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Dan_Train_2H1_13_01");
        DAN_PRINTS = CONCATSTRINGS(PRINT_RGOLD, INTTOSTRING(DAN_PAYMENT1));
        PRINTSCREEN(DAN_PRINTS, -(1), -(1), FONT_SCREEN, 2);
        DIA_DAN_TRAIN_CHOICES();
    };
}

func void DIA_DAN_TRAIN_2H_5() {
    if ((NPC_HASITEMS(OTHER, 34203)) >= (DAN_PAYMENT5)) {
        if ((DAN_CURRENT2HLEVEL) < (OTHER.AIVAR[85])) {
            SND_PLAY(GELDBEUTEL);
            B_GIVEINVITEMS(OTHER, SELF, 34203, DAN_PAYMENT5);
            NPC_REMOVEINVITEMS(SELF, 34203, DAN_PAYMENT5);
        };
        B_TEACHFIGHTTALENTPERCENT(SELF, OTHER, NPC_TALENT_2H, 5, 100);
        DIA_DAN_TRAIN_CHOICES();
    };
    if ((NPC_HASITEMS(OTHER, 34203)) < (DAN_PAYMENT5)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Dan_Train_2H5_13_01");
        DAN_PRINTS = CONCATSTRINGS(PRINT_RGOLD, INTTOSTRING(DAN_PAYMENT5));
        PRINTSCREEN(DAN_PRINTS, -(1), -(1), FONT_SCREEN, 2);
        DIA_DAN_TRAIN_CHOICES();
    };
}

func void DIA_DAN_TRAINSTR_1() {
    if ((NPC_HASITEMS(OTHER, 34203)) >= (DAN_PAYMENT1)) {
        if ((DAN_CURRENTSTRLEVEL) < (OTHER.AIVAR[81])) {
            SND_PLAY(GELDBEUTEL);
            B_GIVEINVITEMS(OTHER, SELF, 34203, DAN_PAYMENT1);
            NPC_REMOVEINVITEMS(SELF, 34203, DAN_PAYMENT1);
        };
        B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_STRENGTH, 1, 150);
        DIA_DAN_TRAIN_CHOICES();
    };
    if ((NPC_HASITEMS(OTHER, 34203)) < (DAN_PAYMENT1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Dan_Train_STR1_13_00");
        DAN_PRINTS = CONCATSTRINGS(PRINT_RGOLD, INTTOSTRING(DAN_PAYMENT1));
        PRINTSCREEN(DAN_PRINTS, -(1), -(1), FONT_SCREEN, 2);
        DIA_DAN_TRAIN_CHOICES();
    };
}

func void DIA_DAN_TRAINSTR_5() {
    if ((NPC_HASITEMS(OTHER, 34203)) >= (DAN_PAYMENT5)) {
        if ((DAN_CURRENTSTRLEVEL) < (OTHER.AIVAR[81])) {
            SND_PLAY(GELDBEUTEL);
            B_GIVEINVITEMS(OTHER, SELF, 34203, DAN_PAYMENT5);
            NPC_REMOVEINVITEMS(SELF, 34203, DAN_PAYMENT5);
        };
        B_TEACHATTRIBUTEPOINTS(SELF, OTHER, ATR_STRENGTH, 5, 150);
        DIA_DAN_TRAIN_CHOICES();
    };
    if ((NPC_HASITEMS(OTHER, 34203)) < (DAN_PAYMENT5)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Dan_Train_STR5_13_00");
        DAN_PRINTS = CONCATSTRINGS(PRINT_RGOLD, INTTOSTRING(DAN_PAYMENT5));
        PRINTSCREEN(DAN_PRINTS, -(1), -(1), FONT_SCREEN, 2);
        DIA_DAN_TRAIN_CHOICES();
    };
}

instance DIA_DAN_DUELPROPOSAL(C_INFO) {
    NPC = 58800;
    NR = 1;
    CONDITION = DIA_DAN_DUELPROPOSAL_CONDITION;
    INFORMATION = DIA_DAN_DUELPROPOSAL_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I've heard I can have a duel with you.";
}

func int DIA_DAN_DUELPROPOSAL_CONDITION() {
    if (((LOG_GETSTATUS(MIS_Q302)) == (LOG_RUNNING)) && ((Q302_PLAYERDUELWITHVICENTESTATE) == (2))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_DAN_DUELPROPOSAL_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Dan_DuelProposal_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Dan_DuelProposal_13_02");
    INFO_CLEARCHOICES(84840);
    INFO_ADDCHOICE(84840, "We'll see who get punch in the face.", 84845);
    INFO_ADDCHOICE(84840, "I want to earn respect.", 84846);
    INFO_ADDCHOICE(84840, "I'm Marvin.", 84847);
}

var int DIA_DAN_DUELPROPOSAL_CHOICESCOUNT;
func void DIA_DAN_DUELPROPOSAL_BOTHAFTER() {
    if ((DIA_DAN_DUELPROPOSAL_CHOICESCOUNT) == (3)) {
        INFO_CLEARCHOICES(84840);
        AI_OUTPUT(OTHER, SELF, "DIA_Dan_DuelProposal_BothAfter_15_01");
        AI_OUTPUT(SELF, OTHER, "DIA_Dan_DuelProposal_BothAfter_13_02");
        AI_OUTPUT(SELF, OTHER, "DIA_Dan_DuelProposal_BothAfter_13_03");
        AI_OUTPUT(SELF, OTHER, "DIA_Dan_DuelProposal_BothAfter_13_04");
        INFO_ADDCHOICE(84840, "I have to get ready.", 84848);
        INFO_ADDCHOICE(84840, "We're good to go.", 84851);
        INFO_ADDCHOICE(84840, "I'd like to test myself with you in shooting.", 84852);
    };
}

func void DIA_DAN_DUELPROPOSAL_BEATYOURMUG() {
    DIA_DAN_DUELPROPOSAL_CHOICESCOUNT += 1;
    AI_OUTPUT(OTHER, SELF, "DIA_Dan_DuelProposal_BeatYourMug_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Dan_DuelProposal_BeatYourMug_13_02");
    DIA_DAN_DUELPROPOSAL_BOTHAFTER();
}

func void DIA_DAN_DUELPROPOSAL_EARNRESPECT() {
    DIA_DAN_DUELPROPOSAL_CHOICESCOUNT += 1;
    AI_OUTPUT(OTHER, SELF, "DIA_Dan_DuelProposal_EarnRespect_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Dan_DuelProposal_EarnRespect_13_02");
    DIA_DAN_DUELPROPOSAL_BOTHAFTER();
}

func void DIA_DAN_DUELPROPOSAL_IAMMARVIN() {
    DIA_DAN_DUELPROPOSAL_CHOICESCOUNT += 1;
    AI_OUTPUT(OTHER, SELF, "DIA_Dan_DuelProposal_IAmMarvin_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Dan_DuelProposal_IAmMarvin_13_02");
    DIA_DAN_DUELPROPOSAL_BOTHAFTER();
}

func void DIA_DAN_DUELPROPOSAL_BOTHAFTER_IHAVETOPREPARE() {
    INFO_CLEARCHOICES(84840);
    AI_OUTPUT(OTHER, SELF, "DIA_Dan_DuelProposal_BothAfter_IHaveToPrepare_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Dan_DuelProposal_BothAfter_IHaveToPrepare_13_02");
    AI_STOPPROCESSINFOS(SELF);
}

var int Q302_ACTIVEDUELWITHDAN;
func void DIA_DAN_SETDUELGUIDE() {
    if ((NPC_GETDISTTOWP(SELF, PIR_1326_DAN_DUELWP)) >= (200)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Dan_Guide_13_02");
        NPC_EXCHANGEROUTINE(SELF, "GuideToDuel");
        AI_STOPPROCESSINFOS(SELF);
    };
    Q302_ACTIVEDUELWITHDAN = TRUE;
    SELF.AIVAR[45] = AF_NONE;
    AI_STOPPROCESSINFOS(HERO);
}

func void DIA_DAN_DUELPROPOSAL_BOTHAFTER_WECANSTART() {
    INFO_CLEARCHOICES(84840);
    AI_OUTPUT(OTHER, SELF, "DIA_Dan_DuelProposal_BothAfter_WeCanStart_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Dan_DuelProposal_BothAfter_WeCanStart_13_02");
    DIA_DAN_SETDUELGUIDE();
    AI_STOPPROCESSINFOS(SELF);
}

func void DIA_DAN_DUELPROPOSAL_BOTHAFTER_SHOOTING() {
    AI_OUTPUT(OTHER, SELF, "DIA_Dan_DuelProposal_BothAfter_Shooting_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Dan_DuelProposal_BothAfter_Shooting_13_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Dan_DuelProposal_BothAfter_Shooting_13_03");
}

var int Q302_PLAYERDUELWITHDANSTATE;
instance DIA_DAN_DUELGUIDE(C_INFO) {
    NPC = 58800;
    NR = 1;
    CONDITION = DIA_DAN_DUELGUIDE_CONDITION;
    INFORMATION = DIA_DAN_DUELGUIDE_INFO;
    PERMANENT = FALSE;
    DESCRIPTION = "I'm ready.";
}

func int DIA_DAN_DUELGUIDE_CONDITION() {
    if (((NPC_KNOWSINFO(OTHER, 84840)) && ((Q302_ACTIVEDUELWITHDAN) == (FALSE))) && ((Q302_PLAYERDUELWITHDANSTATE) == (0))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_DAN_DUELGUIDE_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Dan_Guide_15_01");
    DIA_DAN_SETDUELGUIDE();
}

instance DIA_DAN_DUEL(C_INFO) {
    NPC = 58800;
    NR = 1;
    CONDITION = DIA_DAN_DUEL_CONDITION;
    INFORMATION = DIA_DAN_DUEL_INFO;
    PERMANENT = TRUE;
    IMPORTANT = TRUE;
}

func int DIA_DAN_DUEL_CONDITION() {
    if ((((NPC_GETDISTTOWP(SELF, PIR_1326_DAN_DUELWP)) <= (200)) && (Q302_ACTIVEDUELWITHDAN)) && ((SELF.AIVAR[45]) == (AF_NONE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_DAN_DUEL_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_Dan_Duel_13_01");
    if ((NPC_HASEQUIPPEDMELEEWEAPON(SELF)) == (FALSE)) {
        CREATEINVITEMS(SELF, 34031, 1);
        AI_EQUIPBESTMELEEWEAPON(SELF);
    };
    B_HEALNPC_SELF();
    HERO.AIVAR[95] = TRUE;
    HERO.AIVAR[94] = TRUE;
    SELF.AIVAR[94] = TRUE;
    HERO.AIVAR[96] = 10;
    SELF.AIVAR[96] = 10;
    SELF.AIVAR[45] = AF_RUNNING;
    AI_STOPPROCESSINFOS(SELF);
    B_ATTACK(SELF, HERO, AR_NONE, 1);
}

instance DIA_DAN_DUELAFTER(C_INFO) {
    NPC = 58800;
    NR = 1;
    CONDITION = DIA_DAN_DUELAFTER_CONDITION;
    INFORMATION = DIA_DAN_DUELAFTER_INFO;
    PERMANENT = TRUE;
    IMPORTANT = TRUE;
}

func int DIA_DAN_DUELAFTER_CONDITION() {
    if ((((SELF.AIVAR[64]) == (FALSE)) && ((SELF.AIVAR[0]) != (FIGHT_NONE))) && (Q302_ACTIVEDUELWITHDAN)) {
        if ((SELF.AIVAR[45]) != (AF_NONE)) {
            return TRUE;
        };
        if (NPC_ISINSTATE(SELF, 61599)) {
            return TRUE;
        };
    };
    return 0 /* !broken stack! */;
}

func void DIA_DAN_DUELAFTER_INFO() {
    Q302_ACTIVEDUELWITHDAN = FALSE;
    B_HEALNPC_SELF();
    HERO.AIVAR[95] = FALSE;
    HERO.AIVAR[94] = FALSE;
    SELF.AIVAR[94] = FALSE;
    if ((SELF.AIVAR[0]) == (FIGHT_WON)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Dan_DuelAfter_13_01");
        AI_OUTPUT(OTHER, SELF, "DIA_Dan_DuelAfter_15_02");
        AI_OUTPUT(SELF, OTHER, "DIA_Dan_DuelAfter_13_03");
        Q302_PLAYERDUELWITHDANSTATE = 1;
    };
    AI_OUTPUT(SELF, OTHER, "DIA_Dan_DuelAfter_13_04");
    AI_OUTPUT(OTHER, SELF, "DIA_Dan_DuelAfter_15_05");
    AI_OUTPUT(SELF, OTHER, "DIA_Dan_DuelAfter_13_06");
    AI_LOGENTRY(TOPIC_Q302, LOG_Q302_DANWEWON);
    Q302_PLAYERDUELWITHDANSTATE = 2;
    if ((((B_COUNTDUELSQ302()) > (2)) && ((Q302_PRICEWILLBELOWER_ENTRY) == (FALSE))) && ((LOG_GETSTATUS(MIS_Q302)) == (LOG_RUNNING))) {
        AI_LOGENTRY(TOPIC_Q302, LOG_Q302_THEYKNOWME);
        Q302_PRICEWILLBELOWER_ENTRY = TRUE;
    };
    SELF.AIVAR[45] = AF_NONE;
    SELF.AIVAR[64] = TRUE;
    NPC_EXCHANGEROUTINE(SELF, START);
    AI_STOPPROCESSINFOS(SELF);
}

instance DIA_DAN_DUELREVENGE(C_INFO) {
    NPC = 58800;
    NR = 1;
    CONDITION = DIA_DAN_DUELREVENGE_CONDITION;
    INFORMATION = DIA_DAN_DUELREVENGE_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "I want a rematch.";
}

func int DIA_DAN_DUELREVENGE_CONDITION() {
    if ((Q302_PLAYERDUELWITHDANSTATE) == (1)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_DAN_DUELREVENGE_INFO() {
    AI_OUTPUT(OTHER, SELF, "DIA_Dan_DuelRevenge_15_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Dan_DuelRevenge_13_02");
    AI_OUTPUT(OTHER, SELF, "DIA_Dan_DuelRevenge_15_03");
    AI_OUTPUT(SELF, OTHER, "DIA_Dan_DuelRevenge_13_05");
    DIA_DAN_SETDUELGUIDE();
}

instance DIA_DAN_AMBIENT(C_INFO) {
    NPC = 58800;
    NR = 500;
    CONDITION = DIA_DAN_AMBIENT_CONDITION;
    INFORMATION = DIA_DAN_AMBIENT_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = "How are you doing?";
}

func int DIA_DAN_AMBIENT_CONDITION() {
    if (NPC_KNOWSINFO(OTHER, 84816)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_DAN_AMBIENT_INFO() {
    B_SAY(OTHER, SELF, "$MARVIN_WhatNew4");
    if ((Q302_PLAYERDUELWITHDANSTATE) == (0)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Dan_Ambient_03_01");
    };
    if ((Q302_PLAYERDUELWITHDANSTATE) == (1)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Dan_Ambient_03_02");
    };
    if ((Q302_PLAYERDUELWITHDANSTATE) == (2)) {
        AI_OUTPUT(SELF, OTHER, "DIA_Dan_Ambient_03_03");
    };
}

instance DIA_DAN_SQ406_POTION(C_INFO) {
    NPC = 58800;
    NR = 1;
    CONDITION = DIA_DAN_SQ406_POTION_CONDITION;
    INFORMATION = DIA_DAN_SQ406_POTION_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_DAN_SQ406_POTION_CONDITION() {
    if ((LOG_GETSTATUS(MIS_SQ406)) == (LOG_RUNNING)) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_DAN_SQ406_POTION_INFO() {
    AI_STARTFACEANI(SELF, S_SURPRISE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Dan_SQ406_Potion_03_01");
    AI_PLAYANI(SELF, T_SEARCH);
    AI_OUTPUT(SELF, OTHER, "DIA_Dan_SQ406_Potion_03_02");
    INFO_CLEARCHOICES(84869);
    INFO_ADDCHOICE(84869, "I will tell you if you promise not to tell anyone.", 84872);
}

func void DIA_DAN_SQ406_POTION_TELL() {
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(OTHER, SELF, "DIA_Dan_SQ406_Potion_Tell_15_01");
    AI_PLAYANI(OTHER, T_SEARCH);
    AI_OUTPUT(OTHER, SELF, "DIA_Dan_SQ406_Potion_Tell_15_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Dan_SQ406_Potion_Tell_03_03");
    INFO_CLEARCHOICES(84869);
    INFO_ADDCHOICE(84869, "I drink strength potions regularly.", 84873);
}

func void DIA_DAN_SQ406_POTION_TELL_SECRET() {
    AI_OUTPUT(OTHER, SELF, "DIA_Dan_SQ406_Potion_Secret_15_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Dan_SQ406_Potion_Secret_15_02");
    AI_STARTFACEANI(SELF, S_SURPRISE, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Dan_SQ406_Potion_Secret_03_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Dan_SQ406_Potion_Secret_15_04");
    AI_RESETFACEANI(SELF);
    AI_OUTPUT(SELF, OTHER, "DIA_Dan_SQ406_Potion_Secret_03_05");
    INFO_CLEARCHOICES(84869);
    if ((NPC_HASITEMS(OTHER, 37367)) >= (1)) {
        INFO_ADDCHOICE(84869, "(Give strong transformation potion)", 84876);
    };
    if ((NPC_HASITEMS(OTHER, 37366)) >= (1)) {
        INFO_ADDCHOICE(84869, "(Give transformation potion)", 84875);
    };
    if ((NPC_HASITEMS(OTHER, 37365)) >= (1)) {
        INFO_ADDCHOICE(84869, "(Give weak transformation potion)", 84874);
    };
}

func void DIA_DAN_SQ406_POTION_TELL_SECRET_TRANSFORM_L() {
    SQ406_DAN_POTION = 1;
    SQ406_DAN_DRINKPOTION();
    AI_OUTPUT(SELF, OTHER, "DIA_Dan_SQ406_Potion_Transform_L_03_01");
    AI_OUTPUT(OTHER, SELF, "DIA_Dan_SQ406_Potion_Transform_L_15_02");
    AI_LOGENTRY(TOPIC_SQ406, LOG_SQ406_DAN_POTION_L);
    INFO_CLEARCHOICES(84869);
}

func void DIA_DAN_SQ406_POTION_TELL_SECRET_TRANSFORM_M() {
    SQ406_DAN_POTION = 2;
    SQ406_DAN_DRINKPOTION();
    AI_PLAYANI(SELF, "R_VOMIT_SUNDER");
    AI_STARTFACEANI(SELF, S_DISGUST, 1, -(1));
    AI_OUTPUT(SELF, OTHER, "DIA_Dan_SQ406_Potion_Transform_M_03_01");
    INFO_CLEARCHOICES(84869);
    AI_STOPPROCESSINFOS(SELF);
    AI_LOGENTRY(TOPIC_SQ406, LOG_SQ406_DAN_POTION_M);
}

func void DIA_DAN_SQ406_POTION_TELL_SECRET_TRANSFORM_H() {
    SQ406_DAN_POTION = 3;
    SQ406_DAN_DRINKPOTION();
    AI_STARTFACEANI(SELF, S_SURPRISE, 1, -(1));
    AI_FUNCTION(SELF, 84877);
    AI_PLAYANI(SELF, "T_STOMACHHURT_START_GUIDO");
    AI_OUTPUT(SELF, OTHER, "DIA_Dan_SQ406_Potion_Transform_H_03_01");
    AI_OUTPUT(SELF, OTHER, "DIA_Dan_SQ406_Potion_Transform_H_03_02");
    AI_FUNCTION(SELF, 84879);
    AI_PLAYANI(SELF, "T_STOMACHHURT_REMOVE");
    AI_FUNCTION(SELF, 84878);
    INFO_CLEARCHOICES(84869);
    AI_STOPPROCESSINFOS(SELF);
    AI_LOGENTRY(TOPIC_SQ406, LOG_SQ406_DAN_POTION_H);
    NPC_EXCHANGEROUTINE(SELF, "SQ406_FLEE");
}

func void DAN_APPLYSTOMACHHURTMDS() {
    MDL_APPLYOVERLAYMDS(PIR_1326_DAN, "HumanS_StomachHurt.MDS");
}

func void DAN_REMOVESTOMACHHURTMDS() {
    MDL_REMOVEOVERLAYMDS(PIR_1326_DAN, "HumanS_StomachHurt.MDS");
}

func void DAN_SQ406_REMOVEHEAD() {
    MDL_SETVISUALBODY(PIR_1326_DAN, "KM_ARMOR_PIRAT_RAZOR", 1, 0, HUMHEADNOTHING, FACE_N_DAN, 0, NO_ARMOR);
    if ((NPC_HASITEMS(PIR_1326_DAN, 33571)) >= (1)) {
        NPC_REMOVEINVITEMS(PIR_1326_DAN, 33571, 1);
    };
    B_REMOVEALLINVENTORY(PIR_1326_DAN);
}

instance DIA_DAN_SQ406_MONSTER(C_INFO) {
    NPC = 58800;
    NR = 1;
    CONDITION = DIA_DAN_SQ406_MONSTER_CONDITION;
    INFORMATION = DIA_DAN_SQ406_MONSTER_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_DAN_SQ406_MONSTER_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_SQ406)) == (LOG_RUNNING)) && ((SQ406_DAN_POTION) == (3))) && ((NPC_GETDISTTOWP(SELF, "PART17_CAVE_CAMPFIRE_01")) <= (1200))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_DAN_SQ406_MONSTER_INFO() {
    SQ406_TESTERPOTIONH = 3;
    B_SAY(OTHER, SELF, "$SQ406_FoundYou");
    B_STANDUP();
    AI_OUTPUT(SELF, OTHER, "DIA_Dan_SQ406_Monster_03_02");
    AI_OUTPUT(SELF, OTHER, "DIA_Dan_SQ406_Monster_03_03");
    AI_OUTPUT(OTHER, SELF, "DIA_Dan_SQ406_Monster_15_04");
    AI_OUTPUT(SELF, OTHER, "DIA_Dan_SQ406_Monster_03_05");
    AI_STOPPROCESSINFOS(SELF);
    AI_LOGENTRY(TOPIC_SQ406, LOG_SQ406_DAN_MONSTER);
}

instance DIA_DANTOURNAMENTFIGHTCOMMENT(C_INFO) {
    NPC = 58800;
    NR = 1;
    CONDITION = DIA_DANTOURNAMENTFIGHTCOMMENT_CONDITION;
    INFORMATION = DIA_DANTOURNAMENTFIGHTCOMMENT_INFO;
    PERMANENT = FALSE;
    IMPORTANT = TRUE;
}

func int DIA_DANTOURNAMENTFIGHTCOMMENT_CONDITION() {
    if ((((LOG_GETSTATUS(MIS_Q306)) == (LOG_RUNNING)) && ((Q306_STATE) == (15))) && ((Q302_PLAYERDUELWITHDANSTATE) != (2))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_DANTOURNAMENTFIGHTCOMMENT_INFO() {
    AI_OUTPUT(SELF, OTHER, "DIA_DanTournamentFight_13_01");
    INFO_ADDCHOICE(84883, "For a city guard, it's daily bread.", 84888);
    INFO_ADDCHOICE(84883, "Merchant's Guild contracts involve more than the delivery of goods.", 84889);
    INFO_ADDCHOICE(84883, "I happen to punch a few scabby mouths from time to time.", 84890);
    INFO_ADDCHOICE(84883, "None of your business.", 84891);
}

func void DIA_DANTOURNAMENTFIGHTCOMMENT_END() {
    AI_OUTPUT(SELF, OTHER, "DIA_DanTournamentFight_End_13_01");
    AI_STOPPROCESSINFOS(SELF);
}

func void DIA_DANTOURNAMENTFIGHTCOMMENT_END2() {
    AI_OUTPUT(SELF, OTHER, "DIA_DanTournamentFight_End2_13_01");
    AI_STOPPROCESSINFOS(SELF);
}

func void DIA_DANTOURNAMENTFIGHTCOMMENT_MIL() {
    AI_OUTPUT(OTHER, SELF, "DIA_DanTournamentFight_MIL_15_01");
    DIA_DANTOURNAMENTFIGHTCOMMENT_END();
}

func void DIA_DANTOURNAMENTFIGHTCOMMENT_SLD() {
    AI_OUTPUT(OTHER, SELF, "DIA_DanTournamentFight_SLD_15_01");
    DIA_DANTOURNAMENTFIGHTCOMMENT_END();
}

func void DIA_DANTOURNAMENTFIGHTCOMMENT_BADASS() {
    AI_OUTPUT(OTHER, SELF, "DIA_DanTournamentFight_Badass_15_01");
    DIA_DANTOURNAMENTFIGHTCOMMENT_END();
}

func void DIA_DANTOURNAMENTFIGHTCOMMENT_NOTYOURBUSINESS() {
    AI_OUTPUT(OTHER, SELF, "DIA_DanTournamentFight_NotYourBusiness_15_01");
    DIA_DANTOURNAMENTFIGHTCOMMENT_END2();
}

instance DIA_DAN_PICKPOCKET(C_INFO) {
    NPC = 58800;
    NR = 900;
    CONDITION = DIA_DAN_PICKPOCKET_CONDITION;
    INFORMATION = DIA_DAN_PICKPOCKET_INFO;
    PERMANENT = TRUE;
    DESCRIPTION = PICKPOCKET_80;
}

func int DIA_DAN_PICKPOCKET_CONDITION() {
    if (((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (1)) && ((SELF.AIVAR[6]) == (FALSE))) {
        return TRUE;
    };
    return 0 /* !broken stack! */;
}

func void DIA_DAN_PICKPOCKET_INFO() {
    INFO_CLEARCHOICES(84892);
    INFO_ADDCHOICE(84892, DIALOG_BACK, 84896);
    INFO_ADDCHOICE(84892, DIALOG_PICKPOCKET, 84895);
}

func void DIA_DAN_PICKPOCKET_DOIT() {
    if ((NPC_GETTALENTSKILL(OTHER, NPC_TALENT_PICKPOCKET)) >= (2)) {
        B_PICKPOCKET_AMBIENT_TIER_2();
        SELF.AIVAR[6] = TRUE;
        INFO_CLEARCHOICES(84892);
    };
    AI_PLAYANI(HERO, T_CANNOTTAKE);
    PRINTSCREEN(PRINT_CANTPICKPOCKETTHISPERSON, -(1), -(1), FONT_SCREEN, 4);
    INFO_CLEARCHOICES(84892);
}

func void DIA_DAN_PICKPOCKET_BACK() {
    INFO_CLEARCHOICES(84892);
}

